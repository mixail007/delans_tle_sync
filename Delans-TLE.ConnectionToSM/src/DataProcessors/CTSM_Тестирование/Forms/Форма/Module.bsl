&НаСервере
Процедура СообщениеОПропускеБэкапированияНаСервере()
	ErrorDescription = "";
	СтруктураПараметров = Новый Структура("Zone", "1");
	CTSM_Efsol_Платформа.MS_ZoneBackupSkipped(СтруктураПараметров, ErrorDescription);
	Если ErrorDescription = "" Тогда
		Сообщить("Сообщение о пропуске бэкапирования успешно отправлено");
	Иначе
	Сообщить(ErrorDescription);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СообщениеОПропускеБэкапирования(Команда)
	СообщениеОПропускеБэкапированияНаСервере();
КонецПроцедуры


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//Объект.AccountID = "35c3673e-f77d-48d5-b1fb-4f2e40c2da57";
	//Объект.ТипДокумента = "Товарная накладная (ТОРГ-12)";

	Если CTSM_Расширения.ВключеноРаздениеРасширений() Тогда
		РасширенияРазделяются = Истина;
		Элементы.ДекорацияРежимРазделения.Заголовок = "Расширения разделяются по областям данных";
	Иначе
		РасширенияРазделяются = Ложь;
		Элементы.ДекорацияРежимРазделения.Заголовок = "Расширения общие по областям данных";
	КонецЕсли;
	
	Элементы.Zone7.Видимость = РасширенияРазделяются;
	Элементы.Zone8.Видимость = РасширенияРазделяются;
	Элементы.Zone9.Видимость = РасширенияРазделяются;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
		
	Объект.Zone =  1;
	Объект.Name = "Тест999";
	Объект.AccountID = "123456";
	
КонецПроцедуры

&НаКлиенте
Процедура ПутьКПапкеФайлуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.ПолноеИмяФайла = "";
	Фильтр = НСтр("ru = 'Архив'; en = 'Arhiv'") + "(*.zip)|*.zip";
	ДиалогОткрытияФайла.Фильтр = Фильтр;

	ДиалогОткрытияФайла.Заголовок = "Выберите файл";
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		МассивФайлов = ДиалогОткрытияФайла.ВыбранныеФайлы;
		Для Каждого ИмяФайла Из МассивФайлов Цикл
			Объект.ПутьКПапкеФайлу = ИмяФайла;	
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ПараметрыАвтоТестов

Функция ПараметрыТеста_AddAplicationUser()

	Если ЗначениеЗаполнено(Объект.Name) Тогда
		ТЗ = Новый ТаблицаЗначений;
		ТЗ.Колонки.Добавить("ContactType");
		ТЗ.Колонки.Добавить("Value");
		
		Name = Объект.Name; 
		StoredPasswordValue = "123456";
		Zone = ?(Объект.Zone = 0, 1, Объект.Zone); 	OSUser = "79513380219";
		
		ПараметрыТестаТеста = Новый Структура("Name, FullName, StoredPasswordValue, Contacts, OSUser, Roles,       FullRights, Language, UserServiceID, EMail, Phone", 
		Name, Name, 	StoredPasswordValue,         , OSUser, "Бухгалтер", "Да",		  "ru",		Новый УникальныйИдентификатор, "", 	  "");
		ПараметрыТестаТеста.Вставить("Описание", "Добавление пользователя приложени");
		ПараметрыТестаТеста.Вставить("Zone", Объект.Zone);	
		Возврат ПараметрыТестаТеста;
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции 

Функция ПараметрыТеста_DeleteApplicationUser()

	Если ЗначениеЗаполнено(Объект.Name) Тогда
		ПараметрыТестаТеста = Новый Структура;
		ПараметрыТестаТеста.Вставить("Zone", Объект.Zone);
		ПараметрыТестаТеста.Вставить("Name", Объект.Name);
		ПараметрыТестаТеста.Вставить("Описание", "Удаление пользователя области");
		Возврат ПараметрыТестаТеста;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции 

Функция ПараметрыТеста_DeleteApplicationUserAvailability()

	Если ЗначениеЗаполнено(Объект.Name) Тогда
		ПараметрыТеста = Новый Структура;
		ПараметрыТеста.Вставить("Zone", Объект.Zone);
		ПараметрыТеста.Вставить("Name", Объект.Name);
		ПараметрыТеста.Вставить("Availability", Ложь);
		ПараметрыТеста.Вставить("Описание", "Блокировка входа пользователя");
		Возврат ПараметрыТеста;
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции 

Функция ПараметрыТеста_DownloadDataArea()
	
	Если ЗначениеЗаполнено(Объект.ПутьКПапкеФайлу) Тогда
		ИмяФайлаВыгрузки = Объект.ПутьКПапкеФайлу;	
		ИмяФайлаВыгрузки = ИмяФайлаВыгрузки + "data_dump.zip";
		
		// загрузить данные ИЗ архива
		ПараметрыТестаТеста = Новый Структура;
		ПараметрыТестаТеста.Вставить("Zone", Объект.Zone);
		ПараметрыТестаТеста.Вставить("FileName", ИмяФайлаВыгрузки ); 
		ПараметрыТестаТеста.Вставить("Описание", "Загрузить данные ИЗ архива");
		Возврат ПараметрыТестаТеста;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции 

Функция ПараметрыТеста_UploadingDataArea()
	
	Если ЗначениеЗаполнено(Объект.ПутьКПапкеФайлу) Тогда
		ИмяКаталогаВыгрузки = Объект.ПутьКПапкеФайлу;	
		
		// выгрузить данные в архив
		ПараметрыТестаТеста = Новый Структура;
		ПараметрыТестаТеста.Вставить("Zone", Объект.Zone);
		ПараметрыТестаТеста.Вставить("Path", ИмяКаталогаВыгрузки); 
		ПараметрыТестаТеста.Вставить("Описание", "Выгрузить данные в архив");
		Возврат ПараметрыТестаТеста;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции 

Функция ПараметрыТеста_AddAccountIDForArea()
	
	Если ЗначениеЗаполнено(Объект.AccountID) Тогда
		AccountID = Объект.AccountID;	
	Иначе
		AccountID = Новый УникальныйИдентификатор;			
	КонецЕсли;
	
	ПараметрыТестаТеста = Новый Структура;
	ПараметрыТестаТеста.Вставить("Zone", Объект.Zone);
	ПараметрыТестаТеста.Вставить("AccountID", AccountID); //Объект.AccountID);
	ПараметрыТестаТеста.Вставить("Описание", "Доабвить AccountID для области");
	Возврат ПараметрыТестаТеста;

КонецФункции 

#КонецОбласти


#Область ПараметрыАвтоТестовРасширений

Функция ПараметрыТеста_AddExtension()
	
	Если ЗначениеЗаполнено(Объект.ПутьКФайлуРасширения) Тогда
		ПараметрыТестаТеста = Новый Структура;
		ПараметрыТестаТеста.Вставить("Описание", "Добавление расширения");
		ПараметрыТестаТеста.Вставить("FileName", Объект.ПутьКФайлуРасширения);
		ПараметрыТестаТеста.Вставить("Name", 	 Объект.ИмяРасширения);
		ПараметрыТестаТеста.Вставить("Zone", Объект.Zone);
		Возврат ПараметрыТестаТеста;
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции 

Функция ПараметрыТеста_UpdateExtension()

	Если ЗначениеЗаполнено(Объект.ПутьКФайлуРасширения) Тогда
		ПараметрыТестаТеста = Новый Структура;
		ПараметрыТестаТеста.Вставить("Описание", "Обновление расширения");
		ПараметрыТестаТеста.Вставить("FileName", Объект.ПутьКФайлуРасширения);
		ПараметрыТестаТеста.Вставить("Name", 	 Объект.ИмяРасширения);
		ПараметрыТестаТеста.Вставить("Version",  Объект.ВерсияРасширения);
		ПараметрыТестаТеста.Вставить("Zone", Объект.Zone);
		Возврат ПараметрыТестаТеста;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

Функция ПараметрыТеста_DeleteExtension()

	Если ЗначениеЗаполнено(Объект.ПутьКФайлуРасширения) Тогда
		ПараметрыТестаТеста = Новый Структура;
		ПараметрыТестаТеста.Вставить("Описание", "Удаление расширения");
		ПараметрыТестаТеста.Вставить("Name", 	 Объект.ИмяРасширения);
		ПараметрыТестаТеста.Вставить("Zone", Объект.Zone);
		Возврат ПараметрыТестаТеста;
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции 

#КонецОбласти


#Область ОбработчикиКомандФормы

// Запуск всех сценариев тестирования
&НаКлиенте
Процедура ТестВсе(Команда)
		
	Если Объект.РезультатыТестирования.Количество()>0 Тогда
		
		Режим = РежимДиалогаВопрос.ДаНет;
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтаФорма, Параметры);
		ПоказатьВопрос(Оповещение, НСтр("ru = 'Табличная часть содержит тесты. Очистить?';" 
									  + " en = 'Do you want to continue?'"), Режим, 0);
	Иначе
		ПослеЗакрытияВопроса(Неопределено, Неопределено);	
	КонецЕсли;	
		
		
КонецПроцедуры

&НаКлиенте
Процедура Тест(Команда)
	
	Объект.Zone = ?(Объект.Zone = 0,  1,  		 Объект.Zone);
	Объект.Name = ?(Объект.Name = "", "Тест999", Объект.Name);
	
	Если Команда.Имя = "TestAddAplicationUser" Тогда
		ПараметрыТеста = ПараметрыТеста_AddAplicationUser();
	ИначеЕсли Команда.Имя = "TestDeleteApplicationUser" Тогда
		ПараметрыТеста = ПараметрыТеста_DeleteApplicationUser();
	ИначеЕсли Команда.Имя = "TestDeleteApplicationUserAvailability" Тогда
		ПараметрыТеста = ПараметрыТеста_DeleteApplicationUserAvailability();
	ИначеЕсли Команда.Имя = "TestDownloadDataArea" Тогда
		ПараметрыТеста = ПараметрыТеста_DownloadDataArea();
	ИначеЕсли Команда.Имя = "TestUploadingDataArea" Тогда
		ПараметрыТеста = ПараметрыТеста_UploadingDataArea();
	ИначеЕсли Команда.Имя = "TestAddAccountIDForArea" Тогда
		ПараметрыТеста = ПараметрыТеста_AddAccountIDForArea();	
	ИначеЕсли Команда.Имя = "TestAddExtension" Тогда
		ПараметрыТеста = ПараметрыТеста_AddExtension();
	ИначеЕсли Команда.Имя = "TestUpdateExtension" Тогда
		ПараметрыТеста = ПараметрыТеста_UpdateExtension();
	ИначеЕсли Команда.Имя = "TestDeleteExtension" Тогда
		ПараметрыТеста = ПараметрыТеста_DeleteExtension();
	Иначе
		ПараметрыТеста = Новый Структура;
	КонецЕсли;
	
	
	МассивВыполняемыхТестов = Новый Массив;
	МассивВыполняемыхТестов.Добавить(Новый Структура("Имя, ПараметрыТеста, Результат, Время, Ответ", Команда.Имя, ПараметрыТеста, Неопределено, Неопределено, Неопределено));
	ВыполнитьТестНаСервере(МассивВыполняемыхТестов);
	
КонецПроцедуры

#КонецОбласти


#Область ВыполнениеТестов

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.РезультатыТестирования.Очистить();
		Элементы.TableАДЛРезультат.ТекстПодвала = "";
	КонецЕсли;

    МассивВыполняемыхТестов = Новый Массив;
	МассивВыполняемыхТестов.Добавить(Новый Структура("Имя, ПараметрыТеста, Результат, Время, Ответ", "TestAddAplicationUser", ПараметрыТеста_AddAplicationUser(), Неопределено, Неопределено, Неопределено));
	МассивВыполняемыхТестов.Добавить(Новый Структура("Имя, ПараметрыТеста, Результат, Время, Ответ", "TestDeleteApplicationUserAvailability", ПараметрыТеста_DeleteApplicationUserAvailability(), Неопределено, Неопределено, Неопределено));
	МассивВыполняемыхТестов.Добавить(Новый Структура("Имя, ПараметрыТеста, Результат, Время, Ответ", "TestDeleteApplicationUser", ПараметрыТеста_DeleteApplicationUser(), Неопределено, Неопределено, Неопределено));
	МассивВыполняемыхТестов.Добавить(Новый Структура("Имя, ПараметрыТеста, Результат, Время, Ответ", "TestUploadingDataArea", ПараметрыТеста_UploadingDataArea(), Неопределено, Неопределено, Неопределено));
	МассивВыполняемыхТестов.Добавить(Новый Структура("Имя, ПараметрыТеста, Результат, Время, Ответ", "TestDownloadDataArea", ПараметрыТеста_DownloadDataArea(), Неопределено, Неопределено, Неопределено));
		
	//МассивВыполняемыхТестов.Добавить(Новый Структура("Имя, ПараметрыТеста, Результат, Время, Ответ", "TestAddAccountIDForArea", ПараметрыТеста_AddAccountIDForArea(), Неопределено, Неопределено, Неопределено));

	
	ВыполнитьТестНаСервере(МассивВыполняемыхТестов);

	ЕстьОшибки = Ложь;
	Для каждого ТекСтрока Из МассивВыполняемыхТестов Цикл
		Если ТекСтрока.Результат <> "Успех" Тогда		
			ЕстьОшибки = Истина;
		КонецЕсли;	
	КонецЦикла;
	
	Элементы.TableАДЛРезультат.ТекстПодвала = ?(ЕстьОшибки, "Провал", "Успех");
	
КонецПроцедуры

&НаКлиенте
Процедура Параметр(Команда)
	ПрефиксПараметра = Прав(ТекущийЭлемент.Имя, СтрДлина(ТекущийЭлемент.Имя)-9);
	ИмяЭлемента = ""+"ГруппаТест"+ПрефиксПараметра+"Параметры";
	Элементы[ИмяЭлемента].Видимость = НЕ Элементы[ИмяЭлемента].Видимость;
КонецПроцедуры

&НаСервере
Процедура ВыполнитьТестНаСервере(МассивВыполняемыхТестов)
	
	ИсполняемаяСтрока = "CTSM_AutoTest.ExecuteAutoTest(МассивВыполняемыхТестов)";	
	
	Выполнить(ИсполняемаяСтрока);	

	Для каждого ТекущийТест Из МассивВыполняемыхТестов Цикл
		НоваяСтрока = Объект.РезультатыТестирования.Добавить();
		НоваяСтрока.Метод     = ""+ТекущийТест.Имя+" = "+ТекущийТест.ПараметрыТеста.Описание;	
		НоваяСтрока.Результат = ТекущийТест.Результат;
		НоваяСтрока.Время     = ТекущийТест.Время;
		НоваяСтрока.Ответ     = ТекущийТест.Ответ;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ПутьКФайлуРасширенияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.ПолноеИмяФайла = "";
	Фильтр = "Файл расширения конфигурации(*.cfe)|*.cfe";
	ДиалогОткрытияФайла.Фильтр = Фильтр;

	ДиалогОткрытияФайла.Заголовок = "Выберите файл";
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		МассивФайлов = ДиалогОткрытияФайла.ВыбранныеФайлы;
		Для Каждого ИмяФайла Из МассивФайлов Цикл
			Объект.ПутьКФайлуРасширения = ИмяФайла;	
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры


&НаКлиенте
Процедура ВыполнитьАвтоТестРасширений(Команда)
	
	МассивВыполняемыхТестов = Новый Массив;
	МассивВыполняемыхТестов.Добавить(Новый Структура("Имя, ПараметрыТеста, Результат, Время, Ответ", "TestAddExtension", Неопределено, Неопределено, Неопределено, Неопределено));
	МассивВыполняемыхТестов.Добавить(Новый Структура("Имя, ПараметрыТеста, Результат, Время, Ответ", "TestUpdateExtension", Неопределено, Неопределено, Неопределено, Неопределено));	
	МассивВыполняемыхТестов.Добавить(Новый Структура("Имя, ПараметрыТеста, Результат, Время, Ответ", "TestDeleteExtension", Неопределено, Неопределено, Неопределено, Неопределено));

	
	ВыполнитьТестНаСервере(МассивВыполняемыхТестов);

	ЕстьОшибки = Ложь;
	Для каждого ТекСтрока Из МассивВыполняемыхТестов Цикл
		Если ТекСтрока.Результат <> "Успех" Тогда		
			ЕстьОшибки = Истина;
		КонецЕсли;	
	КонецЦикла;
	
	Элементы.TableАДЛРезультат.ТекстПодвала = ?(ЕстьОшибки, "Провал", "Успех");
	
	
КонецПроцедуры

#КонецОбласти




