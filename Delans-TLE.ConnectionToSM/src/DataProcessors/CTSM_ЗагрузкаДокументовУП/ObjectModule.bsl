///////////////////////////////////////////////////////////////////////////////
//  МодульОбъекта ЗагрузкаДокументов
//////////////////////////////////////////////////////////////////////////////

// Описание внешней обработки
//
Функция СведенияОВнешнейОбработке() Экспорт
	    
	РегистрационныеДанные = Новый Структура;
	
	РегистрационныеДанные.Вставить("Наименование", "Загрузка документов");
	
	РегистрационныеДанные.Вставить("БезопасныйРежим", Ложь);
	
	ВерсияПрограммы = "9.3.3.3";
	РегистрационныеДанные.Вставить("Версия", ВерсияПрограммы);
	
	РегистрационныеДанные.Вставить("ВерсияБСП", "2.3.0.1");
	
	ВерсияКонфигурации = ПолучитьВерсиюКонфигурации();
	РегистрационныеДанные.Вставить("ВерсияКонфигурации", ВерсияКонфигурации);
	
	РегистрационныеДанные.Вставить("РежимСовместимости", Строка(Метаданные.РежимСовместимости));
	
	РегистрационныеДанные.Вставить("Вид", "ДополнительнаяОбработка");
	
	РегистрационныеДанные.Вставить( "Информация", "Загрузка документов в базу 1С");
	
	РегистрационныеДанные.Вставить("Разрешения", Новый Массив);
	
	Разрешение = РаботаВБезопасномРежиме.РазрешениеНаИспользованиеИнтернетРесурса("HTTP", "adl.42clouds.com", 80, "Взаимодействие с сервисом распознавания"); 
	РегистрационныеДанные.Разрешения.Добавить(Разрешение);
	Разрешение = РаботаВБезопасномРежиме.РазрешениеНаИспользованиеИнтернетРесурса("HTTP", "core.42clouds.com", 80, "Взаимодействие с сервисом распознавания"); 
	РегистрационныеДанные.Разрешения.Добавить(Разрешение);
	///////////// команды /////////////////////////
	
	тзКоманд = Новый ТаблицаЗначений;
	
	тзКоманд.Колонки.Добавить("Идентификатор");
	
	тзКоманд.Колонки.Добавить("Представление");
	
	тзКоманд.Колонки.Добавить("Модификатор");
	
	тзКоманд.Колонки.Добавить("ПоказыватьОповещение");
	
	тзКоманд.Колонки.Добавить("Использование");
	
	строкаКоманды = тзКоманд.Добавить();
	
	строкаКоманды.Идентификатор = "1";
	
	строкаКоманды.Представление = "Загрузка документов";
	
	строкаКоманды.ПоказыватьОповещение = Истина;
	
	строкаКоманды.Использование = "ОткрытиеФормы";
	
	РегистрационныеДанные.Вставить("Команды", тзКоманд);
	
	Возврат РегистрационныеДанные;
	
КонецФункции                                                    

// Функция определяет версию конфигурации с точностью до второй точки
//
// Параметры
//
// Возвращаемое значение:
//		ВерсияКонфигурации, тип "Строка"
//
Функция ПолучитьВерсиюКонфигурации()
	
	СтрокаПоиска = Метаданные.Версия;
	ПозицияВторойТочки = 0;
	Для к = 1 По 2 Цикл
		ПозицияТочки = Найти(СтрокаПоиска, ".");
		Если ПозицияТочки <> 0 Тогда
			ПозицияВторойТочки = ПозицияВторойТочки + ПозицияТочки;
			СтрокаПоиска = Сред(СтрокаПоиска, ПозицияТочки + 1);
		Иначе
			Прервать;
		КонецЕсли;
	КонецЦикла;
	ВерсияКонфигурации = Лев(Метаданные.Версия, ПозицияВторойТочки - 1);
	
	Возврат ВерсияКонфигурации;
	
КонецФункции

