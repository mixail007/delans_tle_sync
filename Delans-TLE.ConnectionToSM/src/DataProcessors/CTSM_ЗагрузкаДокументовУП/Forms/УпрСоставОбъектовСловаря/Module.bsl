
// Процедура - обработчик события формы "ПриОткрытии"
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СписокЗначенийСправочники = ВладелецФормы.СписокЗначенийСправочникиСловаряСоответствий; 
	
КонецПроцедуры

// Процедура - обработчик события формы "ОбработкаОповещения"
//
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "УпрОсновнаяФормаБудетЗакрыта"  И ЭтаФорма.Открыта() Тогда
		
		ЭтаФорма.Закрыть();
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик команды формы "Применить"
//
&НаКлиенте
Процедура Применить(Команда)
	
	СписокСправочниковСловаря = "";
	Для Каждого Справочник Из СписокЗначенийСправочники Цикл
		Если Справочник.Пометка Тогда
			СписокСправочниковСловаря = СписокСправочниковСловаря + "," + Справочник.Значение;
		КонецЕсли;
	КонецЦикла;
	
	ВладелецФормы.СписокЗначенийСправочникиСловаряСоответствий = СписокЗначенийСправочники;

	Если СписокСправочниковСловаря = "" Тогда
		ПоказатьОповещениеПользователя("Нет выбранных справочников", , "Использование словаря соответствий отключено");
		//ВладелецФормы.ПодчиненныеЭлементы.КоманднаяПанельФормыИБаланс.ПодчиненныеЭлементы.КоманднаяПанельФормы.ПодчиненныеЭлементы.СправкаПодменю.ПодчиненныеЭлементы.ОткрытьСловарьСоответствий.Доступность = Ложь;
		ВладелецФормы.ИспользоватьСловарь = Ложь;
		Оповестить("ОтключитьИспользоватьСловарь");
		Элементы.Применить.Доступность = Ложь;
		ЭтаФорма.Закрыть();
	Иначе
		ВладелецФормы.ОбновитьСловарь();
		Оповестить("ОбновитьСловарь");
		ЭтаФорма.Закрыть();
	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик команды формы "УстановитьФлажки"
//
&НаКлиенте
Процедура УстановитьФлажки(Кнопка)
	 		
	СписокЗначенийСправочники.ЗаполнитьПометки(Истина);
	
	ПриИзмененииЗначения(Неопределено);
	
КонецПроцедуры

// Процедура - обработчик команды формы "СнятьФлажки"
//
&НаКлиенте
Процедура СнятьФлажки(Кнопка)
	
	СписокЗначенийСправочники.ЗаполнитьПометки(Ложь);
	
	ПриИзмененииЗначения(Неопределено);
	
КонецПроцедуры

// Процедура - обработчик команды формы "ИнвертироватьФлажки"
//
&НаКлиенте
Процедура ИнвертироватьФлажки(Кнопка)
	
	Для каждого ЭлементСписка Из СписокЗначенийСправочники Цикл
		
		ЭлементСписка.Пометка = НЕ ЭлементСписка.Пометка;	
		
	КонецЦикла;	
	
	ПриИзмененииЗначения(Неопределено);
	
КонецПроцедуры

// Процедура - обработчик события элемента СписокЗначенийСправочникиПометка "ПриИзменении"
&НаКлиенте
Процедура ПриИзмененииЗначения(Элемент)
	
	Элементы.Применить.Доступность = Истина;
	
КонецПроцедуры
