// Процедура - обработчик события формы "ОбработкаОповещения"
//
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "УпрОсновнаяФормаБудетЗакрыта" И ЭтаФорма.Открыта() Тогда
		
		ЭтаФорма.Закрыть();
		
	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик команды формы "ДобавитьФайл"
//
&НаКлиенте
Процедура ДобавитьФайл(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеПомещенияФайла", ЭтаФорма);
	НачатьПомещениеФайла(ОписаниеОповещения,  , , Истина, ЭтаФорма.УникальныйИдентификатор)

КонецПроцедуры

// Процедура - обработчик оповещения после помещения файла
//
&НаКлиенте
Процедура ПослеПомещенияФайла(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если Результат Тогда
		СтруктураИмениФайла = РазложитьИмяФайла(ВыбранноеИмяФайла);
		Расширение = НРег(СтруктураИмениФайла.Расширение);
		Если ВладелецФормы.МассивДопустимыхРасширений.Найти(Расширение) <> Неопределено Тогда
			СтрокаФайла = ТаблицаФайлов.Добавить();
			СтрокаФайла.ИмяФайла = ВыбранноеИмяФайла;
			СтрокаФайла.АдресФайла = Адрес;
			Элементы.Отправить.Доступность = Истина;
		Иначе
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = "Файл " + ВыбранноеИмяФайла + " не подлежит распознаванию";
			СообщениеПользователю.ИдентификаторНазначения = ЭтаФорма.УникальныйИдентификатор;
			СообщениеПользователю.Сообщить();
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

// Функция определяет имя без расширения и расширение файла
//
// Параметры:
// - ИмяФайла (Строка)
//
//Возвращает структуру
// Результат (Структура)
// - Имя (Строка)
// - Расширение (Строка)
//
&НаКлиенте
Функция РазложитьИмяФайла(ИмяФайла) Экспорт
	
	Расширение = ИмяФайла;
	Поз = Найти(Расширение, ".");
	Если Поз = 0 Тогда
		Возврат Новый Структура("Имя, Расширение", СокрЛП(ИмяФайла), "");
	КонецЕсли;
	Пока Поз > 0 Цикл
		Расширение = Сред(Расширение, Поз + 1);
		Поз = Найти(Расширение, ".");
	КонецЦикла;
	Имя = Лев(ИмяФайла, СтрДлина(ИмяФайла) - СтрДлина(Расширение) - 1);
	Возврат Новый Структура("Имя, Расширение", СокрЛП(Имя), СокрЛП(Расширение));
	
КонецФункции

// Процедура - обработчик команды формы "Установить"
//
&НаКлиенте
Процедура Установить(Команда)
	
	ВладелецФормы.ОтказОтУстановкиРасширенияРаботыСФайлами = Ложь;
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриОткрытииПослеПодключенияРасширенияРаботыСФайлами", ВладелецФормы);
	НачатьПодключениеРасширенияРаботыСФайлами(ОписаниеОповещения);
	ЭтаФорма.Закрыть();
	
КонецПроцедуры

// Процедура - обработчик команды формы "Отправить"
//
&НаКлиенте
Процедура Отправить(Команда)
	
	Если ТаблицаФайлов.Количество() > 0 Тогда
		ТаблицаФайлов.Сортировать("ИмяФайла");
		ПомещенныеФайлы = Новый Массив;
		СоответствиеИменФайловПутям = Новый Соответствие;
		Для Каждого Файл Из ТаблицаФайлов Цикл
			СтруктураОписанияФайла = Новый Структура("Имя, Хранение", Файл.ИмяФайла, Файл.АдресФайла);
			СоответствиеИменФайловПутям.Вставить(Файл.ИмяФайла, Файл.ИмяФайла);
			ПомещенныеФайлы.Добавить(СтруктураОписанияФайла);
		КонецЦикла;	
		ВладелецФормы.ОтправкаФайловНаСерверРаспознаванияПослеПомешенияФайлов(ПомещенныеФайлы, СоответствиеИменФайловПутям);
	КонецЕсли;
	ЭтаФорма.Закрыть();
	
КонецПроцедуры

// Процедура - обработчик события элемента ТаблицаФайлов "ПослеУдаления"
//
&НаКлиенте
Процедура ТаблицаФайловПослеУдаления(Элемент)
	
	Если ТаблицаФайлов.Количество() = 0 Тогда
		Элементы.Отправить.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры
