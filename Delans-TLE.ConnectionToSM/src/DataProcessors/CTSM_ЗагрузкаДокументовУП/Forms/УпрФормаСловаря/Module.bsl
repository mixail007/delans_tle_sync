// Процедура - обработчик события формы "ОбработкаОповещения"
//
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	
	Если (ИмяСобытия = "УпрОсновнаяФормаБудетЗакрыта" ИЛИ ИмяСобытия = "ОтключитьИспользоватьСловарь") И ЭтаФорма.Открыта() Тогда
		
		ЭтаФорма.Закрыть();
		
	ИначеЕсли ИмяСобытия = "ОбновитьСловарь"  Тогда
		
		ОбновитьСловарь();

	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события формы "ПриОткрытии"
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ВладелецФормы.ПервоеПолучениеСеанса Тогда
		ВладелецФормы.ОбновитьСловарь();
	КонецЕсли;
	//Для Каждого Строка из ТабличноеПолеСловарь Цикл
	//	Строка.Флажок = Ложь;
	//КонецЦикла;
	
	ОбновитьСловарь();
			
КонецПроцедуры

// Процедура - обработчик команды формы "ОткрытьСостав"
//
&НаКлиенте
Процедура ОткрытьСостав(Команда)

	ФормаСостав = ПолучитьФорму(ВладелецФормы.ПрефиксИмениФорм + "УпрСоставОбъектовСловаря", , ВладелецФормы);
	Если ФормаСостав.Открыта() Тогда 
		ФормаСостав.Активизировать();
	Иначе
		ФормаСостав.ЗакрыватьПриЗакрытииВладельца = Истина;
		ФормаСостав.Открыть(); 
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик команды формы "УдалитьСтроку"
//
&НаКлиенте
Процедура УдалитьСтроку(Команда)
	
	СписокУдалитьСтроки = Новый СписокЗначений;
	Для Каждого Строка из ТабличноеПолеСловарь Цикл
		Если Строка.Флажок Тогда 
			СписокУдалитьСтроки.Добавить(Строка.СоответствиеИД);
		КонецЕсли;
	КонецЦикла;
	Если СписокУдалитьСтроки.Количество() = 0 Тогда
		СписокУдалитьСтроки.Добавить(Элементы.ТабличноеПолеСловарь.ТекущиеДанные.СоответствиеИД);
	КонецЕсли;

	Результат = ВладелецФормы.УдалитьЗаписьВСловаре(СписокУдалитьСтроки, ЭтаФорма.УникальныйИдентификатор);
	Если Результат.Количество() > 0 Тогда
		Для Каждого СтрокаИД ИЗ Результат Цикл
			ПараметрыМетода = Новый Структура("СоответствиеИД", СтрокаИД.Значение);
			МассивСтрок = ТабличноеПолеСловарь.НайтиСтроки(ПараметрыМетода);
			Для Каждого Строка из МассивСтрок Цикл
				ТабличноеПолеСловарь.Удалить(Строка);
			КонецЦикла;
		КонецЦикла;
	Иначе
		ОбновитьСловарь();
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Словарь был обновлен";
		СообщениеПользователю.ИдентификаторНазначения = ЭтаФорма.УникальныйИдентификатор;
		СообщениеПользователю.Сообщить();
	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик команды формы "УстановитьФлажки"
//
&НаКлиенте
Процедура УстановитьФлажки(Кнопка)
	 		
	Для Каждого Строка из ТабличноеПолеСловарь Цикл
		Строка.Флажок = Истина;
	КонецЦикла;

КонецПроцедуры

// Процедура - обработчик команды формы "СнятьФлажки"
//
&НаКлиенте
Процедура СнятьФлажки(Кнопка)
	
	Для Каждого Строка из ТабличноеПолеСловарь Цикл
		Строка.Флажок = Ложь;
	КонецЦикла;
	
КонецПроцедуры

// Процедура - обработчик события элемента ТабличноеПолеСловарь "ПриАктивизацииЯчейки"
//
&НаКлиенте
Процедура ТабличноеПолеСловарьПриАктивизацииЯчейки(Элемент)
	
	Если  Элемент.ТекущийЭлемент <> Неопределено И Элемент.ТекущийЭлемент.Имя = "ТабличноеПолеСловарьСсылка" Тогда
		Элемент.ТекущийЭлемент.КнопкаСпискаВыбора = Ложь;
		Элемент.ТекущийЭлемент.КнопкаВыбора = Истина;
		//Элемент.ТекущийЭлемент.СписокВыбора.Добавить("Открыть", "Открыть справочник """ + СправочникИмя + """");
		Элемент.ТекущийЭлемент.ОтображениеКнопкиВыбора = ОтображениеКнопкиВыбора.ОтображатьВПолеВвода; 
		Элемент.ТекущийЭлемент.ТолькоПросмотр = Ложь;
	Иначе
		Возврат;
	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик события элемента ТабличноеПолеСловарьСсылка "ОбработкаВыбора"
//
&НаКлиенте
Процедура ТабличноеПолеСловарьСсылкаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ВыбранноеЗначение <> Элементы.ТабличноеПолеСловарь.ТекущиеДанные.СоответствиеСсылка Тогда
		
		ДанныеСсылки = ПолучитьДанныеСсылки(ВыбранноеЗначение);
		МассвивНайденных = ВладелецФормы.ТаблицаСловаря.НайтиСтроки(Новый Структура("СоответствиеИД", Элементы.ТабличноеПолеСловарь.ТекущиеДанные.СоответствиеИД));
		Для Каждого НовоеСоответствие Из МассвивНайденных Цикл
			LinkDatabaseID = ?(ВладелецФормы.СловарьПоНаименованиям, "", ВладелецФормы.ИДБазыДанныхПользователя);
			СтруктураПараметров = Новый Структура("LinkDatabaseID, NameFromDocument, LinkType, LinkID, ConformityFullName", 
			LinkDatabaseID, 
			НовоеСоответствие.НаименованиеИзДокумента, 
			"СправочникСсылка." + НовоеСоответствие.ИмяСправочника, 
			ДанныеСсылки.ИДСсылки,Элементы.ТабличноеПолеСловарь.ТекущиеДанные.ИмяСправочника,
			ДанныеСсылки.ПолноеНаименование);
			СтрокаЗапроса = "/adl42/hs/api_v1/AcDbDictionariesMatches/Add";
			ПараметрыОтвета = ВладелецФормы.ВыполнитьЗапрос("ESDLADLHTTP", СтрокаЗапроса, "Post", СтруктураПараметров);                   
			Если ПараметрыОтвета.КодОтвета = 200 Тогда
				НовоеСоответствие.СоответствиеИД = ПараметрыОтвета.СтруктураОтвета.MatchingID;  
				НовоеСоответствие.СоответствиеСсылка = ВыбранноеЗначение; 
				НовоеСоответствие.СоответствиеПолноеНаименование = ДанныеСсылки.ПолноеНаименование;
				Элементы.ТабличноеПолеСловарь.ТекущиеДанные.СоответствиеИД = НовоеСоответствие.СоответствиеИД;
				Элементы.ТабличноеПолеСловарь.ТекущиеДанные.СоответствиеСсылка = ВыбранноеЗначение; 
				Элементы.ТабличноеПолеСловарь.ТекущиеДанные.СоответствиеПолноеНаименование = ДанныеСсылки.ПолноеНаименование;
			Иначе
				СообщениеПользователю = Новый СообщениеПользователю;
				СообщениеПользователю.Текст ="Ошибка при сохранении записи словаря соответстий в архиве: " + ПараметрыОтвета.СтруктураОтвета.Description;
				СообщениеПользователю.Сообщить();
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

// Функция возвращает ИД ссылки и полное наименование элемента по ссылке
//
&НаСервереБезКонтекста
Функция ПолучитьДанныеСсылки(НоваяСсылка)
	
	ИДСсылки = XMLСтрока(НоваяСсылка); 	
	ПолноеНаименование = НоваяСсылка.НаименованиеПолное;
	Возврат Новый Структура("ИДСсылки, ПолноеНаименование", ИДСсылки,ПолноеНаименование);
	
КонецФункции

// Процедара обновляет таблицу ТабличноеПолеСловарь
//
&НаКлиенте
Процедура ОбновитьСловарь()
	
	ТабличноеПолеСловарь.Очистить();
	Индикатор = 0;
	Если ВладелецФормы.ТаблицаСловаря.Количество() = 0 Тогда
		Шаг = 1;
	Иначе
		Шаг = 100/ВладелецФормы.ТаблицаСловаря.Количество();
	КонецЕсли;
	Для Каждого Элемент Из ВладелецФормы.ТаблицаСловаря Цикл
		ЗаполнитьЗначенияСвойств(ТабличноеПолеСловарь.Добавить(), Элемент);
		Индикатор = Индикатор + Шаг;
		Состояние("Получение данных словаря", Индикатор) 		
	КонецЦикла;
	
КонецПроцедуры
