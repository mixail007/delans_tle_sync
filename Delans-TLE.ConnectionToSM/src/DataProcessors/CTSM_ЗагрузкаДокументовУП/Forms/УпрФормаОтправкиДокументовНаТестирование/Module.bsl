// Процедура - обработчик события формы "ПриСозданииНаСервере"
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	email = Параметры.Email;
	
	ЭтаФорма.Параметры.Свойство("СписокИД", СписокИД);
	
	Если СписокИД <> Неопределено Тогда
		Элементы.ГруппаСписокДокументов.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события формы "ОбработкаОповещения"
//
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "УпрОсновнаяФормаБудетЗакрыта"  И ЭтаФорма.Открыта() Тогда
		
		ЭтаФорма.Закрыть();
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик команды формы "ВыбратьДокументы"
//
&НаКлиенте
Процедура ВыбратьДокументы(Команда)
	
	ПоследняяПапкаВыбораДокументов = ВладелецФормы.ПоследняяПапкаВыбораДокументов;
	Если ПоследняяПапкаВыбораДокументов = Неопределено Тогда
		СохраненноеЗначение = ВладелецФормы.СохраненноеЗначениеПараметра("ПапкаВыбораДокументов"); 
		ПапкаВыбораДокументов = ?(СохраненноеЗначение=Неопределено, "", СохраненноеЗначение);
	Иначе
		ПапкаВыбораДокументов = ПоследняяПапкаВыбораДокументов;
	КонецЕсли;
	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	МаскаФайлов = "*.xls;*.xlsx;*.jpg;*.jpeg;*.bmp;*.png;*.tif;*.tiff;*.gif;*.jpe;*.pdf;*.djvu";
	ДиалогОткрытияФайла.Фильтр = МаскаФайлов+"|"+МаскаФайлов;
	ДиалогОткрытияФайла.МножественныйВыбор = Истина;
	ДиалогОткрытияФайла.Каталог = ПапкаВыбораДокументов;
	ДиалогОткрытияФайла.Заголовок = "Выберите файлы для диагностики";
	Если ДиалогОткрытияФайла.Выбрать() тогда
		СписокДокументов.Очистить();
		СписокДокументов.ЗагрузитьЗначения(ДиалогОткрытияФайла.ВыбранныеФайлы);
		СписокДокументов.СортироватьПоЗначению();
	КонецЕсли;
	ВладелецФормы.ПоследняяПапкаВыбораДокументов = ДиалогОткрытияФайла.Каталог;

КонецПроцедуры

// Процедура - обработчик команды формы "ПросмотрИзображения"
//
&НаКлиенте
Процедура ПросмотрИзображения(Команда)
	
	Если Элементы.СписокДокументов.ТекущаяСтрока = Неопределено Тогда
		Если СписокДокументов.Количество()>0 Тогда
			Элементы.СписокДокументов.ТекущаяСтрока = СписокДокументов[0].ПолучитьИдентификатор();
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПустойОбработчикОповещения", ВладелецФормы);
	НачатьЗапускПриложения(ОписаниеОповещения, Элементы.СписокДокументов.ТекущиеДанные.Значение); 

КонецПроцедуры

// Процедура - обработчик команды формы "УдалитьИзображение"
//
&НаКлиенте
Процедура УдалитьИзображение(Команда)
	
	Если Элементы.СписокДокументов.ТекущаяСтрока = Неопределено Тогда
		Если СписокДокументов.Количество()>0 Тогда
			Элементы.СписокДокументов.ТекущаяСтрока = СписокДокументов[0].ПолучитьИдентификатор();
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;

	СтрокаСписка = СписокДокументов.НайтиПоИдентификатору(Элементы.СписокДокументов.ТекущаяСтрока);
	СписокДокументов.Удалить(СтрокаСписка);

КонецПроцедуры

// Процедура - обработчик команды формы "Отправить"
//
&НаКлиенте
Процедура Отправить(Команда)
	
	Если email = "" Тогда
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст ="Укажите email";
		СообщениеПользователю.ИдентификаторНазначения = ЭтаФорма.УникальныйИдентификатор;
		СообщениеПользователю.Сообщить();
		Возврат;
	ИначеЕсли Комментарий = "" Тогда
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст ="Заполните описание проблемы";
		СообщениеПользователю.ИдентификаторНазначения = ЭтаФорма.УникальныйИдентификатор;
		СообщениеПользователю.Сообщить();
		Возврат;
	КонецЕсли;
	Состояние("Отправка данных для диагностики", 10);
	//Элементы.ГруппаОповещенияПользователя.Видимость = Истина;
	ПодключитьОбработчикОжидания("ОтправкаФайлов", 1, Истина);

КонецПроцедуры

// Процедура - обработчик события элемента Ссылка "Нажатие"
//
&НаКлиенте
Процедура СсылкаНажатие(Элемент)
	
	ОткрытьСправку("v8config://414247e6-e62b-44a1-badb-f7f2df0c93be/mdobject/idec12260d-6369-41ae-bc6e-658f180d1a90/038b5c85-fb1c-4082-9c4c-e69f8928bf3a/#4");
	
КонецПроцедуры

// Процедура выполняет отправку документов на тестирование
//
&НаКлиенте
Процедура ОтправкаФайлов()
	
	Если СписокИД <> Неопределено Тогда
		
		СтрокаИД = "";
		Для Каждого Элемент Из СписокИД Цикл
			СтрокаИД = СтрокаИД + Элемент.Значение + ";";
		КонецЦикла;
		СтруктураЗапроса = Новый Структура("DocumentIDList, Comment, email", СтрокаИД, Комментарий, email);
		Состояние("Отправка данных для диагностики", 20);
		СтрокаЗапроса = "/adl42/hs/api_v1/AccountEDocuments/CheckRecognition";
		ПараметрыОтвета = ВладелецФормы.ВыполнитьЗапрос("ESDLADLHTTP", СтрокаЗапроса, "Post", СтруктураЗапроса);                   
		
		СообщениеПользователю = Новый СообщениеПользователю;
		Если ПараметрыОтвета.КодОтвета = 200 Тогда
			ТекстСообщения = "По итогам диагностики вам будет выслан ответ на email: " + email;
			ВладелецФормы.Активизировать();
			СообщениеПользователю.ИдентификаторНазначения = ВладелецФормы.УникальныйИдентификатор;
			ЭтаФорма.Закрыть();
		Иначе
			//Элементы.ГруппаОповещенияПользователя.Видимость = Ложь;
			ТекстСообщения = "Ошибка при отправке документов: " + ПараметрыОтвета.СтруктураОтвета.Description;
			СообщениеПользователю.ИдентификаторНазначения = ЭтаФорма.УникальныйИдентификатор;
		КонецЕсли;
		
		Состояние("Отправка данных для диагностики", 100);

		СообщениеПользователю.Текст = ТекстСообщения;
		СообщениеПользователю.Сообщить();
		
	КонецЕсли;
    	
КонецПроцедуры
