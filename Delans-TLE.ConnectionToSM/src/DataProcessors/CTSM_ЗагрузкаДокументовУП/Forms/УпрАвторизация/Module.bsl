&НаКлиенте
Перем ОповещениеВыполнено; // признак оповещения о выполненной авторизации

// Процедура - обработчик события формы "ПриСозданииНаСервере"
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	
	НастройкиПодключения = ХранилищеСистемныхНастроек.Загрузить("ESDLНастройкиПодключения", "НастройкиПодключения");
	Если НастройкиПодключения <> Неопределено И ТипЗнч(НастройкиПодключения) = Тип("Структура") Тогда
		Если НастройкиПодключения.Свойство("EfsolТокен") Тогда
			ESDLТокен = НастройкиПодключения.EfsolТокен;
		КонецЕсли;
		Если НастройкиПодключения.Свойство("Логин") Тогда
			ЛогинВвод = НастройкиПодключения.Логин;
		КонецЕсли;
	//Иначе
		//ЛогинВвод = ПользователиИнформационнойБазы.ТекущийПользователь().Имя;
		//СтрокаСоединенияИнформационнойБазы = СтрокаСоединенияИнформационнойБазы();
	КонецЕсли;
			  
КонецПроцедуры

// Процедура - обработчик события формы "ПриОткрытии"
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОповещениеВыполнено = Ложь;
	ТекстПредупреждения = "";
	Если ESDLТокен <> "" Тогда
		Если Найти(ЛогинВвод, "beta#") = 1 Тогда
			ВладелецФормы.beta = Истина;
			#Если НЕ ВебКлиент Тогда
				ВладелецФормы.ОбновитьHTTPConnections();
			#КонецЕсли
		Иначе
			ВладелецФормы.beta = Ложь;
		КонецЕсли;
		ВладелецФормы.ESDLТокен = ESDLТокен;
		Если ВладелецФормы.ПроверитьТокен(ESDLТокен, ТекстПредупреждения) Тогда 
			Отказ = Истина;
			ПолучитьДанныеПользователя();
			ВыполнитьПередЗакрытьФорму(Неопределено);
		ИначеЕсли ВладелецФормы.ProtectedMode Тогда
			Отказ = Истина;
			ВыполнитьПередЗакрытьФорму(Неопределено);
		КонецЕсли;
	ИначеЕсли ВладелецФормы.ProtectedMode Тогда
		Отказ = Истина;
		ВыполнитьПередЗакрытьФорму(Неопределено);
	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик события формы "ПриЗакрытии"
//
&НаКлиенте
Процедура ПриЗакрытии()
	
	Если Не ОповещениеВыполнено Тогда
		ВыполнитьПередЗакрытьФорму(Неопределено);
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик команды формы "ВыполнитьПередЗакрытьФорму"
//
&НаКлиенте
Процедура ВыполнитьПередЗакрытьФорму(Команда)
	
	ОповещениеВыполнено = Истина;
	Результат = Новый Структура("АвторизацияПройдена, ESDLИДАккаунта, ESDLИДПользователя, ESDLТокен, ESDLФИОПользователя, ESDLEmailПользователя, ESDLPhoneNumberПользователя, Логин", 
								 АвторизацияПройдена, ESDLИДАккаунта, ESDLИДПользователя, ESDLТокен, ESDLФИОПользователя, ESDLEmailПользователя, ESDLPhoneNumberПользователя, ЛогинВвод);
	ПередЗакрытиемВызовНаСервер();
	Оповестить("ФормаАвторизацииЗакрыта", Результат); 
	Если АвторизацияПройдена И Команда = Неопределено Тогда    //) ИЛИ Команда.Имя = "ОтменаАвторизации"
		ЭтаФорма.Закрыть();
	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик команды формы "Отправить"
//
&НаКлиенте
Процедура Отправить(Команда)
			
	Если ПустаяСтрока(Элементы.ЛогинВвод.ТекстРедактирования) Тогда
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Логин не может быть пустым!";
		СообщениеПользователю.ИдентификаторНазначения = ЭтаФорма.УникальныйИдентификатор;
		СообщениеПользователю.Сообщить();
		Возврат;
	КонецЕсли;
	Если ПустаяСтрока(Элементы.ПарольВвод.ТекстРедактирования) Тогда
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Пароль не может быть пустым!";
		СообщениеПользователю.ИдентификаторНазначения = ЭтаФорма.УникальныйИдентификатор;
		СообщениеПользователю.Сообщить();
		Возврат;
	КонецЕсли;
	ТекстПредупреждения = "";	

	Если Найти(ЛогинВвод, "beta#") = 1 Тогда
		Логин = СтрЗаменить(ЛогинВвод, "beta#", "");
		Если ВладелецФормы.beta = Ложь Тогда
			ВладелецФормы.beta = Истина;
			#Если НЕ ВебКлиент Тогда
				ВладелецФормы.ОбновитьHTTPConnections();
			#КонецЕсли
		КонецЕсли;
	Иначе
		Если ВладелецФормы.beta = Истина Тогда
			ВладелецФормы.beta = Ложь;
			#Если НЕ ВебКлиент Тогда
				ВладелецФормы.ОбновитьHTTPConnections();
			#КонецЕсли
		КонецЕсли;
		Логин = ЛогинВвод;
	КонецЕсли;
	
	Если ВладелецФормы.ProtectedMode Тогда 
		АвторизацияПройдена = Ложь;
		ВыполнитьПередЗакрытьФорму(Неопределено);
	Иначе
		СтруктураПараметров = Новый Структура("AccountUserLogin, AccountUserPassword, ClientDescription", Логин, ПарольВвод, "ESDLClient");
		СтрокаЗапроса = "/api_v2/AccountUserSessions/Login";
		ПараметрыОтвета = ВладелецФормы.ВыполнитьЗапрос("ESDLCoreHTTP", СтрокаЗапроса, "Post", СтруктураПараметров);                   
		Если ПараметрыОтвета.КодОтвета = 200 Тогда
			ESDLТокен = ПараметрыОтвета.СтруктураОтвета.Token;
			ВладелецФормы.ESDLТокен = ESDLТокен;
			ПолучитьДанныеПользователя();
			ЭтаФорма.Закрыть();
		Иначе
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = "Ошибка: " + ПараметрыОтвета.СтруктураОтвета.Description;
			СообщениеПользователю.ИдентификаторНазначения = ЭтаФорма.УникальныйИдентификатор;
			СообщениеПользователю.Сообщить();    
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик команды формы "ЗабылиПароль"
//
&НаКлиенте
Процедура ЗабылиПароль(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПустойОбработчикОповещения", ВладелецФормы);
	НачатьЗапускПриложения(ОписаниеОповещения, "https://cp.42clouds.com/resetpassword"); 
	
КонецПроцедуры

// Процедура - обработчик команды формы "Зарегистрироваться"
//
&НаКлиенте
Процедура Зарегистрироваться(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПустойОбработчикОповещения", ВладелецФормы);
	НачатьЗапускПриложения(ОписаниеОповещения, " https://cp.42clouds.com/signup/"); 
	
КонецПроцедуры

// Процедура получения и заполнения свойств пользователя сервиса
//
&НаКлиенте
Процедура ПолучитьДанныеПользователя();
	
	АвторизацияПройдена = Истина;		
	Если ВладелецФормы.ProtectedMode Тогда
		СтрокаЗапроса = "/adl42/hs/api_v1/AccountUsers/GetProperties";
		ПараметрыОтвета = ВладелецФормы.ВыполнитьЗапрос("ESDLADLHTTP", СтрокаЗапроса);   			
	Иначе
		СтрокаПараметры = "AccountUserSessions/GetAccountUserIDByToken?token=" + ESDLТокен;
		СтрокаЗапроса = "/api_v2/" + СтрокаПараметры;
		ПараметрыОтвета = ВладелецФормы.ВыполнитьЗапрос("ESDLCoreHTTP", СтрокаЗапроса); 
	КонецЕсли;
	Если ПараметрыОтвета.КодОтвета = 200 Тогда
		Если ВладелецФормы.ProtectedMode И ПараметрыОтвета.СтруктураОтвета.Количество() > 0 Тогда
			ESDLИДПользователя = ПараметрыОтвета.СтруктураОтвета.UserID;
		Иначе
			ESDLИДПользователя = ПараметрыОтвета.СтруктураОтвета.AccountUserID;
			СтрокаЗапроса = "/api_v2/AccountUsers/GetProperties?accountUserID=" + ESDLИДПользователя;
			ПараметрыОтвета = ВладелецФормы.ВыполнитьЗапрос("ESDLCoreHTTP", СтрокаЗапроса);  
			Если НЕ ПараметрыОтвета.КодОтвета = 200 Тогда
				СообщениеПользователю = Новый СообщениеПользователю;
				СообщениеПользователю.Текст ="Ошибка: " + ПараметрыОтвета.СтруктураОтвета.Description;
				СообщениеПользователю.ИдентификаторНазначения = ЭтаФорма.УникальныйИдентификатор;
				СообщениеПользователю.Сообщить();
				АвторизацияПройдена = Ложь;
				Возврат;
			КонецЕсли;
		КонецЕсли;
		СтруктураТиповПараметров = Новый Структура("AccountID, Login, Email, PhoneCountry, FullPhoneNumber, FirstName, LastName, MiddleName, CorpUserID", "Строка", "Строка", "Строка", "Строка", "Строка", "Строка", "Строка", "Строка", "Строка");
		ПараметрыПользователя = ВладелецФормы.ПолучитьXMLЗначенияДанных(ПараметрыОтвета.СтруктураОтвета, СтруктураТиповПараметров);
		ESDLИДАккаунта = ПараметрыПользователя.AccountID;
		ESDLФИОПользователя = СокрЛП(ПараметрыПользователя.LastName + " " + ПараметрыПользователя.FirstName + " " + ПараметрыПользователя.MiddleName);
		ESDLEmailПользователя = ПараметрыПользователя.Email;
		ESDLPhoneNumberПользователя = ПараметрыПользователя.FullPhoneNumber;
	Иначе
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст ="Ошибка: " + ПараметрыОтвета.СтруктураОтвета.Description;
		СообщениеПользователю.ИдентификаторНазначения = ЭтаФорма.УникальныйИдентификатор;
		СообщениеПользователю.Сообщить();
		АвторизацияПройдена = Ложь;
	КонецЕсли;

КонецПроцедуры

// Процедура сохраняет настройки авторизации 
//
&НаСервере
Процедура ПередЗакрытиемВызовНаСервер()
	
	Если АвторизацияПройдена Тогда
		НастройкиПодключения = Новый Структура("EfsolИДПользователя, EfsolТокен, Логин", ESDLИДПользователя, ESDLТокен, ЛогинВвод);
		ХранилищеСистемныхНастроек.Сохранить("ESDLНастройкиПодключения", "НастройкиПодключения", НастройкиПодключения);
	КонецЕсли;
			
КонецПроцедуры	



// Процедура - обработчик события формы "ОбработкаОповещения"
//
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "УпрОсновнаяФормаБудетЗакрыта"  И ЭтаФорма.Открыта() Тогда
		
		ЭтаФорма.Закрыть();
		
	КонецЕсли;
	
КонецПроцедуры

