Функция ШаблонURLGET(Запрос)
	
	//Ответ = Новый HTTPСервисОтвет(200);
	//Возврат Ответ;
	
	СтраницаHTML = "<html><head></head><body><hr><br><br>Тестовая страница<br><br><hr></body></html>";
	
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.УстановитьТелоИзСтроки(СтраницаHTML);
	Ответ.Заголовки.Вставить("content-type", "text/html; charset=utf-8");
	
	Возврат Ответ;

КонецФункции

// Функция возвращает типовую xml с ошибклй "метод не найден"
// метод Любой для шаблона "/*"
Функция MethodNotFoundЛюбой(Запрос)
	
	СтруктураОтвета = Новый Структура;
	СтруктураТаймингов = Новый Структура;
	ВремяНачалаФормированияОтвета = ТекущаяУниверсальнаяДатаВМиллисекундах(); 
	ID = "";          
	                         
	КодОтвета = 404;
	СтруктураОтвета.Вставить("Code", Строка(КодОтвета));
	СтруктураОтвета.Вставить("Description", "Метод не найден");
	СтруктураОтвета.Вставить("DebugInfo", "Method not found");
	
	СтруктураТаймингов.Вставить("MethodStart ", ВремяНачалаФормированияОтвета);
	
	ВремяНачалаСформироватьXML = ТекущаяУниверсальнаяДатаВМиллисекундах();
	КоличествоЭлементовXML = 0;
	ТекстXML = CTSM_EfsolУниверсальныеФункцииСервер.СформироватьXML(СтруктураОтвета, КодОтвета, КоличествоЭлементовXML);
	СтруктураТаймингов.Вставить("CreateXML", (ТекущаяУниверсальнаяДатаВМиллисекундах() - ВремяНачалаСформироватьXML));
	СтруктураТаймингов.Вставить("Total", (ТекущаяУниверсальнаяДатаВМиллисекундах() - ВремяНачалаФормированияОтвета));
	//Если СтруктураТаймингов.Total > (Константы.НормаВремениВыполненияЗапроса.Получить()*1000) Тогда
	//	ОтветОшибка = ?(КодОтвета = 200, "Код ответа: 200", "Код ответа: " + КодОтвета + "_DebugInfo: " + СтруктураОтвета.DebugInfo); 
	//	Справочники.InternetMailProfiles.СоздатьСообщениеООшибкеРаботыСервиса(ID, "ADL42", "MethodNotFound", "<P>Время формирования ответа: "  + Формат(СтруктураТаймингов.Total , "ЧГ=0") + "</P>",  СтруктураТаймингов, , , ОтветОшибка, КоличествоЭлементовXML);
	//КонецЕсли;
	
	Возврат CTSM_EfsolУниверсальныеФункцииСервер.СформироватьHTTPСервисОтвет(ТекстXML, КодОтвета, СтруктураТаймингов, ID);
	
КонецФункции

Функция ШаблонURLPOST(Запрос)
	
	
	ВремяНачалаФормированияОтвета = ТекущаяУниверсальнаяДатаВМиллисекундах(); 

	СтруктураОтвета = Новый Структура;
	СтруктураТаймингов = Новый Структура;
	СтруктураТаймингов.Вставить("MethodStart ", ВремяНачалаФормированияОтвета);
	
	ID = Запрос.Заголовки.Получить("ID");         

	ИмяМетода = Запрос.ПараметрыURL["MethodName"];
	
	КодОтвета = 200;
	СтруктураОтвета = Новый Структура;      
	Ответ = Новый HTTPСервисОтвет(КодОтвета);
	
	ФормированиеОтвета = Ложь;
	
	Попытка
		
		ТекстОшибки = "";
		
		Если ИмяМетода = "TestPost" Тогда 
			
			Ответ.УстановитьТелоИзСтроки("It works");
			
		ИначеЕсли ИмяМетода = "AddAplicationUser" ИЛИ ИмяМетода = "AddApplicationUser" Тогда 
			
			Результат = Истина; 
			СтруктураПараметров = CTSM_EfsolУниверсальныеФункцииСервер.ПарсерXML(Запрос.ПолучитьТелоКакСтроку());
			Результат = CTSM_Efsol_Платформа.ДобавитьПользователяПриложения(СтруктураПараметров, ТекстОшибки);
			Если Результат = Ложь Тогда
				КодОтвета = 415;
				СтруктураОтвета.Вставить("Code", Строка(КодОтвета));
				СтруктураОтвета.Вставить("Description", ТекстОшибки); //"Пользователь не создан !");
				СтруктураОтвета.Вставить("DebugInfo", "User not add");
			КонецЕсли;
			ФормированиеОтвета = Истина;
			
		ИначеЕсли ИмяМетода = "EditApplicationUserPassword" Тогда
			
			СтруктураПараметров = CTSM_EfsolУниверсальныеФункцииСервер.ПарсерXML(Запрос.ПолучитьТелоКакСтроку());
			Результат = CTSM_Efsol_Платформа.ИзменитьПарольПользователяПриложения(СтруктураПараметров, ТекстОшибки);
			ЗаписьЖурналаРегистрации("CTSM_Efsol_Платформа.EditApplicationUserPassword", УровеньЖурналаРегистрации.Ошибка, "Результат: " + Результат + "__" + ТекстОшибки);
			Если Результат = Ложь Тогда
				КодОтвета = 404;
				СтруктураОтвета.Вставить("Code", Строка(КодОтвета));
				СтруктураОтвета.Вставить("Description", ТекстОшибки);
				СтруктураОтвета.Вставить("DebugInfo", "User not found");
			КонецЕсли;
			ФормированиеОтвета = Истина;	
			
		// Гиршфельд Андрей 25.10.2018 { 
		ИначеЕсли ИмяМетода = "UpdAplicationUser" Тогда 
			
			СтруктураПараметров = CTSM_EfsolУниверсальныеФункцииСервер.ПарсерXML(Запрос.ПолучитьТелоКакСтроку());
			ОписаниеОшибок = "";
			CTSM_Efsol_Платформа.ОбновитьAplicationUserВОбласть(СтруктураПараметров, ОписаниеОшибок, КодОтвета);
			ЗаписьЖурналаРегистрации("CTSM_Efsol_Платформа.UpdAplicationUser", УровеньЖурналаРегистрации.Ошибка, ,,"Результат: " + (НЕ ЗначениеЗаполнено(ОписаниеОшибок)) + "__" + ОписаниеОшибок);
			ФормированиеОтвета = Истина;
			Если ЗначениеЗаполнено(ОписаниеОшибок) Тогда
				//КодОтвета = 415;
				СтруктураОтвета.Вставить("Code", Строка(КодОтвета));
				СтруктураОтвета.Вставить("Description", ОписаниеОшибок);
				СтруктураОтвета.Вставить("DebugInfo", "User not update");
			КонецЕсли; 
		
		// Гиршфельд Андрей}	
			
		ИначеЕсли ИмяМетода = "DeleteApplicationUser" Тогда 
			
			СтруктураПараметров = CTSM_EfsolУниверсальныеФункцииСервер.ПарсерXML(Запрос.ПолучитьТелоКакСтроку());
			Результат = CTSM_Efsol_Платформа.УдалитьПользователяПриложения(СтруктураПараметров, ТекстОшибки);
			ЗаписьЖурналаРегистрации("CTSM_Efsol_Платформа.DeleteApplicationUser", УровеньЖурналаРегистрации.Ошибка, ,,"Результат: " + Результат + "__" + ТекстОшибки);
			Если Результат = Ложь Тогда
				
				КодОтвета = 404;
				СтруктураОтвета.Вставить("Code", Строка(КодОтвета));
				//СтруктураОтвета.Вставить("Description", "Пользователь не найден");
				//СтруктураОтвета.Вставить("DebugInfo", "User not found");
				СтруктураОтвета.Вставить("Description", ТекстОшибки);
				СтруктураОтвета.Вставить("DebugInfo", "User not found");
			КонецЕсли;
			ФормированиеОтвета = Истина;
						
		ИначеЕсли ИмяМетода = "ApplicationUserAvailability" Тогда 
			
			СтруктураПараметров = CTSM_EfsolУниверсальныеФункцииСервер.ПарсерXML(Запрос.ПолучитьТелоКакСтроку());
			Результат = CTSM_Efsol_Платформа.УстановитьДоступностьПользователяПриложения(СтруктураПараметров, ТекстОшибки);
			ЗаписьЖурналаРегистрации("CTSM_Efsol_Платформа.ApplicationUserAvailability", УровеньЖурналаРегистрации.Ошибка,, ,"Результат: " + Результат + "__" + ТекстОшибки);
			Если Результат = Ложь Тогда
				КодОтвета = 404;
				СтруктураОтвета.Вставить("Code", Строка(КодОтвета));
				СтруктураОтвета.Вставить("Description", "Пользователь не найден");
				СтруктураОтвета.Вставить("DebugInfo", "User not found")
			КонецЕсли;
			ФормированиеОтвета = Истина;
			
		ИначеЕсли ИмяМетода = "AttachDataRegion" Тогда
			
			ТекстXML = CTSM_EfsolУниверсальныеФункцииСервер.ПарсерXML(Запрос.ПолучитьТелоКакСтроку());
			CTSM_Efsol_Платформа.ПрикрепитьОбластьДанных(ТекстXML);
			ФормированиеОтвета = Истина;
			
		ИначеЕсли  ИмяМетода = "DownloadDataArea" Тогда
			
			СтруктураПараметров = CTSM_EfsolУниверсальныеФункцииСервер.ПарсерXML(Запрос.ПолучитьТелоКакСтроку());
			
			ПараметрыЗадания = Новый Массив;
			ПараметрыЗадания.Добавить(Число(СтруктураПараметров.Zone));
			ПараметрыЗадания.Добавить(СтруктураПараметров.FileName);
			
			Задание = ФоновыеЗадания.Выполнить("CTSM_Efsol_Платформа.ЗагрузитьОбластьДанныхИзАрхива", ПараметрыЗадания, , НСтр("ru = 'Загрузка области данных'"));
			
			СтруктураОтвета.Вставить("Result", "");
			ФормированиеОтвета = Истина;
			
		ИначеЕсли  ИмяМетода = "UploadingDataArea" Тогда
			
			СтруктураПараметров = CTSM_EfsolУниверсальныеФункцииСервер.ПарсерXML(Запрос.ПолучитьТелоКакСтроку());
			
			ПараметрыЗадания = Новый Массив;
			ПараметрыЗадания.Добавить(Число(СтруктураПараметров.Zone));
			ПараметрыЗадания.Добавить(СтруктураПараметров.Path);
			Задание = ФоновыеЗадания.Выполнить("CTSM_Efsol_Платформа.ВыгрузитьОбластьДанныхВАрхив", ПараметрыЗадания, , НСтр("ru = 'Выгрузка области данных'"));
			
			СтруктураОтвета.Вставить("Result", "");
			ФормированиеОтвета = Истина;
			
		ИначеЕсли ИмяМетода = "AddAccountIDForArea" Тогда 
			
			СтруктураПараметров = CTSM_EfsolУниверсальныеФункцииСервер.ПарсерXML(Запрос.ПолучитьТелоКакСтроку());
			CTSM_Efsol_Платформа.ДобавитьAccountIDВОбласть(СтруктураПараметров);
			ФормированиеОтвета = Истина;

			//++  Масленников Е.А. 11.12.2018 (
		ИначеЕсли ИмяМетода = "EditUserProperties" Тогда
			
			СтруктураПараметров = CTSM_EfsolУниверсальныеФункцииСервер.ПарсерXML(Запрос.ПолучитьТелоКакСтроку());
			Результат = CTSM_Efsol_Платформа.ИзменитьПараметрыПользователя(СтруктураПараметров, ТекстОшибки);
			//--  Масленников Е.А. 11.12.2018 )
			
			Если Результат = Ложь Тогда
				КодОтвета = 404;
				СтруктураОтвета.Вставить("Code", Строка(КодОтвета));
				СтруктураОтвета.Вставить("Description", "Edit user error");
				СтруктураОтвета.Вставить("DebugInfo", ""+ТекстОшибки)
			КонецЕсли;
			ФормированиеОтвета = Истина;

		Иначе	             
			КодОтвета = 404;
			СтруктураОтвета.Вставить("Code", Строка(КодОтвета));
			СтруктураОтвета.Вставить("Description", "Метод объекта не найден");
			СтруктураОтвета.Вставить("DebugInfo", "Method not found");
			ФормированиеОтвета = Истина;
		КонецЕсли;
		
	Исключение	
		КодОтвета = 400;
		СтруктураОтвета.Вставить("Code", Строка(КодОтвета));
		СтруктураОтвета.Вставить("Description", "Ошибка при выполнении метода");
		СтруктураОтвета.Вставить("DebugInfo", ОписаниеОшибки());
		ФормированиеОтвета = Истина;
	КонецПопытки;
	
	
	
	Попытка
		
		Если ФормированиеОтвета Тогда 			
			ВремяНачалаСформироватьXML = ТекущаяУниверсальнаяДатаВМиллисекундах();
			ТекстXML =  CTSM_EfsolУниверсальныеФункцииСервер.СформироватьXML(СтруктураОтвета, КодОтвета);	
			СтруктураТаймингов.Вставить("CreateXML", (ТекущаяУниверсальнаяДатаВМиллисекундах() - ВремяНачалаСформироватьXML));
			Ответ =  CTSM_EfsolУниверсальныеФункцииСервер.СформироватьHTTPСервисОтвет(ТекстXML, КодОтвета, СтруктураТаймингов, ID);
		КонецЕсли;
		
		СтруктураТаймингов.Вставить("Total", (ТекущаяУниверсальнаяДатаВМиллисекундах() - ВремяНачалаФормированияОтвета));
		//Если  СтруктураТаймингов.Total > (Константы.EFSOL_НормаВремениВыполненияЗапроса.Получить()*1000) Тогда
		//	ОтветОшибка = ?(КодОтвета = 200, "Код ответа: 200", "Код ответа: " + КодОтвета + "_DebugInfo: " + СтруктураОтвета.DebugInfo); 
		//	Efsol_Sauri.ОтправитьСообщениеООшибкеРаботыСервиса(ID, "SauriBP", ИмяМетода, "<P>Время формирования ответа: "  + Формат(СтруктураТаймингов.Total , "ЧГ=0") + "</P>",  СтруктураТаймингов, , , ОтветОшибка);
		//КонецЕсли;
		
	Исключение
		
		//ЗаписьЖурналаРегистрации("Link42ServiceGET_ошибка при отправке",,,ОписаниеОшибки());
		
	КонецПопытки;

	Возврат Ответ;
	
КонецФункции

