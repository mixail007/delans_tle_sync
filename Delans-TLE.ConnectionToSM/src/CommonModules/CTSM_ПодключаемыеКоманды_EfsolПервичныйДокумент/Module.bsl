Процедура ПриОпределенииВидовПодключаемыхКоманд(ВидыПодключаемыхКоманд) Экспорт
	
	СоздатьВидКомандыEfsolПервичныйДокумент(ВидыПодключаемыхКоманд);
		
КонецПроцедуры

Процедура ПриОпределенииКомандПодключенныхКОбъекту(НастройкиФормы, Источники, ПодключенныеОтчетыИОбработки, Команды) Экспорт
	
	ИменаДоступныхДокументов = Неопределено;
	
	Если БухгалтерияПредприятия() Тогда
		ИменаДоступныхДокументов = ИменаДокументовДляБухгалтерииПредприятия();
	ИначеЕсли УправлениеТорговлей() Тогда
		 ИменаДоступныхДокументов = ИменаДокументовДляУправленияТорговлей();
	ИначеЕсли КомплекснаяАвтоматизация() Тогда
		 ИменаДоступныхДокументов = ИменаДокументовДляУправленияТорговлей();
	ИначеЕсли УправлениеНашейФирмой() Тогда
		 ИменаДоступныхДокументов = ИменаДокументовДляУправленияНашейФирмой();
	КонецЕсли;
	
	Если Не ИменаДоступныхДокументов = Неопределено Тогда
		СоздатьКомандуEfsolПервичныйДокумент(ИменаДоступныхДокументов, Команды);
	КонецЕсли;
	
КонецПроцедуры

Процедура СоздатьВидКомандыEfsolПервичныйДокумент(ВидыПодключаемыхКоманд)
	Вид = ВидыПодключаемыхКоманд.Добавить();
	Вид.Имя = "Efsol_ПервичныйДокумент";
КонецПроцедуры

Процедура СоздатьКомандуEfsolПервичныйДокумент(ИменаДоступныхДокументов, Команды)
	
	ТипыОбъектов = Новый Массив;
	Для каждого ПолноеИмя Из ИменаДоступныхДокументов Цикл
		Менеджер = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ПолноеИмя);
		ТипыОбъектов.Добавить(ТипЗнч(Менеджер.ПустаяСсылка()));
	КонецЦикла;
	
	ТипПараметра = Новый ОписаниеТипов(ТипыОбъектов);
	
	Команда = Команды.Добавить();
	Команда.Вид = "Efsol_ПервичныйДокумент";
	Команда.Идентификатор = "Efsol_ПервичныйДокумент";
	Команда.Представление = НСтр("ru = 'Efsol: Первичный документ'");
	Команда.Важность = "Важное";
	Команда.Порядок = 50;
	Команда.ТипПараметра = ТипПараметра;
	Команда.ВидимостьВФормах = "ФормаДокументаОбщая, ФормаДокумента";
	Команда.ОтображениеКнопки = ОтображениеКнопки.Авто;
	Команда.ИзменяетВыбранныеОбъекты = Истина;
	Команда.Обработчик = "CTSM_EfsolПервичныйДокументКлиент.ПодключитьПечатнуюФорму";
	
КонецПроцедуры

Функция БухгалтерияПредприятия()
	
	ИмяКонфигурации = Метаданные.Имя;
	
	Если ИмяКонфигурации = "БухгалтерияПредприятия" Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

Функция ИменаДокументовДляБухгалтерииПредприятия()
	ИменаДоступныхДокументов = Новый Массив();
	ИменаДоступныхДокументов.Добавить("Документ.РеализацияТоваровУслуг");
	ИменаДоступныхДокументов.Добавить("Документ.ПоступлениеТоваровУслуг");
	ИменаДоступныхДокументов.Добавить("Документ.ПлатежноеПоручение");
	ИменаДоступныхДокументов.Добавить("Документ.СчетНаОплатуПоставщика");
	
	Возврат ИменаДоступныхДокументов;
КонецФункции

Функция УправлениеТорговлей()
	ИмяКонфигурации = Метаданные.Имя;
	
	Если ИмяКонфигурации = "УправлениеТорговлей" Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;

КонецФункции

Функция ИменаДокументовДляУправленияТорговлей()
	ИменаДоступныхДокументов = Новый Массив();
	ИменаДоступныхДокументов.Добавить("Документ.РеализацияТоваровУслуг");
	ИменаДоступныхДокументов.Добавить("Документ.ПриобретениеТоваровУслуг");	
	ИменаДоступныхДокументов.Добавить("Документ.ЗаказПоставщику");
	
	Возврат ИменаДоступныхДокументов;
КонецФункции

Функция КомплекснаяАвтоматизация()
	
	ИмяКонфигурации = Метаданные.Имя;
	
	Если ИмяКонфигурации = "КомплекснаяАвтоматизация" Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;

КонецФункции

Функция ИменаДокументовДляКомплекснойАвтоматизации()
	ИменаДоступныхДокументов = Новый Массив();
	ИменаДоступныхДокументов.Добавить("Документ.РеализацияТоваровУслуг");
	ИменаДоступныхДокументов.Добавить("Документ.ПоступлениеТоваровУслуг");
	ИменаДоступныхДокументов.Добавить("Документ.ЗаказПоставщику");
	
	Возврат ИменаДоступныхДокументов;
КонецФункции

Функция УправлениеНашейФирмой()
	
	ИмяКонфигурации = Метаданные.Имя;
	
	Если ИмяКонфигурации = "УправлениеНашейФирмой" Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

Функция ИменаДокументовДляУправленияНашейФирмой()
	ИменаДоступныхДокументов = Новый Массив();
	ИменаДоступныхДокументов.Добавить("Документ.ПриходнаяНакладная");
	ИменаДоступныхДокументов.Добавить("Документ.РасходнаяНакладная");
	ИменаДоступныхДокументов.Добавить("Документ.ПлатежноеПоручение");
	ИменаДоступныхДокументов.Добавить("Документ.ЗаказПоставщику");

	Возврат ИменаДоступныхДокументов;
КонецФункции
