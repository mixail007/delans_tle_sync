
&НаКлиенте
Процедура Авторизация(Команда)
	//EFSOL_Сальник К.А. 2019-05-07 {+
	
	Если ЗначениеЗаполнено(ИдентификаторКлиента) и  ЗначениеЗаполнено(СекретКлиента) Тогда
		ЧастьЗапроса = "response_type=code"+"&";
		ЧастьЗапроса = ЧастьЗапроса + "client_id="+ ИдентификаторКлиента + "&";
		ЧастьЗапроса = ЧастьЗапроса + "redirect_uri=http://localhost" + "&";
		ЧастьЗапроса = ЧастьЗапроса + "access_type=offline"+"&";
		
		ЧастьЗапроса = ЧастьЗапроса + "scope=https://www.googleapis.com/auth/drive " + 
									"https://www.googleapis.com/auth/spreadsheets " + 
									"https://www.googleapis.com/auth/drive.apps.readonly " + 
									"https://www.googleapis.com/auth/drive.file " +
									"https://www.googleapis.com/auth/drive.appdata " + 
									"https://www.googleapis.com/auth/drive.metadata " + 
									"https://www.googleapis.com/auth/drive.metadata.readonly " +
									"https://www.googleapis.com/auth/drive.photos.readonly " +
									"https://www.googleapis.com/auth/drive.readonly " + 
									"https://www.googleapis.com/auth/spreadsheets.readonly"; 
		
		АдресАвторизации = "https://accounts.google.com/o/oauth2/auth?";
		ПолныйАдресАвторизации = АдресАвторизации + ЧастьЗапроса;
	    
	    HTMLПоле = ПолныйАдресАвторизации;	
		
		Элементы.HTMLПоле.Видимость = Истина;
	ИначеЕсли не ЗначениеЗаполнено(ИдентификаторКлиента) Тогда
		Сообщить("Введите идентификатор клиента для вашего Google проекта.");
	ИначеЕсли не ЗначениеЗаполнено(СекретКлиента) Тогда
		Сообщить("Введите секретный ключ клиента для вашего Google проекта.");
	КонецЕсли;
	//EFSOL_Сальник К.А.  -}

КонецПроцедуры

&НаКлиенте
Процедура HTMLПолеДокументСформирован(Элемент)
	//EFSOL_Сальник К.А. 2019-05-07 {+
		
	ПоискВхождения = СтрНайти(Элементы.HTMLПоле.Документ.URLUnencoded, "http://localhost/?code=");
	
	Если ПоискВхождения = 0 Тогда 
		Возврат;
	КонецЕсли;	
	
	КодДоступа_ = Сред(Элементы.HTMLПоле.Документ.URLUnencoded, ПоискВхождения + 23);
	ПоискВхождения2 = СтрНайти(КодДоступа_, "&"); 
	Если  ПоискВхождения2 <> 0 Тогда 
		КодДоступа_ = Сред(КодДоступа_, 1, ПоискВхождения2 - 1);
	КонецЕсли;
	КодДоступа = КодДоступа_;
	
	Если ПолучитьТокены() Тогда
		Элементы.HTMLПоле.Видимость = Ложь;
		Сообщить("Не удалось получить токен доступа.");
		Возврат;
	КонецЕсли;	
	
	Элементы.HTMLПоле.Видимость = Ложь;	
	СохранитьПараметрыПодключенияGoogleDriveНаСервере();
	//EFSOL_Сальник К.А.  -}
	
КонецПроцедуры

&НаСервере
Процедура СохранитьПараметрыПодключенияGoogleDriveНаСервере()
	
	ПараметрыПодключенияGoogleDrive = Новый Структура;
	ПараметрыПодключенияGoogleDrive.Вставить("ИдентификаторКлиента", ИдентификаторКлиента);
	ПараметрыПодключенияGoogleDrive.Вставить("СекретКлиента", СекретКлиента);
	ПараметрыПодключенияGoogleDrive.Вставить("КодДоступа", КодДоступа);
	ПараметрыПодключенияGoogleDrive.Вставить("ТокенДоступа", ТокенДоступа);
	ПараметрыПодключенияGoogleDrive.Вставить("ТокенОбновления", ТокенОбновления);
	ПараметрыПодключенияGoogleDrive.Вставить("ВремяЖизниТокена", ВремяЖизниТокена);

	Обработки.ES_НастройкаGoogleDrive.СохранитьПараметрыПодключенияGoogleDrive(ПараметрыПодключенияGoogleDrive);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТокены()
	//EFSOL_Сальник К.А. 2019-05-07 {+
	
	СтрокаЗапроса = СтрШаблон("client_id=%1&client_secret=%2&grant_type=authorization_code&code=%3&redirect_uri=http://localhost", 
		ИдентификаторКлиента,
		СекретКлиента,
		КодДоступа);
		
	Соединение = Новый HTTPСоединение("accounts.google.com",443,,,,,Новый ЗащищенноеСоединениеOpenSSL);

	Заголовки  = Новый Соответствие;
	Заголовки.Вставить("Content-Type","application/x-www-form-urlencoded");
	
	ЗапросХТТП = Новый HTTPЗапрос("/o/oauth2/token",Заголовки);
	ЗапросХТТП.УстановитьТелоИзСтроки(СтрокаЗапроса);

	Ответ = Соединение.ВызватьHTTPМетод("POST",ЗапросХТТП);
	
	Если Не Ответ.КодСостояния = 200 Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрШаблон("Ошибка получения параметров авторизации: %1", Ответ.ПолучитьТелоКакСтроку()));		
		Возврат Истина; 
	КонецЕсли;

	Строка = Ответ.ПолучитьТелоКакСтроку();
	
	Чтение = Новый ЧтениеJSON();
	Чтение.УстановитьСтроку(Строка);

	Фабрика = ФабрикаXDTO.ПрочитатьJSON(Чтение);
	
    Чтение.Закрыть();
	
    ТокенДоступа 	= Фабрика.access_token;
	ТокенОбновления 	= Фабрика.refresh_token;	
	ВремяЖизниТокена = ТекущаяДата() + Число(Фабрика.expires_in) - 25; //так как есть небольшая задержка между проверкой и работой с google	
	
	Возврат Ложь;
	//EFSOL_Сальник К.А.  -}
	
КонецФункции

&НаСервере
Процедура ЗаполнитьПараметрыПодключенияGoogleDrive()
	//EFSOL_Сальник К.А. 2019-05-08 {+
	
	ПараметрыПодключенияGoogleDrive = Обработки.ES_НастройкаGoogleDrive.ПолучитьПараметрыПодключенияGoogleDrive();
	
	Если ПараметрыПодключенияGoogleDrive = Неопределено Тогда
		Возврат;
	Иначе
		ИдентификаторКлиента = ПараметрыПодключенияGoogleDrive.ИдентификаторКлиента;
	    СекретКлиента = ПараметрыПодключенияGoogleDrive.СекретКлиента;
	    КодДоступа = ПараметрыПодключенияGoogleDrive.КодДоступа;
		ТокенДоступа = ПараметрыПодключенияGoogleDrive.ТокенДоступа;
		ТокенОбновления = ПараметрыПодключенияGoogleDrive.ТокенОбновления;
		ВремяЖизниТокена = ПараметрыПодключенияGoogleDrive.ВремяЖизниТокена;
	КонецЕсли;
	//EFSOL_Сальник К.А.  -}

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//EFSOL_Сальник К.А. 2019-05-08 {+
	
	ЗаполнитьПараметрыПодключенияGoogleDrive();
	//EFSOL_Сальник К.А.  -}
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТокенДоступа(Команда)
	//EFSOL_Сальник К.А. 2019-05-07 {+
	
	ОбновитьТокенДоступаНаСервере();
	//EFSOL_Сальник К.А.  -}

КонецПроцедуры

&НаСервере
Процедура ОбновитьТокенДоступаНаСервере()
	//EFSOL_Сальник К.А. 2019-05-08 {+
		
	ПараметрыПодключенияGoogleDrive = Обработки.ES_НастройкаGoogleDrive.ПолучитьПараметрыПодключенияGoogleDrive();
	
	Если ПараметрыПодключенияGoogleDrive = Неопределено Тогда
		 Сообщить("Выполните авторизацию.");
	ИначеЕсли ЗначениеЗаполнено(ПараметрыПодключенияGoogleDrive.ВремяЖизниТокена) и ТекущаяДата() <= ПараметрыПодключенияGoogleDrive.ВремяЖизниТокена и ЗначениеЗаполнено(ПараметрыПодключенияGoogleDrive.ТокенДоступа) Тогда
		Сообщить("Токен доступа актуален.");
		Возврат;
	ИначеЕсли ЗначениеЗаполнено(ПараметрыПодключенияGoogleDrive.ИдентификаторКлиента) и  ЗначениеЗаполнено(ПараметрыПодключенияGoogleDrive.СекретКлиента) и ЗначениеЗаполнено(ПараметрыПодключенияGoogleDrive.ТокенОбновления) Тогда
		Если Обработки.ES_НастройкаGoogleDrive.ОбновитьТокенДоступа() Тогда
			ЗаполнитьПараметрыПодключенияGoogleDrive();
		Иначе
			Сообщить("Выполните авторизацию.");
		КонецЕсли;
	Иначе
		Сообщить("Выполните авторизацию.");
	КонецЕсли;
	//EFSOL_Сальник К.А.  -}
	
КонецПроцедуры

	



