
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ServiceAPI

Функция ИдентификаторПечатнойФормы(ЧастичнаяОплата = Ложь, ИспользоватьФаксимиле = Ложь) Экспорт
	
	Возврат ?(ЧастичнаяОплата, "СчетНаЧастичнуюОплату", "СчетНаОплату") + ?(ИспользоватьФаксимиле, "Факсимиле", "");
	
КонецФункции

Функция ПредставлениеПФ(ЧастичнаяОплата = Ложь, ИспользоватьФаксимиле = Ложь) Экспорт
	
	ПредставлениеПФ = НСтр("ru ='Счет на оплату'");
	
	ДополнительноеПредставление = "";
	Если ЧастичнаяОплата Тогда
		
		ДополнительноеПредставление = НСтр("ru ='частичная'");
		
	КонецЕсли;
	
	Если ИспользоватьФаксимиле Тогда
		
		ДополнительноеПредставление = ДополнительноеПредставление + ?(ПустаяСтрока(ДополнительноеПредставление), "", ", ") + НСтр("ru ='факсимиле'");
		
	КонецЕсли;
	
	Если ЧастичнаяОплата
		ИЛИ ИспользоватьФаксимиле Тогда
		
		ДополнительноеПредставление = НСтр("ru =' ('") + ДополнительноеПредставление + НСтр("ru =')'");
		
	КонецЕсли;
	
	Возврат ПредставлениеПФ + ДополнительноеПредставление;
	
КонецФункции

Функция МатрицаВозможныхВариантов() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"Выбрать Ложь ЧастичнаяОплата, Ложь ИспользоватьФаксимиле
	|Объединить
	|Выбрать Ложь, Истина
	|Объединить
	|Выбрать Истина, Ложь
	|Объединить
	|Выбрать Истина, Истина";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция КлючПараметровПечати() Экспорт
	
	Возврат "ПАРАМЕТРЫ_ПЕЧАТИ_Универсальные_СчетНаОплату";
	
КонецФункции

Функция ПолныйПутьКМакету() Экспорт
	
	Возврат "Обработка.ПечатьСчетНаОплату.ПФ_MXL_СчетНаОплату";
	
КонецФункции

Функция СформироватьПФ(ОписаниеПечатнойФормы, ДанныеОбъектовПечати, ОбъектыПечати, ВывестиПланОплаты) Экспорт
	Перем Ошибки, ПервыйДокумент, НомерСтрокиНачало;
	
	Макет				= УправлениеПечатью.МакетПечатнойФормы(ОписаниеПечатнойФормы.ПолныйПутьКМакету);
	ТабличныйДокумент	= ОписаниеПечатнойФормы.ТабличныйДокумент;
	ДанныеПечати		= Новый Структура;
	ЕстьТЧЗапасы		= (ДанныеОбъектовПечати.Колонки.Найти("ТаблицаЗапасы") <> Неопределено);
	ЕстьТЧРаботыУслуги	= (ДанныеОбъектовПечати.Колонки.Найти("ТаблицаРаботыУслуги") <> Неопределено);
	ЕстьТЧПланОплаты	= (ДанныеОбъектовПечати.Колонки.Найти("ТаблицаПланаОплат") <> Неопределено);
	ПредставлениеСкидки = Константы.ПредставлениеСкидкиВПечатнойФорме.Получить();
	ШаблонСообщенийВариантов = НСтр("ru='Печатная форма ""%1"" (%2) не может быть сформирована: не выбран основной вариант.'");
	ОбластиМакета		= Новый Структура;
	
	ТаблицаОписанияОбластей = ШаблонТаблицыОписанияОбластейЛоготипа();
	
	Для каждого ДанныеОбъекта Из ДанныеОбъектовПечати Цикл
		
		Если ТипЗнч(ДанныеОбъекта.Ссылка) = Тип("ДокументСсылка.ЗаказПокупателя")
			И ДанныеОбъекта.ОжидаетсяВыборВариантаКП Тогда
			
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон(ШаблонСообщенийВариантов, ОписаниеПечатнойФормы.СинонимМакета, ДанныеОбъекта.Ссылка), ДанныеОбъекта.Ссылка);
			Продолжить;
			
		КонецЕсли;
		
		ПечатьДокументовУНФ.ПередНачаломФормированияДокумента(ТабличныйДокумент, ПервыйДокумент, НомерСтрокиНачало, ДанныеПечати);
		
		СведенияОбОрганизации = УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(ДанныеОбъекта.Организация, ДанныеОбъекта.ДатаДокумента, ,ДанныеОбъекта.БанковскийСчет);
		СведенияОбКонтрагенте = УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(ДанныеОбъекта.Контрагент, ДанныеОбъекта.ДатаДокумента, ,);
		
		//:::Логотип, реквизиты
		ДобавитьОписаниеОбластиЛоготипа(ТаблицаОписанияОбластей, Макет, "ЗаглавиеСЛоготипом", Истина, Истина, 1);
		ДобавитьОписаниеОбластиЛоготипа(ТаблицаОписанияОбластей, Макет, "ЗаглавиеБезЛоготипа", Ложь, Истина, 2);
		ДобавитьОписаниеОбластиЛоготипа(ТаблицаОписанияОбластей, Макет, "ЗаголовокСчетаСЛоготипом", Истина, Ложь, 3);
		ДобавитьОписаниеОбластиЛоготипа(ТаблицаОписанияОбластей, Макет, "ЗаголовокСчета", Ложь, Ложь, 4);
		
		СтрокаСвойствОбластиМакета = ЗаполнитьОбластьЗаголовкаСчетовЗаказовИРазместитьЛоготип(ДанныеОбъекта, ТаблицаОписанияОбластей, Ошибки);
		Если СтрокаСвойствОбластиМакета <> Неопределено Тогда
			
			Если ЗначениеЗаполнено(СведенияОбОрганизации.Банк) Тогда
				
				ДанныеПечати.Вставить("БанкПолучателяПредставление", СведенияОбОрганизации.Банк.Наименование + " " + СведенияОбОрганизации.Банк.Город);
				
			КонецЕсли; 
			
			ДанныеПечати.Вставить("ИНН", СведенияОбОрганизации.ИНН);
			ДанныеПечати.Вставить("КПП", СведенияОбОрганизации.КПП);
			
			ПредставлениеПоставщика = ?(ПустаяСтрока(СведенияОбОрганизации.ТекстКорреспондента), СведенияОбОрганизации.ПолноеНаименование, СведенияОбОрганизации.ТекстКорреспондента);
			ДанныеПечати.Вставить("ПредставлениеПоставщика", ПредставлениеПоставщика);
			ДанныеПечати.Вставить("БИКБанкаПолучателя", СведенияОбОрганизации.БИК);
			ДанныеПечати.Вставить("СчетБанкаПолучателяПредставление", СведенияОбОрганизации.КоррСчет);
			ДанныеПечати.Вставить("СчетПолучателяПредставление", СведенияОбОрганизации.НомерСчета);
			
			СтрокаСвойствОбластиМакета.ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(СтрокаСвойствОбластиМакета.ОбластьМакета);
			
		КонецЕсли;
		
		//:::Заголовок
		НомерДокумента = ПечатьДокументовУНФ.ПолучитьНомерНаПечатьСУчетомДатыДокумента(ДанныеОбъекта.ДатаДокумента, ДанныеОбъекта.Номер, ДанныеОбъекта.Префикс);
		ПредставлениеДокумента = НСтр("ru ='Счет на оплату № '") + НомерДокумента + " от " + Формат(ДанныеОбъекта.ДатаДокумента, "ДЛФ=DD");
		
		ОбластьМакета = ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "Заголовок", "", Ошибки);
		Если ОбластьМакета <> Неопределено Тогда
			
			ДанныеПечати.Вставить("ПредставлениеДокумента", ПредставлениеДокумента);
			ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЕсли;
		
		//:::Поставщик
		ОбластьМакета = ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "Поставщик", "", Ошибки);
		Если ОбластьМакета <> Неопределено Тогда
			
			ДанныеПечати.Вставить("ПредставлениеПоставщика", УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,"));
			ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЕсли;
		
		//:::Покупатель
		ОбластьМакета = ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "Покупатель", "", Ошибки);
		Если ОбластьМакета <> Неопределено Тогда
			
			ДанныеПечати.Вставить("ПредставлениеПолучателя", УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОбКонтрагенте, "ПолноеНаименование,ИНН,КПП,РегистрационныйНомер,ЮридическийАдрес,Телефоны,"));
			ДанныеПечати.Вставить("ОснованиеПечати", ДанныеОбъекта.ОснованиеПечати);
			
			ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЕсли;
		
		//:::Шапка таблицы
		ОбластиМакета.Очистить();
		ОбластиМакета.Вставить("НомерСтраницы", ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "НомерСтраницы", НСтр("ru ='Номер страницы'"), Ошибки));
		
		СкидкаПоЗапасам = 0;
		Если ЕстьТЧЗапасы Тогда
			
			СкидкаПоЗапасам = ДанныеОбъекта.ТаблицаЗапасы.Итог("ЕстьСкидка");
			
		КонецЕсли;
		
		СкидкаПоРаботам = 0;
		Если ЕстьТЧРаботыУслуги Тогда
			
			СкидкаПоРаботам = ДанныеОбъекта.ТаблицаРаботыУслуги.Итог("ЕстьСкидка");
			
		КонецЕсли;
		
		ЕстьСкидки = ((СкидкаПоЗапасам + СкидкаПоРаботам) <> 0);
		
		ИмяОбласти = ?(ЕстьСкидки, "ШапкаТаблицыСоСкидкой", "ШапкаТаблицы");
		ОбластиМакета.Вставить("ОбластьМакетаЗаголовокТаблицы", ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, ИмяОбласти, "", Ошибки));
		Если ОбластиМакета.ОбластьМакетаЗаголовокТаблицы <> Неопределено Тогда
			
			ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьМакетаЗаголовокТаблицы);
			
		КонецЕсли;
		
		//:::Табличные части
		ОбластиМакета.Вставить("ОбластьМакетаИтогоПоСтранице",		ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "ИтогоПоСтранице", НСтр("ru ='Итоги по странице'"), Ошибки));
		ОбластиМакета.Вставить("ОбластьМакетаИтогоПоДокументу",		ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "Итого", "", Ошибки));
		ОбластиМакета.Вставить("ОбластьМакетаИтогоНДС_ЧО",			ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "ИтогоНДСЧастичнаяОплата", НСтр("ru ='Итого НДС по частичной оплате'"), Ошибки));
		ОбластиМакета.Вставить("ОбластьМакетаИтогоСкидка",			ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "ИтогоСкидка", "", Ошибки));
		ОбластиМакета.Вставить("ОбластьМакетаИтогоКОплате",			ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "ИтогоКОплате", НСтр("ru ='Итого к оплате'"), Ошибки));
		ОбластиМакета.Вставить("ОбластьМакетаИтогоКОплатеСВесом",	ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "ИтогоКОплатеСВесом", НСтр("ru ='Итого к оплате и вес'"), Ошибки));
		ОбластиМакета.Вставить("ОбластьМакетаСуммаПрописью",		ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "СуммаПрописью", НСтр("ru ='Сумма прописью'"), Ошибки));
		ОбластиМакета.Вставить("ОбластьМакетаУсловия",				ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "ДополнительныеУсловия", , Ошибки));
		
		ШаблонИмени 					= "Подписи%1%2";
		ПредставлениеПредприниматель	= ?(ДанныеОбъекта.ОрганизацияЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо, "Предпринимателя", "");
		ПредставлениеФаксимиле			= ?(ДанныеОбъекта.ИспользоватьФаксимиле = Перечисления.ДаНет.Да, "СФаксимиле", "БезФаксимиле");
		
		ИмяОбласти = СтрШаблон(ШаблонИмени, ПредставлениеПредприниматель, ПредставлениеФаксимиле);
		ОбластиМакета.Вставить("ОбластьМакетаПодпись", ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, ИмяОбласти, , Ошибки));
		
		ИмяОбласти = ?(ЕстьСкидки, "СтрокаСоСкидкой", "Строка");
		ОбластиМакета.Вставить("ОбластьМакетаСтрока", ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, ИмяОбласти, "", Ошибки));
		
		ИмяОбласти = ?(ЕстьСкидки, "СтрокаСоСкидкойГруппировка", "СтрокаГруппировка");
		ОбластиМакета.Вставить("ОбластьМакетаРазделитель", ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, ИмяОбласти, "", Ошибки));
		
		ОбластиМакета.Вставить("ОбластьМакетаОтветственныйЗаОформлениеДокумета", ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "Ответственный", "", Ошибки));
		
		СтруктураИтогов = Новый Структура;
		СтруктураИтогов.Вставить("НомерСтраницы",		1);
		СтруктураИтогов.Вставить("Сумма",				0);
		СтруктураИтогов.Вставить("СуммаНаСтранице",		0);
		СтруктураИтогов.Вставить("СуммаНДС",			0);
		СтруктураИтогов.Вставить("Всего",				0);
		СтруктураИтогов.Вставить("Количество",			0);
		СтруктураИтогов.Вставить("КоличествоНаСтранице",0);
		СтруктураИтогов.Вставить("НомерСтроки",			0);
		СтруктураИтогов.Вставить("Вес",					0);
		СтруктураИтогов.Вставить("СкидкаПоСтроке",		0);
		СтруктураИтогов.Вставить("СкидкаПоДокументу",	0);
		СтруктураИтогов.Вставить("ОбработаноСтрок",		0);
		СтруктураИтогов.Вставить("КоличествоСтрок",		0);
		СтруктураИтогов.Вставить("ЕстьСкидки", 			ЕстьСкидки);
		СтруктураИтогов.Вставить("ЕстьСтавкаНольПроцентов", Ложь);
		СтруктураИтогов.Вставить("ВывестиСекциюЧастичнаяОплата", (ВывестиПланОплаты И ЕстьТЧПланОплаты));
		СтруктураИтогов.Вставить("ПредставлениеСкидки", ПредставлениеСкидки);
		СтруктураИтогов.Вставить("КоличествоСтрокВОписанииУсловий", 0);
		СтруктураИтогов.Вставить("ПредставлениеДокумента", ПредставлениеДокумента);
		
		СтруктураИтогов.КоличествоСтрок = КоличествоСтрокКВыводуНаПечать(ДанныеОбъекта, ЕстьТЧРаботыУслуги, ЕстьТЧЗапасы);
		
		ТекстДополнительныхУсловий = "";
		Если ЗначениеЗаполнено(ДанныеОбъекта.ДополнительныеУсловия) Тогда
			
			ТекстДополнительныхУсловий = ДанныеОбъекта.ДополнительныеУсловия.ТекстУсловий;
			СтруктураИтогов.КоличествоСтрокВОписанииУсловий = СтрЧислоСтрок(ТекстДополнительныхУсловий);
			
		КонецЕсли;
		
		Если ОбластиМакета.ОбластьМакетаСтрока <> Неопределено Тогда
			
			ПараметрыНоменклатуры = Новый Структура;
			
			Если ЕстьТЧРаботыУслуги Тогда
				
				Для каждого СтрокаРаботыУслуги Из ДанныеОбъекта.ТаблицаРаботыУслуги Цикл
					
					СтруктураИтогов.ОбработаноСтрок = СтруктураИтогов.ОбработаноСтрок + 1;
					
					Если СтрокаРаботыУслуги.ЭтоРазделитель
						И ОбластиМакета.ОбластьМакетаРазделитель = Неопределено Тогда
						
						Продолжить;
						
					КонецЕсли;
					
					Если СтруктураИтогов.НомерСтроки <> 0 
						И СтрокаКорректноРазмещаетсяНаСтранице(ТабличныйДокумент, ОбластиМакета, СтруктураИтогов) = Ложь Тогда
						
						ДобавитьНовуюСтраницуДокумента(ТабличныйДокумент, ОбластиМакета, СтруктураИтогов);
						
					КонецЕсли;
					
					ЗаполнитьДанныеПечатиПоСтрокеТабличнойЧасти(СтрокаРаботыУслуги, ДанныеПечати, ПараметрыНоменклатуры, СтруктураИтогов);
					
					ОбластьМакетаСтроки = ?(СтрокаРаботыУслуги.ЭтоРазделитель, ОбластиМакета.ОбластьМакетаРазделитель, ОбластиМакета.ОбластьМакетаСтрока);
					ОбластьМакетаСтроки.Параметры.Заполнить(ДанныеПечати);
					ТабличныйДокумент.Вывести(ОбластьМакетаСтроки);
					
					НаборыСервер.УчестьОформлениеСтрокиНабора(ТабличныйДокумент, ОбластьМакетаСтроки, СтрокаРаботыУслуги);
					
				КонецЦикла;
				
			КонецЕсли;
			
			Если ЕстьТЧЗапасы Тогда
				
				Для каждого СтрокаЗапасы Из ДанныеОбъекта.ТаблицаЗапасы Цикл
					
					СтруктураИтогов.ОбработаноСтрок = СтруктураИтогов.ОбработаноСтрок + 1;
					
					Если СтрокаЗапасы.ЭтоРазделитель
						И ОбластиМакета.ОбластьМакетаРазделитель = Неопределено Тогда
						
						Продолжить;
						
					КонецЕсли;
					
					Если СтруктураИтогов.НомерСтроки <> 0 
						И СтрокаКорректноРазмещаетсяНаСтранице(ТабличныйДокумент, ОбластиМакета, СтруктураИтогов) = Ложь Тогда
						
						ДобавитьНовуюСтраницуДокумента(ТабличныйДокумент, ОбластиМакета, СтруктураИтогов);
						
					КонецЕсли;
					
					ЗаполнитьДанныеПечатиПоСтрокеТабличнойЧасти(СтрокаЗапасы, ДанныеПечати, ПараметрыНоменклатуры, СтруктураИтогов);
					
					ОбластьМакетаСтроки = ?(СтрокаЗапасы.ЭтоРазделитель, ОбластиМакета.ОбластьМакетаРазделитель, ОбластиМакета.ОбластьМакетаСтрока);
					ОбластьМакетаСтроки.Параметры.Заполнить(ДанныеПечати);
					ТабличныйДокумент.Вывести(ОбластьМакетаСтроки);
					
					НаборыСервер.УчестьОформлениеСтрокиНабора(ТабличныйДокумент, ОбластьМакетаСтроки, СтрокаЗапасы);
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЕсли;
		
		//:::Итоги по посл. странице
		Если ОбластиМакета.ОбластьМакетаИтогоПоСтранице <> Неопределено Тогда
			
			ОбластиМакета.ОбластьМакетаИтогоПоСтранице.Параметры.Заполнить(СтруктураИтогов);
			ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьМакетаИтогоПоСтранице);
			
		КонецЕсли;
		
		//:::Итоги по документу
		Если ОбластиМакета.ОбластьМакетаИтогоПоДокументу <> Неопределено Тогда
			
			ДанныеПечати.Вставить("Всего", УправлениеНебольшойФирмойСервер.ФорматСумм(СтруктураИтогов.Сумма));
			ДанныеПечати.Вставить("ЗаголовокНДС", ПечатьДокументовУНФ.ПредставлениеЗаголовкаНДС(СтруктураИтогов.СуммаНДС, ДанныеОбъекта.СуммаВключаетНДС, Ложь, СтруктураИтогов.ЕстьСтавкаНольПроцентов));
			ДанныеПечати.Вставить("ВсегоНДС", ?(СтруктураИтогов.СуммаНДС = 0 И НЕ СтруктураИтогов.ЕстьСтавкаНольПроцентов, "-", УправлениеНебольшойФирмойСервер.ФорматСумм(СтруктураИтогов.СуммаНДС,,"0,00")));
			
			ОбластиМакета.ОбластьМакетаИтогоПоДокументу.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьМакетаИтогоПоДокументу);
			
		КонецЕсли;
		
		//:::Частичная оплата
		Если СтруктураИтогов.ВывестиСекциюЧастичнаяОплата Тогда
			
			Если ОбластиМакета.ОбластьМакетаИтогоНДС_ЧО <> Неопределено Тогда
				
				ДанныеПечати.Вставить("НДСкОплате", ПечатьДокументовУНФ.ПредставлениеЗаголовкаНДС(СтруктураИтогов.СуммаНДС, ДанныеОбъекта.СуммаВключаетНДС, Истина));
				
				Если ДанныеОбъекта.ТаблицаПланаОплат.Итог("ПроцентОплаты") > 0 Тогда
					
					ДанныеПечати.Вставить("ПроцентОплаты", ДанныеОбъекта.ТаблицаПланаОплат.Итог("ПроцентОплаты"));
					ДанныеПечати.Вставить("ВсегоКОплате", УправлениеНебольшойФирмойСервер.ФорматСумм(ДанныеОбъекта.ТаблицаПланаОплат.Итог("СуммаОплаты")));
					ДанныеПечати.Вставить("ВсегоНДСкОплате", УправлениеНебольшойФирмойСервер.ФорматСумм(ДанныеОбъекта.ТаблицаПланаОплат.Итог("СуммаНДСОплаты")));
					
				Иначе
					
					СтрокаПрочерк = НСтр("ru ='-'");
					ДанныеПечати.Вставить("ВсегоКОплате", СтрокаПрочерк);
					ДанныеПечати.Вставить("ПроцентОплаты", СтрокаПрочерк);
					ДанныеПечати.Вставить("ВсегоНДСкОплате", СтрокаПрочерк);
					
				КонецЕсли;
				
				ОбластиМакета.ОбластьМакетаИтогоНДС_ЧО.Параметры.Заполнить(ДанныеПечати);
				ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьМакетаИтогоНДС_ЧО);
				
			КонецЕсли;
			
		КонецЕсли;
		
		//::: Итоговая скидка по документу
		Если СтруктураИтогов.ЕстьСкидки Тогда
			
			Если ОбластиМакета.ОбластьМакетаИтогоСкидка <> Неопределено Тогда
				
				ОбластиМакета.ОбластьМакетаИтогоСкидка.Параметры.Заполнить(СтруктураИтогов);
				ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьМакетаИтогоСкидка);
				
			КонецЕсли;
			
		КонецЕсли;
		
		//::: Всего к оплате
		ЗаголовокВсегоКОплате = НСтр("ru ='Всего к оплате'") + ?(СтруктураИтогов.ЕстьСкидки, НСтр("ru =' (с учетом скидки):'"), ":");
		ДанныеПечати.Вставить("ЗаголовокВсегоКОплате", ЗаголовокВсегоКОплате);
		ДанныеПечати.Вставить("ИтогоКОплате", УправлениеНебольшойФирмойСервер.ФорматСумм(СтруктураИтогов.Всего));
		
		ВесПоДокументу = ?(ДанныеОбъектовПечати.Колонки.Найти("Вес") <> Неопределено, ДанныеОбъекта.Вес, 0);
		ДанныеПечати.Вставить("ИтогоВес", ?(СтруктураИтогов.Вес <> 0, СтруктураИтогов.Вес, ВесПоДокументу));
		
		ОбластьМакетаИтогоКОплате = ?(ДанныеПечати.ИтогоВес <> 0, ОбластиМакета.ОбластьМакетаИтогоКОплатеСВесом, ОбластиМакета.ОбластьМакетаИтогоКОплате);
		Если ОбластьМакетаИтогоКОплате <> Неопределено Тогда
			
			ОбластьМакетаИтогоКОплате.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьМакетаИтогоКОплате);
			
		КонецЕсли;
		
		//::: Сумма прописью
		Если ОбластиМакета.ОбластьМакетаСуммаПрописью <> Неопределено Тогда
			
			ИтоговаяСтрока = НСтр("ru ='Всего наименований %1, на сумму %2'");
			ФорматированнаяСумма = УправлениеНебольшойФирмойСервер.ФорматСумм(СтруктураИтогов.Всего, ДанныеОбъекта.ВалютаДокумента);
			
			ДанныеПечати.Вставить("ИтоговаяСтрока", СтрШаблон(ИтоговаяСтрока, СтруктураИтогов.Количество, ФорматированнаяСумма));
			ДанныеПечати.Вставить("СуммаПрописью", РаботаСКурсамиВалют.СформироватьСуммуПрописью(СтруктураИтогов.Всего, ДанныеОбъекта.ВалютаДокумента));
			
			ОбластиМакета.ОбластьМакетаСуммаПрописью.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьМакетаСуммаПрописью);
			
		КонецЕсли;
		
		//:::Дополнительные условия
		Если НЕ ПустаяСтрока(ТекстДополнительныхУсловий)
			И ОбластиМакета.ОбластьМакетаУсловия <> Неопределено Тогда
			
			ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьМакетаУсловия);
			
			Для СчетчикСтрок = 1 По СтруктураИтогов.КоличествоСтрокВОписанииУсловий Цикл
				
				ДанныеПечати.Вставить("ТекстДополнительныхУсловий", СтрПолучитьСтроку(ТекстДополнительныхУсловий, СчетчикСтрок));
				
				ОбластиМакета.ОбластьМакетаУсловия.Параметры.Заполнить(ДанныеПечати);
				ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьМакетаУсловия);
				
			КонецЦикла;
			
		КонецЕсли;
		
		//:::Подписи
		Если ОбластиМакета.ОбластьМакетаПодпись <> Неопределено Тогда
			
			ОбластиМакета.ОбластьМакетаПодпись.Параметры.Заполнить(ДанныеОбъекта);
			
			Если ДанныеОбъекта.ИспользоватьФаксимиле = Перечисления.ДаНет.Да Тогда
				
				ПодписиИФаксимиле = Новый Соответствие; // Ключ - имя каринки в области, Значение - имя реквизита
				ПодписиИФаксимиле.Вставить("ПодписьРуководителя", "ФаксимилеРуководителя");
				ПодписиИФаксимиле.Вставить("ПодписьПредпринимателя", "ФаксимилеРуководителя");
				ПодписиИФаксимиле.Вставить("ПодписьГлавногоБухгалтера", "ФаксимилеГлавногоБухгалтера");
				ПодписиИФаксимиле.Вставить("ПечатьОрганизации", "ФаксимилеПечати");
				ПодписиИФаксимиле.Вставить("ПечатьПредпринимателя", "ФаксимилеПечати");
				
				ПодписьДокументовУНФ.ЗаполнитьФаксимилеВОбластиМакета(ОбластиМакета.ОбластьМакетаПодпись, ДанныеОбъекта, ПодписиИФаксимиле, Ошибки);
				
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьМакетаПодпись);
			
		Иначе
			
			ТекстСообщения = НСтр("ru = 'Изменился типовой макет печатной формы Счет на оплату. Для корректной
				|работы печатной формы необходимо обновить отредактированный ранее макет. 
				|Это можно выполнить самостоятельно в разделе ""Компания - Администрирование - Печатные формы,
				|отчеты, обработки - Макеты печатных форм"" или обратиться к специалисту обслуживающей организации.'");
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			
		КонецЕсли;
		
		//:::Ответственный
		Если ОбластиМакета.ОбластьМакетаОтветственныйЗаОформлениеДокумета <> Неопределено Тогда
			
			ТелефонОтветственного = "";
			ЭлектронкаОтветственного = "";
			Если ЗначениеЗаполнено(ДанныеОбъекта.ФизическоеЛицоОтветсвенного) Тогда
				
				ТелефонОтветственного = УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформацииОбъекта(ДанныеОбъекта.ФизическоеЛицоОтветсвенного, Справочники.ВидыКонтактнойИнформации.ТелефонФизЛица);
				ЭлектронкаОтветственного = УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформацииОбъекта(ДанныеОбъекта.ФизическоеЛицоОтветсвенного, Справочники.ВидыКонтактнойИнформации.EmailФизическиеЛица);
				
			КонецЕсли;
			
			ОтветственныйЗаОформлениеДокумета = Строка(ДанныеОбъекта.Ответственный) + ?(ПустаяСтрока(ТелефонОтветственного), "", НСтр("ru =', тел.:'")) + ТелефонОтветственного + ?(ПустаяСтрока(ЭлектронкаОтветственного), "", НСтр("ru =', e-mail:'")) + ЭлектронкаОтветственного;
			ДанныеПечати.Вставить("ОтветственныйЗаОформлениеДокумета", ОтветственныйЗаОформлениеДокумета);
			
			ОбластиМакета.ОбластьМакетаОтветственныйЗаОформлениеДокумета.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьМакетаОтветственныйЗаОформлениеДокумета);
			
		Иначе
			
			ТекстСообщения = НСтр("ru = 'Изменился типовой макет печатной формы Счет на оплату. Для корректной
				|работы печатной формы необходимо обновить отредактированный ранее макет. 
				|Это можно выполнить самостоятельно в разделе ""Компания - Администрирование - Печатные формы,
				|отчеты, обработки - Макеты печатных форм"" или обратиться к специалисту обслуживающей организации.'");
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			
		КонецЕсли;
		
		ТекущаяОбластьПечати = Неопределено;
		Если ВывестиПланОплаты Тогда
			
			ОписаниеОбъектаПечати = ОбъектыПечати.НайтиПоЗначению(ДанныеОбъекта.Ссылка);
			Если ОписаниеОбъектаПечати <> Неопределено Тогда
				
				ТекущаяОбластьПечати = ТабличныйДокумент.Области.Найти(ОписаниеОбъектаПечати.Представление);
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если ТекущаяОбластьПечати = Неопределено Тогда
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеОбъекта.Ссылка);
			
		Иначе
			
			ПрисоединитьКОбластиПечатиДокумента(ТабличныйДокумент, ТекущаяОбластьПечати, ОписаниеОбъектаПечати);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецОбласти

Функция ШаблонТаблицыОписанияОбластейЛоготипа() Экспорт
	
	ТаблицаОписанияОбластей = Новый ТаблицаЗначений;
	ТаблицаОписанияОбластей.Колонки.Добавить("ОбластьМакета");
	ТаблицаОписанияОбластей.Колонки.Добавить("СодержитЛоготип", , Новый ОписаниеТипов("Булево"));
	ТаблицаОписанияОбластей.Колонки.Добавить("Устарела", , Новый ОписаниеТипов("Булево"));
	ТаблицаОписанияОбластей.Колонки.Добавить("Приоритет", , Новый ОписаниеТипов("Число"));
	
	Возврат ТаблицаОписанияОбластей;
	
КонецФункции

Функция ДобавитьОписаниеОбластиЛоготипа(ТаблицаОписанияОбластей, Макет, ИмяОбласти, СодержитЛоготип, Устаревшая, Приоритет)
	
	СтрокаТаблицы = ТаблицаОписанияОбластей.Добавить();
	
	ОбластьМакета = Неопределено;
	Если Макет.Области.Найти(ИмяОбласти) <> Неопределено Тогда
		
		ОбластьМакета = Макет.ПолучитьОбласть(ИмяОбласти);
		
	КонецЕсли;
	
	СтрокаТаблицы.ОбластьМакета = ОбластьМакета;
	СтрокаТаблицы.СодержитЛоготип = СодержитЛоготип;
	СтрокаТаблицы.Устарела = Устаревшая;
	СтрокаТаблицы.Приоритет = Приоритет;
	
КонецФункции

Процедура ДобавитьНовуюСтраницуДокумента(ТабличныйДокумент, ОбластиМакета, СтруктураИтогов)
	
	Если ОбластиМакета.ОбластьМакетаИтогоПоСтранице <> Неопределено Тогда
		
		ОбластиМакета.ОбластьМакетаИтогоПоСтранице.Параметры.Заполнить(СтруктураИтогов);
		ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьМакетаИтогоПоСтранице);
		
	КонецЕсли;
	
	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	СтруктураИтогов.КоличествоНаСтранице= 0;
	СтруктураИтогов.СуммаНаСтранице		= 0;
	СтруктураИтогов.НомерСтраницы		= СтруктураИтогов.НомерСтраницы + 1;
	
	Если ОбластиМакета.НомерСтраницы <> Неопределено Тогда
		
		ДанныеПечати = Новый Структура;
		ДанныеПечати.Вставить("ПредставлениеДокумента", СтруктураИтогов.ПредставлениеДокумента);
		ДанныеПечати.Вставить("ПредставлениеСтраницы", НСтр("ru ='Страница '") + СтруктураИтогов.НомерСтраницы);
		
		ОбластиМакета.НомерСтраницы.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластиМакета.НомерСтраницы);
		
	КонецЕсли;
	
	Если ОбластиМакета.ОбластьМакетаЗаголовокТаблицы <> Неопределено Тогда
		
		ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьМакетаЗаголовокТаблицы);
		
	КонецЕсли;
	
КонецПроцедуры

Функция СтрокаКорректноРазмещаетсяНаСтранице(ТабличныйДокумент, ОбластиМакета, СтруктураИтогов)
	
	ЕстьВсеОбласти = Истина;
	Для каждого ЭлементСтруктуры Из ОбластиМакета Цикл
		
		Если ЭлементСтруктуры.Значение = Неопределено Тогда
			
			ЕстьВсеОбласти = Ложь;
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если НЕ ЕстьВсеОбласти Тогда
		
		Возврат Неопределено;
		
	КонецЕсли;
	
	МассивОбластейМакета = Новый Массив;
	
	МассивОбластейМакета.Добавить(ОбластиМакета.ОбластьМакетаСтрока);
	МассивОбластейМакета.Добавить(ОбластиМакета.ОбластьМакетаИтогоПоСтранице);
	
	Если СтруктураИтогов.ОбработаноСтрок = СтруктураИтогов.КоличествоСтрок - 1 Тогда
		
		МассивОбластейМакета.Добавить(ОбластиМакета.ОбластьМакетаИтогоПоДокументу);
		
		Если СтруктураИтогов.ВывестиСекциюЧастичнаяОплата Тогда
			
			МассивОбластейМакета.Добавить(ОбластиМакета.ОбластьМакетаИтогоНДС_ЧО);
			
		КонецЕсли;
		
		Если СтруктураИтогов.ЕстьСкидки Тогда
			
			МассивОбластейМакета.Добавить(ОбластиМакета.ОбластьМакетаИтогоСкидка);
			
		КонецЕсли;
		
		МассивОбластейМакета.Добавить(ОбластиМакета.ОбластьМакетаИтогоКОплатеСВесом);
		
		Если СтруктураИтогов.КоличествоСтрокВОписанииУсловий > 0 Тогда
			
			Для Итератор = 0 По СтруктураИтогов.КоличествоСтрокВОписанииУсловий Цикл
				
				МассивОбластейМакета.Добавить(ОбластиМакета.ОбластьМакетаУсловия);
				
			КонецЦикла;
			
		КонецЕсли;
		
		МассивОбластейМакета.Добавить(ОбластиМакета.ОбластьМакетаПодпись);
		
	КонецЕсли;
	
	Возврат ТабличныйДокумент.ПроверитьВывод(МассивОбластейМакета)
	
КонецФункции

Функция ЗаполнитьОбластьЗаголовкаСчетовЗаказовИРазместитьЛоготип(ДанныеОбъекта, ОбластиМакета, Ошибки)
	
	ПользовательПравилМакет = Ложь;
	ЛоготипЗаполнен = ЗначениеЗаполнено(ДанныеОбъекта.ФайлЛоготип);
	Приоритет = 999;
	
	МассивОбластей = ОбластиМакета.НайтиСтроки(Новый Структура("СодержитЛоготип", ЛоготипЗаполнен));
	Для каждого ОписаниеОбласти Из МассивОбластей Цикл
		
		Если ОписаниеОбласти.ОбластьМакета <> Неопределено Тогда
			
			Если Приоритет > ОписаниеОбласти.Приоритет Тогда
				
				Приоритет = ОписаниеОбласти.Приоритет;
				
			КонецЕсли;
			
			Если ОписаниеОбласти.Устарела Тогда
				
				ПользовательПравилМакет = Истина;
				
			КонецЕсли;
			
			ОписаниеОбласти.ОбластьМакета.Параметры.Заполнить(ДанныеОбъекта);
			
			Если ЛоготипЗаполнен Тогда
				
				ДанныеКартинки = РаботаСФайлами.ДвоичныеДанныеФайла(ДанныеОбъекта.ФайлЛоготип);
				Если ЗначениеЗаполнено(ДанныеКартинки) Тогда
					
					ОписаниеОбласти.ОбластьМакета.Рисунки.Логотип.Картинка = Новый Картинка(ДанныеКартинки);
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ПользовательПравилМакет Тогда
		
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, , ПечатьДокументовУНФ.ШаблонТекстаПредупрежденияПравкиМакета(), Неопределено);
		
	КонецЕсли;
	
	Если Приоритет = 999 Тогда
		
		Возврат Неопределено;
		
	Иначе
		
		Возврат ОбластиМакета.Найти(Приоритет, "Приоритет");
		
	КонецЕсли;
	
КонецФункции

Процедура ЗаполнитьДанныеПечатиПоСтрокеТабличнойЧасти(СтрокаТабличнойЧасти, ДанныеПечати, ПараметрыНоменклатуры, СтруктураИтогов)
	
	ДанныеПечати.Очистить();
	
	Если НЕ СтрокаТабличнойЧасти.ЭтоРазделитель И НЕ СтрокаТабличнойЧасти.ЭтоНабор Тогда
		СтруктураИтогов.Количество = СтруктураИтогов.Количество + 1;
	КонецЕсли;
	
	Если СтрокаТабличнойЧасти.ЭтоРазделитель Тогда
		НомерСтроки = 0;
		СтруктураИтогов.НомерСтроки = 0;
	ИначеЕсли СтрокаТабличнойЧасти.ЭтоНабор Тогда 
		НомерСтроки = 0;
	Иначе
		СтруктураИтогов.НомерСтроки = СтруктураИтогов.НомерСтроки+1;
		НомерСтроки = СтруктураИтогов.НомерСтроки;
	КонецЕсли; 
	ДанныеПечати.Вставить("НомерСтроки", НомерСтроки);
	
	ПараметрыНоменклатуры.Очистить();
	ПараметрыНоменклатуры.Вставить("Содержание", СтрокаТабличнойЧасти.Содержание);
	ПараметрыНоменклатуры.Вставить("ПредставлениеНоменклатуры", СтрокаТабличнойЧасти.ПредставлениеНоменклатуры);
	ПараметрыНоменклатуры.Вставить("ПредставлениеХарактеристики", СтрокаТабличнойЧасти.Характеристика);
	ПараметрыНоменклатуры.Вставить("ПредставлениеАртикула", СтрокаТабличнойЧасти.Артикул);
	ПараметрыНоменклатуры.Вставить("НеобходимоВыделитьКакСоставНабора", СтрокаТабличнойЧасти.НеобходимоВыделитьКакСоставНабора);
	
	ДанныеПечати.Вставить("ПредставлениеНоменклатуры", ПечатьДокументовУНФ.ПредставлениеНоменклатуры(ПараметрыНоменклатуры));
	ДанныеПечати.Вставить("ПредставлениеКодаНоменклатуры", ПечатьДокументовУНФ.ПредставлениеКодаНоменклатуры(СтрокаТабличнойЧасти));
	ДанныеПечати.Вставить("Артикул", СтрокаТабличнойЧасти.Артикул);
	ДанныеПечати.Вставить("Количество", СтрокаТабличнойЧасти.Количество);
	ДанныеПечати.Вставить("ЕдиницаИзмерения", СтрокаТабличнойЧасти.ЕдиницаИзмерения);
	ДанныеПечати.Вставить("Цена", СтрокаТабличнойЧасти.Цена);
	
	Если СтруктураИтогов.ЕстьСкидки Тогда
		
		ДанныеПечати.Вставить("ПредставлениеСкидки", ПечатьДокументовУНФ.ПредставлениеСкидки(СтрокаТабличнойЧасти, СтруктураИтогов));
		
	КонецЕсли;
	
	ДанныеПечати.Вставить("Сумма", СтрокаТабличнойЧасти.Сумма);
	
	Если СтруктураИтогов.ЕстьСтавкаНольПроцентов = Ложь // Нет смысла проверять каждую строку, если уже нашли...
		И СтрокаТабличнойЧасти.Владелец().Колонки.Найти("СтавкаНДС") <> Неопределено
		И СтрокаТабличнойЧасти.СтавкаНДС = УправлениеНебольшойФирмойПовтИсп.ПолучитьСтавкуНДСНоль() Тогда
		
		СтруктураИтогов.ЕстьСтавкаНольПроцентов = Истина;
		
	КонецЕсли;
	
	Если НЕ СтрокаТабличнойЧасти.ЭтоРазделитель И НЕ СтрокаТабличнойЧасти.ЭтоНабор Тогда
		
		СтруктураИтогов.КоличествоНаСтранице= СтруктураИтогов.КоличествоНаСтранице	+ СтрокаТабличнойЧасти.Количество;
		СтруктураИтогов.Сумма				= СтруктураИтогов.Сумма 				+ СтрокаТабличнойЧасти.Сумма;
		СтруктураИтогов.СуммаНаСтранице		= СтруктураИтогов.СуммаНаСтранице		+ СтрокаТабличнойЧасти.Сумма;
		СтруктураИтогов.СуммаНДС			= СтруктураИтогов.СуммаНДС				+ СтрокаТабличнойЧасти.СуммаНДС;
		СтруктураИтогов.Всего				= СтруктураИтогов.Всего					+ СтрокаТабличнойЧасти.Всего;
		СтруктураИтогов.СкидкаПоДокументу	= СтруктураИтогов.СкидкаПоДокументу		+ СтруктураИтогов.СкидкаПоСтроке;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура УчестьОсобенностиЧастичнойОплаты(ДанныеОбъектовПечати) Экспорт
	
	КопияДанныеОбъектовПечати = ДанныеОбъектовПечати.Скопировать();
	
	ДанныеОбъектовПечати.Очистить();
	
	ДанныеОбъектовПечати.Колонки.Удалить("Номер");
	ДанныеОбъектовПечати.Колонки.Добавить("Номер", Новый ОписаниеТипов(Новый КвалификаторыСтроки(15)));
	
	Для каждого ОбъектПечатиКопииДанных Из КопияДанныеОбъектовПечати Цикл
		
		Если ОбъектПечатиКопииДанных.ТаблицаПланаОплат.Количество() > 1 Тогда
			
			Для каждого СтрокаПланаОплатыКопииДанных Из ОбъектПечатиКопииДанных.ТаблицаПланаОплат Цикл
				
				ОбъектПечатиОсновнойТаблицы = ДанныеОбъектовПечати.Добавить();
				ЗаполнитьЗначенияСвойств(ОбъектПечатиОсновнойТаблицы, ОбъектПечатиКопииДанных, , "ТаблицаПланаОплат");
				
				Если НЕ ПустаяСтрока(СтрокаПланаОплатыКопииДанных.Постфикс) Тогда
					
					ОбъектПечатиОсновнойТаблицы.Номер = ОбъектПечатиОсновнойТаблицы.Номер + "/" + СтрокаПланаОплатыКопииДанных.Постфикс;
					
				КонецЕсли;
				
				ОбъектПечатиОсновнойТаблицы.ТаблицаПланаОплат = ОбъектПечатиКопииДанных.ТаблицаПланаОплат.СкопироватьКолонки();
				
				СтрокаПланаОплатыОсновнойТаблицы = ОбъектПечатиОсновнойТаблицы.ТаблицаПланаОплат.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаПланаОплатыОсновнойТаблицы, СтрокаПланаОплатыКопииДанных);
				
			КонецЦикла;
			
		Иначе
			
			ЗаполнитьЗначенияСвойств(ДанныеОбъектовПечати.Добавить(), ОбъектПечатиКопииДанных);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПрисоединитьКОбластиПечатиДокумента(ТабличныйДокумент, ТекущаяОбластьПечати, ОписаниеОбъектаПечати)
	
	НомерСтрокиНачалаОбласти = ТекущаяОбластьПечати.Верх;
	НомерСтрокиОкончанияОбласти = ТабличныйДокумент.ВысотаТаблицы;
	
	ТабличныйДокумент.Область(ТекущаяОбластьПечати.Верх, , ТекущаяОбластьПечати.Низ, ).Имя = "";
	ТабличныйДокумент.Область(НомерСтрокиНачалаОбласти, , НомерСтрокиОкончанияОбласти, ).Имя = ОписаниеОбъектаПечати.Представление;
	
КонецПроцедуры

Функция КоличествоСтрокКВыводуНаПечать(ДанныеОбъекта, ЕстьТЧРаботыУслуги, ЕстьТЧЗапасы)
	
	КоличествоРезультирующихСтрок = 0;
	
	Если ЕстьТЧРаботыУслуги Тогда
		
		КоличествоРезультирующихСтрок = КоличествоРезультирующихСтрок + ДанныеОбъекта.ТаблицаРаботыУслуги.Количество();
		
	КонецЕсли;
	
	Если ЕстьТЧЗапасы Тогда
		
		КоличествоРезультирующихСтрок = КоличествоРезультирующихСтрок + ДанныеОбъекта.ТаблицаЗапасы.Количество();
		
	КонецЕсли;
	
	Возврат КоличествоРезультирующихСтрок;
	
КонецФункции

#КонецЕсли