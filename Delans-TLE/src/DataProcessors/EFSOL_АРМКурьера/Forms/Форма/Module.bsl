
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СотрудникиПользователя.Сотрудник
	|ИЗ
	|	РегистрСведений.СотрудникиПользователя КАК СотрудникиПользователя
	|ГДЕ
	|	СотрудникиПользователя.Пользователь = &Пользователь";
	
	Запрос.УстановитьПараметр("Пользователь", ПараметрыСеанса.ТекущийПользователь);
	
	РезультатЗапросаСотрудник = Запрос.Выполнить().Выгрузить();
	
	Сотрудник = РезультатЗапросаСотрудник[0].Сотрудник;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ES_ОтчетОДоставке.Ссылка,
	|	ES_ОтчетОДоставке.Курьер,
	|	ES_ОтчетОДоставке.Дата
	|ИЗ
	|	Документ.ES_ОтчетОДоставке КАК ES_ОтчетОДоставке
	|ГДЕ
	|	ES_ОтчетОДоставке.Курьер = &Курьер
	|	И ES_ОтчетОДоставке.Дата Между &ДатаНачала и &ДатаОкончания";
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("Курьер", Сотрудник);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		СсылкаНаОтчет = Документы.ES_ОтчетОДоставке.ПустаяСсылка();
		Сообщить("Для Вас нет отчета о доставке на сегодня!!!");
		Отказ = Истина;
		Возврат;
	Иначе
		
		СсылкаНаОтчет = РезультатЗапроса.Выгрузить()[0].Ссылка;
		
	КонецЕсли;
	
	СтатусыЗаказов = Новый СписокЗначений;
	СтатусыЗаказов.Добавить(Перечисления.ES_СтатусыЗаказов.ВПути);
	СтатусыЗаказов.Добавить(Перечисления.ES_СтатусыЗаказов.Назначен);
	
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ЭтаФорма.ТабЧастьОтчетаЗаказы, "Ссылка", СсылкаНаОтчет, Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ЭтаФорма.ТабЧастьОтчетаЗаказы, "БезВыполненных", В_БезВыполненных, Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ЭтаФорма.ТабЧастьОтчетаЗаказы, "СтатусЗаказа", СтатусыЗаказов, Истина);
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ES_ОтчетОДоставкеГрузы.Ссылка,
	|	ES_ОтчетОДоставкеГрузы.ДокументДоставки КАК Заказ,
	|	ES_ОтчетОДоставкеГрузы.Номенклатура,
	|	ES_ОтчетОДоставкеГрузы.КоличествоПлан КАК План,
	|	ES_ОтчетОДоставкеГрузы.КоличествоФакт КАК Факт,
	|	ES_ОтчетОДоставкеГрузы.НППлан КАК СуммаПлан,
	|	ES_ОтчетОДоставкеГрузы.НПФакт КАК СуммаФакт,
	|	ES_ОтчетОДоставкеГрузы.Цена,
	|	ES_ОтчетОДоставкеГрузы.ДокументДоставки.ES_ВидОплаты КАК ES_ВидОплаты,
	|	ES_ОтчетОДоставкеГрузы.Партия
	|ИЗ
	|	Документ.ES_ОтчетОДоставке.Грузы КАК ES_ОтчетОДоставкеГрузы
	|ГДЕ
	|	ES_ОтчетОДоставкеГрузы.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", СсылкаНаОтчет);
	
	РезультатЗапросаПоТоварам = Запрос.Выполнить().Выгрузить();
	
	Объект.Товары.Очистить();
	Объект.Товары.Загрузить(РезультатЗапросаПоТоварам);
	
	В_ТекущийКурьер = СсылкаНаОтчет.Курьер;
	В_ДатаТекущегоОтчета = СсылкаНаОтчет.Дата;
	ES_СсылкаНаОтчет =  СсылкаНаОтчет;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ES_ВидОплаты", Перечисления.ТипыДенежныхСредств.Наличные);
	НайденныеСтроки = Объект.Товары.Выгрузить(ПараметрыОтбора);
	Т_ОплатаНаличными = НайденныеСтроки.Итог("СуммаФакт");
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ES_ВидОплаты", Перечисления.ТипыДенежныхСредств.Безналичные);
	НайденныеСтроки = Объект.Товары.Выгрузить(ПараметрыОтбора);
	Т_ОплатаБезНаличными = НайденныеСтроки.Итог("СуммаФакт");
	
	Т_Возвраты = РезультатЗапросаПоТоварам.Итог("План") - РезультатЗапросаПоТоварам.Итог("Факт");
	
	СостояниеИзменения = Ложь;
	СостояниеИзмененияКолФакт = Ложь;
	СостояниеИзмененияКомментария = Ложь;
	СостояниеИзмененияСтатуса = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ТабЧастьОтчетаЗаказыПриАктивизацииСтроки(Элемент)
	Если СостояниеИзменения Тогда
		
		//Сообщить("Были изменения!!! Сохранить?");
		Оповещение = Новый ОписаниеОповещения("ЗаполнитьТоварыВопросЗавершение", ЭтотОбъект); 
		ТекстВопроса = "Были изменения!!! Сохранить?"; 
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет); 
		//Вопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе
		Если НЕ Элемент.ТекущиеДанные = Неопределено Тогда
			Элементы.Товары.ОтборСтрок 	= Новый ФиксированнаяСтруктура("Заказ", Элемент.ТекущиеДанные.ДокументДоставки);
			ES_ТекущийЗаказ = Элемент.ТекущиеДанные.ДокументДоставки;
			
			ТабЧастьОтчетаЗаказыПриАктивизацииСтрокиНаСервере(Элемент.ТекущиеДанные.ДокументДоставки,Элемент.ТекущиеДанные.СтатусЗаказа, Элемент.ТекущиеДанные.ВремяФактическойДоставки, Элемент.ТекущиеДанные.Комментарий); 
			
			
		КонецЕсли;
		
	КонецЕсли;
	
	
КонецПроцедуры

&НаСервере
Процедура ТабЧастьОтчетаЗаказыПриАктивизацииСтрокиНаСервере(Параметр, Статус, ВремяФакт, Комментарий)
	
	ПР_Адрес = Параметр.ES_АдресДоставки;
	ПР_ВидОплаты = Параметр.ES_ВидОплаты;
	ПР_Время = Формат(Параметр.ES_ВремяДоставкиС,"ДФ=HH.mm")+ "-" + Формат(Параметр.ES_ВремяДоставкиПо,"ДФ=HH.mm");
	ПР_ДатаЗаказа = Параметр.Дата;
	ПР_Клиент = Параметр.ES_Получатель;
	ПР_КонтЛицо = Параметр.ES_ПолучательКонтактноеЛицо;
	ПР_ОплатаПлан = Параметр.ES_НППлан;
	ПР_Примечание =   Параметр.Комментарий;
	ПР_Телефон = Параметр.ES_ПолучательТелефон;
	
	ПР_Статус = Статус; 
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Заказ", Параметр);
	НайденныеСтроки = Объект.Товары.Выгрузить(ПараметрыОтбора);
	
	ПР_ОплатаФакт = НайденныеСтроки.Итог("СуммаФакт");
	ПР_ВремяФакт = ВремяФакт;
	ПР_Комментарий = Комментарий;
	
КонецПроцедуры
&НаСервере
Процедура ЗакрытьСменуНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьСмену(Команда)
	ЗакрытьСменуНаСервере();
КонецПроцедуры

&НаКлиенте 
Процедура ЗаполнитьТоварыВопросЗавершение(Результат, ДополнительныеПараметры) Экспорт 
	Если Результат = КодВозвратаДиалога.Да Тогда
		СохранитьНаСервере();
		ТабЧастьОтчетаЗаказыПриАктивизацииСтроки(Элементы.ТабЧастьОтчетаЗаказы);
		//СостояниеИзменения = Ложь;
	Иначе
		//СостояниеИзменения = Ложь;
		ПриСозданииНаСервере(Ложь,Истина);
	КонецЕсли; 
КонецПроцедуры  


&НаКлиенте
Процедура ТоварыФактПриИзменении(Элемент)
	
	ТекСтрока = Элементы.Товары.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	ТекСтрока.СуммаФакт = ТекСтрока.Факт * ТекСтрока.Цена;
	СостояниеИзмененияКолФакт = Истина;
	СостояниеИзменения = Истина;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНаСервере()
	// Вставить содержимое обработчика.
	Если СостояниеИзменения Тогда
		
		ДокОтчет = ES_СсылкаНаОтчет.ПолучитьОбъект();
		
		Заказ = ДокОтчет.Заказы.Найти(ES_ТекущийЗаказ,"ДокументДоставки");
		Если СостояниеИзмененияСтатуса Тогда
			Заказ.СтатусЗаказа = ПР_Статус;
			Заказ.ДатаФактическойДоставки = ТекущаяДата();
			Заказ.ВремяФактическойДоставки = ПР_ВремяФакт;
		КонецЕсли;
		
		Если СостояниеИзмененияКомментария Тогда
			Заказ.Комментарий = ПР_Комментарий;
		КонецЕсли;
		
		Если СостояниеИзмененияКолФакт Тогда
			
			ПараметрыОтбораЗаказ = Новый Структура;
			ПараметрыОтбораЗаказ.Вставить("Заказ", ES_ТекущийЗаказ);
			Для каждого СтрокаТоваров Из Объект.Товары.НайтиСтроки(ПараметрыОтбораЗаказ) Цикл
				
				ПараметрыОтбора = Новый Структура;
				ПараметрыОтбора.Вставить("ДокументДоставки", СтрокаТоваров.Заказ);
				ПараметрыОтбора.Вставить("Номенклатура", СтрокаТоваров.Номенклатура);
				
				СтрокиТоваров = ДокОтчет.Грузы.НайтиСтроки(ПараметрыОтбора);
				
				Для каждого СтрТов Из СтрокиТоваров Цикл
					
					СтрТов.КоличествоФакт = СтрокаТоваров.Факт;
					СтрТов.НПФакт = СтрокаТоваров.СуммаФакт;
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Если СостояниеИзмененияПартии Тогда
			
			ПараметрыОтбораЗаказ = Новый Структура;
			ПараметрыОтбораЗаказ.Вставить("Заказ", ES_ТекущийЗаказ);
			Для каждого СтрокаТоваров Из Объект.Товары.НайтиСтроки(ПараметрыОтбораЗаказ) Цикл
				
				ПараметрыОтбора = Новый Структура;
				ПараметрыОтбора.Вставить("ДокументДоставки", СтрокаТоваров.Заказ);
				ПараметрыОтбора.Вставить("Номенклатура", СтрокаТоваров.Номенклатура);
				
				СтрокиТоваров = ДокОтчет.Грузы.НайтиСтроки(ПараметрыОтбора);
				
				Для каждого СтрТов Из СтрокиТоваров Цикл
					
					СтрТов.Партия = СтрокаТоваров.Партия;
					//СтрТов.КоличествоФакт = СтрокаТоваров.Факт;
					//СтрТов.НПФакт = СтрокаТоваров.СуммаФакт;
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЕсли;

		
		
		ДокОтчет.Записать(РежимЗаписиДокумента.Проведение);
		Элементы.ТабЧастьОтчетаЗаказы.Обновить();
		Элементы.Товары.Обновить();
		
		СостояниеИзменения = Ложь;
		СостояниеИзмененияКолФакт = Ложь;
		СостояниеИзмененияКомментария = Ложь;
		СостояниеИзмененияСтатуса = Ложь;
		ПриСозданииНаСервере(Ложь, Истина);	
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
	СохранитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПР_СтатусПриИзменении(Элемент)
	ПР_ВремяФакт = ТекущаяДата();
	СостояниеИзменения = Истина;
	СостояниеИзмененияСтатуса = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПР_КомментарийПриИзменении(Элемент)
	СостояниеИзмененияКомментария = Истина;
	СостояниеИзменения = Истина;
КонецПроцедуры


&НаКлиенте
Процедура БезВыполненныхПриИзменении(Элемент)
	БезВыполненныхПриИзмененииНаСервере();
	ТабЧастьОтчетаЗаказыПриАктивизацииСтроки(Элементы.ТабЧастьОтчетаЗаказы);//.ТекущиеДанные);
КонецПроцедуры


&НаСервере
Процедура БезВыполненныхПриИзмененииНаСервере()
	Элементы.ТабЧастьОтчетаЗаказы.Обновить();
	Элементы.Товары.Обновить();
	
	ПриСозданииНаСервере(Ложь, Истина);
	
КонецПроцедуры


&НаКлиенте
Процедура ТоварыПриАктивизацииСтроки(Элемент)
	КолФакт = Элемент.ТекущиеДанные.Факт;
	Партия = Элемент.ТекущиеДанные.Партия;
	//ТоварыПриАктивизацииСтрокиНаСервере();
КонецПроцедуры


&НаСервереБезКонтекста
Процедура ТоварыПриАктивизацииСтрокиНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры


&НаКлиенте
Процедура КолФактПриИзменении(Элемент)
	ТекСтрока = Элементы.Товары.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	ТекСтрока.Факт = КолФакт;
	ТекСтрока.СуммаФакт = ТекСтрока.Факт * ТекСтрока.Цена;
	СостояниеИзмененияКолФакт = Истина;
	СостояниеИзменения = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПартияПриИзменении(Элемент)
	ТекСтрока = Элементы.Товары.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	ТекСтрока.Партия = Партия;
	
	СостояниеИзмененияПартии = Истина;
	СостояниеИзменения = Истина;

КонецПроцедуры

&НаКлиенте
Процедура ТоварыПартияПриИзменении(Элемент)
	ТекСтрока = Элементы.Товары.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	ТекСтрока.Партия = Партия;
	
	СостояниеИзмененияПартии = Истина;
	СостояниеИзменения = Истина;
КонецПроцедуры


