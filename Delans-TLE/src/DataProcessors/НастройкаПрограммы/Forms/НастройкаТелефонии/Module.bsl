
#Область ОписаниеПеременных

&НаКлиенте
Перем ПользователиТелефонииПользовательИзменен;

&НаКлиенте
Перем ПользователиТелефонииВнутреннийНомерИзменен;

&НаКлиенте
Перем ПользователиТелефонииИсходящийНомерИзменен;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПрочитатьПользователиТелефонии();
	ПрочитатьЗначенияНастроек();
	ПриВыбореАТС();
	
	СсылкиНаСтатьи = Перечисления.ДоступныеАТС.СсылкиНаСтатьи();
	
	ОпределитьДоступностьЭлементов();
	
	ЗаполнитьДействияОбработкиЗвонков();
	
	НастроитьФормуМобильныйКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "РегистрацияВзаимодействия" Тогда
		
		АвтоматическаяОбработкаЗвонков = СистемаВзаимодействия.ИнформационнаяБазаЗарегистрирована();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ВыбранноеЗначение = ПредопределенноеЗначение("Перечисление.ДоступныеАТС.УниверсальныйItoolabs")
		И НЕ ИспользоватьАТС_УниверсальныйItoolabs Тогда
		ПриВыбореАТС(ВыбранноеЗначение);
		ПрочитатьЗначенияНастроек();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовГруппаДоступныеАТС

// MangoOffice
&НаКлиенте
Процедура АТС_MangoOfficeЛогоНажатие(Элемент)
	
	ПерейтиПоссылке(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.MangoOffice"));
	
КонецПроцедуры

&НаКлиенте
Процедура АТС_MangoOfficeСсылкаНажатие(Элемент)
	
	ПерейтиПоссылке(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.MangoOffice"));
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьАТС_MangoOfficeПриИзменении(Элемент)
	
	ПриВыбореАТС(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.MangoOffice"));
	ПрочитатьЗначенияНастроек();
	
КонецПроцедуры

// ДомRu
&НаКлиенте
Процедура АТС_ДомRuЛогоНажатие(Элемент)
	
	ПерейтиПоссылке(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.ДомRu"));
	
КонецПроцедуры

&НаКлиенте
Процедура АТС_ДомRuСсылкаНажатие(Элемент)
	
	ПерейтиПоссылке(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.ДомRu"));
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьАТС_ДомRuПриИзменении(Элемент)
	
	ПриВыбореАТС(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.ДомRu"));
	ПрочитатьЗначенияНастроек();
	
КонецПроцедуры

// Яндекс
&НаКлиенте
Процедура АТС_ЯндексЛогоНажатие(Элемент)
	
	ПерейтиПоссылке(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.Яндекс"));
	
КонецПроцедуры

&НаКлиенте
Процедура АТС_ЯндексСсылкаНажатие(Элемент)
	
	ПерейтиПоссылке(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.Яндекс"));
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьАТС_ЯндексПриИзменении(Элемент)
	
	ПриВыбореАТС(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.Яндекс"));
	ПрочитатьЗначенияНастроек();
	
КонецПроцедуры

// ВестКоллСПб
&НаКлиенте
Процедура АТС_ВестКоллСПбЛогоНажатие(Элемент)
	
	ПерейтиПоссылке(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.ВестКоллСПб"));
	
КонецПроцедуры

&НаКлиенте
Процедура АТС_ВестКоллСПбСсылкаНажатие(Элемент)
	
	ПерейтиПоссылке(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.ВестКоллСПб"));
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьАТС_ВестКоллСПбlПриИзменении(Элемент)
	
	ПриВыбореАТС(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.ВестКоллСПб"));
	ПрочитатьЗначенияНастроек();
	
КонецПроцедуры

// ДеловаяСетьИркутск
&НаКлиенте
Процедура АТС_ДеловаяСетьИркутскЛогоНажатие(Элемент)
	
	ПерейтиПоссылке(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.ДеловаяСетьИркутск"));
	
КонецПроцедуры

&НаКлиенте
Процедура АТС_ДеловаяСетьИркутскСсылкаНажатие(Элемент)
	
	ПерейтиПоссылке(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.ДеловаяСетьИркутск"));
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьАТС_ДеловаяСетьИркутскПриИзменении(Элемент)
	
	ПриВыбореАТС(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.ДеловаяСетьИркутск"));
	ПрочитатьЗначенияНастроек();
	
КонецПроцедуры

// Itoolabs
&НаКлиенте
Процедура ИспользоватьАТС_ЭнфортаПриИзменении(Элемент)
	
	ПриВыбореАТС(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.Энфорта"));
	ПрочитатьЗначенияНастроек();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьАТС_МегафонПриИзменении(Элемент)
	
	ПриВыбореАТС(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.Мегафон"));
	ПрочитатьЗначенияНастроек();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьАТС_ТТКПриИзменении(Элемент)
	
	ПриВыбореАТС(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.ТТК"));
	ПрочитатьЗначенияНастроек();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьАТС_ВестКоллМоскваПриИзменении(Элемент)
	
	ПриВыбореАТС(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.ВестКоллМосква"));
	ПрочитатьЗначенияНастроек();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьАТС_VirginConnectПриИзменении(Элемент)
	
	ПриВыбореАТС(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.VirginConnect"));
	ПрочитатьЗначенияНастроек();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьАТС_ГарсТелекомПриИзменении(Элемент)
	
	ПриВыбореАТС(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.ГарсТелеком"));
	ПрочитатьЗначенияНастроек();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьАТС_НаукаСвязьПриИзменении(Элемент)
	
	ПриВыбореАТС(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.НаукаСвязь"));
	ПрочитатьЗначенияНастроек();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьАТС_RiNetПриИзменении(Элемент)
	
	ПриВыбореАТС(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.RiNet"));
	ПрочитатьЗначенияНастроек();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьАТС_СибирскиеСетиПриИзменении(Элемент)
	
	ПриВыбореАТС(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.СибирскиеСети"));
	ПрочитатьЗначенияНастроек();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьАТС_АвантелПриИзменении(Элемент)
	
	ПриВыбореАТС(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.Авантел"));
	ПрочитатьЗначенияНастроек();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьАТС_ГравителПриИзменении(Элемент)
	
	ПриВыбореАТС(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.Гравител"));
	ПрочитатьЗначенияНастроек();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьАТС_МГТСПриИзменении(Элемент)
	
	ПриВыбореАТС(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.МГТС"));
	ПрочитатьЗначенияНастроек();
	
КонецПроцедуры

&НаКлиенте
Процедура АТС_ЭнфортаЛогоНажатие(Элемент)
	
	ПерейтиПоссылке(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.Энфорта"));
	
КонецПроцедуры

&НаКлиенте
Процедура АТС_МегафонЛогоНажатие(Элемент)
	
	ПерейтиПоссылке(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.Мегафон"));
	
КонецПроцедуры

&НаКлиенте
Процедура АТС_ТТКЛогоНажатие(Элемент)
	
	ПерейтиПоссылке(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.ТТК"));
	
КонецПроцедуры

&НаКлиенте
Процедура АТС_ВестКоллМоскваЛогоНажатие(Элемент)
	
	ПерейтиПоссылке(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.ВестКоллМосква"));
	
КонецПроцедуры

&НаКлиенте
Процедура АТС_VirginConnectЛогоНажатие(Элемент)
	
	ПерейтиПоссылке(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.VirginConnect"));
	
КонецПроцедуры

&НаКлиенте
Процедура АТС_ГарсТелекомЛогоНажатие(Элемент)
	
	ПерейтиПоссылке(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.ГарсТелеком"));
	
КонецПроцедуры

&НаКлиенте
Процедура АТС_НаукаСвязьЛогоНажатие(Элемент)
	
	ПерейтиПоссылке(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.НаукаСвязь"));
	
КонецПроцедуры

&НаКлиенте
Процедура АТС_RiNetЛогоНажатие(Элемент)
	
	ПерейтиПоссылке(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.RiNet"));
	
КонецПроцедуры

&НаКлиенте
Процедура АТС_СибирскиеСетиЛогоНажатие(Элемент)
	
	ПерейтиПоссылке(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.СибирскиеСети"));
	
КонецПроцедуры

&НаКлиенте
Процедура АТС_АвантелЛогоНажатие(Элемент)
	
	ПерейтиПоссылке(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.Авантел"));
	
КонецПроцедуры

&НаКлиенте
Процедура АТС_ГравителЛогоНажатие(Элемент)
	
	ПерейтиПоссылке(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.Гравител"));
	
КонецПроцедуры

&НаКлиенте
Процедура АТС_МГТСЛогоНажатие(Элемент)
	
	ПерейтиПоссылке(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.МГТС"));
	
КонецПроцедуры

&НаКлиенте
Процедура АТС_ЭнфортаСсылкаНажатие(Элемент)
	
	ПерейтиПоссылке(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.Энфорта"));
	
КонецПроцедуры

&НаКлиенте
Процедура АТС_МегафонСсылкаНажатие(Элемент)
	
	ПерейтиПоссылке(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.Мегафон"));
	
КонецПроцедуры

&НаКлиенте
Процедура АТС_ТТКСсылкаНажатие(Элемент)
	
	ПерейтиПоссылке(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.ТТК"));
	
КонецПроцедуры

&НаКлиенте
Процедура АТС_ВестКоллМоскваСсылкаНажатие(Элемент)
	
	ПерейтиПоссылке(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.ВестКоллМосква"));
	
КонецПроцедуры

&НаКлиенте
Процедура АТС_VirginConnectСсылкаНажатие(Элемент)
	
	ПерейтиПоссылке(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.VirginConnect"));
	
КонецПроцедуры

&НаКлиенте
Процедура АТС_ГарсТелекомСсылкаНажатие(Элемент)
	
	ПерейтиПоссылке(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.ГарсТелеком"));
	
КонецПроцедуры

&НаКлиенте
Процедура АТС_НаукаСвязьСсылкаНажатие(Элемент)
	
	ПерейтиПоссылке(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.НаукаСвязь"));
	
КонецПроцедуры

&НаКлиенте
Процедура АТС_RiNetСсылкаНажатие(Элемент)
	
	ПерейтиПоссылке(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.RiNet"));
	
КонецПроцедуры

&НаКлиенте
Процедура АТС_СибирскиеСетиСсылкаНажатие(Элемент)
	
	ПерейтиПоссылке(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.СибирскиеСети"));
	
КонецПроцедуры

&НаКлиенте
Процедура АТС_АвантелСсылкаНажатие(Элемент)
	
	ПерейтиПоссылке(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.Авантел"));
	
КонецПроцедуры

&НаКлиенте
Процедура АТС_ГравителСсылкаНажатие(Элемент)
	
	ПерейтиПоссылке(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.Гравител"));
	
КонецПроцедуры

&НаКлиенте
Процедура АТС_МГТССсылкаНажатие(Элемент)
	
	ПерейтиПоссылке(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.МГТС"));
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьАТС_УниверсальныйВиджетItoolabsПриИзменении(Элемент)
	
	ПриВыбореАТС(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.УниверсальныйItoolabs"));
	ПрочитатьЗначенияНастроек();
	
КонецПроцедуры

&НаКлиенте
Процедура АТС_УниверсальныйВиджетItoolabsЛогоНажатие(Элемент)
	
	ОткрытьФорму("Обработка.НастройкаПрограммы.Форма.УниверсальныйВиджетТелефонииItoolabsИнфо",, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура АТС_УниверсальныйВиджетItoolabsСсылкаНажатие(Элемент)
	
	ОткрытьФорму("Обработка.НастройкаПрограммы.Форма.УниверсальныйВиджетТелефонииItoolabsИнфо",, ЭтотОбъект);
	
КонецПроцедуры

// Мобильная телефония
&НаКлиенте
Процедура МобильнаяТелефонияЛогоНажатие(Элемент)
	
	ПерейтиПоссылке("МобильнаяТелефония");
	
КонецПроцедуры

&НаКлиенте
Процедура МобильнаяТелефонияСсылкаНажатие(Элемент)
	
	ПерейтиПоссылке("МобильнаяТелефония");
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьМобильнаяТелефонияПриИзменении(Элемент)
	
	ПриВыбореАТС("МобильнаяТелефония");
	ПрочитатьЗначенияНастроек();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОткрытьНастройкуПубликацииHttpСервисовНажатие(Элемент)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьНастройкуПубликацииHttpСервисовЗавершение", ЭтотОбъект);
	ОткрытьФорму("Обработка.ОбщиеНастройкиТелефонии.Форма",,,,,, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНастройкуПубликацииHttpСервисовЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПрочитатьЗначенияНастроек();
	
КонецПроцедуры

&НаКлиенте
Процедура ИнструкцияПоРаботеСТелефониейНажатие(Элемент)
	
	ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку("https://its.1c.ru/bmk/unf16/telephony");
	
КонецПроцедуры

&НаКлиенте
Процедура ИнструкцияПодключенияТелефонииНажатие(Элемент)
	
	ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(ИнструкцияПодключенияСсылка(ИспользуемаяАТС));
	
КонецПроцедуры

&НаКлиенте
Процедура АвтоматическаяОбработкаЗвонковПриИзменении(Элемент)
	
	АвтоматическаяОбработкаЗвонков = СистемаВзаимодействия.ИнформационнаяБазаЗарегистрирована();
	ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку("e1cib/command/Обработка.РегистрацияВСистемеВзаимодействияУНФ.Команда.РегистрацияВзаимодействий");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСписокНеобрабатываемыеТелефонныеНомераНажатие(Элемент)
	
	ОткрытьФорму("РегистрСведений.НеобрабатываемыеТелефонныеНомера.ФормаСписка");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовНастроекТелефонии

// MangoOffice
&НаКлиенте
Процедура АТС_MangoOffice_vpbx_api_keyПриИзменении(Элемент)
	
	ЗаписатьЗначениеНастройкиИнтеграцииАТС("НастройкиАТС_MangoOffice", 1);
	
КонецПроцедуры

&НаКлиенте
Процедура АТС_MangoOffice_vpbx_api_saltПриИзменении(Элемент)
	
	ЗаписатьЗначениеНастройкиИнтеграцииАТС("НастройкиАТС_MangoOffice", 2);
	
КонецПроцедуры

// ДомRu
&НаКлиенте
Процедура АТС_ДомRu_АдресОблачнойАТСПриИзменении(Элемент)
	
	ЗаписатьЗначениеНастройкиИнтеграцииАТС("НастройкиАТС_ДомRu", 0);
	
КонецПроцедуры

&НаКлиенте
Процедура АТС_ДомRu_КлючДляАвторизацииВОблачнойАТСПриИзменении(Элемент)
	
	ЗаписатьЗначениеНастройкиИнтеграцииАТС("НастройкиАТС_ДомRu", 1);
	
КонецПроцедуры

// Яндекс
&НаКлиенте
Процедура АТС_Яндекс_КлючДляАвторизацииПриИзменении(Элемент)
	
	ЗаписатьЗначениеНастройкиИнтеграцииАТС("НастройкиАТС_Яндекс", 1);
	
КонецПроцедуры

// ВестКоллСПб
&НаКлиенте
Процедура АТС_ВестКоллСПб_АдресОблачнойАТСПриИзменении(Элемент)
	
	ЗаписатьЗначениеНастройкиИнтеграцииАТС("НастройкиАТС_ВестКоллСПб", 0);
	
КонецПроцедуры

&НаКлиенте
Процедура АТС_ВестКоллСПб_КлючДляАвторизацииВОблачнойАТСПриИзменении(Элемент)
	
	ЗаписатьЗначениеНастройкиИнтеграцииАТС("НастройкиАТС_ВестКоллСПб", 1);
	
КонецПроцедуры

// ДеловаяСетьИркутск
&НаКлиенте
Процедура АТС_ДеловаяСетьИркутск_АдресОблачнойАТСПриИзменении(Элемент)
	
	ЗаписатьЗначениеНастройкиИнтеграцииАТС("НастройкиАТС_ДеловаяСетьИркутск", 0);
	
КонецПроцедуры

&НаКлиенте
Процедура АТС_ДеловаяСетьИркутск_КлючДляАвторизацииВОблачнойАТСПриИзменении(Элемент)
	
	ЗаписатьЗначениеНастройкиИнтеграцииАТС("НастройкиАТС_ДеловаяСетьИркутск", 1);
	
КонецПроцедуры

// Itoolabs
&НаКлиенте
Процедура АТС_Itoolabs_АдресОблачнойАТСПриИзменении(Элемент)
	
	ЗаписатьЗначениеНастройкиИнтеграцииАТС("НастройкиАТС_Itoolabs", 0);
	
КонецПроцедуры

&НаКлиенте
Процедура АТС_Itoolabs_КлючДляАвторизацииВОблачнойАТСПриИзменении(Элемент)
	
	ЗаписатьЗначениеНастройкиИнтеграцииАТС("НастройкиАТС_Itoolabs", 1);
	
КонецПроцедуры

&НаКлиенте
Процедура МаршрутизироватьВходящиеНаОтветственныхПриИзменении(Элемент)
	
	ЗаписатьЗначениеОбщейНастройкиТелефонии("МаршрутизироватьВходящиеНаОтветственных", МаршрутизироватьВходящиеНаОтветственных);
	
КонецПроцедуры

&НаКлиенте
Процедура ДействиеВходящийЗвонокИзвестногоАбонентаПриИзменении(Элемент)
	
	ЗаписатьЗначениеОбщейНастройкиТелефонии("ДействиеТекущегоЗвонкаНайденногоАбонента", ДействиеВходящийЗвонокИзвестногоАбонента);
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры

&НаКлиенте
Процедура ДействиеВходящийЗвонокНеизвестногоАбонентаПриИзменении(Элемент)
	
	ЗаписатьЗначениеОбщейНастройкиТелефонии("ДействиеТекущегоЗвонкаНеизвестногоАбонента", ДействиеВходящийЗвонокНеизвестногоАбонента);
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры

&НаКлиенте
Процедура ДействиеИсходящийЗвонокПриИзменении(Элемент)
	
	ЗаписатьЗначениеОбщейНастройкиТелефонии("ДействиеИсходящегоЗвонка", ДействиеИсходящийЗвонок);
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПользователиТелефонии

&НаКлиенте
Процедура ПользователиТелефонииПриИзменении(Элемент)
	
	Если НЕ (ПользователиТелефонииПользовательИзменен = Истина
		ИЛИ ПользователиТелефонииВнутреннийНомерИзменен = Истина
		ИЛИ ПользователиТелефонииИсходящийНомерИзменен = Истина) Тогда
		Возврат;
	КонецЕсли;
	
	ПользователиТелефонииПользовательИзменен = Ложь;
	ПользователиТелефонииВнутреннийНомерИзменен = Ложь;
	ПользователиТелефонииИсходящийНомерИзменен = Ложь;
	
	ЗаписатьПользователиТелефонии();
	
КонецПроцедуры

&НаКлиенте
Процедура ПользователиТелефонииПослеУдаления(Элемент)
	
	ЗаписатьПользователиТелефонии();
	
КонецПроцедуры

&НаКлиенте
Процедура ПользователиТелефонииПользовательПриИзменении(Элемент)
	ПользователиТелефонииПользовательИзменен = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПользователиТелефонииВнутреннийНомерПриИзменении(Элемент)
	ПользователиТелефонииВнутреннийНомерИзменен = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПользователиТелефонииИсходящийНомерПриИзменении(Элемент)
	ПользователиТелефонииИсходящийНомерИзменен = Истина;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#КонецОбласти

#Область РаботаСНастройками

&НаСервере
Процедура ЗаполнитьДействияОбработкиЗвонков()
	
	Элементы.ДействиеВходящийЗвонокИзвестногоАбонента.СписокВыбора.Добавить("ОткрытьКарточкуАбонента", НСтр("ru='Открыть карточку контрагента'"));
	Элементы.ДействиеВходящийЗвонокИзвестногоАбонента.СписокВыбора.Добавить("ОткрытьСобытие", НСтр("ru='Открыть событие-звонок'"));
	Элементы.ДействиеВходящийЗвонокИзвестногоАбонента.СписокВыбора.Добавить("ОткрыватьСобытиеПриЗакрытииКарточкиАбонента", НСтр("ru='Сперва карточку контрагента, потом событие-звонок'"));
	
	Элементы.ДействиеВходящийЗвонокНеизвестногоАбонента.СписокВыбора.Добавить("СозданиеКонтрагента", НСтр("ru='Создание контрагента'"));
	Элементы.ДействиеВходящийЗвонокНеизвестногоАбонента.СписокВыбора.Добавить("СозданиеСобытия", НСтр("ru='Открытие события-звонка'"));
	Элементы.ДействиеВходящийЗвонокНеизвестногоАбонента.СписокВыбора.Добавить("ЗадаватьВопрос", НСтр("ru='Задавать вопрос'"));
	
	Элементы.ДействиеИсходящийЗвонок.СписокВыбора.Добавить("НичегоНеДелать", НСтр("ru='Ничего не делать'"));
	Элементы.ДействиеИсходящийЗвонок.СписокВыбора.Добавить("ОткрытьСобытие", НСтр("ru='Открыть событие-звонок'"));
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьЗначенияНастроек()
	
	УстановитьПривилегированныйРежим(Истина);
	Если Константы.ИспользоватьОблачнуюТелефонию.Получить() Тогда
		ИспользуемаяАТС = Константы.ИспользуемаяАТС.Получить();
	ИначеЕсли Константы.ИспользоватьМобильнуюТелефонию.Получить() Тогда
		ИспользуемаяАТС = "МобильнаяТелефония";
	КонецЕсли;
	УстановитьПривилегированныйРежим(Ложь);
	
	НастройкиТелефонии = ТелефонияСервер.ПолучитьНастройкиТелефонии();
	
	// MangoOffice
	НастройкиАТС_MangoOffice.Очистить();
	НоваяНастройка = НастройкиАТС_MangoOffice.Добавить();
	НоваяНастройка.Ключ = "URL";
	НоваяНастройка.Значение = ТелефонияСервер.АдресОбратногоВызоваОблачнаяТелефония(Перечисления.ДоступныеАТС.MangoOffice);
	
	НоваяНастройка = НастройкиАТС_MangoOffice.Добавить();
	НоваяНастройка.Ключ = "vpbx_api_key";
	НоваяНастройка.Значение = НастройкиТелефонии.vpbx_api_key;
	
	НоваяНастройка = НастройкиАТС_MangoOffice.Добавить();
	НоваяНастройка.Ключ = "vpbx_api_salt";
	НоваяНастройка.Значение = НастройкиТелефонии.vpbx_api_salt;
	
	// ДомRu
	НастройкиАТС_ДомRu.Очистить();
	НоваяНастройка = НастройкиАТС_ДомRu.Добавить();
	НоваяНастройка.Ключ = "АдресОблачнойАТС";
	НоваяНастройка.Значение = НастройкиТелефонии.АдресОблачнойАТС;
	
	НоваяНастройка = НастройкиАТС_ДомRu.Добавить();
	НоваяНастройка.Ключ = "КлючДляАвторизацииВОблачнойАТС";
	НоваяНастройка.Значение = НастройкиТелефонии.КлючДляАвторизацииВОблачнойАТС;
	
	НоваяНастройка = НастройкиАТС_ДомRu.Добавить();
	НоваяНастройка.Ключ = "URL";
	НоваяНастройка.Значение = ТелефонияСервер.АдресОбратногоВызоваОблачнаяТелефония(Перечисления.ДоступныеАТС.ДомRu);
	
	НоваяНастройка = НастройкиАТС_ДомRu.Добавить();
	НоваяНастройка.Ключ = "КлючДляАвторизацииВУНФ";
	НоваяНастройка.Значение = НастройкиТелефонии.КлючДляАвторизацииВУНФ;
	
	// Яндекс
	НастройкиАТС_Яндекс.Очистить();
	НоваяНастройка = НастройкиАТС_Яндекс.Добавить();
	НоваяНастройка.Ключ = "URL";
	НоваяНастройка.Значение = ТелефонияСервер.АдресОбратногоВызоваОблачнаяТелефония(Перечисления.ДоступныеАТС.Яндекс);
	
	НоваяНастройка = НастройкиАТС_Яндекс.Добавить();
	НоваяНастройка.Ключ = "КлючДляАвторизацииАТСЯндекс";
	НоваяНастройка.Значение = НастройкиТелефонии.КлючДляАвторизацииАТСЯндекс;
	
	// ВестКоллСПб
	НастройкиАТС_ВестКоллСПб.Очистить();
	НоваяНастройка = НастройкиАТС_ВестКоллСПб.Добавить();
	НоваяНастройка.Ключ = "АдресОблачнойАТС";
	НоваяНастройка.Значение = НастройкиТелефонии.АдресОблачнойАТС;
	
	НоваяНастройка = НастройкиАТС_ВестКоллСПб.Добавить();
	НоваяНастройка.Ключ = "КлючДляАвторизацииВОблачнойАТС";
	НоваяНастройка.Значение = НастройкиТелефонии.КлючДляАвторизацииВОблачнойАТС;
	
	НоваяНастройка = НастройкиАТС_ВестКоллСПб.Добавить();
	НоваяНастройка.Ключ = "URL";
	НоваяНастройка.Значение = ТелефонияСервер.АдресОбратногоВызоваОблачнаяТелефония(Перечисления.ДоступныеАТС.ВестКоллСПб);
	
	НоваяНастройка = НастройкиАТС_ВестКоллСПб.Добавить();
	НоваяНастройка.Ключ = "КлючДляАвторизацииВУНФ";
	НоваяНастройка.Значение = НастройкиТелефонии.КлючДляАвторизацииВУНФ;
	
	// ДеловаяСетьИркутск
	НастройкиАТС_ДеловаяСетьИркутск.Очистить();
	НоваяНастройка = НастройкиАТС_ДеловаяСетьИркутск.Добавить();
	НоваяНастройка.Ключ = "АдресОблачнойАТС";
	НоваяНастройка.Значение = НастройкиТелефонии.АдресОблачнойАТС;
	
	НоваяНастройка = НастройкиАТС_ДеловаяСетьИркутск.Добавить();
	НоваяНастройка.Ключ = "КлючДляАвторизацииВОблачнойАТС";
	НоваяНастройка.Значение = НастройкиТелефонии.КлючДляАвторизацииВОблачнойАТС;
	
	НоваяНастройка = НастройкиАТС_ДеловаяСетьИркутск.Добавить();
	НоваяНастройка.Ключ = "URL";
	НоваяНастройка.Значение = ТелефонияСервер.АдресОбратногоВызоваОблачнаяТелефония(Перечисления.ДоступныеАТС.ДеловаяСетьИркутск);
	
	НоваяНастройка = НастройкиАТС_ДеловаяСетьИркутск.Добавить();
	НоваяНастройка.Ключ = "КлючДляАвторизацииВУНФ";
	НоваяНастройка.Значение = НастройкиТелефонии.КлючДляАвторизацииВУНФ;
	
	// Itoolabs
	НастройкиАТС_Itoolabs.Очистить();
	НоваяНастройка = НастройкиАТС_Itoolabs.Добавить();
	НоваяНастройка.Ключ = "АдресОблачнойАТС";
	НоваяНастройка.Значение = НастройкиТелефонии.АдресОблачнойАТС;
	
	НоваяНастройка = НастройкиАТС_Itoolabs.Добавить();
	НоваяНастройка.Ключ = "КлючДляАвторизацииВОблачнойАТС";
	НоваяНастройка.Значение = НастройкиТелефонии.КлючДляАвторизацииВОблачнойАТС;
	
	НоваяНастройка = НастройкиАТС_Itoolabs.Добавить();
	НоваяНастройка.Ключ = "URL";
	НоваяНастройка.Значение = ТелефонияСервер.АдресОбратногоВызоваОблачнаяТелефония(Перечисления.ДоступныеАТС.УниверсальныйItoolabs);
	
	НоваяНастройка = НастройкиАТС_Itoolabs.Добавить();
	НоваяНастройка.Ключ = "КлючДляАвторизацииВУНФ";
	НоваяНастройка.Значение = НастройкиТелефонии.КлючДляАвторизацииВУНФ;
	
	// Обработка звонка
	ДействиеВходящийЗвонокИзвестногоАбонента   = НастройкиТелефонии.ДействиеТекущегоЗвонкаНайденногоАбонента;
	ДействиеВходящийЗвонокНеизвестногоАбонента = НастройкиТелефонии.ДействиеТекущегоЗвонкаНеизвестногоАбонента;
	ДействиеИсходящийЗвонок                    = НастройкиТелефонии.ДействиеИсходящегоЗвонка;
	
	АвтоматическаяОбработкаЗвонков = СистемаВзаимодействия.ИнформационнаяБазаЗарегистрирована();
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьЗначениеНастройкиИнтеграцииАТС(ТаблицаНастроек, Индекс)
	
	Настройка = ЭтотОбъект[ТаблицаНастроек][Индекс];
	УдалитьСлужебныеСимволы(Настройка.Значение);
	ТелефонияСервер.УстановитьНастройкуТелефонии(Настройка.Ключ, Настройка.Значение);
	ПроверитьЗаполнениеНастроекИнтеграции(, ТаблицаНастроек);
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьЗначениеОбщейНастройкиТелефонии(Ключ, НовоеЗначение)
	
	ТелефонияСервер.УстановитьНастройкуТелефонии(Ключ, НовоеЗначение);
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьПользователиТелефонии()
	
	НаборЗаписей = РегистрыСведений.НастройкиПользователейТелефонии.СоздатьНаборЗаписей();
	НаборЗаписей.Прочитать();
	ЗначениеВРеквизитФормы(НаборЗаписей, "ПользователиТелефонии");
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьПользователиТелефонии()
	
	НаборЗаписей = ДанныеФормыВЗначение(ПользователиТелефонии, Тип("РегистрСведенийНаборЗаписей.НастройкиПользователейТелефонии"));
	
	СтрокиКУдалению = Новый Массив;
	Для каждого Строка Из НаборЗаписей Цикл
		Если ЗначениеЗаполнено(Строка.Пользователь) Тогда
			Продолжить;
		КонецЕсли;
		СтрокиКУдалению.Добавить(Строка);
	КонецЦикла;
	
	Для каждого Строка Из СтрокиКУдалению Цикл
		НаборЗаписей.Удалить(Строка);
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
	ПроверитьЗаполнениеПользователейТелефонии();
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьЗаполнениеНастроекИнтеграции(АТС = Неопределено, ТаблицаНастроек = Неопределено)
	
	ИмяТаблицыНастроек = Неопределено;
	
	Если ТаблицаНастроек <> Неопределено Тогда
		ИмяТаблицыНастроек = ТаблицаНастроек;
	КонецЕсли;
	
	Если ИмяТаблицыНастроек = Неопределено И ЗначениеЗаполнено(АТС) Тогда
		ИмяТаблицыНастроек = ИмяТаблицыНастроек(АТС);
	КонецЕсли;
	
	Если ИмяТаблицыНастроек = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиЗаполнены = Истина;
	Для каждого Настройка Из ЭтотОбъект[ИмяТаблицыНастроек] Цикл
		Если НЕ ЗначениеЗаполнено(Настройка.Значение) Тогда
			НастройкиЗаполнены = Ложь;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если НастройкиЗаполнены Тогда
		Элементы.НастройкаИнтеграции.ЗаголовокСвернутогоОтображения = Элементы.НастройкаИнтеграции.Заголовок;
	Иначе
		Элементы.НастройкаИнтеграции.ЗаголовокСвернутогоОтображения = Элементы.НастройкаИнтеграции.Заголовок + НСтр("ru=' <не выполнено>'");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьЗаполнениеПользователейТелефонии()
	
	Если ПользователиТелефонии.Количество() = 0 Тогда
		Элементы.ГруппаПользователиТелефонии.ЗаголовокСвернутогоОтображения = Элементы.ГруппаПользователиТелефонии.Заголовок + НСтр("ru=' <не указаны>'");
		Возврат;
	КонецЕсли;
	
	ВнутренниеНомераЗаполнены = Истина;
	Для каждого НастройкаПользователя Из ПользователиТелефонии Цикл
		Если НЕ ЗначениеЗаполнено(НастройкаПользователя.ВнутреннийНомер) Тогда
			ВнутренниеНомераЗаполнены = Ложь;;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если НЕ ВнутренниеНомераЗаполнены Тогда
		Элементы.ГруппаПользователиТелефонии.ЗаголовокСвернутогоОтображения = Элементы.ГруппаПользователиТелефонии.Заголовок + НСтр("ru=' <не заполнены внутренние номера>'");
		Возврат;
	КонецЕсли;
	
	Элементы.ГруппаПользователиТелефонии.ЗаголовокСвернутогоОтображения = Элементы.ГруппаПользователиТелефонии.Заголовок;
	
КонецПроцедуры

&НаСервере
Функция ИмяТаблицыНастроек(АТС)
	
	Если АТС = Перечисления.ДоступныеАТС.MangoOffice Тогда
		Возврат "НастройкиАТС_MangoOffice";
	ИначеЕсли АТС = Перечисления.ДоступныеАТС.ДомRu Тогда
		Возврат "НастройкиАТС_ДомRu";
	ИначеЕсли АТС = Перечисления.ДоступныеАТС.Яндекс Тогда
		Возврат "НастройкиАТС_Яндекс";
	ИначеЕсли АТС = Перечисления.ДоступныеАТС.ВестКоллСПб Тогда
		Возврат "НастройкиАТС_ВестКоллСПб";
	ИначеЕсли АТС = Перечисления.ДоступныеАТС.ДеловаяСетьИркутск Тогда
		Возврат "НастройкиАТС_ДеловаяСетьИркутск";
	ИначеЕсли АТС = Перечисления.ДоступныеАТС.Энфорта
		ИЛИ АТС = Перечисления.ДоступныеАТС.Мегафон
		ИЛИ АТС = Перечисления.ДоступныеАТС.ТТК
		ИЛИ АТС = Перечисления.ДоступныеАТС.ВестКоллМосква
		ИЛИ АТС = Перечисления.ДоступныеАТС.VirginConnect
		ИЛИ АТС = Перечисления.ДоступныеАТС.ГарсТелеком
		ИЛИ АТС = Перечисления.ДоступныеАТС.НаукаСвязь
		ИЛИ АТС = Перечисления.ДоступныеАТС.RiNet
		ИЛИ АТС = Перечисления.ДоступныеАТС.СибирскиеСети
		ИЛИ АТС = Перечисления.ДоступныеАТС.Авантел
		ИЛИ АТС = Перечисления.ДоступныеАТС.Гравител
		ИЛИ АТС = Перечисления.ДоступныеАТС.УниверсальныйItoolabs
		ИЛИ АТС = Перечисления.ДоступныеАТС.МГТС Тогда
		Возврат "НастройкиАТС_Itoolabs";
	Иначе
		ВызватьИсключение НСтр("ru='Неизвестное имя АТС.'");
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОпределитьДоступностьЭлементов()
	
	ЭтоАдминистратор = Пользователи.ЭтоПолноправныйПользователь(, Ложь, Ложь);
	
	Элементы.ИспользоватьАТС_MangoOffice.Доступность    = ЭтоАдминистратор;
	Элементы.ИспользоватьАТС_ДомRu.Доступность          = ЭтоАдминистратор;
	Элементы.ИспользоватьАТС_Яндекс.Доступность         = ЭтоАдминистратор;
	Элементы.ИспользоватьАТС_ВестКоллСПб.Доступность    = ЭтоАдминистратор;
	Элементы.ИспользоватьМобильнаяТелефония.Доступность = ЭтоАдминистратор;
	Элементы.ИспользоватьАТС_Гравител.Доступность       = ЭтоАдминистратор;
	Элементы.ИспользоватьАТС_Авантел.Доступность        = ЭтоАдминистратор;
	Элементы.ИспользоватьАТС_СибирскиеСети.Доступность  = ЭтоАдминистратор;
	Элементы.ИспользоватьАТС_RiNet.Доступность          = ЭтоАдминистратор;
	Элементы.ИспользоватьАТС_НаукаСвязь.Доступность     = ЭтоАдминистратор;
	Элементы.ИспользоватьАТС_ГарсТелеком.Доступность    = ЭтоАдминистратор;
	Элементы.ИспользоватьАТС_VirginConnect.Доступность  = ЭтоАдминистратор;
	Элементы.ИспользоватьАТС_ВестКоллМосква.Доступность = ЭтоАдминистратор;
	Элементы.ИспользоватьАТС_ТТК.Доступность            = ЭтоАдминистратор;
	Элементы.ИспользоватьАТС_Мегафон.Доступность        = ЭтоАдминистратор;
	Элементы.ИспользоватьАТС_Энфорта.Доступность        = ЭтоАдминистратор;
	Элементы.ИспользоватьАТС_МГТС.Доступность           = ЭтоАдминистратор;
	
	Элементы.ГруппаНастройкиАТС_MangoOffice.Доступность = ЭтоАдминистратор;
	Элементы.ГруппаНастройкиАТС_ДомRu.Доступность       = ЭтоАдминистратор;
	Элементы.ГруппаНастройкиАТС_Яндекс.Доступность      = ЭтоАдминистратор;
	Элементы.ГруппаНастройкиАТС_ВестКоллСПб.Доступность = ЭтоАдминистратор;
	Элементы.ГруппаНастройкиАТС_Itoolabs.Доступность    = ЭтоАдминистратор;
	
	Для каждого Элемент Из Элементы.ГруппаПользователиТелефонии.ПодчиненныеЭлементы Цикл
		Элемент.Доступность = ЭтоАдминистратор;
	КонецЦикла;
	
	Для каждого Элемент Из Элементы.ОбработкаЗвонков.ПодчиненныеЭлементы Цикл
		Элемент.Доступность = ЭтоАдминистратор;
	КонецЦикла;
	
	СистемнаяИнформация = Новый СистемнаяИнформация;
	Элементы.ОткрытьНастройкуПубликацииHttpСервисов.Видимость = НЕ ОбщегоНазначения.РазделениеВключено();
	
	СравнениеВерсий = ОбщегоНазначенияКлиентСервер.СравнитьВерсииБезНомераСборки(
		ОбщегоНазначенияКлиентСервер.ВерсияКонфигурацииБезНомераСборки(СистемнаяИнформация.ВерсияПриложения), "8.3.11");
	Элементы.АвтоматическаяОбработкаЗвонков.ТолькоПросмотр = СравнениеВерсий < 0;
	
	// Статические настройки.
	Элементы.АТС_ВестКоллСПб_КлючДляАвторизацииВУНФ.ТолькоПросмотр  = Истина;
	Элементы.АТС_ВестКоллСПб_АдресУНФ.ТолькоПросмотр                = Истина;
	Элементы.АТС_Яндекс_АдресУНФ.ТолькоПросмотр                  = Истина;
	Элементы.АТС_ДомRu_КлючДляАвторизацииВУНФ.ТолькоПросмотр     = Истина;
	Элементы.АТС_ДомRu_АдресУНФ.ТолькоПросмотр                   = Истина;
	Элементы.АТС_MangoOffice_АдресОбратногоВызова.ТолькоПросмотр = Истина;
	Элементы.АТС_Itoolabs_АдресУНФ.ТолькоПросмотр                = Истина;
	Элементы.АТС_Itoolabs_КлючДляАвторизацииВУНФ.ТолькоПросмотр  = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ПриВыбореАТС(ВыбраннаяАТС = Неопределено)
	
	Если ВыбраннаяАТС <> Неопределено Тогда
		ИспользуемаяАТС = ?(ИспользуемаяАТС = ВыбраннаяАТС, Неопределено, ВыбраннаяАТС);
	КонецЕсли;
	
	ИспользоватьАТС_MangoOffice           = ИспользуемаяАТС = ПредопределенноеЗначение("Перечисление.ДоступныеАТС.MangoOffice");
	ИспользоватьАТС_ДомRu                 = ИспользуемаяАТС = ПредопределенноеЗначение("Перечисление.ДоступныеАТС.ДомRu");
	ИспользоватьАТС_Яндекс                = ИспользуемаяАТС = ПредопределенноеЗначение("Перечисление.ДоступныеАТС.Яндекс");
	ИспользоватьАТС_ВестКоллСПб           = ИспользуемаяАТС = ПредопределенноеЗначение("Перечисление.ДоступныеАТС.ВестКоллСПб");
	ИспользоватьАТС_ДеловаяСетьИркутск    = ИспользуемаяАТС = ПредопределенноеЗначение("Перечисление.ДоступныеАТС.ДеловаяСетьИркутск");
	ИспользоватьАТС_RiNet                 = ИспользуемаяАТС = ПредопределенноеЗначение("Перечисление.ДоступныеАТС.RiNet");
	ИспользоватьАТС_VirginConnect         = ИспользуемаяАТС = ПредопределенноеЗначение("Перечисление.ДоступныеАТС.VirginConnect");
	ИспользоватьАТС_Авантел               = ИспользуемаяАТС = ПредопределенноеЗначение("Перечисление.ДоступныеАТС.Авантел");
	ИспользоватьАТС_ВестКоллМосква        = ИспользуемаяАТС = ПредопределенноеЗначение("Перечисление.ДоступныеАТС.ВестКоллМосква");
	ИспользоватьАТС_ГарсТелеком           = ИспользуемаяАТС = ПредопределенноеЗначение("Перечисление.ДоступныеАТС.ГарсТелеком");
	ИспользоватьАТС_Гравител              = ИспользуемаяАТС = ПредопределенноеЗначение("Перечисление.ДоступныеАТС.Гравител");
	ИспользоватьАТС_Мегафон               = ИспользуемаяАТС = ПредопределенноеЗначение("Перечисление.ДоступныеАТС.Мегафон");
	ИспользоватьАТС_НаукаСвязь            = ИспользуемаяАТС = ПредопределенноеЗначение("Перечисление.ДоступныеАТС.НаукаСвязь");
	ИспользоватьАТС_СибирскиеСети         = ИспользуемаяАТС = ПредопределенноеЗначение("Перечисление.ДоступныеАТС.СибирскиеСети");
	ИспользоватьАТС_ТТК                   = ИспользуемаяАТС = ПредопределенноеЗначение("Перечисление.ДоступныеАТС.ТТК");
	ИспользоватьАТС_Энфорта               = ИспользуемаяАТС = ПредопределенноеЗначение("Перечисление.ДоступныеАТС.Энфорта");
	ИспользоватьАТС_МГТС                  = ИспользуемаяАТС = ПредопределенноеЗначение("Перечисление.ДоступныеАТС.МГТС");
	ИспользоватьАТС_УниверсальныйItoolabs = ИспользуемаяАТС = ПредопределенноеЗначение("Перечисление.ДоступныеАТС.УниверсальныйItoolabs");
	
	ИспользоватьМобильнаяТелефония = ЭтоМобильнаяТелефония(ИспользуемаяАТС);
	
	Если ВыбраннаяАТС <> Неопределено Тогда
		НачатьТранзакцию();
		Попытка
			ТелефонияСервер.СоздатьИзменитьСлужебногоПользователяТелефонии(ЭтоОблачнаяАТС(ИспользуемаяАТС));
			Константы.ИспользоватьОблачнуюТелефонию.Установить(ЭтоОблачнаяАТС(ИспользуемаяАТС));
			Константы.ИспользуемаяАТС.Установить(?(ЭтоОблачнаяАТС(ИспользуемаяАТС), ИспользуемаяАТС, Перечисления.ДоступныеАТС.ПустаяСсылка()));
			Константы.ИспользоватьМобильнуюТелефонию.Установить(ЭтоМобильнаяТелефония(ИспользуемаяАТС));
			
			Если ВыбраннаяАТС <> Перечисления.ДоступныеАТС.УниверсальныйItoolabs Тогда
				Константы.ИспользуемаяАТСДополнительно.Установить("");
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ЗаписьЖурналаРегистрации(
				СтрШаблон(
					НСтр("ru = 'Выбор оператора: %1'"),
					ИспользуемаяАТС),
				УровеньЖурналаРегистрации.Ошибка,,,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ВызватьИсключение;
		КонецПопытки;
	КонецЕсли;
	
	УправлениеФормой();
	
КонецПроцедуры

&НаСервере
Процедура УправлениеФормой()
	
	Элементы.ГруппаНастройкиАТС_MangoOffice.Видимость        = ИспользуемаяАТС = ПредопределенноеЗначение("Перечисление.ДоступныеАТС.MangoOffice");
	Элементы.ГруппаНастройкиАТС_ДомRu.Видимость              = ИспользуемаяАТС = ПредопределенноеЗначение("Перечисление.ДоступныеАТС.ДомRu");
	Элементы.ГруппаНастройкиАТС_Яндекс.Видимость             = ИспользуемаяАТС = ПредопределенноеЗначение("Перечисление.ДоступныеАТС.Яндекс");
	Элементы.ГруппаНастройкиАТС_ВестКоллСПб.Видимость        = ИспользуемаяАТС = ПредопределенноеЗначение("Перечисление.ДоступныеАТС.ВестКоллСПб");
	Элементы.ГруппаНастройкиАТС_ДеловаяСетьИркутск.Видимость = ИспользуемаяАТС = ПредопределенноеЗначение("Перечисление.ДоступныеАТС.ДеловаяСетьИркутск");
	Элементы.ГруппаНастройкиАТС_Itoolabs.Видимость           = ИспользуемаяАТС = ПредопределенноеЗначение("Перечисление.ДоступныеАТС.Энфорта")
		ИЛИ ИспользуемаяАТС = ПредопределенноеЗначение("Перечисление.ДоступныеАТС.Мегафон")
		ИЛИ ИспользуемаяАТС = ПредопределенноеЗначение("Перечисление.ДоступныеАТС.ТТК")
		ИЛИ ИспользуемаяАТС = ПредопределенноеЗначение("Перечисление.ДоступныеАТС.ВестКоллМосква")
		ИЛИ ИспользуемаяАТС = ПредопределенноеЗначение("Перечисление.ДоступныеАТС.VirginConnect")
		ИЛИ ИспользуемаяАТС = ПредопределенноеЗначение("Перечисление.ДоступныеАТС.ГарсТелеком")
		ИЛИ ИспользуемаяАТС = ПредопределенноеЗначение("Перечисление.ДоступныеАТС.НаукаСвязь")
		ИЛИ ИспользуемаяАТС = ПредопределенноеЗначение("Перечисление.ДоступныеАТС.RiNet")
		ИЛИ ИспользуемаяАТС = ПредопределенноеЗначение("Перечисление.ДоступныеАТС.СибирскиеСети")
		ИЛИ ИспользуемаяАТС = ПредопределенноеЗначение("Перечисление.ДоступныеАТС.Авантел")
		ИЛИ ИспользуемаяАТС = ПредопределенноеЗначение("Перечисление.ДоступныеАТС.Гравител")
		ИЛИ ИспользуемаяАТС = ПредопределенноеЗначение("Перечисление.ДоступныеАТС.МГТС")
		ИЛИ ИспользуемаяАТС = ПредопределенноеЗначение("Перечисление.ДоступныеАТС.УниверсальныйItoolabs");
	
	Элементы.АвтоматическаяОбработкаЗвонков.Видимость = ЗначениеЗаполнено(ИспользуемаяАТС);
	Элементы.ОткрытьСписокНеобрабатываемыеТелефонныеНомера.Видимость = ЭтоМобильнаяТелефония(ИспользуемаяАТС);
	
	Элементы.НастройкаИнтеграции.Видимость = ЭтоОблачнаяАТС(ИспользуемаяАТС);
	Элементы.ГруппаПользователиТелефонии.Видимость = ЭтоОблачнаяАТС(ИспользуемаяАТС) И ЗначениеЗаполнено(ИспользуемаяАТС);
	Элементы.ПользователиТелефонииИсходящийНомер.Видимость = (ИспользуемаяАТС = ПредопределенноеЗначение("Перечисление.ДоступныеАТС.Яндекс"));
	Элементы.МаршрутизироватьВходящиеНаОтветственных.Видимость = (ИспользуемаяАТС <> ПредопределенноеЗначение("Перечисление.ДоступныеАТС.Яндекс"));
	
	Если ЭтоОблачнаяАТС(ИспользуемаяАТС) Тогда
		ПроверитьЗаполнениеНастроекИнтеграции(ИспользуемаяАТС);
		ПроверитьЗаполнениеПользователейТелефонии();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиПоссылке(АТС)
	
	Ссылка = СсылкиНаСтатьи.НайтиПоЗначению(АТС).Представление;
	
	Если НЕ ЗначениеЗаполнено(Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(Ссылка);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ЭтоОблачнаяАТС(АТС)
	
	Возврат ТипЗнч(АТС) = Тип("ПеречислениеСсылка.ДоступныеАТС");
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ЭтоМобильнаяТелефония(АТС)
	
	Возврат АТС = "МобильнаяТелефония";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УдалитьСлужебныеСимволы(Строка)
	
	Строка = СтрЗаменить(Строка, Символы.ПС, "");
	Строка = СокрЛП(Строка);
	Строка = СтрЗаменить(Строка, "¶", "");
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ИнструкцияПодключенияСсылка(АТС)
	
	СсылкиНаСтатьи = Новый Соответствие;
	СсылкиНаСтатьи.Вставить(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.MangoOffice"),           "https://its.1c.ru/db/metod81#content:6962:hdoc");
	СсылкиНаСтатьи.Вставить(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.ДомRu"),                 "https://its.1c.ru/db/metod81#content:6963:hdoc");
	СсылкиНаСтатьи.Вставить(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.Яндекс"),                "https://its.1c.ru/db/metod81#content:6987:hdoc");
	СсылкиНаСтатьи.Вставить(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.ВестКоллСПб"),           "https://its.1c.ru/db/metod81#content:6967:hdoc");
	СсылкиНаСтатьи.Вставить(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.ДеловаяСетьИркутск"),    "https://its.1c.ru/db/metod81#content:6988:hdoc");
	СсылкиНаСтатьи.Вставить(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.Энфорта"),               "https://its.1c.ru/db/metod81#content:7059:hdoc");
	СсылкиНаСтатьи.Вставить(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.Мегафон"),               "https://its.1c.ru/db/metod81#content:7058:hdoc");
	СсылкиНаСтатьи.Вставить(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.ТТК"),                   "https://its.1c.ru/db/metod81#content:7060:hdoc");
	СсылкиНаСтатьи.Вставить(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.ВестКоллМосква"),        "https://its.1c.ru/db/metod81#content:7061:hdoc");
	СсылкиНаСтатьи.Вставить(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.VirginConnect"),         "https://its.1c.ru/db/metod81#content:7062:hdoc");
	СсылкиНаСтатьи.Вставить(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.ГарсТелеком"),           "https://its.1c.ru/db/metod81#content:7063:hdoc");
	СсылкиНаСтатьи.Вставить(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.НаукаСвязь"),            "https://its.1c.ru/db/metod81#content:7064:hdoc");
	СсылкиНаСтатьи.Вставить(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.RiNet"),                 "https://its.1c.ru/db/metod81#content:7065:hdoc");
	СсылкиНаСтатьи.Вставить(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.СибирскиеСети"),         "https://its.1c.ru/db/metod81#content:7066:hdoc");
	СсылкиНаСтатьи.Вставить(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.Авантел"),               "https://its.1c.ru/db/metod81#content:7067:hdoc");
	СсылкиНаСтатьи.Вставить(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.Гравител"),              "https://its.1c.ru/db/metod81#content:7068:hdoc");
	СсылкиНаСтатьи.Вставить(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.МГТС"),                  "https://its.1c.ru/db/metod81#content:7279:hdoc");
	СсылкиНаСтатьи.Вставить(ПредопределенноеЗначение("Перечисление.ДоступныеАТС.УниверсальныйItoolabs"), "https://its.1c.ru/db/metod81#content:7070:hdoc");
	СсылкиНаСтатьи.Вставить("МобильнаяТелефония", "https://its.1c.ru/db/metod81#content:6964:hdoc");
	
	Возврат СсылкиНаСтатьи.Получить(АТС);
	
КонецФункции

&НаСервере
Процедура НастроитьФормуМобильныйКлиент()
	
	Если НЕ ОбщегоНазначения.ЭтоМобильныйКлиент() Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ДекорацияОтступ1.Видимость = Ложь;
	Элементы.ДекорацияОтступ2.Видимость = Ложь;
	Элементы.ДекорацияОтступ3.Видимость = Ложь;
	
КонецПроцедуры

#КонецОбласти
