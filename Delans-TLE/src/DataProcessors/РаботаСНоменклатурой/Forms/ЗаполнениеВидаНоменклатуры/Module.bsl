
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	////////////////////////////////////////////////////////////////////////////////
	
	Если Не Параметры.Свойство("ИдентификаторКатегории", ИдентификаторКатегории) Тогда
		ВызватьИсключение НСтр("ru = 'Не задан идентификатор категории'");
	КонецЕсли;
	
	Если Не Параметры.Свойство("ВидНоменклатуры", ВидНоменклатуры) Тогда
		ВызватьИсключение НСтр("ru = 'Не задан вид номенклатуры'");
	КонецЕсли;
	
	Параметры.Свойство("НаименованиеКатегории", НаименованиеКатегории);
	
	////////////////////////////////////////////////////////////////////////////////

	ЗаполнитьРежимЗагрузкиХарактеристик();
	
	ЗаполнитьПодсказкиФормы();
	
	УправлениеВидимостьюДоступностью(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПолучитьДанныеПоКатегории();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПояснениеКОперацииОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОткрытьФорму("Обработка.РаботаСНоменклатурой.Форма.КарточкаКатегории", 
		Новый Структура("ИдентификаторКатегории", НавигационнаяСсылкаФорматированнойСтроки));
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОсновныеРеквизиты

&НаКлиенте
Процедура ОсновныеРеквизитыПередНачаломИзменения(Элемент, Отказ)
	
	Если Элемент.ТекущийЭлемент <> Элементы.ОсновныеРеквизитыНоменклатурыПометка Тогда
		Отказ = Истина
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОсновныеРеквизитыПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДополнительныеРеквизиты

&НаКлиенте
Процедура ДополнительныеРеквизитыПередНачаломИзменения(Элемент, Отказ)
	
	Если Элемент.ТекущийЭлемент <> Элементы.ДополнительныеРеквизитыРеквизитВидаНоменклатуры Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеРеквизитыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле = Элементы.ДополнительныеРеквизитыСопоставленоЗначений Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Оповещение = Новый ОписаниеОповещения("ПриЗакрытииФормыСопоставленияЗначений", ЭтотОбъект, Новый Структура("ВыбраннаяСтрока", ВыбраннаяСтрока));
		
		ТекущаяСтрока = ДополнительныеРеквизиты.НайтиПоИдентификатору(ВыбраннаяСтрока);
		
		ПараметрыФормы = Новый Структура;
		
		ПараметрыФормы.Вставить("ТекущийРеквизит", ТекущаяСтрока.РеквизитВидаНоменклатуры);
		ПараметрыФормы.Вставить("ИдентификаторРеквизитаКатегории", ТекущаяСтрока.ИдентификаторРеквизитаКатегории);
		ПараметрыФормы.Вставить("ВидНоменклатуры", ВидНоменклатуры);
		ПараметрыФормы.Вставить("НаименованиеКатегории", НаименованиеКатегории);
		ПараметрыФормы.Вставить("ИдентификаторКатегории", ИдентификаторКатегории);
		
		ОткрытьФорму("Обработка.РаботаСНоменклатурой.Форма.СопоставлениеЗначенийРеквизита", ПараметрыФормы, ЭтаФорма,,,,Оповещение);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеРеквизитыПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеРеквизитыРеквизитВидаНоменклатурыПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ДополнительныеРеквизиты.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьСписокВыбораРеквизитовВидаНоменклатуры();
	
	ЗаполнитьИнформациюПоСопоставленнымЗначениям(Элементы.ДополнительныеРеквизиты.ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеРеквизитыПриАктивизацииСтроки(Элемент)
	
	ЗаполнитьСписокВыбораРеквизитовВидаНоменклатуры();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	Для Каждого ЭлементКоллекции Из ОсновныеРеквизиты Цикл
		ЭлементКоллекции.Пометка = Истина;
	КонецЦикла;
		
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	Для Каждого ЭлементКоллекции Из ОсновныеРеквизиты Цикл
		ЭлементКоллекции.Пометка = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновлятьВсеАвтоматически(Команда)
	
	РаботаСНоменклатуройКлиент.ПоказатьВопросПриВключенииАвтообновленияВидаНоменклатуры(ВидНоменклатуры, ИдентификаторКатегории, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьРеквизит(Команда)
	
	ПараметрыФормы = Новый Структура;
	
	РаботаСНоменклатуройКлиентПереопределяемый.ОткрытьФормуДополнительногоРеквизита(ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРеквизитыАвтоматически(Команда)
	
	ЗаполнитьРеквизитыАвтоматическиСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура РежимЗагрузкиХарактеристикПриИзменении(Элемент)
	
	УбратьНекорректныеСопоставления();
	
	ЗаполнитьСписокВыбораРеквизитовВидаНоменклатуры();
	
КонецПроцедуры

&НаКлиенте
Процедура Готово(Команда)
	
	ОбновитьРеквизитыИЗаписатьНастройкуСоответствия();
	
	Закрыть(Новый Структура("АвтоматическийРежимОбновления", Ложь));
	
КонецПроцедуры

&НаКлиенте
Процедура Далее(Команда)
	
	Элементы.СтраницыРеквизитов.ТекущаяСтраница = Элементы.СтраницаДополнительныеРеквизиты;
	
	УправлениеВидимостьюДоступностью(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	Элементы.СтраницыРеквизитов.ТекущаяСтраница = Элементы.СтраницаОсновныеРеквизиты;
	
	УправлениеВидимостьюДоступностью(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьРеквизитыАвтоматическиСервер()
		
	Для каждого ЭлементКоллекции Из ДополнительныеРеквизиты Цикл
		
		Если НЕ ЗначениеЗаполнено(ЭлементКоллекции.РеквизитКатегории) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЭлементКоллекции.РеквизитВидаНоменклатуры) Тогда
			Продолжить;
		КонецЕсли;
		
		ЭлементКоллекции.РеквизитВидаНоменклатуры = Неопределено;
		
		СтрокиРеквизитов = 
			ДополнительныеРеквизитыВидаНоменклатуры.НайтиСтроки(
				Новый Структура("РеквизитВидаНоменклатурыПредставление", ЭлементКоллекции.РеквизитКатегории));
		
		Если СтрокиРеквизитов.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;		
		
		СтрокаРеквизита = СтрокиРеквизитов[0];
		
		Если СтрокаРеквизита.ЯвляетсяХарактеристикой 
			И СтрСравнить(РежимЗагрузкиХарактеристик, "ВХарактеристики") <> 0 Тогда
			
			Продолжить;
		КонецЕсли;
		
		ЭлементКоллекции.РеквизитВидаНоменклатуры = СтрокаРеквизита.РеквизитВидаНоменклатуры;
		
		ЗаполнитьИнформациюПоСопоставленнымЗначениям(ЭлементКоллекции.ПолучитьИдентификатор());
		
		ОсталосьСопоставитьРеквизитов = ОсталосьСопоставитьРеквизитов - 1;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРежимЗагрузкиХарактеристик()
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	СоответствиеВидовНоменклатуры.ЗагружатьХарактеристикиВХарактеристики КАК ЗагружатьХарактеристикиВХарактеристики
	|ИЗ
	|	РегистрСведений.СоответствиеВидовНоменклатурыРаботаСНоменклатурой КАК СоответствиеВидовНоменклатуры
	|ГДЕ
	|	СоответствиеВидовНоменклатуры.ВидНоменклатуры = &ВидНоменклатуры
	|	И СоответствиеВидовНоменклатуры.ИдентификаторКатегории = &ИдентификаторКатегории";
	
	Запрос.УстановитьПараметр("ВидНоменклатуры", ВидНоменклатуры);
	Запрос.УстановитьПараметр("ИдентификаторКатегории", ИдентификаторКатегории);
	
	Выгрузка = Запрос.Выполнить().Выгрузить();
	
	РежимЗагрузкиХарактеристик = Элементы.РежимЗагрузкиХарактеристик.СписокВыбора[0].Значение;
	
	Если Выгрузка.Количество() > 0 Тогда
		Если Выгрузка[0].ЗагружатьХарактеристикиВХарактеристики Тогда
			РежимЗагрузкиХарактеристик = Элементы.РежимЗагрузкиХарактеристик.СписокВыбора[0].Значение;
		Иначе
			РежимЗагрузкиХарактеристик = Элементы.РежимЗагрузкиХарактеристик.СписокВыбора[1].Значение;
		КонецЕсли;		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьРеквизитыИЗаписатьНастройкуСоответствия()
	
	РаботаСНоменклатуройПереопределяемый.ЗаполнитьВидНоменклатуры(
		ВидНоменклатуры, ОсновныеРеквизиты.Выгрузить(Новый Структура("Пометка", Истина)));
	
	// Привязка Вида номенклатуры - для сохранения режима работы характеристик
	
	ДанныеЗаполнения = Новый Структура;
	
	ДанныеЗаполнения.Вставить("ИдентификаторКатегории",                 ИдентификаторКатегории);
	ДанныеЗаполнения.Вставить("ПредставлениеКатегории",                 НаименованиеКатегории);
	ДанныеЗаполнения.Вставить("ЗагружатьХарактеристикиВХарактеристики", СтрСравнить(РежимЗагрузкиХарактеристик, "ВХарактеристики") = 0);
	ДанныеЗаполнения.Вставить("ОбновляетсяАвтоматически",                Ложь);
	
	РаботаСНоменклатурой.ЗаписатьСоответствиеВидаНоменклатуры(ВидНоменклатуры, ДанныеЗаполнения);

	// Привязка реквизитов
	
	НаборЗаписей = РегистрыСведений.СоответствиеРеквизитовРаботаСНоменклатурой.СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.ОбъектСопоставления.Установить(ВидНоменклатуры);
	
	Для каждого ЭлементКоллекции Из ДополнительныеРеквизиты Цикл
		Если ЗначениеЗаполнено(ЭлементКоллекции.РеквизитВидаНоменклатуры) Тогда
			
			НоваяЗапись = НаборЗаписей.Добавить();
			
			НоваяЗапись.ОбъектСопоставления = ВидНоменклатуры;
			НоваяЗапись.РеквизитОбъекта = ЭлементКоллекции.РеквизитВидаНоменклатуры;
			НоваяЗапись.ИдентификаторРеквизитаКатегории = ЭлементКоллекции.ИдентификаторРеквизитаКатегории;
			
		КонецЕсли;
	КонецЦикла;
	
	НаборЗаписей.Записать();
		
КонецПроцедуры

&НаКлиенте
Процедура УбратьНекорректныеСопоставления()
	
	ИспользоватьХарактеристики = СтрСравнить(РежимЗагрузкиХарактеристик, "ВХарактеристики") = 0;
	
	Для каждого ЭлементКоллекции Из ДополнительныеРеквизиты Цикл
		
		Если Не ЗначениеЗаполнено(ЭлементКоллекции.РеквизитВидаНоменклатуры) Тогда
			Продолжить;
		КонецЕсли;
		
		РеквизитыВидаНоменклатуры = 
			ДополнительныеРеквизитыВидаНоменклатуры.НайтиСтроки(
				Новый Структура("РеквизитВидаНоменклатуры", ЭлементКоллекции.РеквизитВидаНоменклатуры)); 
				
		ТекущийРеквизит = РеквизитыВидаНоменклатуры[0];
		
		Если ИспользоватьХарактеристики 
			И ТекущийРеквизит.ЯвляетсяХарактеристикой <> ЭлементКоллекции.ЯвляетсяХарактеристикойКатегории Тогда
			
			ЭлементКоллекции.РеквизитВидаНоменклатуры = Неопределено;
		КонецЕсли;
		
		Если НЕ ИспользоватьХарактеристики 
			И ТекущийРеквизит.ЯвляетсяХарактеристикой Тогда
			
			ЭлементКоллекции.РеквизитВидаНоменклатуры = Неопределено;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКоличествоСопоставленныхРеквизитов(КоличествоВыбранных, КоличествоДоступныхДляВыбораРеквизитов)
	
	ОсталосьСопоставитьРеквизитов = КоличествоДоступныхДляВыбораРеквизитов - КоличествоВыбранных;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьНовыеРеквизитыВВидНоменклатуры(НовыеРеквизиты, ЯвляетсяРеквизитомХарактеристики, Отказ)
	
	РеквизитыКДобавлению = Новый Массив;
	
	Если ТипЗнч(НовыеРеквизиты) <> Тип("Массив") И ЗначениеЗаполнено(НовыеРеквизиты) Тогда
		РеквизитыКДобавлению.Добавить(НовыеРеквизиты);
	Иначе
		РеквизитыКДобавлению = НовыеРеквизиты;
	КонецЕсли;
	
	Если РеквизитыКДобавлению.Количество() = 0 Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	////////////////////////////////////////////////////////////////////////////////
	
	РаботаСНоменклатуройПереопределяемый.ПрисвоитьРеквизитыОбъекту(ВидНоменклатуры, РеквизитыКДобавлению, ЯвляетсяРеквизитомХарактеристики);
		
	ЗаполнитьРеквизитыВидаНоменклатуры();
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьДанныеПоКатегории()
	
	ПараметрыЗавершения = Новый Структура;
	
	ПолучитьНоменклатуруЗавершение = Новый ОписаниеОповещения("ПолучитьДанныеПоКатегорииЗавершение", ЭтотОбъект, ПараметрыЗавершения);
	
	РаботаСНоменклатуройКлиент.ПолучитьДанныеКатегорийСервиса(
		ПолучитьНоменклатуруЗавершение, ИдентификаторКатегории, ЭтотОбъект, ИдентификаторЗадания);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицыФормы(АдресРезультата, ДополнительныеПараметры)
	
	Если НЕ ЭтоАдресВременногоХранилища(АдресРезультата) Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеПоКатегории = ПолучитьИзВременногоХранилища(АдресРезультата);
	
	Если ТипЗнч(ДанныеПоКатегории) <> Тип("ТаблицаЗначений") Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеПоТекущейКатегории = ДанныеПоКатегории[0];
	
	СоответствиеРеквизитовИЗначений = Неопределено;
	
	РаботаСНоменклатурой.ПолучитьСоответствиеРеквизитовИЗначений(ДанныеПоКатегории.ВыгрузитьКолонку("Идентификатор"), СоответствиеРеквизитовИЗначений, ВидНоменклатуры);
		
	РаботаСНоменклатурой.ЗаполнитьСоответствиеРеквизитовИЗначенийКатегорий(СоответствиеРеквизитовИЗначений, ДанныеПоТекущейКатегории, ВидНоменклатуры);
	
	ЗаполнитьТаблицуОсновныхРеквизитов(ДанныеПоТекущейКатегории);
	
	ЗаполнитьТаблицуДополнительныхРеквизитов(ДанныеПоТекущейКатегории);
	
	УправлениеВидимостьюДоступностью(ЭтотОбъект);
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуОсновныхРеквизитов(ДанныеПоКатегории)
	
	Если ДанныеПоКатегории= Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	////////////////////////////////////////////////////////////////////////////////
	
	ЗначенияРеквизитовОбъекта = Новый ТаблицаЗначений;
	
	РаботаСНоменклатуройПереопределяемый.ПолучитьЗначенияРеквизитовВидовНоменклатуры(ВидНоменклатуры, ЗначенияРеквизитовОбъекта);
	
	ТаблицаОтличий = РаботаСНоменклатурой.ТаблицаОтличийРеквизитов();
	
	РаботаСНоменклатуройПереопределяемый.ПолучитьОтличияВидаНоменклатурыИКатегории(ДанныеПоКатегории, ЗначенияРеквизитовОбъекта[0], ТаблицаОтличий);
	
	ОсновныеРеквизиты.Загрузить(ТаблицаОтличий);
			
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуДополнительныхРеквизитов(ДанныеПоКатегории)
	
	Если ДанныеПоКатегории = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	////////////////////////////////////////////////////////////////////////////////
	
	ЗаполнитьРеквизитыКатегорий(ДанныеПоКатегории);
	
	ЗаполнитьРеквизитыВидаНоменклатуры();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизитыКатегорий(ДанныеПоКатегории)
		
	Для Каждого ЭлементКоллекции Из ДанныеПоКатегории.ДополнительныеРеквизиты Цикл
		ДобавитьСтрокуДополнительногоРеквизита(ЭлементКоллекции, Ложь);
	КонецЦикла;
	
	Для Каждого ЭлементКоллекции Из ДанныеПоКатегории.Характеристики.ДополнительныеРеквизиты Цикл
		ДобавитьСтрокуДополнительногоРеквизита(ЭлементКоллекции, Истина);
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтрокуДополнительногоРеквизита(ЭлементКоллекции, ЯвляетсяХарактеристикой)
	
	НоваяСтрока = ДополнительныеРеквизиты.Добавить();
	
	НоваяСтрока.РеквизитВидаНоменклатуры = ЭлементКоллекции.РеквизитИнформационнойБазы;
	НоваяСтрока.РеквизитКатегории = ЭлементКоллекции.Наименование;
	НоваяСтрока.ТипРеквизитаКатегории = ЭлементКоллекции.Тип;
	НоваяСтрока.ИдентификаторРеквизитаКатегории = ЭлементКоллекции.Идентификатор;
	НоваяСтрока.ЯвляетсяХарактеристикойКатегории = ЯвляетсяХарактеристикой;
	
	Если ЗначениеЗаполнено(ЭлементКоллекции.Значения) Тогда
		
		КоличествоСопоставленныхЗначений = ЭлементКоллекции.Значения.Количество() 
			- ЭлементКоллекции.Значения.НайтиСтроки(Новый Структура("ЗначениеИнформационнойБазы", Неопределено)).Количество();
		
		НоваяСтрока.СопоставленоЗначений 
			= ТекстКоличествоСопоставленныхЗначений(КоличествоСопоставленныхЗначений, ЭлементКоллекции.Значения.Количество());
		
		НоваяСтрока.КоличествоЗначенийВСервисе = ЭлементКоллекции.Значения.Количество();
		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСписокВыбораРеквизитовВидаНоменклатуры()
	
	// Заполнение привязано к активации строки, поскольку в зависимости от режима работы с характеристиками
	// нужно отслеживать является ли реквизит категории характеристикой.
	
	ТекущиеДанные = Элементы.ДополнительныеРеквизиты.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СписокВыбора = Элементы.ДополнительныеРеквизитыРеквизитВидаНоменклатуры.СписокВыбора;
	
	ИспользоватьХарактеристики = СтрСравнить(РежимЗагрузкиХарактеристик, "ВХарактеристики") = 0;
	
	КоличествоВыбранных = 0;
	КоличествоДоступныхДляВыбораРеквизитов = ДополнительныеРеквизиты.Количество();
				
	// Заполнение списка выбора
				
	СписокВыбора.Очистить();
	
	// Добавляем реквизит текущей строки, чтобы его можно было видеть в списке выбора
	Если ЗначениеЗаполнено(ТекущиеДанные.РеквизитВидаНоменклатуры) Тогда
		СписокВыбора.Добавить(ТекущиеДанные.РеквизитВидаНоменклатуры); 	
	КонецЕсли;
	
	Для каждого ЭлементКоллекции Из ДополнительныеРеквизитыВидаНоменклатуры Цикл
		
		РеквизитВыбран = ДополнительныеРеквизиты.НайтиСтроки(
			Новый Структура("РеквизитВидаНоменклатуры", ЭлементКоллекции.РеквизитВидаНоменклатуры)).Количество() <> 0;
			
		Если РеквизитВыбран Тогда
			КоличествоВыбранных = КоличествоВыбранных + 1;
			Продолжить;
		КонецЕсли;	
				
		Если НЕ ИспользоватьХарактеристики И ЭлементКоллекции.ЯвляетсяХарактеристикой Тогда
			Продолжить;
		КонецЕсли;	
		
		Если ИспользоватьХарактеристики 
			И ТекущиеДанные <> Неопределено 
			И ТекущиеДанные.ЯвляетсяХарактеристикойКатегории <> ЭлементКоллекции.ЯвляетсяХарактеристикой Тогда
			
			Продолжить;
		КонецЕсли;
						
		////////////////////////////////////////////////////////////////////////////////
		
		СписокВыбора.Добавить(ЭлементКоллекции.РеквизитВидаНоменклатуры);	
		
	КонецЦикла;
	
	ОбновитьКоличествоСопоставленныхРеквизитов(КоличествоВыбранных, КоличествоДоступныхДляВыбораРеквизитов);
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизитыВидаНоменклатуры()
	
	ТаблицаРеквизитов = Новый ТаблицаЗначений;
	
	РаботаСНоменклатуройПереопределяемый.ПолучитьДополнительныеРеквизитыВидаНоменклатуры(ВидНоменклатуры, ТаблицаРеквизитов);
	
	Если ТаблицаРеквизитов.Количество() > 0 Тогда
		ДополнительныеРеквизитыВидаНоменклатуры.Загрузить(ТаблицаРеквизитов);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеВидимостьюДоступностью(Форма)
	
	Элементы = Форма.Элементы;
	
	СтраницаОсновныеРеквизиты = Элементы.СтраницыРеквизитов.ТекущаяСтраница = Элементы.СтраницаОсновныеРеквизиты;
	СтраницаДополнительныеРеквизиты = Элементы.СтраницыРеквизитов.ТекущаяСтраница = Элементы.СтраницаДополнительныеРеквизиты;
	
	Элементы.Далее.Видимость = СтраницаОсновныеРеквизиты;
	Элементы.Далее.КнопкаПоУмолчанию = СтраницаОсновныеРеквизиты;
	
	Элементы.Назад.Видимость = СтраницаДополнительныеРеквизиты;
	Элементы.Готово.КнопкаПоУмолчанию = СтраницаДополнительныеРеквизиты;
	
	Элементы.ГруппаДополнительныеРеквизиты.Доступность = Форма.ДополнительныеРеквизиты.Количество() > 0;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИнформациюПоСопоставленнымЗначениям(ИдентификаторСтроки)
	
	ТекущаяСтрока = ДополнительныеРеквизиты.НайтиПоИдентификатору(ИдентификаторСтроки);
	
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрока.СопоставленоЗначений = ТекстКоличествоСопоставленныхЗначений(
		КоличествоСопоставленныхЗначений(ТекущаяСтрока.РеквизитВидаНоменклатуры), ТекущаяСтрока.КоличествоЗначенийВСервисе);
			
КонецПроцедуры

&НаСервере
Функция КоличествоСопоставленныхЗначений(РеквизитВидаНоменклатуры)
	
	Если НЕ ЗначениеЗаполнено(РеквизитВидаНоменклатуры) Тогда
		Возврат 0;
	КонецЕсли;
	
	ТипДополнительныхЗначений = Метаданные.ОпределяемыеТипы.ЗначенияСвойствОбъектовРаботаСНоменклатурой.Тип.Типы()[0];
	
	Если НЕ РеквизитВидаНоменклатуры.ТипЗначения.СодержитТип(ТипДополнительныхЗначений) Тогда
		Возврат 0;
	КонецЕсли;
	
	////////////////////////////////////////////////////////////////////////////////
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	СоответствиеЗначенийРеквизитовРаботаСНоменклатурой.Значение КАК Значение
	|ИЗ
	|	РегистрСведений.СоответствиеЗначенийРеквизитовРаботаСНоменклатурой КАК СоответствиеЗначенийРеквизитовРаботаСНоменклатурой
	|ГДЕ
	|	СоответствиеЗначенийРеквизитовРаботаСНоменклатурой.ОбъектСопоставления = &ВидНоменклатуры
	|	И СоответствиеЗначенийРеквизитовРаботаСНоменклатурой.РеквизитОбъекта = &РеквизитВидаНоменклатуры";
	
	Запрос.УстановитьПараметр("РеквизитВидаНоменклатуры", РеквизитВидаНоменклатуры);
	Запрос.УстановитьПараметр("ВидНоменклатуры", ВидНоменклатуры);
	
	Возврат Запрос.Выполнить().Выбрать().Количество();
	
КонецФункции

&НаСервере
Процедура ЗаполнитьПодсказкиФормы()
	
	Элементы.ПояснениеКОперации.Заголовок = Новый ФорматированнаяСтрока(ТекстПоясненияКФорме());
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	// Если реквизит не выбран
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Доступность", Ложь);
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = 'Не выбран реквизит'"));
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", Новый Цвет(200, 200, 200));
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ДополнительныеРеквизиты.РеквизитВидаНоменклатуры");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ДополнительныеРеквизитыСопоставленоЗначений.Имя);
	
	// Если тип не Список сопоставление значений не доступно
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Доступность", Ложь);
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = 'Автоматически'"));
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", Новый Цвет(200, 200, 200));
	
	ГруппаОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ДополнительныеРеквизиты.ТипРеквизитаКатегории");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = "Список";
	
	ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ДополнительныеРеквизиты.РеквизитВидаНоменклатуры");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Заполнено;
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ДополнительныеРеквизитыСопоставленоЗначений.Имя);	
	
	// Колонка Реквизит вида номенклатуры
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Текст", ТекстНеЗаполненРеквизитВидаНоменклатуры());
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", Новый Цвет(200, 200, 200));
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ДополнительныеРеквизиты.РеквизитВидаНоменклатуры");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ДополнительныеРеквизитыРеквизитВидаНоменклатуры.Имя);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиОповещений

&НаКлиенте
Процедура ПриЗакрытииФормыСопоставленияЗначений(ДанныеПоСопоставленнымЗначениям, ДополнительныеПараметры) Экспорт
	
	ЗаполнитьИнформациюПоСопоставленнымЗначениям(ДополнительныеПараметры.ВыбраннаяСтрока);	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ДополнительныеРеквизиты.ТекущиеДанные;
	
	Если ТипЗнч(НовыйОбъект) <> ТипДополнительногоРеквизита() Тогда
		Возврат;
	КонецЕсли;	
		
	ЯвляетсяРеквизитомХарактеристики = ТекущиеДанные <> Неопределено 
		И ТекущиеДанные.ЯвляетсяХарактеристикойКатегории 
		И СтрСравнить(РежимЗагрузкиХарактеристик, "ВХарактеристики") = 0;
	
	Отказ = Ложь;
	
	ДобавитьНовыеРеквизитыВВидНоменклатуры(НовыйОбъект, ЯвляетсяРеквизитомХарактеристики, Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные <> Неопределено 
		И НЕ ЗначениеЗаполнено(Элементы.ДополнительныеРеквизиты.ТекущиеДанные.РеквизитВидаНоменклатуры) Тогда
		
		Элементы.ДополнительныеРеквизиты.ТекущиеДанные.РеквизитВидаНоменклатуры = НовыйОбъект;
	КонецЕсли;
	
	ЗаполнитьСписокВыбораРеквизитовВидаНоменклатуры();
		
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТипДополнительногоРеквизита()
	
	Возврат Метаданные.ОпределяемыеТипы.ДополнительныеРеквизитыРаботаСНоменклатурой.Тип.Типы()[0];
	
КонецФункции

&НаКлиенте
Процедура ПолучитьДанныеПоКатегорииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ИдентификаторЗадания <> ДополнительныеПараметры.ИдентификаторЗадания Тогда 
		Возврат;
	КонецЕсли;
	
	ИдентификаторЗадания = Неопределено;
		
	ЗаполнитьТаблицыФормы(Результат.АдресРезультата, ДополнительныеПараметры);
	
КонецПроцедуры

#КонецОбласти

#Область СтроковыеКонстанты

&НаКлиентеНаСервереБезКонтекста
Функция ТекстКоличествоСопоставленныхЗначений(СопоставленоЗначений, ВсегоЗначений)
	
	Возврат СтрШаблон(НСтр("ru = 'Сопоставлено %1 из %2'"), СопоставленоЗначений, ВсегоЗначений);
	
КонецФункции

&НаСервере
Функция ТекстПоясненияКФорме()
	
	МассивПодстрок = Новый Массив;
	
	МассивПодстрок.Добавить(НСтр("ru = 'Обновление вида номенклатуры'") + " ");
	МассивПодстрок.Добавить(Новый ФорматированнаяСтрока(Строка(ВидНоменклатуры),Новый Шрифт(,,Истина)));
	МассивПодстрок.Добавить(" " + НСтр("ru = 'на основании категории 1С:Номенклатуры'") + " ");
	МассивПодстрок.Добавить(Новый ФорматированнаяСтрока(НаименованиеКатегории,,,,ИдентификаторКатегории));

	Возврат МассивПодстрок;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ТекстНеЗаполненРеквизитВидаНоменклатуры()
	
	Возврат НСтр("ru = '<Выберите реквизит или создайте новый>'");
	
КонецФункции

#КонецОбласти