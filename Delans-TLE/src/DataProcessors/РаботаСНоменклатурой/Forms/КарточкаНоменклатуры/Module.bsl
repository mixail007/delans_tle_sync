
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	////////////////////////////////////////////////////////////////////////////////
	
	Идентификаторы = Неопределено;
	
	Параметры.Свойство("ИдентификаторыНоменклатуры", Идентификаторы);
	Если Идентификаторы = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Параметры.Свойство("СтрокаШтрихкода", СтрокаШтрихкода);
	Параметры.Свойство("РежимВыбора", РежимВыбора);
	
	РежимПоискаПоШтрихкоду = ЗначениеЗаполнено(СтрокаШтрихкода);
	
	ИдентификаторыНоменклатуры = Новый Массив;
	
	Если ТипЗнч(Идентификаторы) = Тип("Строка") Тогда
		ИдентификаторыНоменклатуры = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Идентификаторы);
	Иначе	
		ИдентификаторыНоменклатуры = Идентификаторы;
	КонецЕсли;
	
	Если ИдентификаторыНоменклатуры.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого ЭлементКоллекции Из ИдентификаторыНоменклатуры Цикл
		НоваяСтрока = КэшПредставленийНоменклатуры.Добавить();
		НоваяСтрока.Идентификатор = ЭлементКоллекции;
	КонецЦикла;
	
	МножественныйРежим = КэшПредставленийНоменклатуры.Количество() > 1;
	
	Если РежимПоискаПоШтрихкоду Тогда
		Элементы.ПодсказкаКФорме.Заголовок 
			= ЗаголовокФормыПриПоискеПоШтрихкоду(МножественныйРежим, СтрокаШтрихкода);
	КонецЕсли;
	
	ТипНоменклатура = Метаданные.ОпределяемыеТипы.НоменклатураРаботаСНоменклатурой.Тип.Типы()[0];
	ИмяФормыСпискаНоменклатура = Метаданные.НайтиПоТипу(ТипНоменклатура).ПолноеИмя()+".Форма.ФормаСписка";
	
	////////////////////////////////////////////////////////////////////////////////
	
	ПравоИзмененияДанных = РаботаСНоменклатурой.ПравоИзмененияДанных();
	
	УстановитьВидимостьДоступность();
	
	Элементы.ГруппаОсновныеКнопкиФормы.Доступность = Ложь;
	Элементы.ГруппаКнопкиНавигации.Доступность = Ложь; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СформироватьПредставлениеНоменклатуры();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Закрыть(Новый Структура("СозданнаяНоменклатура", СозданнаяНоменклатура.ВыгрузитьЗначения()));
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура КарточкаНоменклатурыОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры)
	
	Если Элемент.ТекущаяОбласть.Имя = "Шапка_НоменклатураПрограммы" Тогда
		Если ТипЗнч(Расшифровка) = Тип("Массив")
			И ЗначениеЗаполнено(Расшифровка) Тогда
			
			СтандартнаяОбработка = Ложь;
			ПараметрыОткрытияФормыСписка = Новый Структура();
			ПараметрыОткрытияФормыСписка.Вставить("Отбор", Новый Структура("Ссылка", Расшифровка));
			ОткрытьФорму(ИмяФормыСпискаНоменклатура, ПараметрыОткрытияФормыСписка, Элемент, УникальныйИдентификатор);
			
		ИначеЕсли Не ЗначениеЗаполнено(Расшифровка) Тогда 
						
			СтандартнаяОбработка = Ложь;
			
			Если ПравоИзмененияДанных Тогда
				СозданиеНоменклатурыНачало();
			КонецЕсли;

		КонецЕсли;
	ИначеЕсли Элемент.ТекущаяОбласть.Имя = "Шапка_Категория" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ОткрытьФормуСпискаНоменклатуры(Расшифровка);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура БаннерНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ПустаяСтрока(СсылкаПереходаПоБаннеру) Тогда 
		Возврат;
	КонецЕсли;
	
	ОбщегоНазначенияКлиент.ОткрытьНавигационнуюСсылку(СсылкаПереходаПоБаннеру); 
	
КонецПроцедуры

&НаКлиенте
Процедура ПредложениеПокупкиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
		
	СтандартнаяОбработка = Ложь;
	
	КупитьКарточкиНоменклатуры();	
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьФормуСпискаНоменклатуры(ИдентификаторКатегории)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ИдентификаторКатегории", ИдентификаторКатегории);
	ОткрытьФорму("Обработка.РаботаСНоменклатурой.Форма.ЗагрузкаНоменклатуры", ПараметрыОткрытия);
	
	// Дополнительно оповестим формы, если форма поиска ранее была открыта.
	Оповестить("РаботаСНоменклатурой_Обновить", ПараметрыОткрытия, ЭтотОбъект);

КонецПроцедуры


&НаКлиенте
Процедура ЛистатьНазад(Команда)
	Если ТекущийИндексНоменклатуры = 0 Тогда
		Возврат;
	КонецЕсли;
	
	////////////////////////////////////////////////////////////////////////////////
	
	ТекущийИндексНоменклатуры = ТекущийИндексНоменклатуры - 1;
	СформироватьПредставлениеНоменклатуры();
	
КонецПроцедуры

&НаКлиенте
Процедура ЛистатьВперед(Команда)
	
	Если ТекущийИндексНоменклатуры = КэшПредставленийНоменклатуры.Количество() - 1 Тогда
		Возврат;
	КонецЕсли;
	
	////////////////////////////////////////////////////////////////////////////////
	
	ТекущийИндексНоменклатуры = ТекущийИндексНоменклатуры + 1;
	СформироватьПредставлениеНоменклатуры();
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНоменклатуру(Команда)
	
	СозданиеНоменклатурыНачало();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СозданиеНоменклатурыНачало()
	
	Идентификаторы = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(
		КэшПредставленийНоменклатуры[ТекущийИндексНоменклатуры].Идентификатор);
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ТекущийИндексНоменклатуры", ТекущийИндексНоменклатуры);
	ПараметрыЗавершения.Вставить("ИдентификаторЗадания",      Неопределено);
	
	СоздатьНоменклатуруПродолжение = Новый ОписаниеОповещения("СоздатьНоменклатуруПродолжение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	РаботаСНоменклатуройКлиент.СоздатьНоменклатуру(СоздатьНоменклатуруПродолжение, Идентификаторы, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНоменклатуруПродолжение(Результат, ДополнительныеПараметры) Экспорт 
	
	Ошибка = Ложь;
	Если ЭтоАдресВременногоХранилища(Результат.АдресРезультата) Тогда 
		РезультатСоздания = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		Если РезультатСоздания = Неопределено Тогда 
			Ошибка = Истина;
		КонецЕсли;
	Иначе
		Ошибка = Истина;
	КонецЕсли;
	
	ПроставитьПризнакЗагрузки = Ложь;
	Если Ошибка Тогда 
		
		НажатиеОповещенияПользователя = "";
		КартинкаОповещения = БиблиотекаКартинок.Ошибка32;
		ТекстОповещения = НСтр("ru = 'Создать не удалось'");
		
	ИначеЕсли РезультатСоздания.Создано = 1 Тогда 
		
		НажатиеОповещенияПользователя = Новый ОписаниеОповещения("НажатиеОповещенияПользователя",
			ЭтотОбъект, РезультатСоздания.НовыеЭлементы);
		КартинкаОповещения = БиблиотекаКартинок.Успешно32;
		ТекстОповещения = СтрШаблон(НСтр("ru = 'Создано элементов %1'"), РезультатСоздания.Создано);
		
		ПроставитьПризнакЗагрузки = Истина;
		
	Иначе
		
		НажатиеОповещенияПользователя = "";
		КартинкаОповещения = БиблиотекаКартинок.Ошибка32;
		ТекстОповещения = НСтр("ru = 'Создать не удалось'");
		
	КонецЕсли;
	
	ПоказатьОповещениеПользователя(НСтр("ru = 'Создание номенклатуры'"),
		НажатиеОповещенияПользователя, ТекстОповещения, КартинкаОповещения,
		СтатусОповещенияПользователя.Информация, УникальныйИдентификатор);
		
	Если Ошибка Тогда 
		Возврат;
	КонецЕсли;
	
	Если РезультатСоздания.Свойство("ТекущийБаланс") Тогда
		ТекущийБаланс = РезультатСоздания.ТекущийБаланс;
	КонецЕсли;
	
	ОбновитьТекущийБаланс();
	
	ТекущийИндексНоменклатуры = ДополнительныеПараметры.ТекущийИндексНоменклатуры;
	ПереключитьНоменклатуру(ТекущийИндексНоменклатуры);
	
	Если ПроставитьПризнакЗагрузки Тогда 
		
		ПроставитьПризнакЗагрузкиВКарточке(РезультатСоздания.НовыеЭлементы[0], ТекущийИндексНоменклатуры);
		
		ПараметрыОповещения = Новый Структура;
		
		ПараметрыОповещения.Вставить("СсылкаНаНовуюНоменклатуру", РезультатСоздания.НовыеЭлементы[0]);
		ПараметрыОповещения.Вставить("ТекущийБаланс", ТекущийБаланс);
		ПараметрыОповещения.Вставить("ИдентификаторВладельца", ?(ВладелецФормы = Неопределено, Неопределено, ВладелецФормы.УникальныйИдентификатор));
		
		Оповестить("РаботаСНоменклатурой_ПроставитьПризнакЗагрузки", ПараметрыОповещения, "РаботаСНоменклатурой_КарточкаНоменклатуры");
		
		СозданнаяНоменклатура.Добавить(РезультатСоздания.НовыеЭлементы[0]);
		
	КонецЕсли;
		
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ИдентификаторЗадания", Неопределено);
	
	СформироватьПредставлениеНоменклатурыЗавершение = Новый ОписаниеОповещения("СформироватьПредставлениеНоменклатурыЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	РаботаСНоменклатуройКлиент.СформироватьПредставленияКарточекНоменклатуры(СформироватьПредставлениеНоменклатурыЗавершение,
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(КэшПредставленийНоменклатуры[ТекущийИндексНоменклатуры].Идентификатор), 
		ЭтотОбъект, 
		Неопределено, 
		Элементы.КарточкаНоменклатуры.ОтображениеСостояния);
			
КонецПроцедуры

&НаКлиенте
Процедура ПроставитьПризнакЗагрузкиВКарточке(НоменклатураСсылка, ТекущийИндексНоменклатуры)
	
	Шапка_НоменклатураПрограммы = КарточкаНоменклатуры.Области.Найти("Шапка_НоменклатураПрограммы");
	Если Не Шапка_НоменклатураПрограммы = Неопределено Тогда 
		КарточкаНоменклатуры.Области.Шапка_НоменклатураПрограммы.Расшифровка = НоменклатураСсылка;
		КарточкаНоменклатуры.Области.Шапка_НоменклатураПрограммы.Текст = НоменклатураСсылка;
		
		ЗаписьКэша = КэшПредставленийНоменклатуры[ТекущийИндексНоменклатуры];
		ПоместитьВоВременноеХранилище(КарточкаНоменклатуры, ЗаписьКэша.ПутьКТабличномуДокументу);
		
	КонецЕсли;
	
	УстановитьДоступностьКомандыСоздатьНоменклатуру();
	
КонецПроцедуры

&НаКлиенте
Процедура НажатиеОповещенияПользователя(ДополнительныеПараметры) Экспорт 
	
	ПараметрыОткрытияФормыСписка = Новый Структура();
	ПараметрыОткрытияФормыСписка.Вставить("Отбор", Новый Структура("Ссылка", ДополнительныеПараметры));
	ОткрытьФорму(ИмяФормыСпискаНоменклатура, ПараметрыОткрытияФормыСписка, ЭтотОбъект, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ПереключитьНоменклатуру(Индекс)
	
	ЗаписьКэша = КэшПредставленийНоменклатуры[Индекс];
	
	Баннер                  = ЗаписьКэша.ПутьКДаннымБаннера;
	СсылкаПереходаПоБаннеру = ЗаписьКэша.СсылкаПереходаПоБаннеру;
	КарточкаНоменклатуры    = ПолучитьПредставлениеНоменклатуры(ЗаписьКэша.ПутьКТабличномуДокументу);
	ОбновитьСчетчикКарточек();
	
	Элементы.ГруппаБаннер.Видимость = Не ПустаяСтрока(Баннер);
	УстановитьДоступностьКомандыСоздатьНоменклатуру();
	УправлениеДоступностьюКнопокНавигации();
		
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьКомандыСоздатьНоменклатуру()

	Если ПравоИзмененияДанных Тогда
		
		Элементы.СоздатьНоменклатуру.Доступность = Ложь;
		Шапка_НоменклатураПрограммы = КарточкаНоменклатуры.Области.Найти("Шапка_НоменклатураПрограммы");
		Если Не Шапка_НоменклатураПрограммы = Неопределено Тогда 
			Элементы.СоздатьНоменклатуру.Доступность 
			= Не ЗначениеЗаполнено(КарточкаНоменклатуры.Области.Шапка_НоменклатураПрограммы.Расшифровка)
		КонецЕсли;
		
	Иначе
		Элементы.СоздатьНоменклатуру.Видимость = Ложь;	
	КонецЕсли;
		
КонецПроцедуры
	
&НаКлиенте
Процедура УправлениеДоступностьюКнопокНавигации()
	
	Элементы.ЛистатьВперед.Доступность = ТекущийИндексНоменклатуры <> КэшПредставленийНоменклатуры.Количество() - 1;
	Элементы.ЛистатьНазад.Доступность = ТекущийИндексНоменклатуры <> 0;

КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьДоступность()
	
	Если ПравоИзмененияДанных Тогда
		
		Элементы.Выбрать.Видимость                     = РежимВыбора;
		Элементы.Выбрать.КнопкаПоУмолчанию             = РежимВыбора;
		
		Элементы.СоздатьНоменклатуру.Видимость         = НЕ РежимВыбора;
		Элементы.СоздатьНоменклатуру.КнопкаПоУмолчанию = НЕ РежимВыбора;

	Иначе
		Элементы.СоздатьНоменклатуру.Видимость = Ложь;
		Элементы.Выбрать.Видимость             = Ложь;
	КонецЕсли;
	
	Элементы.ПодсказкаКФорме.Видимость        = РежимПоискаПоШтрихкоду;
	Элементы.ГруппаКнопкиНавигации.Видимость  = МножественныйРежим;
	
	Элементы.ГруппаБаннер.Видимость = Не ПустаяСтрока(Баннер);
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьПредставлениеНоменклатуры()
	
	СтрокаКэша = КэшПредставленийНоменклатуры[ТекущийИндексНоменклатуры];
	
	ТекущийИдентификатор = СтрокаКэша.Идентификатор;
	
	Если ЗначениеЗаполнено(СтрокаКэша.ПутьКТабличномуДокументу) И НЕ СтрокаКэша.ПревышенЛимит Тогда
		ПереключитьНоменклатуру(ТекущийИндексНоменклатуры);
		Возврат;	
	КонецЕсли;
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ИдентификаторЗадания", Неопределено);
	
	СформироватьПредставлениеНоменклатурыЗавершение = Новый ОписаниеОповещения("СформироватьПредставлениеНоменклатурыЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
		
	РаботаСНоменклатуройКлиент.СформироватьПредставленияКарточекНоменклатуры(СформироватьПредставлениеНоменклатурыЗавершение,
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ТекущийИдентификатор), 
		ЭтотОбъект, 
		Неопределено, 
		Элементы.КарточкаНоменклатуры.ОтображениеСостояния);
		
	Если Элементы.КарточкаНоменклатуры.ОтображениеСостояния.Картинка.Вид <> ВидКартинки.Пустая Тогда 
		Элементы.КарточкаНоменклатуры.ОтображениеСостояния.ДополнительныйРежимОтображения = ДополнительныйРежимОтображения.Неактуальность;
		Элементы.КарточкаНоменклатуры.ОтображениеСостояния.Текст = НСтр("ru = 'Карточка 1С:Номенклатуры загружается...'");
		Элементы.КарточкаНоменклатуры.ОтображениеСостояния.Видимость = Истина;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СформироватьПредставлениеНоменклатурыЗавершение(Результат, ДополнительныеПараметры) Экспорт 
	
	КарточкаКуплена = Истина;
	
	ЗагрузитьКэшПредставленийНоменклатуры(Результат.АдресРезультата, ДополнительныеПараметры, КарточкаКуплена);
		
	Элементы.КарточкаНоменклатуры.ОтображениеСостояния.ДополнительныйРежимОтображения = ДополнительныйРежимОтображения.НеИспользовать;
	Элементы.КарточкаНоменклатуры.ОтображениеСостояния.Видимость = Ложь;
	Элементы.КарточкаНоменклатуры.ОтображениеСостояния.Текст = "";
	Элементы.КарточкаНоменклатуры.ОтображениеСостояния.Картинка = Неопределено;
	
	Если КэшПредставленийНоменклатуры.Количество() >= (ТекущийИндексНоменклатуры + 1) Тогда
		ПереключитьНоменклатуру(ТекущийИндексНоменклатуры);
	КонецЕсли;
	
	Элементы.ГруппаОсновныеКнопкиФормы.Доступность = КэшПредставленийНоменклатуры.Количество();
	Элементы.ГруппаКнопкиНавигации.Доступность = КэшПредставленийНоменклатуры.Количество();
		
	ОбновитьСчетчикКарточек();
	УправлениеДоступностьюКнопокНавигации();
	ЗакэшироватьИзображенияБаннеров();
	ОбновитьТекущийБаланс();
	
	Оповестить("РаботаСНоменклатурой_ОбновитьТекущийБаланс", Новый Структура("ТекущийБаланс", ТекущийБаланс));
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьКэшПредставленийНоменклатуры(АдресРезультата, ДополнительныеПараметры, КарточкаКуплена)
	
	Если ЭтоАдресВременногоХранилища(АдресРезультата) Тогда 
		Результат = ПолучитьИзВременногоХранилища(АдресРезультата);
		Если Результат = Неопределено Тогда 
			Возврат;
		КонецЕсли;
	Иначе
		Возврат;
	КонецЕсли;
	
	КарточкаКуплена = Результат.КарточкаКуплена;
	
	СтрокиКэша = КэшПредставленийНоменклатуры.НайтиСтроки(Новый Структура("Идентификатор", Результат.Идентификатор));
	
	ТекущийБаланс = Результат.ТекущийБаланс;
	
	Если СтрокиКэша.Количество() <> 0 Тогда
		ЗаполнитьЗначенияСвойств(СтрокиКэша[0], Результат);	
	КонецЕсли;
	
	Если НЕ Результат.ПревышенЛимит И НЕ КарточкаКуплена Тогда
		ОткрытьФорму("Обработка.РаботаСНоменклатурой.Форма.ОшибкаПокупкиНоменклатуры", 
			Новый Структура("Ошибка", Результат.ОписаниеОшибки));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьПредставлениеНоменклатуры(ПутьКТабличномуДокументу)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Если НЕ ЭтоАдресВременногоХранилища(ПутьКТабличномуДокументу) Тогда
		Возврат ТабличныйДокумент;
	КонецЕсли;
	
	ЗначениеХранилища = ПолучитьИзВременногоХранилища(ПутьКТабличномуДокументу);
	
	Если ТипЗнч(ЗначениеХранилища) <> Тип("ТабличныйДокумент") Тогда
		Возврат ТабличныйДокумент;
	КонецЕсли;
	
	Возврат ЗначениеХранилища;
	
КонецФункции

&НаКлиенте
Процедура ОбновитьСчетчикКарточек()
	
	НадписьТекущаяПозиция = СтрШаблон("%1/%2", ТекущийИндексНоменклатуры + 1,  КэшПредставленийНоменклатуры.Количество());
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакэшироватьИзображенияБаннеров()
	
	ИдентификаторыИсточников = Новый Массив;
	
	Для Каждого ЗаписьКэша Из КэшПредставленийНоменклатуры Цикл 
		Если Не ПустаяСтрока(ЗаписьКэша.ИдентификаторРекламнойЗаписи) 
			И ИдентификаторыИсточников.Найти(ЗаписьКэша.ИдентификаторРекламнойЗаписи) = Неопределено Тогда 
			ИдентификаторыИсточников.Добавить(ЗаписьКэша.ИдентификаторРекламнойЗаписи);
		КонецЕсли;
	КонецЦикла;

	Если ИдентификаторыИсточников.Количество() Тогда 
		ЗакэшироватьИзображенияБаннеровЗавершение = Новый ОписаниеОповещения("ЗакэшироватьИзображенияБаннеровЗавершение",
			ЭтотОбъект);
			
		РаботаСНоменклатуройКлиент.ЗакэшироватьИзображенияБаннеров(ЗакэшироватьИзображенияБаннеровЗавершение, ИдентификаторыИсточников, ЭтотОбъект);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗакэшироватьИзображенияБаннеровЗавершение(Результат, ДополнительныеПараметры) Экспорт 
	
	Если ЭтоАдресВременногоХранилища(Результат.АдресРезультата) Тогда 
		КэшБаннеров = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		Если КэшБаннеров = Неопределено Тогда 
			Возврат;
		КонецЕсли;
	Иначе
		Возврат;
	КонецЕсли;
	
	Для Каждого Кэш Из КэшБаннеров Цикл 
		МассивДляКэширования = КэшПредставленийНоменклатуры.НайтиСтроки(Новый Структура("ИдентификаторРекламнойЗаписи", Кэш.Ключ));
		Для Каждого ЗаписьКэша Из МассивДляКэширования Цикл 
			ЗаписьКэша.ПутьКДаннымБаннера      = Кэш.Значение.ПутьКДаннымБаннера;
			ЗаписьКэша.СсылкаПереходаПоБаннеру = Кэш.Значение.СсылкаПереходаПоБаннеру;
		КонецЦикла;
	КонецЦикла;
	
	Если КэшПредставленийНоменклатуры.Количество() > 0 Тогда 
		ЗаписьКэша = КэшПредставленийНоменклатуры[ТекущийИндексНоменклатуры];
		Баннер = ЗаписьКэша.ПутьКДаннымБаннера;
		СсылкаПереходаПоБаннеру = ЗаписьКэша.СсылкаПереходаПоБаннеру;
	КонецЕсли;

	Элементы.ГруппаБаннер.Видимость = Не ПустаяСтрока(Баннер);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТекущийБаланс()
	
	Элементы.ДекорацияДоступноДляПокупки.Заголовок = 
		Новый ФорматированнаяСтрока(НСтр("ru = 'Доступно для покупки'") + 
			": " + Строка(Формат(ТекущийБаланс, "ЧН=0")),,,, "https://catalog-api.1c.ru/lk");
		
КонецПроцедуры

&НаКлиенте
Функция КупитьКарточкиНоменклатуры()
	
	ИдентификаторНоменклатуры = КэшПредставленийНоменклатуры[ТекущийИндексНоменклатуры].Идентификатор;
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ИдентификаторЗадания", Неопределено);
	ПараметрыЗавершения.Вставить("ИдентификаторНоменклатуры", ИдентификаторНоменклатуры);
	
	КупитьКарточкиНоменклатурыЗавершение = Новый ОписаниеОповещения("КупитьКарточкиНоменклатурыЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	РаботаСНоменклатуройКлиент.КупитьКарточкиНоменклатуры(КупитьКарточкиНоменклатурыЗавершение,
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ИдентификаторНоменклатуры), 
		ЭтотОбъект);
	
КонецФункции
	
&НаКлиенте
Процедура КупитьКарточкиНоменклатурыЗавершение(Результат, ДополнительныеПараметры) Экспорт 
	
	Если НЕ ЭтоАдресВременногоХранилища(Результат.АдресРезультата) Тогда 
		Возврат;
	КонецЕсли;
	
	РезультатПокупки = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
	
	Если РезультатПокупки = Неопределено Тогда 
		Возврат;
	КонецЕсли;
		
	Если РезультатПокупки.ЕстьОшибки Тогда
		ОткрытьФорму("Обработка.РаботаСНоменклатурой.Форма.ОшибкаПокупкиНоменклатуры", 
			Новый Структура("Ошибка", РезультатПокупки.ОписаниеОшибки));
	Иначе
		
		ПараметрыЗавершения = Новый Структура;
		ПараметрыЗавершения.Вставить("ИдентификаторЗадания", Неопределено);
		
		СформироватьПредставлениеНоменклатурыЗавершение = Новый ОписаниеОповещения("СформироватьПредставлениеНоменклатурыЗавершение",
			ЭтотОбъект, ПараметрыЗавершения);
		
		РаботаСНоменклатуройКлиент.СформироватьПредставленияКарточекНоменклатуры(СформироватьПредставлениеНоменклатурыЗавершение,
			ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ДополнительныеПараметры.ИдентификаторНоменклатуры), 
			ЭтотОбъект, 
			Неопределено, 
			Элементы.КарточкаНоменклатуры.ОтображениеСостояния);
			
	КонецЕсли;
	
КонецПроцедуры	

#КонецОбласти

#Область СтроковыеКонстанты

&НаКлиентеНаСервереБезКонтекста
Функция ЗаголовокФормыПриПоискеПоШтрихкоду(МножественныйРежим, СтрокаШтрихКода)
	
	Если МножественныйРежим Тогда
		Возврат СтрШаблон(
			НСтр("ru = 'По штрихкоду %1 найдено несколько карточек в сервисе 1С:Номенклатура. Выберите нужную и нажмите кнопку Создать номенклатуру.'"), 
				СтрокаШтрихКода);
	Иначе
		Возврат СтрШаблон(
			НСтр("ru = 'По штрихкоду %1 найдена карточка в сервисе 1С:Номенклатура.'"), 
				СтрокаШтрихКода);
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура КарточкаНоменклатурыВыбор(Элемент, Область, СтандартнаяОбработка)
	
	Если Область.Имя = "Шапка_ПредставлениеПревышенияЛимита" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		СформироватьПредставлениеНоменклатуры();
		
		ПоказатьОповещениеПользователя(НСтр("ru = 'Данные обновлены.'"), , , БиблиотекаКартинок.Информация32);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти