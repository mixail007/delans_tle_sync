
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Не ТорговыеПредложения.ПравоНастройкиТорговыхПредложений(Истина) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Не БизнесСеть.ОрганизацияЗарегистрирована() Тогда
		ТребуетсяРегистрацияОрганизации = Истина;
		Возврат;
	КонецЕсли;
	
	ВидКонтактнойИнформации = ТорговыеПредложения.ВидКонтактнойИнформацииАдрес();
	
	ПеречитатьДанныеФормы(Отказ);
	
	Если Параметры.Свойство("РежимОткрытия") И Параметры.РежимОткрытия = "РегионыЗакупки" Тогда
		Элементы.ГруппаСтраниц.ТекущаяСтраница = Элементы.СтраницаЗакупки;
	КонецЕсли;
	
	ОбновитьДоступностьЭлементов(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ТребуетсяРегистрацияОрганизации Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Отсутствует регистрация в сервисе 1С:Бизнес-сеть.'"));
		Отказ = Истина;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПрограммноеЗакрытие И Модифицированность Тогда
		
		Отказ = Истина;
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПриОтветеНаВопросОСохраненииИзмененныхДанных",
			ЭтотОбъект);
		
		ТекстВопроса = НСтр("ru = 'Данные модифицированы. Сохранить изменения?'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РегионыПродажиВозможнаДоставкаПриИзменении(Элемент)
	ОбновитьДоступностьЭлементов(ЭтотОбъект, Истина);
КонецПроцедуры

&НаКлиенте
Процедура АдресаПродажиВозможенСамовывозПриИзменении(Элемент)
	ОбновитьДоступностьЭлементов(ЭтотОбъект, Истина);
КонецПроцедуры

&НаКлиенте
Процедура РегионыЗакупкиВозможенСамовывозПриИзменении(Элемент)
	ОбновитьДоступностьЭлементов(ЭтотОбъект, Истина);
КонецПроцедуры

&НаКлиенте
Процедура РегионыЗакупкиТребуетсяДоставкаПриИзменении(Элемент)
	ОбновитьДоступностьЭлементов(ЭтотОбъект, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьПодсказкиПоставщиковПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьПодсказкиПокупателейПриИзменении(Элемент)
	
	Модифицированность = Истина;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРегионыПродажи

&НаКлиенте
Процедура РегионыПродажиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.РегионыПродажи.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаголовокВвода = НСтр("ru = 'Введите регион абонента'");
	ОткрытьФормуКонтактнойИнформации(ТекущиеДанные, ЗаголовокВвода);
	
КонецПроцедуры

&НаКлиенте
Процедура РегионыПродажиПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура РегионыПродажиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	ЗаголовокВвода = НСтр("ru = 'Введите регион абонента'");
	ДополнительныеПараметры = Новый Структура("Представление, ЗначенияПолей");
	ДополнительныеПараметры.Вставить("НоваяСтрока", Истина);
	ДополнительныеПараметры.Вставить("ИмяСписка", "РегионыПродажи");
	ОткрытьФормуКонтактнойИнформации(ДополнительныеПараметры, ЗаголовокВвода);
	
КонецПроцедуры

&НаКлиенте
Процедура РегионыПродажиПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	ЗаголовокВвода = НСтр("ru = 'Регион абонента'");
	ОткрытьФормуКонтактнойИнформации(Элементы.РегионыПродажи.ТекущиеДанные, ЗаголовокВвода);
	
КонецПроцедуры

&НаКлиенте
Процедура РегионыПродажиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ЗаголовокВвода = НСтр("ru = 'Регион абонента'");
	ОткрытьФормуКонтактнойИнформации(Элементы.РегионыПродажи.ТекущиеДанные, ЗаголовокВвода);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРегионыЗакупки

&НаКлиенте
Процедура РегионыЗакупкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.РегионыЗакупки.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаголовокВвода = НСтр("ru = 'Введите регион абонента'");
	ОткрытьФормуКонтактнойИнформации(ТекущиеДанные, ЗаголовокВвода);
	
КонецПроцедуры

&НаКлиенте
Процедура РегионыЗакупкиПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура РегионыЗакупкиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	ЗаголовокВвода = НСтр("ru = 'Введите регион абонента'");
	ДополнительныеПараметры = Новый Структура("Представление, ЗначенияПолей, НоваяСтрока");
	ДополнительныеПараметры.Вставить("ИмяСписка", "РегионыЗакупки");
	ОткрытьФормуКонтактнойИнформации(ДополнительныеПараметры, ЗаголовокВвода);	
	
КонецПроцедуры

&НаКлиенте
Процедура РегионыЗакупкиПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	ЗаголовокВвода = НСтр("ru = 'Регион абонента'");
	ОткрытьФормуКонтактнойИнформации(Элементы.РегионыЗакупки.ТекущиеДанные, ЗаголовокВвода);
	
КонецПроцедуры

&НаКлиенте
Процедура РегионыЗакупкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ЗаголовокВвода = НСтр("ru = 'Регион абонента'");
	ОткрытьФормуКонтактнойИнформации(Элементы.РегионыЗакупки.ТекущиеДанные, ЗаголовокВвода);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыАдресаПродажи

&НаКлиенте
Процедура АдресаПродажиПредставлениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.АдресаПродажи.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаголовокВвода = НСтр("ru = 'Введите адрес склада самовывоза'");
	ОткрытьФормуКонтактнойИнформации(ТекущиеДанные, ЗаголовокВвода);

КонецПроцедуры

&НаКлиенте
Процедура АдресаПродажиПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура АдресаПродажиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	ЗаголовокВвода = НСтр("ru = 'Введите адрес склада самовывоза'");
	ДополнительныеПараметры = Новый Структура("Представление, ЗначенияПолей, НоваяСтрока");
	ДополнительныеПараметры.Вставить("ИмяСписка", "АдресаПродажи");
	ОткрытьФормуКонтактнойИнформации(ДополнительныеПараметры, ЗаголовокВвода);
	
КонецПроцедуры

&НаКлиенте
Процедура АдресаПродажиПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	ЗаголовокВвода = НСтр("ru = 'Адрес склада самовывоза'");
	ОткрытьФормуКонтактнойИнформации(Элементы.АдресаПродажи.ТекущиеДанные, ЗаголовокВвода);
	
КонецПроцедуры

&НаКлиенте
Процедура АдресаПродажиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ЗаголовокВвода = НСтр("ru = 'Адрес склада самовывоза'");
	ОткрытьФормуКонтактнойИнформации(Элементы.АдресаПродажи.ТекущиеДанные, ЗаголовокВвода);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыАдресаЗакупки

&НаКлиенте
Процедура АдресаЗакупкиПредставлениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.АдресаЗакупки.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаголовокВвода = НСтр("ru = 'Введите адрес склада доставки'");
	ОткрытьФормуКонтактнойИнформации(ТекущиеДанные, ЗаголовокВвода);
	
КонецПроцедуры

&НаКлиенте
Процедура АдресаЗакупкиПриИзменении(Элемент)
	
	Модифицированность = Истина;

КонецПроцедуры

&НаКлиенте
Процедура АдресаЗакупкиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	ЗаголовокВвода = НСтр("ru = 'Введите адрес склада доставки'");
	ДополнительныеПараметры = Новый Структура("Представление, ЗначенияПолей, НоваяСтрока");
	ДополнительныеПараметры.Вставить("ИмяСписка", "АдресаЗакупки");
	ОткрытьФормуКонтактнойИнформации(ДополнительныеПараметры, ЗаголовокВвода);
	
КонецПроцедуры

&НаКлиенте
Процедура АдресаЗакупкиПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	ЗаголовокВвода = НСтр("ru = 'Адрес склада доставки'");
	ОткрытьФормуКонтактнойИнформации(Элементы.АдресаЗакупки.ТекущиеДанные, ЗаголовокВвода);
	
КонецПроцедуры

&НаКлиенте
Процедура АдресаЗакупкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ЗаголовокВвода = НСтр("ru = 'Адрес склада доставки'");
	ОткрытьФормуКонтактнойИнформации(Элементы.АдресаЗакупки.ТекущиеДанные, ЗаголовокВвода);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьРегионыПродажи(Команда)
	
	ОткрытьПодборРегионов("РегионыПродажи");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРегионыЗакупки(Команда)
	
	ОткрытьПодборРегионов("РегионыЗакупки");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьАдресаПродажи(Команда)
	
	ОткрытьПодборРегионов("АдресаПродажи");

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьАдресаЗакупки(Команда)
	
	ОткрытьПодборРегионов("АдресаЗакупки");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьЗакрыть(Команда)
	
	ЗаписатьДанныеИЗакрыть(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	
	ЗаписатьДанныеИЗакрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Перечитать(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ПеречитатьПродолжение", ЭтотОбъект);
	ПоказатьВопрос(Оповещение, НСтр("ru = 'Данные изменены. Перечитать данные?'"), РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗаписатьДанныеИЗакрыть(ЗакрытьФорму = Ложь)
	
	Отказ = Ложь;
	ЗаписатьДанныеПрофиляОбменаТорговымиПредложениями(Отказ);
	Если Не Отказ Тогда
		ПоказатьОповещениеПользователя(НСтр("ru = 'Регионы и адреса 1С:Бизнес-сеть'"),,
			НСтр("ru = 'Регионы и адреса успешно сохранены в сервисе 1С:Бизнес-сеть'"),
			БиблиотекаКартинок.БизнесСеть);
		ПрограммноеЗакрытие = Истина;
		Оповестить("ТорговыеПредложения_СохранениеРегионовАбонента",, ЭтотОбъект);
		Модифицированность = Ложь;
		Если ЗакрытьФорму Тогда
			Закрыть();
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция АдресХранилищДанныхСписка(ИмяСписка)
	
	Возврат ПоместитьВоВременноеХранилище(ЭтотОбъект[ИмяСписка].Выгрузить());
	
КонецФункции

&НаКлиенте
Процедура ОткрытьФормуКонтактнойИнформации(ТекущиеДанные, ЗаголовокВвода)
	
	ПараметрыОткрытия = УправлениеКонтактнойИнформациейКлиент.ПараметрыФормыКонтактнойИнформации(
		ВидКонтактнойИнформации, ТекущиеДанные.ЗначенияПолей,
		ТекущиеДанные.Представление,, ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Адрес"));
	ПараметрыОткрытия.Вставить("Заголовок", ЗаголовокВвода);
	
	Оповещение = Новый ОписаниеОповещения("ОткрытьФормуКонтактнойИнформацииЗавершение", ЭтотОбъект, ТекущиеДанные);
		
	УправлениеКонтактнойИнформациейКлиент.ОткрытьФормуКонтактнойИнформации(ПараметрыОткрытия, ЭтотОбъект, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуКонтактнойИнформацииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено И ДополнительныеПараметры <> Неопределено Тогда
		
		Если ДополнительныеПараметры.Свойство("НоваяСтрока") Тогда
			ТекущиеДанные = Элементы[ДополнительныеПараметры.ИмяСписка].ТекущиеДанные;
			Если ДополнительныеПараметры = Неопределено Тогда
				Возврат;
			КонецЕсли;
		Иначе
			ТекущиеДанные = ДополнительныеПараметры;
		КонецЕсли;
		
		Если ПустаяСтрока(Результат.Представление) И ПустаяСтрока(Результат.КонтактнаяИнформация) Тогда
			
			// Пустая страна, по умолчанию.
			ТекущиеДанные.Представление = ПредопределенноеЗначение("Справочник.СтраныМира.Россия");
			ТекущиеДанные.ЗначенияПолей = "";
			
		Иначе
			
			Если СтрНайти("РегионыПродажи, РегионыЗакупки", ЭтотОбъект.ТекущийЭлемент.Имя) Тогда
				
				Если Результат.ВведеноВСвободнойФорме Тогда
					ПоказатьПредупреждение(, НСтр("ru = 'Ввод региона в свободной форме запрещен.'"));
					Если ДополнительныеПараметры.Свойство("НоваяСтрока") Тогда
						УдалитьСтрокуСписка(ДополнительныеПараметры.ИмяСписка);
					КонецЕсли;
					Возврат;
				КонецЕсли;
				СжатьАдресКонтактнойИнформации(Результат.КонтактнаяИнформация, Результат.Представление);
			КонецЕсли;
			
			Модифицированность = Истина;
			ТекущиеДанные.Представление = Результат.Представление;
			ТекущиеДанные.ЗначенияПолей = Результат.КонтактнаяИнформация;
			
		КонецЕсли;
		
		
	ИначеЕсли ТипЗнч(ДополнительныеПараметры) = Тип("Структура")
		И ДополнительныеПараметры.Свойство("НоваяСтрока") Тогда
		
		УдалитьСтрокуСписка(ДополнительныеПараметры.ИмяСписка);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтрокуСписка(ИмяСписка, СтрокаСписка = Неопределено)
	
	Если СтрокаСписка = Неопределено Тогда
		СтрокаСписка = Элементы[ИмяСписка].ТекущиеДанные;
		Если СтрокаСписка = Неопределено Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	// Удаление текущей строки, если была отмена ввода адреса.
	ЭтотОбъект[ИмяСписка].Удалить(СтрокаСписка);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СжатьАдресКонтактнойИнформации(ЗначенияПолей, Представление)
	
	ТорговыеПредложения.ПолучитьРегионыКонтактнойИнформации(ЗначенияПолей, Представление);

КонецПроцедуры

&НаСервере
Процедура ЗаписатьДанныеПрофиляОбменаТорговымиПредложениями(Отказ)
	
	ОбъектРегионыПродажи = РегионыПродажи.Выгрузить();
	ОбъектРегионыПродажи.Свернуть("Представление, ЗначенияПолей");
	
	ОбъектРегионыЗакупки = РегионыЗакупки.Выгрузить();
	ОбъектРегионыЗакупки.Свернуть("Представление, ЗначенияПолей");
	
	ОбъектАдресаПродажи = АдресаПродажи.Выгрузить();
	ОбъектАдресаПродажи.Свернуть("Представление, ЗначенияПолей");
	
	ОбъектАдресаЗакупки = АдресаЗакупки.Выгрузить();
	ОбъектАдресаЗакупки.Свернуть("Представление, ЗначенияПолей");
	
	РегионыАдреса = Новый ТаблицаЗначений;
	РегионыАдреса.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
	РегионыАдреса.Колонки.Добавить("ЗначенияПолей", Новый ОписаниеТипов("Строка"));
	РегионыАдреса.Колонки.Добавить("ЭтоРегион",     Новый ОписаниеТипов("Булево"));
	РегионыАдреса.Колонки.Добавить("ЭтоПродажи",    Новый ОписаниеТипов("Булево"));
	РегионыАдреса.Колонки.Добавить("ЭтоЗакупки",    Новый ОписаниеТипов("Булево"));
	РегионыАдреса.Колонки.Добавить("Активный",      Новый ОписаниеТипов("Булево"));
	
	Для каждого СтрокаТаблицы Из ОбъектРегионыПродажи Цикл
		НоваяСтрока = РегионыАдреса.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		НоваяСтрока.ЭтоРегион = Истина;
		НоваяСтрока.ЭтоПродажи = Истина;
		НоваяСтрока.Активный = РегионыПродажиВозможнаДоставка;
	КонецЦикла;
	
	Для каждого СтрокаТаблицы Из ОбъектРегионыЗакупки Цикл
		НоваяСтрока = РегионыАдреса.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		НоваяСтрока.ЭтоРегион = Истина;
		НоваяСтрока.ЭтоЗакупки = Истина;
		НоваяСтрока.Активный = РегионыЗакупкиВозможенСамовывоз;
	КонецЦикла;
		
	Для каждого СтрокаТаблицы Из ОбъектАдресаПродажи Цикл
		НоваяСтрока = РегионыАдреса.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		НоваяСтрока.ЭтоПродажи = Истина;
		НоваяСтрока.Активный = АдресаПродажиВозможенСамовывоз;
	КонецЦикла;
		
	Для каждого СтрокаТаблицы Из ОбъектАдресаЗакупки Цикл
		НоваяСтрока = РегионыАдреса.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		НоваяСтрока.ЭтоЗакупки = Истина;
		НоваяСтрока.Активный = АдресаЗакупкиВозможнаПриемка;
	КонецЦикла;
	
	ТорговыеПредложения.СинхронизироватьАдресныеНастройкиАбонента(РегионыАдреса, Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// Установка констант подсказок.
	Константы.ПоказыватьПодсказкиПокупателейБизнесСеть.Установить(ПоказыватьПодсказкиПокупателей);
	Константы.ПоказыватьПодсказкиПоставщиковБизнесСеть.Установить(ПоказыватьПодсказкиПоставщиков);
	
	УстановитьПривилегированныйРежим(Истина);
	// Изменение регламентного задания.
	БизнесСеть.ИзменитьРегламентноеЗадание(Метаданные.РегламентныеЗадания.ОбновлениеПодсказокТорговыеПредложения.Имя,
		"Использование", Макс(ПоказыватьПодсказкиПоставщиков, ПоказыватьПодсказкиПокупателей));
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОтветеНаВопросОСохраненииИзмененныхДанных(РезультатВопроса, ДопПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		ЗаписатьДанныеИЗакрыть(Истина);
		
	ИначеЕсли РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		
		Модифицированность = Ложь;
		Закрыть();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПеречитатьДанныеФормы(Отказ = Ложь)

	Данные = ТорговыеПредложения.ПолучитьАдресныеНастройкиАбонента(Отказ);
	Если Отказ ИЛИ ТипЗнч(Данные) <> Тип("Массив") Тогда
		Возврат;
	КонецЕсли;
	
	РегионыПродажи.Очистить();
	РегионыЗакупки.Очистить();
	АдресаПродажи.Очистить();
	АдресаЗакупки.Очистить();
	
	Для каждого СтрокаАдресаРегиона Из Данные Цикл
		
		Если СтрокаАдресаРегиона.addressType = 1 Тогда
			Если СтрокаАдресаРегиона.shipment Тогда
				НоваяСтрокаПродажи = РегионыПродажи.Добавить();
				НоваяСтрокаПродажи.Представление = СтрокаАдресаРегиона.addressInfo1;
				НоваяСтрокаПродажи.ЗначенияПолей = СтрокаАдресаРегиона.addressInfo2;
				РегионыПродажиВозможнаДоставка = Макс(РегионыПродажиВозможнаДоставка, СтрокаАдресаРегиона.active);
			КонецЕсли;
			
			Если СтрокаАдресаРегиона.entrance Тогда
				НоваяСтрокаЗакупки = РегионыЗакупки.Добавить();
				НоваяСтрокаЗакупки.Представление = СтрокаАдресаРегиона.addressInfo1;
				НоваяСтрокаЗакупки.ЗначенияПолей = СтрокаАдресаРегиона.addressInfo2;
				РегионыЗакупкиВозможенСамовывоз = Макс(РегионыЗакупкиВозможенСамовывоз, СтрокаАдресаРегиона.active);
			КонецЕсли;
		ИначеЕсли СтрокаАдресаРегиона.addressType = 2 Тогда
			Если СтрокаАдресаРегиона.shipment Тогда
				НоваяСтрокАдрес = АдресаПродажи.Добавить();
				НоваяСтрокАдрес.Представление = СтрокаАдресаРегиона.addressInfo1;
				НоваяСтрокАдрес.ЗначенияПолей = СтрокаАдресаРегиона.addressInfo2;
				АдресаПродажиВозможенСамовывоз = Макс(АдресаПродажиВозможенСамовывоз, СтрокаАдресаРегиона.active);
			КонецЕсли;
			Если СтрокаАдресаРегиона.entrance Тогда
				НоваяСтрокАдрес = АдресаЗакупки.Добавить();
				НоваяСтрокАдрес.Представление = СтрокаАдресаРегиона.addressInfo1;
				НоваяСтрокАдрес.ЗначенияПолей = СтрокаАдресаРегиона.addressInfo2;
				АдресаЗакупкиВозможнаПриемка = Макс(АдресаЗакупкиВозможнаПриемка, СтрокаАдресаРегиона.active);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	ПоказыватьПодсказкиПокупателей = Константы.ПоказыватьПодсказкиПокупателейБизнесСеть.Получить();
	ПоказыватьПодсказкиПоставщиков = Константы.ПоказыватьПодсказкиПоставщиковБизнесСеть.Получить();
	
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПодборРегионов(ИмяСписка)

	ПараметрыОткрытия = Новый Структура;
	Если СтрНайти("РегионыПродажи, РегионыЗакупки", ИмяСписка) Тогда
		ПараметрыОткрытия.Вставить("РежимВыбора", "Регионы");
	КонецЕсли;
	
	ПараметрыОткрытия.Вставить("АдресТаблицыАдресов", АдресХранилищДанныхСписка(ИмяСписка));
	
	ДополнительныеПараметры = Новый Структура("ИмяСписка", ИмяСписка);
	Оповещение = Новый ОписаниеОповещения("ОткрытьПодборРегионовЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ОчиститьСообщения();
	ОткрытьФорму("Обработка.ТорговыеПредложения.Форма.ПодборРегионов",
		ПараметрыОткрытия, ЭтотОбъект,,,, Оповещение);

КонецПроцедуры
	
&НаКлиенте
Процедура ОткрытьПодборРегионовЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Структура") И Результат.Свойство("АдресТаблицыАдресов") Тогда
		Модифицированность = Истина;
		ОбновитьДанныеНаСервере(Результат.АдресТаблицыАдресов, ДополнительныеПараметры.ИмяСписка);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеНаСервере(АдресТаблицыАдресов, ИмяСписка)
	
	// Необходимо обновить таблицу, с учетом существующих свойств.
	ТаблицаРезультата = ПолучитьИзВременногоХранилища(АдресТаблицыАдресов);
	Список = ЭтотОбъект[ИмяСписка]; // Регионы или Адреса.
	
	Для каждого СтрокаРезультата Из ТаблицаРезультата Цикл
		
		СтрокиСписка = Список.НайтиСтроки(Новый Структура("Представление", СтрокаРезультата.Представление));
		Если СтрокиСписка.Количество() = 0 И СтрокаРезультата.Пометка Тогда
			// Добавление новой строки
			НоваяСтрока = Список.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаРезультата);
		Иначе
			Если Не СтрокаРезультата.Пометка Тогда
				// Удаление не помеченной строки.
				Для каждого УдаляемаяСтрокаСписка Из СтрокиСписка Цикл
					Список.Удалить(УдаляемаяСтрокаСписка);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьДоступностьЭлементов(Форма, ИзменениеДанных = Ложь)
	
	Если ИзменениеДанных Тогда
		Форма.Модифицированность = Истина;
	КонецЕсли;
	
	Форма.Элементы.РегионыПродажи.Доступность = Форма.РегионыПродажиВозможнаДоставка;
	Форма.Элементы.АдресаПродажи.Доступность  = Форма.АдресаПродажиВозможенСамовывоз;
	Форма.Элементы.РегионыЗакупки.Доступность = Форма.РегионыЗакупкиВозможенСамовывоз;
	Форма.Элементы.АдресаЗакупки.Доступность  = Форма.АдресаЗакупкиВозможнаПриемка;
	
КонецПроцедуры

&НаКлиенте
Процедура ПеречитатьПродолжение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПеречитатьДанныеФормы();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
