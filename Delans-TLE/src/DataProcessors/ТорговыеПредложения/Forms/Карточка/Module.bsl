
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Параметры.Свойство("УникальныйИдентификаторКорзины", УникальныйИдентификаторКорзины);
	Параметры.Свойство("ПредложениеИдентификатор", ПредложениеИдентификатор);
	Параметры.Свойство("Номенклатура",   ИсточникНоменклатура); 
	Параметры.Свойство("Характеристика", ИсточникХарактеристика);
	Параметры.Свойство("Валюта",         Валюта);
	ПрочитатьТорговоеПредложение();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КарточкаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	Если Элемент.ТекущаяОбласть.Имя = "Поставщик_Поставщик" Тогда
		СтандартнаяОбработка = Ложь;
		ОткрытьПрофильПоставщика();
	ИначеЕсли Элемент.ТекущаяОбласть.Имя = "Шапка_ГруппаТоваров" Тогда
		СтандартнаяОбработка = Ложь;
		ОткрытьФормуПоиска();
	ИначеЕсли Элемент.ТекущаяОбласть.Имя = "Поставщик_КонтрагентСайт" Тогда
		Если ЗначениеЗаполнено(КонтрагентСайт) Тогда
			ОбщегоНазначенияКлиент.ОткрытьНавигационнуюСсылку(КонтрагентСайт);
		КонецЕсли;
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьВКорзину(Команда)
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("УникальныйИдентификаторКорзины", УникальныйИдентификаторКорзины);
	ПараметрыОповещения.Вставить("ПредложениеИдентификатор", ПредложениеИдентификатор);
	ПараметрыОповещения.Вставить("ПоставщикИдентификатор", ПоставщикИдентификатор);
	Если ЗначениеЗаполнено(ИсточникНоменклатура) Тогда
		ПараметрыОповещения.Вставить("Номенклатура", ИсточникНоменклатура);
	КонецЕсли;
	Если ЗначениеЗаполнено(ИсточникХарактеристика) Тогда
		ПараметрыОповещения.Вставить("Характеристика", ИсточникХарактеристика);
	КонецЕсли;
	Оповестить("ТорговыеПредложения_ИзменитьКоличествоВКорзине", ПараметрыОповещения);
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПрочитатьТорговоеПредложение()
	
	Отказ = Ложь;
	ПараметрыЗапроса = Новый Структура("Характеристики");
	ДанныеСервиса = ТорговыеПредложения.ПрочитатьТорговоеПредложение(ПредложениеИдентификатор, Валюта,
		ПараметрыЗапроса, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Наименование = ДанныеСервиса.name;
	Описание = ДанныеСервиса.description;
	
	Если Не ДанныеСервиса.Свойство("priceConverted")
		ИЛИ Не ЗначениеЗаполнено(ДанныеСервиса.priceConverted) Тогда
		Цена = -1;// По запросу.
	Иначе
		Цена = ДанныеСервиса.priceConverted / 100; // Данные в сервисе хранятся в копейках.
	КонецЕсли;
	
	// Остатки товаров (мало-много).
	ОстатокМногоМало = Неопределено;
	ДанныеСервиса.Свойство("remainderHint", ОстатокМногоМало);
	Остаток = Неопределено;
	Если ОстатокМногоМало = "1" Тогда
		Остаток = НСтр("ru = 'Мало'");
	ИначеЕсли ОстатокМногоМало = "2" Тогда
		Остаток = НСтр("ru = 'Достаточно'");
	ИначеЕсли ОстатокМногоМало = "3" Тогда
		Остаток = НСтр("ru = 'Много'");
	КонецЕсли;
	
	ДанныеСервиса.Свойство("feature", Характеристика);
	ДанныеСервиса.Свойство("categoryID", ИдентификаторКатегории);
	
	Если ДанныеСервиса.Свойство("vendor") 
		И Не ДанныеСервиса.campaign = Неопределено Тогда
		ДанныеСервиса.vendor.Свойство("inn", КонтрагентИНН);
		ДанныеСервиса.vendor.Свойство("kpp", КонтрагентКПП);
		Если КонтрагентКПП = "0" Тогда
			КонтрагентКПП = "";
		КонецЕсли;
		ДанныеСервиса.vendor.Свойство("title", Поставщик);
		ПоставщикИдентификатор = КонтрагентИНН + ?(ЗначениеЗаполнено(КонтрагентКПП), "_" + КонтрагентКПП, "");
	КонецЕсли;
	
	Заголовок = СтрШаблон(НСтр("ru = '%1, %2 (Торговое предложение)'"),
		Наименование,
		Поставщик);
	
	Если ДанныеСервиса.Свойство("campaign")
		И Не ДанныеСервиса.campaign = Неопределено Тогда
		Если ДанныеСервиса.campaign.Свойство("contactInfo")
			И Не ДанныеСервиса.campaign.contactInfo = Неопределено Тогда 
			Если ДанныеСервиса.campaign.contactInfo.Свойство("organization")
				И Не ДанныеСервиса.campaign.contactInfo.organization = Неопределено Тогда
				ДанныеСервиса.campaign.contactInfo.organization.Свойство("phone", КонтрагентТелефон);
				ДанныеСервиса.campaign.contactInfo.organization.Свойство("email", КонтрагентПочта);
				ДанныеСервиса.campaign.contactInfo.organization.Свойство("site",  КонтрагентСайт);
			КонецЕсли;
			Если ДанныеСервиса.campaign.contactInfo.Свойство("person")
				И Не ДанныеСервиса.campaign.contactInfo.person = Неопределено Тогда 
				ДанныеСервиса.campaign.contactInfo.person.Свойство("name",  КонтрагентКонтактноеЛицо);
				ДанныеСервиса.campaign.contactInfo.person.Свойство("phone", КонтрагентКонтактноеЛицоТелефон);
				ДанныеСервиса.campaign.contactInfo.person.Свойство("email", КонтрагентКонтактноеЛицоПочта);
			КонецЕсли;
		КонецЕсли;
	Иначе
		Возврат;
	КонецЕсли;
	
	Если ДанныеСервиса.Свойство("Характеристики") Тогда
		Свойства.Загрузить(ДанныеСервиса.Характеристики);
	КонецЕсли;
	
	Если ДанныеСервиса.Свойство("vendorCode")
		И Не ДанныеСервиса.vendorCode = Неопределено Тогда
		Артикул = ДанныеСервиса.vendorCode;
	КонецЕсли;
	
	Если ДанныеСервиса.Свойство("barcodes")
		И Не ДанныеСервиса.barcodes = Неопределено Тогда
		Для каждого ШтрихКод Из ДанныеСервиса.barcodes Цикл
			ШтрихКоды.Добавить(ШтрихКод);
		КонецЦикла;
	КонецЕсли;
	
	// Определение сроков поставки.
	Если ДанныеСервиса.Свойство("deliveryTime") Тогда
		Если ДанныеСервиса.deliveryTime = 0 Тогда
			Поставка = НСтр("ru = 'В наличии'");
		ИначеЕсли ДанныеСервиса.deliveryTime = Неопределено Тогда
			Поставка = "";
		Иначе
			Поставка = СтрШаблон(НСтр("ru = '%1 дн.'"), ДанныеСервиса.deliveryTime);
		КонецЕсли;
	Иначе
		Поставка = Неопределено;
	КонецЕсли;
	
	ДанныеСервиса.Свойство("unit", ЕдиницаИзмерения);
	
	ЗначениеНДС = "";
	ДанныеСервиса.Свойство("nds", ЗначениеНДС);
	
	СтавкаНДС = Неопределено;
	ТорговыеПредложенияПереопределяемый.ПолучитьЗначениеСтавкиНДС(ЗначениеНДС, СтавкаНДС);
	
	ЦенаВключаютНДС = Истина;
	ДанныеСервиса.campaign.Свойство("saleWithNds", ЦенаВключаютНДС);
	Если ПустаяСтрока(ЗначениеНДС) ИЛИ ЗначениеНДС = "БезНДС" Тогда
		ИнформацияНДС = Строка(СтавкаНДС);
	Иначе
		ИнформацияНДС = СтрШаблон("%1, %2", Строка(СтавкаНДС),
			?(ЦенаВключаютНДС, НСтр("ru = 'входит в стоимость'"), НСтр("ru = 'не входит в стоимость'")));
	КонецЕсли;
	
	// Способ доставки.
	СпособДоставки = "";
	Если ДанныеСервиса.Свойство("pickup") И ДанныеСервиса.pickup = Истина Тогда
		СпособДоставки = НСтр("ru = 'Самовывоз'");
	КонецЕсли;
	Если ДанныеСервиса.Свойство("delivery") И ДанныеСервиса.delivery = Истина Тогда
		Если СпособДоставки = "" Тогда
			СпособДоставки = НСтр("ru = 'Доставка'");
		Иначе
			СпособДоставки = СтрШаблон(НСтр("ru = '%1, доставка'"), СпособДоставки);
		КонецЕсли;
	КонецЕсли;
	
	Если Цена = -1 Тогда // Цена по запросу
		ЦенаСтрокой = НСтр("ru = 'по запросу'");
	Иначе
		
		ЦенаСтрокой = СтрШаблон("%1 %2", Цена, Валюта);
		
		// Установка цены публикации, если отличается валюта публикации от валюты запроса.
		ВалютаПубликации = Справочники.Валюты.НайтиПоКоду(ДанныеСервиса.currency);
		Если Не ЗначениеЗаполнено(ВалютаПубликации) Тогда
			ВалютаСервиса = ТорговыеПредложения.ПолучитьВалютуПоКоду(ДанныеСервиса.currency);
			Если ЗначениеЗаполнено(ВалютаСервиса) Тогда
				ВалютаПубликации = ВалютаСервиса.Наименование;
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВалютаПубликации) И ВалютаПубликации <> Валюта Тогда
			ЦенаПубликацииСтрокой = СтрШаблон("%1 %2", ДанныеСервиса.price / 100, ВалютаПубликации);
		КонецЕсли;
		
	КонецЕсли;
	
	
	// Получение списка групп номенклатуры.
	Если Не ПустаяСтрока(ИдентификаторКатегории) Тогда
		
		ПараметрыМетода = Новый Структура;
		ПараметрыМетода.Вставить("ИдентификаторыКатегории", "[" + ИдентификаторКатегории + "]");
		ПараметрыКоманды = ТорговыеПредложения.ПараметрыКомандыПолучитьЦепочкуКатегорийДоКорневой(ПараметрыМетода, Отказ);
		Результат = БизнесСеть.ВыполнитьКомандуСервиса(ПараметрыКоманды, Отказ);
		
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		
		Если ТипЗнч(Результат) = Тип("Массив") Тогда
			Если ТипЗнч(Результат[0]) = Тип("Массив") И Результат[0].Количество() Тогда
				Для каждого ЗначениеМассива Из Результат[0] Цикл
					ГруппаТоваров = ЗначениеМассива.title + ?(ПустаяСтрока(ГруппаТоваров), "", " \ ") + ГруппаТоваров;
				КонецЦикла;
			Иначе
				ГруппаТоваров = НСтр("ru = 'Все товары'");
				ИдентификаторКатегории = "";
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	ЗаполнитьМакет();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьМакет()
	
	Макет = Обработки.ТорговыеПредложения.ПолучитьМакет("ПФ_MXL_КарточкаТорговогоПредложения");
	
	// Область Шапка.
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ЗаполнитьЗначенияСвойств(Шапка.Параметры, ЭтотОбъект);
	ЭлектронноеВзаимодействиеСлужебный.ВывестиОбластьВТабличныйДокумент(Карточка, Шапка, "Шапка");
	
	// Область Цена.
	ОбластьЦена = Макет.ПолучитьОбласть("Цена|Лево");
	ЗаполнитьЗначенияСвойств(ОбластьЦена.Параметры, ЭтотОбъект);
	ЭлектронноеВзаимодействиеСлужебный.ВывестиОбластьВТабличныйДокумент(Карточка, ОбластьЦена, "Цена");
	
	// Область ЦенаПубликации.
	Если ЗначениеЗаполнено(ЦенаПубликацииСтрокой) Тогда
		ОбластьЦенаПубликации = Макет.ПолучитьОбласть("ЦенаПубликации|Лево");
		ЗаполнитьЗначенияСвойств(ОбластьЦенаПубликации.Параметры, ЭтотОбъект);
		ЭлектронноеВзаимодействиеСлужебный.ВывестиОбластьВТабличныйДокумент(Карточка, ОбластьЦенаПубликации, "ЦенаПубликации");
	КонецЕсли;
	
	// Область Условия.
	ОбластьУсловия = Макет.ПолучитьОбласть("Условия|Лево");
	ЗаполнитьЗначенияСвойств(ОбластьУсловия.Параметры, ЭтотОбъект);
	ЭлектронноеВзаимодействиеСлужебный.ВывестиОбластьВТабличныйДокумент(Карточка, ОбластьУсловия, "Условия");
	
	// Область Описание.
	Если ЗначениеЗаполнено(Описание) Тогда
		ОбластьОписание = Макет.ПолучитьОбласть("Описание|Лево");
		ЗаполнитьЗначенияСвойств(ОбластьОписание.Параметры, ЭтотОбъект);
		ЭлектронноеВзаимодействиеСлужебный.ВывестиОбластьВТабличныйДокумент(Карточка, ОбластьОписание, "Описание");
	КонецЕсли;
	
	// Область Поставщик (правая колонка).
	ОбластьПраво = Макет.ПолучитьОбласть("Поставщик|Лево");
	ЗаполнитьЗначенияСвойств(ОбластьПраво.Параметры, ЭтотОбъект);
	ОбластьВставки = Карточка.Область(Шапка.ВысотаТаблицы + 1, ОбластьЦена.ШиринаТаблицы + 1,
		Шапка.ВысотаТаблицы + ОбластьПраво.ВысотаТаблицы + 1, ОбластьЦена.ШиринаТаблицы + ОбластьПраво.ШиринаТаблицы + 1);
	ЭлектронноеВзаимодействиеСлужебный.ВставитьОбластьВТабличныйДокумент(Карточка, ОбластьПраво, "Поставщик",, ОбластьВставки);
	
	// Область Свойства.
	Если Свойства.Количество() Тогда
		ЭлектронноеВзаимодействиеСлужебный.ВывестиОбластьВТабличныйДокумент(Карточка,
			Макет.ПолучитьОбласть("СвойстваШапка"), "СвойстваШапка");
		Для каждого Свойство Из Свойства Цикл
			СвойстваСтрока = Макет.ПолучитьОбласть("СвойстваСтрока");
			ЗаполнитьЗначенияСвойств(СвойстваСтрока.Параметры, Свойство);
			ЭлектронноеВзаимодействиеСлужебный.ВывестиОбластьВТабличныйДокумент(Карточка, СвойстваСтрока, "СвойстваСтрока");
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПрофильПоставщика()
	
	ПараметрыОткрытия = БизнесСетьКлиентСервер.ОписаниеИдентификацииОрганизацииКонтрагентов();
	ПараметрыОткрытия.ИНН = КонтрагентИНН;
	ПараметрыОткрытия.КПП = КонтрагентКПП;
	БизнесСетьКлиент.ОткрытьПрофильУчастника(ПараметрыОткрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуПоиска()
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ИдентификаторКатегории", ИдентификаторКатегории);
	ПараметрыОткрытия.Вставить("ОтборНаименование", Наименование);
	ПараметрыОткрытия.Вставить("Валюта", Валюта);
	ОчиститьСообщения();
	ОткрытьФорму("Обработка.ТорговыеПредложения.Форма.ПоискПоОтборам", ПараметрыОткрытия);
	
	// Дополнительно оповестим формы, если форма поиска ранее была открыта.
	Оповестить("ТорговыеПредложения_Обновить", ПараметрыОткрытия, ЭтотОбъект);

КонецПроцедуры

#КонецОбласти