
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ServiceAPI

Функция ИдентификаторПечатнойФормы(ВключаяУслуги = Ложь, ИспользоватьФаксимиле = Ложь) Экспорт
	
	Возврат ?(ВключаяУслуги, "НакладнаяСУслугами", "Накладная") + ?(ИспользоватьФаксимиле, "Факсимиле", "");
	
КонецФункции

Функция ПредставлениеПФ(ВключаяУслуги = Ложь, ИспользоватьФаксимиле = Ложь) Экспорт
	
	ПредставлениеПФ = НСтр("ru ='Накладная'");
	
	ДополнительноеПредставление = "";
	Если ВключаяУслуги Тогда
		
		ДополнительноеПредставление = НСтр("ru ='с услугами'");
		
	КонецЕсли;
	
	Если ИспользоватьФаксимиле Тогда
		
		ДополнительноеПредставление = ДополнительноеПредставление + ?(ВключаяУслуги, ", ", "") + НСтр("ru ='факсимиле'");
		
	КонецЕсли;
	
	Если ВключаяУслуги
		ИЛИ ИспользоватьФаксимиле Тогда
		
		ДополнительноеПредставление = НСтр("ru =' ('") + ДополнительноеПредставление + НСтр("ru =')'");
		
	КонецЕсли;
	
	Возврат ПредставлениеПФ + ДополнительноеПредставление;
	
КонецФункции

Функция МатрицаВозможныхВариантов() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"Выбрать Ложь ВключаяУслуги, Ложь ИспользоватьФаксимиле
	|Объединить
	|Выбрать Ложь, Истина
	|Объединить
	|Выбрать Истина, Ложь
	|Объединить
	|Выбрать Истина, Истина";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция КлючПараметровПечати() Экспорт
	
	Возврат "ПАРАМЕТРЫ_ПЕЧАТИ_Универсальные_Накладная";
	
КонецФункции

Функция ПолныйПутьКМакету() Экспорт
	
	Возврат "Обработка.ПечатьНакладная.ПФ_MXL_Накладная";
	
КонецФункции

Функция СформироватьПФ(ОписаниеПечатнойФормы, ДанныеОбъектовПечати, ОбъектыПечати, ВключаяУслуги) Экспорт
	Перем Ошибки, ПервыйДокумент, НомерСтрокиНачало;
	
	Макет				= УправлениеПечатью.МакетПечатнойФормы(ОписаниеПечатнойФормы.ПолныйПутьКМакету);
	ТабличныйДокумент	= ОписаниеПечатнойФормы.ТабличныйДокумент;
	ДанныеПечати		= Новый Структура;
	ЕстьТЧЗапасы		= (ДанныеОбъектовПечати.Колонки.Найти("ТаблицаЗапасы") <> Неопределено);
	ЕстьТЧРаботыУслуги	= (ДанныеОбъектовПечати.Колонки.Найти("ТаблицаРаботыУслуги") <> Неопределено);
	ПредставлениеСкидки = Константы.ПредставлениеСкидкиВПечатнойФорме.Получить();
	
	Для каждого ДанныеОбъекта Из ДанныеОбъектовПечати Цикл
		
		ПечатьДокументовУНФ.ПередНачаломФормированияДокумента(ТабличныйДокумент, ПервыйДокумент, НомерСтрокиНачало, ДанныеПечати);
		
		СведенияОбОрганизации = УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(ДанныеОбъекта.Организация, ДанныеОбъекта.ДатаДокумента, ,);
		СведенияОбКонтрагенте = УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(ДанныеОбъекта.Контрагент, ДанныеОбъекта.ДатаДокумента, ,);
		
		// Заголовок
		ЛоготипЗаполнен = ЗначениеЗаполнено(ДанныеОбъекта.ФайлЛоготип);
		ИмяМакета = ?(ЛоготипЗаполнен, "ЗаголовокСЛоготипом", "ЗаголовокБезЛоготипа");
		
		ОбластьМакета = ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, ИмяМакета, "", Ошибки);
		Если ОбластьМакета <> Неопределено Тогда
			
			ШаблонЗаголовка = НСтр("ru ='%1 № %2 от %3'");
			НомерДокумента = ПечатьДокументовУНФ.ПолучитьНомерНаПечатьСУчетомДатыДокумента(ДанныеОбъекта.ДатаДокумента, ДанныеОбъекта.Номер, ДанныеОбъекта.Префикс);
			ДанныеПечати.Вставить("ТекстЗаголовка", СтрШаблон(ШаблонЗаголовка, ДанныеОбъекта.ПредставлениеРегистратора, НомерДокумента, Формат(ДанныеОбъекта.ДатаДокумента, "ДЛФ=DD")));
			ДанныеПечати.Вставить("ВидОперации", ДанныеОбъекта.ВидОперации);
			
			Если ЛоготипЗаполнен Тогда
				
				ПодписиИФаксимиле = Новый Соответствие; // Ключ - имя каринки в области, Значение - имя реквизита
				ПодписиИФаксимиле.Вставить("Логотип", "ФайлЛоготип");
				
				ПодписьДокументовУНФ.ЗаполнитьФаксимилеВОбластиМакета(ОбластьМакета, ДанныеОбъекта, ПодписиИФаксимиле, Ошибки);
				
			КонецЕсли;
			
			ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЕсли;
		
		// Субъекты (поставщик, покупатель)
		ОбластьМакета = ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "ОписаниеСубъекта", "", Ошибки);
		Если ОбластьМакета <> Неопределено Тогда
			
			ДанныеПечати.Очистить();
			ДанныеПечати.Вставить("НаименованиеСубъекта", НСтр("ru ='Поставщик'"));
			ДанныеПечати.Вставить("ПредставлениеСубъекта", УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,ФактическийАдрес"));
			ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			ДанныеПечати.Очистить();
			ДанныеПечати.Вставить("НаименованиеСубъекта", НСтр("ru ='Покупатель'"));
			ДанныеПечати.Вставить("ПредставлениеСубъекта", УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОбКонтрагенте, "ПолноеНаименование,ФактическийАдрес"));
			ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЕсли;
		
		//Табличная часть
		ЕстьСкидки = ДанныеОбъекта.ТаблицаЗапасы.Итог("ЕстьСкидка") <> 0;
		
		ИмяОбласти = ?(ЕстьСкидки, "ШапкаТаблицыСоСкидкой", "ШапкаТаблицы");
		ОбластьМакета = ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, ИмяОбласти, "", Ошибки);
		Если ОбластьМакета <> Неопределено Тогда
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЕсли;
		
		СтруктураИтогов = Новый Структура(
		"НомерСтроки,
		|Количество,
		|Сумма,
		|СуммаНДС,
		|Всего,
		|ЕстьСкидки,
		|СкидкаПоСтроке, 
		|СкидкаПоДокументу, 
		|ПредставлениеСкидки,
		|ЕстьСтавкаНольПроцентов",
		0, 0, 0, 0, 0, ЕстьСкидки, 0, 0, ПредставлениеСкидки, Ложь);
		// Наборы
		СтруктураИтогов.Вставить("ЕстьНаборы", ДанныеОбъекта.ТаблицаЗапасы.Колонки.Найти("НоменклатураНабора")<>Неопределено);
		
		ИмяОбласти = ?(СтруктураИтогов.ЕстьСкидки, "СтрокаСоСкидкой", "Строка");
		ОбластьМакета = ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, ИмяОбласти, "", Ошибки);
		Если ОбластьМакета <> Неопределено Тогда
			
			ПараметрыНоменклатуры = Новый Структура;
			
			Если ЕстьТЧЗапасы Тогда
				
				Для каждого СтрокаТабличнойЧасти Из ДанныеОбъекта.ТаблицаЗапасы Цикл
					
					Если НЕ ВключаяУслуги
						И СтрокаТабличнойЧасти.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Запас
						И СтрокаТабличнойЧасти.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.ПодарочныйСертификат Тогда
						
						Продолжить;
						
					КонецЕсли;
					
					Если СтрокаТабличнойЧасти.Количество = 0 Тогда
						
						Продолжить;
						
					КонецЕсли; 
					
					ЗаполнитьДанныеПечатиПоСтрокеТабличнойЧасти(СтрокаТабличнойЧасти, ДанныеПечати, ПараметрыНоменклатуры, СтруктураИтогов, ДанныеОбъекта);
					ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
					ТабличныйДокумент.Вывести(ОбластьМакета);
					
					// Наборы
					Если СтруктураИтогов.ЕстьНаборы Тогда
						НаборыСервер.УчестьОформлениеСтрокиНабора(ТабличныйДокумент, ОбластьМакета, СтрокаТабличнойЧасти);
					КонецЕсли;
					// Конец Наборы
				
				КонецЦикла;
				
			КонецЕсли;
			
			Если ЕстьТЧРаботыУслуги И ВключаяУслуги Тогда
				
				Для каждого СтрокаТабличнойЧасти Из ДанныеОбъекта.ТаблицаРаботыУслуги Цикл
					
					Если СтрокаТабличнойЧасти.Количество = 0 Тогда
						
						Продолжить;
						
					КонецЕсли; 
					
					ЗаполнитьДанныеПечатиПоСтрокеТабличнойЧасти(СтрокаТабличнойЧасти, ДанныеПечати, ПараметрыНоменклатуры, СтруктураИтогов, ДанныеОбъекта);
					ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
					ТабличныйДокумент.Вывести(ОбластьМакета);
					
					// Наборы
					Если СтруктураИтогов.ЕстьНаборы Тогда
						НаборыСервер.УчестьОформлениеСтрокиНабора(ТабличныйДокумент, ОбластьМакета, СтрокаТабличнойЧасти);
					КонецЕсли;
					// Конец Наборы
				
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЕсли;
		
		// Итого
		ОбластьМакета = ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "Итого", "", Ошибки);
		Если ОбластьМакета <> Неопределено Тогда
			
			ДанныеПечати.Очистить();
			ДанныеПечати.Вставить("Всего", УправлениеНебольшойФирмойСервер.ФорматСумм(СтруктураИтогов.Сумма));
			ДанныеПечати.Вставить("ЗаголовокНДС", ПечатьДокументовУНФ.ПредставлениеЗаголовкаНДС(СтруктураИтогов.СуммаНДС, ДанныеОбъекта.СуммаВключаетНДС, Ложь, СтруктураИтогов.ЕстьСтавкаНольПроцентов));
			ДанныеПечати.Вставить("ВсегоНДС", ?(СтруктураИтогов.СуммаНДС = 0 И НЕ СтруктураИтогов.ЕстьСтавкаНольПроцентов, "-", УправлениеНебольшойФирмойСервер.ФорматСумм(СтруктураИтогов.СуммаНДС, , "0,00")));
			ДанныеПечати.Вставить("ИтоговаяСумма", УправлениеНебольшойФирмойСервер.ФорматСумм(СтруктураИтогов.Всего));
			
			ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЕсли;
		
		// Итоговая скидка по документу
		Если СтруктураИтогов.ЕстьСкидки Тогда
			
			ОбластьМакета = ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "СкидкаПоДокументу", "", Ошибки);
			Если ОбластьМакета <> Неопределено Тогда
				
				ДанныеПечати.Вставить("ИтоговаяСуммаСкидки", УправлениеНебольшойФирмойСервер.ФорматСумм(СтруктураИтогов.СкидкаПоДокументу));
				ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
			КонецЕсли;
			
		КонецЕсли;
		
		// СуммаПрописью
		ОбластьМакета = ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "ИтоговаяСтрока", "", Ошибки);
		Если ОбластьМакета <> Неопределено Тогда
			
			ИтоговаяСтрока = НСтр("ru ='Всего наименований %1, на сумму %2 (%3)'");
			ФорматированнаяСуммаВсего = УправлениеНебольшойФирмойСервер.ФорматСумм(СтруктураИтогов.Всего, ДанныеОбъекта.ВалютаДокумента);
			СуммаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СтруктураИтогов.Всего, ДанныеОбъекта.ВалютаДокумента);
			ДанныеПечати.Вставить("ИтоговаяСтрока", СтрШаблон(ИтоговаяСтрока, СтруктураИтогов.Количество, ФорматированнаяСуммаВсего, СуммаПрописью));
			ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЕсли;
		
		//Подписи
		ИмяОбласти = ?(ДанныеОбъекта.ИспользоватьФаксимиле = Перечисления.ДаНет.Да, "ПодписиСФаксимиле", "ПодписиБезФаксимиле");
		ОбластьМакета = ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, ИмяОбласти, , Ошибки);
		Если ОбластьМакета <> Неопределено Тогда
			
			ОбластьМакета.Параметры.Заполнить(ДанныеОбъекта);
			
			Если ДанныеОбъекта.ИспользоватьФаксимиле = Перечисления.ДаНет.Да Тогда
				
				ПодписиИФаксимиле = Новый Соответствие; // Ключ - имя каринки в области, Значение - имя реквизита
				ПодписиИФаксимиле.Вставить("ФаксимилеКладовщика", "ФаксимилеКладовщика");
				ПодписиИФаксимиле.Вставить("ПечатьОрганизации", "ФаксимилеПечати");
				
				ПодписьДокументовУНФ.ЗаполнитьФаксимилеВОбластиМакета(ОбластьМакета, ДанныеОбъекта, ПодписиИФаксимиле, Ошибки);
				
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЕсли;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеОбъекта.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецОбласти

Процедура ЗаполнитьДанныеПечатиПоСтрокеТабличнойЧасти(СтрокаТабличнойЧасти, ДанныеПечати, ПараметрыНоменклатуры, СтруктураИтогов, ДанныеОбъекта)
	
	ДанныеПечати.Очистить();
	
	Если НЕ СтруктураИтогов.ЕстьНаборы ИЛИ НЕ СтрокаТабличнойЧасти.ЭтоНабор Тогда
		СтруктураИтогов.НомерСтроки = СтруктураИтогов.НомерСтроки + 1;
		НомерСтроки = СтруктураИтогов.НомерСтроки;
	Иначе
		НомерСтроки = 0;
	КонецЕсли; 
	ДанныеПечати.Вставить("НомерСтроки", НомерСтроки);
	ДанныеПечати.Вставить("ПредставлениеКодаНоменклатуры", ПечатьДокументовУНФ.ПредставлениеКодаНоменклатуры(СтрокаТабличнойЧасти));
	
	ПараметрыНоменклатуры.Очистить();
	ПараметрыНоменклатуры.Вставить("Содержание", СтрокаТабличнойЧасти.Содержание);
	ПараметрыНоменклатуры.Вставить("ПредставлениеНоменклатуры", СтрокаТабличнойЧасти.ПредставлениеНоменклатуры);
	ПараметрыНоменклатуры.Вставить("ПредставлениеХарактеристики", СтрокаТабличнойЧасти.Характеристика);
	ПараметрыНоменклатуры.Вставить("ПредставлениеСерийногоНомера", ПечатьДокументовУНФ.ПредставлениеСерийногоНомераПоКлючу(ДанныеОбъекта.ТаблицаСерийныеНомера, СтрокаТабличнойЧасти.КлючСвязи));
	ПараметрыНоменклатуры.Вставить("ПредставлениеПартии", СтрокаТабличнойЧасти.Партия);
	// Наборы
	Если СтруктураИтогов.ЕстьНаборы Тогда
		ПараметрыНоменклатуры.Вставить("НеобходимоВыделитьКакСоставНабора", СтрокаТабличнойЧасти.НеобходимоВыделитьКакСоставНабора);
	КонецЕсли; 
	
	ДанныеПечати.Вставить("ПредставлениеНоменклатуры", ПечатьДокументовУНФ.ПредставлениеНоменклатуры(ПараметрыНоменклатуры));
	ДанныеПечати.Вставить("Количество", СтрокаТабличнойЧасти.Количество);
	ДанныеПечати.Вставить("ЕдиницаИзмерения", СтрокаТабличнойЧасти.ЕдиницаИзмерения);
	ДанныеПечати.Вставить("Цена", УправлениеНебольшойФирмойСервер.ФорматСумм(СтрокаТабличнойЧасти.Цена));
	ДанныеПечати.Вставить("Сумма", УправлениеНебольшойФирмойСервер.ФорматСумм(СтрокаТабличнойЧасти.Сумма));
	ДанныеПечати.Вставить("СуммаНДС", УправлениеНебольшойФирмойСервер.ФорматСумм(СтрокаТабличнойЧасти.СуммаНДС));
	ДанныеПечати.Вставить("Всего", УправлениеНебольшойФирмойСервер.ФорматСумм(СтрокаТабличнойЧасти.Всего));
	
	Если СтруктураИтогов.ЕстьСкидки Тогда
		
		ДанныеПечати.Вставить("ПредставлениеСкидки", ПечатьДокументовУНФ.ПредставлениеСкидки(СтрокаТабличнойЧасти, СтруктураИтогов));
		
	КонецЕсли;
	
	Если СтруктураИтогов.ЕстьСтавкаНольПроцентов = Ложь // Нет смысла проверять каждую строку, если уже нашли...
		И СтрокаТабличнойЧасти.Владелец().Колонки.Найти("СтавкаНДС") <> Неопределено
		И СтрокаТабличнойЧасти.СтавкаНДС = УправлениеНебольшойФирмойПовтИсп.ПолучитьСтавкуНДСНоль() Тогда
		
		СтруктураИтогов.ЕстьСтавкаНольПроцентов = Истина;
		
	КонецЕсли;
	
	Если НЕ СтруктураИтогов.ЕстьНаборы ИЛИ НЕ СтрокаТабличнойЧасти.ЭтоНабор Тогда
		СтруктураИтогов.Сумма		= СтруктураИтогов.Сумма + СтрокаТабличнойЧасти.Сумма;
		СтруктураИтогов.СуммаНДС	= СтруктураИтогов.СуммаНДС + СтрокаТабличнойЧасти.СуммаНДС;
		СтруктураИтогов.Всего		= СтруктураИтогов.Всего + СтрокаТабличнойЧасти.Всего;
		СтруктураИтогов.Количество	= СтруктураИтогов.Количество+ 1;
		Если СтруктураИтогов.ЕстьСкидки Тогда
			СтруктураИтогов.СкидкаПоДокументу = СтруктураИтогов.СкидкаПоДокументу + СтруктураИтогов.СкидкаПоСтроке;
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

#КонецЕсли