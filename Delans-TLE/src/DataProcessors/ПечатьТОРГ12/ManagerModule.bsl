
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ServiceAPI

Функция ИдентификаторПечатнойФормы(ВключаяУслуги = Ложь, ИспользоватьФаксимиле = Ложь) Экспорт
	
	Возврат ?(ВключаяУслуги, "ТОРГ12СУслугами", "ТОРГ12") + ?(ИспользоватьФаксимиле, "Факсимиле", "");
	
КонецФункции

Функция КлючПараметровПечати() Экспорт
	
	Возврат "ПАРАМЕТРЫ_ПЕЧАТИ_Универсальные_ТОРГ12";
	
КонецФункции

Функция ПолныйПутьКМакету() Экспорт
	
	Возврат "Обработка.ПечатьТОРГ12.ПФ_MXL_ТОРГ12";
	
КонецФункции

Функция ПредставлениеПФ(ВключаяУслуги = Ложь, ИспользоватьФаксимиле = Ложь) Экспорт
	
	ПредставлениеПФ = НСтр("ru ='ТОРГ-12'");
	
	ДополнительноеПредставление = НСтр("ru ='Товарная накладная'");
	Если ВключаяУслуги Тогда
		
		ДополнительноеПредставление = ДополнительноеПредставление + НСтр("ru =' с услугами'");
		
	КонецЕсли;
	
	Если ИспользоватьФаксимиле Тогда
		
		ДополнительноеПредставление = ДополнительноеПредставление + НСтр("ru =', факсимиле'");
		
	КонецЕсли;
	
	ДополнительноеПредставление = НСтр("ru =' ('") + ДополнительноеПредставление + НСтр("ru =')'");
	
	Возврат ПредставлениеПФ + ДополнительноеПредставление;
	
КонецФункции

Функция СформироватьПФ(ОписаниеПечатнойФормы, ДанныеОбъектовПечати, ОбъектыПечати, ВключаяРаботыУслуги) Экспорт
	Перем Ошибки, ПервыйДокумент, НомерСтрокиНачало;
	
	Макет				= УправлениеПечатью.МакетПечатнойФормы(ОписаниеПечатнойФормы.ПолныйПутьКМакету);
	ТабличныйДокумент	= ОписаниеПечатнойФормы.ТабличныйДокумент;
	ДанныеПечати		= Новый Структура;
	ЕстьТЧЗапасы		= (ДанныеОбъектовПечати.Колонки.Найти("ТаблицаЗапасы") <> Неопределено);
	ЕстьТЧПродукция		= (ДанныеОбъектовПечати.Колонки.Найти("ТаблицаПродукция") <> Неопределено);
	ЕстьТЧОтходы		= (ДанныеОбъектовПечати.Колонки.Найти("ТаблицаОтходы") <> Неопределено);
	ЕстьТЧРаботыУслуги	= (ДанныеОбъектовПечати.Колонки.Найти("ТаблицаРаботыУслуги") <> Неопределено);
	НациональнаяВалюта	= Константы.НациональнаяВалюта.Получить();
	
	ОбластиМакета = Новый Структура;
	ОбластиМакета.Вставить("ОбластьМакетаШапка",			ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "Шапка", 			"", 							Ошибки));
	ОбластиМакета.Вставить("ОбластьМакетаЗаголовокТаблицы", ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "ЗаголовокТаб", 	НСтр("ru ='Заголовок таблицы'"),Ошибки));
	ОбластиМакета.Вставить("ОбластьМакетаСтрока",			ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "Строка", 			"",								Ошибки));
	ОбластиМакета.Вставить("ОбластьМакетаИтогоПоСтранице",	ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "ИтогоПоСтранице",	НСтр("ru ='Итоги по странице'"),Ошибки));
	ОбластиМакета.Вставить("ОбластьМакетаВсего",			ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "Всего",			"",								Ошибки));
	ОбластиМакета.Вставить("ОбластьМакетаПодвалБезФаксимиле",ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "ПодвалБезФаксимиле","",							Ошибки));
	ОбластиМакета.Вставить("ОбластьМакетаПодвалСФаксимиле",	ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "ПодвалСФаксимиле",	"",								Ошибки));
	
	Для каждого ДанныеОбъекта Из ДанныеОбъектовПечати Цикл
		
		ПечатьДокументовУНФ.ПередНачаломФормированияДокумента(ТабличныйДокумент, ПервыйДокумент, НомерСтрокиНачало, ДанныеПечати);
		
		Если ОбластиМакета.ОбластьМакетаШапка <> Неопределено Тогда
			
			НомерДокумента = ПечатьДокументовУНФ.ПолучитьНомерНаПечатьСУчетомДатыДокумента(ДанныеОбъекта.ДатаДокумента, ДанныеОбъекта.Номер, ДанныеОбъекта.Префикс);
			
			ДанныеПечати.Вставить("НомерДокумента", НомерДокумента);
			ДанныеПечати.Вставить("ДатаДокумента", ДанныеОбъекта.ДатаДокумента);
			
			БанковскийСчетГрузоотправителя = ?(ДанныеОбъекта.Организация = ДанныеОбъекта.Грузоотправитель, ДанныеОбъекта.БанковскийСчет, Неопределено);
			
			СведенияОГрузоотправителе	= УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(ДанныеОбъекта.Грузоотправитель, ДанныеОбъекта.ДатаДокумента, , БанковскийСчетГрузоотправителя);
			СведенияОГрузополучателе	= УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(ДанныеОбъекта.Грузополучатель,  ДанныеОбъекта.ДатаДокумента, ,);
			СведенияОПоставщике			= УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(ДанныеОбъекта.Организация,      ДанныеОбъекта.ДатаДокумента, , ДанныеОбъекта.БанковскийСчет);
			СведенияОПокупателе			= УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(ДанныеОбъекта.Контрагент,       ДанныеОбъекта.ДатаДокумента, , ДанныеОбъекта.БанковскийСчетКонтрагента);
			
			ДанныеПечати.Вставить("ПредставлениеПоставщика",		УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОПоставщике,		"ПолноеНаименование,ИНН,Свидетельство,ЮридическийАдрес,Телефоны,Факс,НомерСчета,Банк,БИК,КоррСчет"));
			ДанныеПечати.Вставить("ПредставлениеПлательщика",		УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОПокупателе,		"ПолноеНаименование,ИНН,Свидетельство,ЮридическийАдрес,Телефоны,Факс,НомерСчета,Банк,БИК,КоррСчет"));
			ДанныеПечати.Вставить("ПредставлениеГрузоотправителя",	УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОГрузоотправителе,	"ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,Факс,НомерСчета,Банк,БИК,КоррСчет"));
			
			Если ПустаяСтрока(ДанныеОбъекта.АдресДоставки) Тогда
				
				ДанныеПечати.Вставить("ПредставлениеГрузополучателя", УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОГрузополучателе,	"ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,Факс,НомерСчета,Банк,БИК,КоррСчет"));
				
			Иначе
				
				ПерваяЧастьКИ = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОГрузополучателе, "ПолноеНаименование,ИНН");
				ВтораяЧастьКИ = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОГрузополучателе, "Телефоны,НомерСчета,Банк,БИК,КоррСчет");
				
				ДанныеПечати.Вставить("ПредставлениеГрузополучателя", СтрШаблон("%1, %2, %3", ПерваяЧастьКИ, ДанныеОбъекта.АдресДоставки, ВтораяЧастьКИ));
				
			КонецЕсли;
			
			ДанныеПечати.Вставить("ГрузоотправительПоОКПО", СведенияОГрузоотправителе.КодПоОКПО);
			ДанныеПечати.Вставить("ПредставлениеПодразделения", ДанныеОбъекта.ПредставлениеСкладаСписания);
			ДанныеПечати.Вставить("ВидДеятельностиПоОКДП", Неопределено);
			ДанныеПечати.Вставить("ГрузополучательПоОКПО", СведенияОГрузополучателе.КодПоОКПО);
			ДанныеПечати.Вставить("ПоставщикПоОКПО", СведенияОПоставщике.КодПоОКПО);
			ДанныеПечати.Вставить("ПлательщикПоОКПО", СведенияОПокупателе.КодПоОКПО);
			ДанныеПечати.Вставить("ПредставлениеОснования",ДанныеОбъекта.ПредставлениеОснования);
			
			ОснованиеНомер = Строка(ДанныеОбъекта.ОснованиеНомер);
			Если НЕ ПустаяСтрока(ОснованиеНомер) Тогда
				
				ОснованиеНомер = ПечатьДокументовУНФ.ПолучитьНомерНаПечатьСУчетомДатыДокумента(ДанныеОбъекта.ДатаДокумента, ОснованиеНомер, ДанныеОбъекта.Префикс)
				
			КонецЕсли;
			
			ДанныеПечати.Вставить("ОснованиеНомер", ОснованиеНомер);
			ДанныеПечати.Вставить("ОснованиеДата", ДанныеОбъекта.ОснованиеДата);
			ДанныеПечати.Вставить("ТранспортнаяНакладнаяНомер", ДанныеОбъекта.ТранспортнаяНакладнаяНомер);
			ДанныеПечати.Вставить("ТранспортнаяНакладнаяДата", ДанныеОбъекта.ТранспортнаяНакладнаяДата);
			
			ОбластиМакета.ОбластьМакетаШапка.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьМакетаШапка);
			
		КонецЕсли;
		
		СтруктураИтогов = Новый Структура(
		"ИтогоМестНаСтранице,
		|ИтогоМассаБруттоПоСтранице,
		|ИтогоКоличествоНаСтранице,
		|ИтогоСуммаНаСтранице,
		|ИтогоНДСНаСтранице,
		|ИтогоСуммаСНДСНаСтранице,
		|НомерСтроки,
		|КоличествоСтрок,
		|ИтогоМест,
		|ИтогоМассаБрутто,
		|ИтогоКоличество,
		|ИтогоСумма,
		|ИтогоНДС,
		|ИтогоСуммаСНДС,
		|НомерСтраницы,
		|ИспользоватьФаксимиле",
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, ДанныеОбъекта.ИспользоватьФаксимиле);
		
		Если ОбластиМакета.ОбластьМакетаЗаголовокТаблицы <> Неопределено Тогда 
			
			ДанныеПечати.Вставить("НомерСтраницы", "Страница " + СтруктураИтогов.НомерСтраницы);
			
			ОбластиМакета.ОбластьМакетаЗаголовокТаблицы.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьМакетаЗаголовокТаблицы);
			
		КонецЕсли;
		
		СтруктураИтогов.КоличествоСтрок = КоличествоСтрокКВыводуНаПечать(ДанныеОбъекта, ВключаяРаботыУслуги, ЕстьТЧЗапасы, ЕстьТЧРаботыУслуги, ЕстьТЧПродукция, ЕстьТЧОтходы);
		
		Если ОбластиМакета.ОбластьМакетаСтрока <> Неопределено Тогда
			
			ПараметрыНоменклатуры = Новый Структура;
			
			Если ЕстьТЧЗапасы Тогда
				
				// Наборы
				СтруктураИтогов.Вставить("ЕстьНаборы", ДанныеОбъекта.ТаблицаЗапасы.Колонки.Найти("НоменклатураНабора")<>Неопределено);
				
				Для Каждого СтрокаЗапаса Из ДанныеОбъекта.ТаблицаЗапасы Цикл
					
					Если НЕ ВключаяРаботыУслуги
						И СтрокаЗапаса.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Запас
						И СтрокаЗапаса.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.ПодарочныйСертификат Тогда
						
						Продолжить;
						
					КонецЕсли;
					
					Если СтрокаЗапаса.Количество=0 Тогда
						
						Продолжить;
						
					КонецЕсли; 
					
					Если СтруктураИтогов.НомерСтроки <> 0 
						И СтрокаКорректноРазмещаетсяНаСтранице(ТабличныйДокумент, ОбластиМакета, СтруктураИтогов) = Ложь Тогда
						
						ДобавитьНовуюСтраницуДокумента(ТабличныйДокумент, ОбластиМакета, СтруктураИтогов);
						
					КонецЕсли;
					
					ЗаполнитьДанныеПечатиПоСтрокеТабличнойЧасти(СтрокаЗапаса, ДанныеПечати, ПараметрыНоменклатуры, СтруктураИтогов, ДанныеОбъекта.СуммаВключаетНДС);
					ОбластиМакета.ОбластьМакетаСтрока.Параметры.Заполнить(ДанныеПечати);
					ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьМакетаСтрока);
					
					// Наборы
					Если СтруктураИтогов.ЕстьНаборы Тогда
						НаборыСервер.УчестьОформлениеСтрокиНабора(ТабличныйДокумент, ОбластиМакета.ОбластьМакетаСтрока, СтрокаЗапаса);
					КонецЕсли;
					// Конец Наборы
			
				КонецЦикла;
				
			КонецЕсли;
			
			Если ВключаяРаботыУслуги
				И ЕстьТЧРаботыУслуги Тогда
				
				// Наборы
				СтруктураИтогов.Вставить("ЕстьНаборы", ДанныеОбъекта.ТаблицаРаботыУслуги.Колонки.Найти("НоменклатураНабора")<>Неопределено);
				
				Для Каждого СтрокаРаботУслуг Из ДанныеОбъекта.ТаблицаРаботыУслуги Цикл
					
					Если СтруктураИтогов.НомерСтроки <> 0 
						И СтрокаКорректноРазмещаетсяНаСтранице(ТабличныйДокумент, ОбластиМакета, СтруктураИтогов) = Ложь Тогда
						
						ДобавитьНовуюСтраницуДокумента(ТабличныйДокумент, ОбластиМакета, СтруктураИтогов);
						
					КонецЕсли;
					
					Если СтрокаРаботУслуг.Количество=0 Тогда
						
						Продолжить;
						
					КонецЕсли; 
					
					ЗаполнитьДанныеПечатиПоСтрокеТабличнойЧасти(СтрокаРаботУслуг, ДанныеПечати, ПараметрыНоменклатуры, СтруктураИтогов, ДанныеОбъекта.СуммаВключаетНДС);
					ОбластиМакета.ОбластьМакетаСтрока.Параметры.Заполнить(ДанныеПечати);
					ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьМакетаСтрока);
					
					// Наборы
					Если СтруктураИтогов.ЕстьНаборы Тогда
						НаборыСервер.УчестьОформлениеСтрокиНабора(ТабличныйДокумент, ОбластиМакета.ОбластьМакетаСтрока, СтрокаРаботУслуг);
					КонецЕсли;
					// Конец Наборы
			
				КонецЦикла;
				
			КонецЕсли;
			
			// Наборы
			СтруктураИтогов.Вставить("ЕстьНаборы", Ложь);
			
			Если ЕстьТЧПродукция Тогда
				
				Для Каждого СтрокаПродукция Из ДанныеОбъекта.ТаблицаПродукция Цикл
					
					Если НЕ ВключаяРаботыУслуги
						И СтрокаПродукция.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Запас Тогда
						
						Продолжить;
						
					КонецЕсли;
					
					Если СтрокаПродукция.Количество=0 Тогда
						
						Продолжить;
						
					КонецЕсли; 
					
					Если СтруктураИтогов.НомерСтроки <> 0 
						И СтрокаКорректноРазмещаетсяНаСтранице(ТабличныйДокумент, ОбластиМакета, СтруктураИтогов) = Ложь Тогда
						
						ДобавитьНовуюСтраницуДокумента(ТабличныйДокумент, ОбластиМакета, СтруктураИтогов);
						
					КонецЕсли;
					
					ЗаполнитьДанныеПечатиПоСтрокеТабличнойЧасти(СтрокаПродукция, ДанныеПечати, ПараметрыНоменклатуры, СтруктураИтогов, ДанныеОбъекта.СуммаВключаетНДС);
					
					ОбластиМакета.ОбластьМакетаСтрока.Параметры.Заполнить(ДанныеПечати);
					ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьМакетаСтрока);
					
				КонецЦикла;
				
			КонецЕсли;
			
			Если ЕстьТЧОтходы Тогда
				
				Для Каждого СтрокаОтходы Из ДанныеОбъекта.ТаблицаОтходы Цикл
					
					Если НЕ ВключаяРаботыУслуги
						И СтрокаОтходы.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Запас Тогда
						
						Продолжить;
						
					КонецЕсли;
					
					Если СтрокаОтходы.Количество=0 Тогда
						
						Продолжить;
						
					КонецЕсли; 
					
					Если СтруктураИтогов.НомерСтроки <> 0 
						И СтрокаКорректноРазмещаетсяНаСтранице(ТабличныйДокумент, ОбластиМакета, СтруктураИтогов) = Ложь Тогда
						
						ДобавитьНовуюСтраницуДокумента(ТабличныйДокумент, ОбластиМакета, СтруктураИтогов);
						
					КонецЕсли;
					
					ЗаполнитьДанныеПечатиПоСтрокеТабличнойЧасти(СтрокаОтходы, ДанныеПечати, ПараметрыНоменклатуры, СтруктураИтогов, ДанныеОбъекта.СуммаВключаетНДС);
					
					ОбластиМакета.ОбластьМакетаСтрока.Параметры.Заполнить(ДанныеПечати);
					ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьМакетаСтрока);
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если ОбластиМакета.ОбластьМакетаИтогоПоСтранице <> Неопределено Тогда
			
			ОбластиМакета.ОбластьМакетаИтогоПоСтранице.Параметры.Заполнить(СтруктураИтогов);
			ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьМакетаИтогоПоСтранице);
			
		КонецЕсли;
		
		Если ОбластиМакета.ОбластьМакетаВсего <> Неопределено Тогда
			
			ОбластиМакета.ОбластьМакетаВсего.Параметры.Заполнить(СтруктураИтогов);
			ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьМакетаВсего);
			
		конецЕсли;
		
		ОбластьМакета = ?(ДанныеОбъекта.ИспользоватьФаксимиле = Перечисления.ДаНет.Да, ОбластиМакета.ОбластьМакетаПодвалСФаксимиле, ОбластиМакета.ОбластьМакетаПодвалБезФаксимиле);
		Если ОбластьМакета <> Неопределено Тогда
			
			ПоследняяЦифра = Прав(Строка(СтруктураИтогов.НомерСтраницы), 1);
			Суффикс = ?(ПоследняяЦифра = "1", НСтр("ru =' листе'"), НСтр("ru =' листах'"));
			ДанныеПечати.Вставить("КоличествоЛистовВПриложении", Строка(СтруктураИтогов.НомерСтраницы) + Суффикс);
			
			ДанныеПечати.Вставить("ДолжностьРуководителя", ДанныеОбъекта.ДолжностьРуководителя);
			ДанныеПечати.Вставить("РасшифровкаПодписиРуководителя", ДанныеОбъекта.РасшифровкаПодписиРуководителя);
			ДанныеПечати.Вставить("РасшифровкаПодписиГлавногоБухгалтера", ДанныеОбъекта.РасшифровкаПодписиГлавногоБухгалтера);
			ДанныеПечати.Вставить("ДолжностьКладовщика", ДанныеОбъекта.ДолжностьКладовщика);
			ДанныеПечати.Вставить("РасшифровкаПодписиКладовщика", ДанныеОбъекта.РасшифровкаПодписиКладовщика);
			ДанныеПечати.Вставить("КоличествоПорядковыхНомеровЗаписейПрописью", ЧислоПрописью(СтруктураИтогов.КоличествоСтрок, ,",,,,,,,,0"));
			ДанныеПечати.Вставить("ВсегоМестПрописью", ?(СтруктураИтогов.ИтогоМест = 0, "", ЧислоПрописью(СтруктураИтогов.ИтогоМест, ,",,,С,,,,,0")));
			ДанныеПечати.Вставить("МассаГрузаПрописью", МассаГрузаПрописью(СтруктураИтогов.ИтогоМассаБрутто, ДанныеОбъекта));
			ДанныеПечати.Вставить("СуммаПрописью", РаботаСКурсамиВалют.СформироватьСуммуПрописью(СтруктураИтогов.ИтогоСуммаСНДС, НациональнаяВалюта));
			ДанныеПечати.Вставить("ДоверенностьНомер", ДанныеОбъекта.ДоверенностьНомер);
			ДанныеПечати.Вставить("ДоверенностьДата", ДанныеОбъекта.ДоверенностьДата);
			ДанныеПечати.Вставить("ДоверенностьВыдана", ДанныеОбъекта.ДоверенностьВыдана);
			ДанныеПечати.Вставить("ДоверенностьЧерезКого", ДанныеОбъекта.ДоверенностьЛицо);
			ДанныеПечати.Вставить("ДоверенностьЧерезКого", ДанныеОбъекта.ДоверенностьЛицо);
			ДанныеПечати.Вставить("РасшифровкаПодписиКонтрагента", ДанныеОбъекта.РасшифровкаПодписиКонтрагента);
			
			ПолнаяДатаДокумента = Формат(ДанныеОбъекта.ДатаДокумента, "ДФ=""дд ММММ гггг """"года""""""");
			ДлинаСтроки         = СтрДлина(ПолнаяДатаДокумента);
			ПервыйРазделитель   = СтрНайти(ПолнаяДатаДокумента," ");
			ВторойРазделитель   = СтрНайти(Прав(ПолнаяДатаДокумента,ДлинаСтроки - ПервыйРазделитель), " ") + ПервыйРазделитель;
			
			ДанныеПечати.Вставить("ДатаДокументаДень", """" + Лев(ПолнаяДатаДокумента, ПервыйРазделитель - 1) + """");
			ДанныеПечати.Вставить("ДатаДокументаМесяц", Сред(ПолнаяДатаДокумента, ПервыйРазделитель + 1, ВторойРазделитель - ПервыйРазделитель - 1));
			ДанныеПечати.Вставить("ДатаДокументаГод", Прав(ПолнаяДатаДокумента, ДлинаСтроки - ВторойРазделитель));
			
			Если ДанныеОбъекта.ИспользоватьФаксимиле = Перечисления.ДаНет.Да Тогда
				
				ПодписиИФаксимиле = Новый Соответствие; // Ключ - имя каринки в области, Значение - имя реквизита
				ПодписиИФаксимиле.Вставить("ПодписьРуководителя", "ФаксимилеРуководителя");
				ПодписиИФаксимиле.Вставить("ПодписьГлавногоБухгалтера", "ФаксимилеГлавногоБухгалтера");
				ПодписиИФаксимиле.Вставить("ПодписьКладовщика", "ФаксимилеКладовщика");
				ПодписиИФаксимиле.Вставить("ПечатьОрганизации", "ФаксимилеПечати");
				
				ПодписьДокументовУНФ.ЗаполнитьФаксимилеВОбластиМакета(ОбластьМакета, ДанныеОбъекта, ПодписиИФаксимиле, Ошибки);
				
			КонецЕсли;
			
			ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЕсли;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеОбъекта.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецОбласти

Процедура ЗаполнитьДанныеПечатиПоСтрокеТабличнойЧасти(СтрокаТабличнойЧасти, ДанныеПечати, ПараметрыНоменклатуры, СтруктураИтогов, СуммаВключаетНДС)
	
	ДанныеПечати.Очистить();
	
	Если НЕ СтруктураИтогов.ЕстьНаборы ИЛИ НЕ СтрокаТабличнойЧасти.ЭтоНабор Тогда
		СтруктураИтогов.НомерСтроки = СтруктураИтогов.НомерСтроки + 1;
		НомерСтроки = СтруктураИтогов.НомерСтроки;
	Иначе
		НомерСтроки = 0;
	КонецЕсли; 
	ДанныеПечати.Вставить("НомерСтроки", НомерСтроки);
	
	ПараметрыНоменклатуры.Очистить();
	ПараметрыНоменклатуры.Вставить("Содержание", СтрокаТабличнойЧасти.Содержание);
	ПараметрыНоменклатуры.Вставить("ПредставлениеНоменклатуры", СтрокаТабличнойЧасти.ПредставлениеНоменклатуры);
	ПараметрыНоменклатуры.Вставить("ПредставлениеХарактеристики", СтрокаТабличнойЧасти.Характеристика);
	// Наборы
	Если СтруктураИтогов.ЕстьНаборы Тогда
		ПараметрыНоменклатуры.Вставить("НеобходимоВыделитьКакСоставНабора", СтрокаТабличнойЧасти.НеобходимоВыделитьКакСоставНабора);
	КонецЕсли; 
	
	ДанныеПечати.Вставить("ПредставлениеНоменклатуры", ПечатьДокументовУНФ.ПредставлениеНоменклатуры(ПараметрыНоменклатуры));
	ДанныеПечати.Вставить("ПредставлениеКодаНоменклатуры", ПечатьДокументовУНФ.ПредставлениеКодаНоменклатуры(СтрокаТабличнойЧасти));
	ДанныеПечати.Вставить("ЕдиницаИзмеренияПоОКЕИ_Наименование", СтрокаТабличнойЧасти.ЕдиницаИзмеренияПоОКЕИ_Наименование);
	ДанныеПечати.Вставить("ЕдиницаИзмеренияПоОКЕИ_Код", СтрокаТабличнойЧасти.ЕдиницаИзмеренияПоОКЕИ_Код);
	ДанныеПечати.Вставить("ВидУпаковки", СтрокаТабличнойЧасти.ВидУпаковки);
	ДанныеПечати.Вставить("КоличествоВОдномМесте", СтрокаТабличнойЧасти.КоличествоВОдномМесте);
	ДанныеПечати.Вставить("КоличествоМест", СтрокаТабличнойЧасти.КоличествоМест);
	ДанныеПечати.Вставить("Количество", Окр(СтрокаТабличнойЧасти.Количество * СтрокаТабличнойЧасти.КоэффициентЕдиницыИзмерения, 3));
	
	ЗаполнитьПолеМассаБрутто(ДанныеПечати, СтрокаТабличнойЧасти);
	
	ДанныеПечати.Вставить("СтавкаНДС", СтрокаТабличнойЧасти.СтавкаНДС);
	ДанныеПечати.Вставить("СуммаСНДС", СтрокаТабличнойЧасти.Всего);
	ДанныеПечати.Вставить("СуммаНДС", СтрокаТабличнойЧасти.СуммаНДС);
	
	СуммаБезНДС = СтрокаТабличнойЧасти.Сумма - ?(СуммаВключаетНДС, СтрокаТабличнойЧасти.СуммаНДС, 0);
	
	Если ТипЗнч(ДанныеПечати.Количество) <> Тип("Число") Тогда
		
		Цена = Неопределено; //При реализации услуг количество (и цена) могут не указываться
		
	ИначеЕсли СуммаВключаетНДС = Ложь
		И СтрокаТабличнойЧасти.Владелец().Колонки.Найти("СуммаСкидкиПоСтроке") <> Неопределено
		И СтрокаТабличнойЧасти.СуммаСкидкиПоСтроке = 0 Тогда
		
		Цена = СтрокаТабличнойЧасти.Цена;
		
	Иначе
		
		Цена = ОКР(СуммаБезНДС / ?(ДанныеПечати.Количество = 0, 1, ДанныеПечати.Количество), 2);
		
	КонецЕсли;
	
	ДанныеПечати.Вставить("СуммаБезНДС", СуммаБезНДС);
	ДанныеПечати.Вставить("Цена", Цена);
	
	Если НЕ СтруктураИтогов.ЕстьНаборы ИЛИ НЕ СтрокаТабличнойЧасти.ЭтоНабор Тогда
		СтруктураИтогов.ИтогоМестНаСтранице = СтруктураИтогов.ИтогоМестНаСтранице + ?(ДанныеПечати.КоличествоМест = Неопределено, 0, ДанныеПечати.КоличествоМест);
		СтруктураИтогов.ИтогоКоличествоНаСтранице = СтруктураИтогов.ИтогоКоличествоНаСтранице + ДанныеПечати.Количество;
		СтруктураИтогов.ИтогоМассаБруттоПоСтранице = СтруктураИтогов.ИтогоМассаБруттоПоСтранице + ДанныеПечати.МассаБрутто;
		СтруктураИтогов.ИтогоСуммаНаСтранице = СтруктураИтогов.ИтогоСуммаНаСтранице + ДанныеПечати.СуммаБезНДС;
		СтруктураИтогов.ИтогоНДСНаСтранице = СтруктураИтогов.ИтогоНДСНаСтранице + ДанныеПечати.СуммаНДС;
		СтруктураИтогов.ИтогоСуммаСНДСНаСтранице = СтруктураИтогов.ИтогоСуммаСНДСНаСтранице + ДанныеПечати.СуммаСНДС;
		
		СтруктураИтогов.ИтогоМест = СтруктураИтогов.ИтогоМест + ?(ДанныеПечати.КоличествоМест = Неопределено, 0, ДанныеПечати.КоличествоМест);
		СтруктураИтогов.ИтогоКоличество = СтруктураИтогов.ИтогоКоличество + ДанныеПечати.Количество;
		СтруктураИтогов.ИтогоМассаБрутто = СтруктураИтогов.ИтогоМассаБрутто + ДанныеПечати.МассаБрутто;
		СтруктураИтогов.ИтогоСумма = СтруктураИтогов.ИтогоСумма + ДанныеПечати.СуммаБезНДС;
		СтруктураИтогов.ИтогоНДС = СтруктураИтогов.ИтогоНДС + ДанныеПечати.СуммаНДС;
		СтруктураИтогов.ИтогоСуммаСНДС = СтруктураИтогов.ИтогоСуммаСНДС + ДанныеПечати.СуммаСНДС;
	КонецЕсли; 
	
КонецПроцедуры

Функция СтрокаКорректноРазмещаетсяНаСтранице(ТабличныйДокумент, СтруктураОбластейМакета, СтруктураИтогов)
	
	ЕстьВсеОбласти = Истина;
	Для каждого ЭлементСтруктуры Из СтруктураОбластейМакета Цикл
		
		Если ЭлементСтруктуры.Значение = Неопределено Тогда
			
			ЕстьВсеОбласти = Ложь;
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если НЕ ЕстьВсеОбласти Тогда
		
		Возврат Неопределено;
		
	КонецЕсли;
	
	МассивОбластейМакета = Новый Массив;
	
	МассивОбластейМакета.Добавить(СтруктураОбластейМакета.ОбластьМакетаСтрока);
	МассивОбластейМакета.Добавить(СтруктураОбластейМакета.ОбластьМакетаИтогоПоСтранице);
	
	Если СтруктураИтогов.НомерСтроки = СтруктураИтогов.КоличествоСтрок - 1 Тогда
		
		МассивОбластейМакета.Добавить(СтруктураОбластейМакета.ОбластьМакетаВсего);
		
		ИмяСекции = ?(СтруктураИтогов.ИспользоватьФаксимиле = Перечисления.ДаНет.Нет, "ОбластьМакетаПодвалБезФаксимиле", "ОбластьМакетаПодвалСФаксимиле");
		МассивОбластейМакета.Добавить(СтруктураОбластейМакета[ИмяСекции]);
		
	КонецЕсли;
	
	Возврат ТабличныйДокумент.ПроверитьВывод(МассивОбластейМакета)
	
КонецФункции

Процедура ДобавитьНовуюСтраницуДокумента(ТабличныйДокумент, ОбластиМакета, СтруктураИтогов)
	
	ОбластиМакета.ОбластьМакетаИтогоПоСтранице.Параметры.Заполнить(СтруктураИтогов);
	ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьМакетаИтогоПоСтранице);
	
	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	СтруктураИтогов.ИтогоМестНаСтранице = 0;
	СтруктураИтогов.ИтогоКоличествоНаСтранице = 0;
	СтруктураИтогов.ИтогоМассаБруттоПоСтранице = 0;
	СтруктураИтогов.ИтогоСуммаНаСтранице = 0;
	СтруктураИтогов.ИтогоНДСНаСтранице = 0;
	СтруктураИтогов.ИтогоСуммаСНДСНаСтранице = 0;
	
	// Выведем заголовок таблицы
	СтруктураИтогов.НомерСтраницы = СтруктураИтогов.НомерСтраницы + 1;
	ПредставлениеСтраницы = НСтр("ru ='Страница '") + СтруктураИтогов.НомерСтраницы;
	ОбластиМакета.ОбластьМакетаЗаголовокТаблицы.Параметры.Заполнить(Новый Структура("НомерСтраницы", ПредставлениеСтраницы));
	ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьМакетаЗаголовокТаблицы);
	
КонецПроцедуры

Функция МассаГрузаПрописью(Знач ИтогоМассаБрутто, Знач ДанныеОбъекта)
	
	ЗначениеДляПечати = ИтогоМассаБрутто;
	
	Если Не ЗначениеЗаполнено(ЗначениеДляПечати) Тогда
		ЗначениеДляЗаполнения = Новый Структура("Вес");
		ЗаполнитьЗначенияСвойств(ЗначениеДляЗаполнения, ДанныеОбъекта);
		ЗначениеДляПечати = ЗначениеДляЗаполнения.Вес;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ЗначениеДляПечати) Тогда
		Возврат "";
	КонецЕсли;
	
	Возврат ЧислоПрописью(
	ЗначениеДляПечати,
	"ДП=Истина",
	"килограмм,килограмма,килограммов,м,грамм,грамма,граммов,м,3");
	
КонецФункции

Процедура ЗаполнитьПолеМассаБрутто(Знач ДанныеПечати, Знач СтрокаТабличнойЧасти)
	
	ЗначениеДляЗаполнения = Новый Структура("МассаБрутто", 0);
	ЗаполнитьЗначенияСвойств(ЗначениеДляЗаполнения, СтрокаТабличнойЧасти);
	ДанныеПечати.Вставить("МассаБрутто", ЗначениеДляЗаполнения.МассаБрутто);
	
КонецПроцедуры

Функция КоличествоСтрокКВыводуНаПечать(ДанныеОбъекта, ВключаяРаботыУслуги, ЕстьТЧЗапасы, ЕстьТЧРаботыУслуги, ЕстьТЧПродукция, ЕстьТЧОтходы)
	
	КоличествоРезультирующихСтрок = 0;
	
	Если ЕстьТЧЗапасы Тогда
		
		КоличествоРезультирующихСтрок = КоличествоРезультирующихСтрок + ПросуммироватьСтрокиТаблицы(ДанныеОбъекта.ТаблицаЗапасы, ВключаяРаботыУслуги);
		
	КонецЕсли;
	
	Если ВключаяРаботыУслуги
		И ЕстьТЧРаботыУслуги Тогда
		
		КоличествоРезультирующихСтрок = КоличествоРезультирующихСтрок + ПросуммироватьСтрокиТаблицы(ДанныеОбъекта.ТаблицаРаботыУслуги, Истина);
		
	КонецЕсли;
	
	Если ЕстьТЧПродукция Тогда
		
		КоличествоРезультирующихСтрок = КоличествоРезультирующихСтрок + ПросуммироватьСтрокиТаблицы(ДанныеОбъекта.ТаблицаПродукция, ВключаяРаботыУслуги);
		
	КонецЕсли;
	
	Если ЕстьТЧОтходы Тогда
		
		КоличествоРезультирующихСтрок = КоличествоРезультирующихСтрок + ПросуммироватьСтрокиТаблицы(ДанныеОбъекта.ТаблицаОтходы, ВключаяРаботыУслуги);
		
	КонецЕсли;
	
	Возврат КоличествоРезультирующихСтрок;
	
КонецФункции

Функция ПросуммироватьСтрокиТаблицы(ТаблицаДокумента, ВключаяРаботыУслуги)
	
	КоличествоРезультирующихСтрок = 0;
	
	ЕстьНаборы = ТаблицаДокумента.Колонки.Найти("ЭтоНабор")<>Неопределено;
	
	Для каждого СтрокаТаблицы Из ТаблицаДокумента Цикл
		
		Если НЕ ВключаяРаботыУслуги
			И СтрокаТаблицы.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Запас
			И СтрокаТаблицы.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.ПодарочныйСертификат Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		Если СтрокаТаблицы.Количество = 0 Тогда
			
			Продолжить;
			
		КонецЕсли; 
		
		Если ЕстьНаборы И СтрокаТаблицы.ЭтоНабор Тогда
			
			Продолжить;
			
		КонецЕсли; 
		
		КоличествоРезультирующихСтрок = КоличествоРезультирующихСтрок + 1;
		
	КонецЦикла;
	
	Возврат КоличествоРезультирующихСтрок;
	
КонецФункции

Функция МатрицаВозможныхВариантов() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"Выбрать Ложь ВключаяУслуги, Ложь ИспользоватьФаксимиле
	|Объединить
	|Выбрать Ложь, Истина
	|Объединить
	|Выбрать Истина, Ложь
	|Объединить
	|Выбрать Истина, Истина";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

#КонецЕсли