#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

//Процедура получения данных по расходной накладной
//
Процедура ПолучитьДанныеПоРасходнойНакладной(ДанныеДокумента, ТекущийДокумент)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Документ",  ТекущийДокумент);
	Запрос.УстановитьПараметр("ШтукаНаименование", Справочники.КлассификаторЕдиницИзмерения.шт.Наименование);
	Запрос.УстановитьПараметр("ШтукаКод", Справочники.КлассификаторЕдиницИзмерения.шт.Код);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасходнаяНакладная.Номер КАК Номер,
	|	РасходнаяНакладная.Ссылка КАК ТекущийДокумент,
	|	РасходнаяНакладная.Дата КАК ДатаДокумента,
	|	РасходнаяНакладная.СрокДоставки КАК СрокДоставки,
	|	РасходнаяНакладная.Организация КАК Организация,
	|	РасходнаяНакладная.Организация.Префикс КАК Префикс,
	|	РасходнаяНакладная.Организация КАК ЮрФизЛицо,
	|	РасходнаяНакладная.Организация КАК Поставщик,
	|	РасходнаяНакладная.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	РасходнаяНакладная.ПодписьРуководителя.Должность КАК ДолжностьРуководителя,
	|	РасходнаяНакладная.ПодписьРуководителя.РасшифровкаПодписи КАК РасшифровкаПодписиРуководителя,
	|	РасходнаяНакладная.ПодписьГлавногоБухгалтера.РасшифровкаПодписи КАК РасшифровкаПодписиГлавногоБухгалтера,
	|	РасходнаяНакладная.ПодписьКладовщика.Должность КАК ДолжностьКладовщика,
	|	РасходнаяНакладная.ПодписьКладовщика.РасшифровкаПодписи КАК РасшифровкаПодписиКладовщика,
	|	РасходнаяНакладная.КонтактноеЛицоПодписант.Наименование КАК РасшифровкаПодписиКонтрагента,
	|	ВЫБОР
	|		КОГДА РасходнаяНакладная.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА РасходнаяНакладная.Организация
	|		ИНАЧЕ РасходнаяНакладная.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|	ВЫБОР
	|		КОГДА РасходнаяНакладная.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА РасходнаяНакладная.Контрагент
	|		ИНАЧЕ РасходнаяНакладная.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|	РасходнаяНакладная.БанковскийСчет КАК БанковскийСчет,
	|	РасходнаяНакладная.Контрагент КАК Покупатель,
	|	РасходнаяНакладная.Контрагент КАК Плательщик,
	|	РасходнаяНакладная.БанковскийСчетКонтрагента КАК БанковскийСчетПлательщика,
	|	РасходнаяНакладная.АдресДоставки КАК АдресДоставки,
	|	РасходнаяНакладная.Перевозчик КАК Перевозчик,
	|	НацВалюта.Значение КАК ВалютаДокумента,
	|	РасходнаяНакладная.Курс КАК Курс,
	|	РасходнаяНакладная.Кратность КАК Кратность,
	|	РасходнаяНакладная.НДСВключатьВСтоимость КАК НДСВключатьВСтоимость,
	|	РасходнаяНакладная.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	РасходнаяНакладная.ДоверенностьНомер КАК ДоверенностьНомер,
	|	РасходнаяНакладная.ДоверенностьДата КАК ДоверенностьДата,
	|	РасходнаяНакладная.ДоверенностьВыдана КАК ДоверенностьВыдана,
	|	РасходнаяНакладная.ДоверенностьЛицо КАК ДоверенностьЛицо,
	|	РасходнаяНакладная.СтруктурнаяЕдиница.МОЛ КАК Кладовщик,
	|	РасходнаяНакладная.Автомобиль КАК Автомобиль,
	|	РасходнаяНакладная.Автомобиль.Марка КАК МаркаАвтомобиля,
	|	РасходнаяНакладная.Автомобиль.Код КАК ГосНомерАвтомобиля,
	|	РасходнаяНакладная.Прицеп КАК Прицеп,
	|	РасходнаяНакладная.Прицеп.Марка КАК МаркаПрицепа,
	|	РасходнаяНакладная.Прицеп.Код КАК ГосНомерПрицепа,
	|	РасходнаяНакладная.Автомобиль.ДействующаяЛицензионнаяКарточка КАК ДействующаяЛицензионнаяКарточка,
	|	РасходнаяНакладная.Автомобиль.ДействующаяЛицензионнаяКарточка.РегистрационныйНомерВГосударственномОргане КАК ЛицензионнаяКарточкаРегистрационныйНомер,
	|	РасходнаяНакладная.Автомобиль.ДействующаяЛицензионнаяКарточка.СерияЛицензионнойКарты КАК ЛицензионнаяКарточкаСерия,
	|	РасходнаяНакладная.Автомобиль.ДействующаяЛицензионнаяКарточка.НомерЛицензионнойКарты КАК ЛицензионнаяКарточкаНомер,
	|	РасходнаяНакладная.Автомобиль.ДействующаяЛицензионнаяКарточка.ВидДеятельности КАК ЛицензионнаяКарточкаВидДеятельности,
	|	РасходнаяНакладная.Водитель КАК Водитель,
	|	РасходнаяНакладная.Вес КАК Вес,
	|	РасходнаяНакладная.Объем КАК Объем,
	|	РасходнаяНакладная.НоменклатураДоставки КАК НоменклатураДоставки,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(РасходнаяНакладная.НоменклатураДоставки.НаименованиеПолное КАК СТРОКА(1000))) = """"
	|			ТОГДА РасходнаяНакладная.НоменклатураДоставки.Наименование
	|		ИНАЧЕ ВЫРАЗИТЬ(РасходнаяНакладная.НоменклатураДоставки.НаименованиеПолное КАК СТРОКА(1000))
	|	КОНЕЦ КАК ПредставлениеНоменклатурыДоставки,
	|	РасходнаяНакладная.НоменклатураДоставки.Артикул КАК АртикулДоставки,
	|	РасходнаяНакладная.НоменклатураДоставки.Код КАК КодДоставки,
	|	РасходнаяНакладная.НоменклатураДоставки.ЕдиницаИзмерения КАК ЕдиницаИзмеренияДоставки,
	|	РасходнаяНакладная.НоменклатураДоставки.ЕдиницаИзмерения.Код КАК КодЕдиницыИзмеренияДоставки,
	|	РасходнаяНакладная.СтавкаНДСДоставки КАК СтавкаНДСДоставки,
	|	ВЫБОР
	|		КОГДА НацВалюта.Значение = РасходнаяНакладная.ВалютаДокумента
	|			ТОГДА РасходнаяНакладная.СтоимостьДоставки
	|		ИНАЧЕ РасходнаяНакладная.СтоимостьДоставки * РасходнаяНакладная.Курс / РасходнаяНакладная.Кратность
	|	КОНЕЦ КАК СтоимостьДоставки,
	|	ВЫБОР
	|		КОГДА НацВалюта.Значение = РасходнаяНакладная.ВалютаДокумента
	|			ТОГДА РасходнаяНакладная.СуммаНДСДоставки
	|		ИНАЧЕ РасходнаяНакладная.СуммаНДСДоставки * РасходнаяНакладная.Курс / РасходнаяНакладная.Кратность
	|	КОНЕЦ КАК СуммаНДСДоставки,
	|	РасходнаяНакладная.Запасы.(
	|		НомерСтроки КАК Номер,
	|		Номенклатура КАК Номенклатура,
	|		ВЫБОР
	|			КОГДА (ВЫРАЗИТЬ(РасходнаяНакладная.Запасы.Номенклатура.НаименованиеПолное КАК СТРОКА(1000))) = """"
	|				ТОГДА РасходнаяНакладная.Запасы.Номенклатура.Наименование
	|			ИНАЧЕ ВЫРАЗИТЬ(РасходнаяНакладная.Запасы.Номенклатура.НаименованиеПолное КАК СТРОКА(1000))
	|		КОНЕЦ КАК ЗапасНаименование,
	|		Номенклатура.Код КАК КодПродукции,
	|		Вес КАК МассаБрутто,
	|		Объем КАК Объем,
	|		Количество КАК Количество,
	|		0 КАК КоличествоМест,
	|		Номенклатура.ЕдиницаИзмерения КАК БазоваяЕдиницаНаименование,
	|		ЕдиницаИзмерения КАК ЕдиницаИзмеренияДокумент,
	|		ЕдиницаИзмерения КАК ВидУпаковки,
	|		Номенклатура.ЕдиницаИзмерения.Код КАК БазоваяЕдиницаКодПоОКЕИ,
	|		ЕдиницаИзмерения.Коэффициент КАК Коэффициент,
	|		ВЫБОР
	|			КОГДА НацВалюта.Значение = РасходнаяНакладная.ВалютаДокумента
	|				ТОГДА РасходнаяНакладная.Запасы.СуммаАвтоматическойСкидки + РасходнаяНакладная.Запасы.СуммаСкидкиНаценки
	|			ИНАЧЕ (РасходнаяНакладная.Запасы.СуммаАвтоматическойСкидки + РасходнаяНакладная.Запасы.СуммаСкидкиНаценки) * РасходнаяНакладная.Курс / РасходнаяНакладная.Кратность
	|		КОНЕЦ КАК СуммаСкидкиПоСтроке,
	|		ВЫБОР
	|			КОГДА НацВалюта.Значение = РасходнаяНакладная.ВалютаДокумента
	|				ТОГДА РасходнаяНакладная.Запасы.Цена
	|			ИНАЧЕ РасходнаяНакладная.Запасы.Цена * РасходнаяНакладная.Курс / РасходнаяНакладная.Кратность
	|		КОНЕЦ КАК Цена,
	|		ВЫБОР
	|			КОГДА НацВалюта.Значение = РасходнаяНакладная.ВалютаДокумента
	|				ТОГДА РасходнаяНакладная.Запасы.Сумма
	|			ИНАЧЕ РасходнаяНакладная.Запасы.Сумма * РасходнаяНакладная.Курс / РасходнаяНакладная.Кратность
	|		КОНЕЦ КАК Сумма,
	|		ВЫБОР
	|			КОГДА НацВалюта.Значение = РасходнаяНакладная.ВалютаДокумента
	|				ТОГДА РасходнаяНакладная.Запасы.СуммаНДС
	|			ИНАЧЕ РасходнаяНакладная.Запасы.СуммаНДС * РасходнаяНакладная.Курс / РасходнаяНакладная.Кратность
	|		КОНЕЦ КАК СуммаНДС,
	|		ВЫБОР
	|			КОГДА НацВалюта.Значение = РасходнаяНакладная.ВалютаДокумента
	|				ТОГДА РасходнаяНакладная.Запасы.Всего
	|			ИНАЧЕ РасходнаяНакладная.Запасы.Всего * РасходнаяНакладная.Курс / РасходнаяНакладная.Кратность
	|		КОНЕЦ КАК Всего,
	|		Сумма КАК СуммаВВалютеДокумента,
	|		СуммаНДС КАК СуммаНДСВВалютеДокумента,
	|		Всего КАК ВсегоВВалютеДокумента,
	|		СтавкаНДС КАК СтавкаНДС,
	|		Номенклатура.Артикул КАК Артикул,
	|		Характеристика КАК Характеристика,
	|		Содержание КАК Содержание,
	|		ЛОЖЬ КАК ЭтоНабор,
	|		ВЫБОР
	|			КОГДА РасходнаяНакладная.Запасы.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|					И РасходнаяНакладная.Запасы.НоменклатураНабора.ВариантПечатиНабора = ЗНАЧЕНИЕ(Перечисление.ВариантыПечатиНаборов.НаборИКомплектующие)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК НеобходимоВыделитьКакСоставНабора,
	|		НоменклатураНабора КАК НоменклатураНабора,
	|		ХарактеристикаНабора КАК ХарактеристикаНабора
	|	) КАК ТаблицаЗапасы,
	|	РасходнаяНакладная.ДобавленныеНаборы.(
	|		НоменклатураНабора КАК НоменклатураНабора,
	|		ХарактеристикаНабора КАК ХарактеристикаНабора,
	|		Количество КАК Количество,
	|		ВЫБОР
	|			КОГДА (ВЫРАЗИТЬ(РасходнаяНакладная.ДобавленныеНаборы.НоменклатураНабора.НаименованиеПолное КАК СТРОКА(1000))) = """"
	|				ТОГДА РасходнаяНакладная.ДобавленныеНаборы.НоменклатураНабора.Наименование
	|			ИНАЧЕ ВЫРАЗИТЬ(РасходнаяНакладная.ДобавленныеНаборы.НоменклатураНабора.НаименованиеПолное КАК СТРОКА(1000))
	|		КОНЕЦ КАК ЗапасНабора,
	|		НоменклатураНабора.ВариантПечатиНабора КАК ВариантПечатиНабора,
	|		НоменклатураНабора.ТипНоменклатуры КАК ТипНоменклатурыНабора,
	|		НоменклатураНабора.Артикул КАК АртикулНабора,
	|		НоменклатураНабора.Код КАК КодНабора,
	|		НоменклатураНабора.ЕдиницаИзмерения КАК ЕдиницаИзмеренияНабора,
	|		НоменклатураНабора.ЕдиницаИзмерения.Код КАК КодЕдиницыИзмеренияНабора,
	|		ВЫБОР
	|			КОГДА РасходнаяНакладная.ДобавленныеНаборы.НоменклатураНабора.ВариантПечатиНабора = ЗНАЧЕНИЕ(Перечисление.ВариантыПечатиНаборов.ТолькоНабор)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ВыводитьИтоги
	|	) КАК ТаблицаДобавленныеНаборы
	|ИЗ
	|	Документ.РасходнаяНакладная КАК РасходнаяНакладная,
	|	Константа.НациональнаяВалюта КАК НацВалюта
	|ГДЕ
	|	РасходнаяНакладная.Ссылка = &Документ
	|
	|УПОРЯДОЧИТЬ ПО
	|	РасходнаяНакладная.Ссылка,
	|	Номер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасходнаяНакладнаяЗапасы.Ссылка КАК Ссылка,
	|	МАКСИМУМ(РасходнаяНакладнаяЗапасы.НомерСтроки) КАК НомерСтроки
	|ПОМЕСТИТЬ МаксНомерСтрокиЗапасы
	|ИЗ
	|	Документ.РасходнаяНакладная.Запасы КАК РасходнаяНакладнаяЗапасы
	|ГДЕ
	|	РасходнаяНакладнаяЗапасы.Ссылка = &Документ
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходнаяНакладнаяЗапасы.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасходнаяНакладнаяЗапасы.Номенклатура КАК Номенклатура,
	|	ВЫРАЗИТЬ(РасходнаяНакладнаяЗапасы.Содержание КАК СТРОКА(1000)) КАК Содержание,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(РасходнаяНакладнаяЗапасы.Номенклатура.НаименованиеПолное КАК СТРОКА(1000))) = """"
	|			ТОГДА РасходнаяНакладнаяЗапасы.Номенклатура.Наименование
	|		ИНАЧЕ ВЫРАЗИТЬ(РасходнаяНакладнаяЗапасы.Номенклатура.НаименованиеПолное КАК СТРОКА(1000))
	|	КОНЕЦ КАК ПредставлениеНоменклатуры,
	|	РасходнаяНакладнаяЗапасы.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	РасходнаяНакладнаяЗапасы.Номенклатура.Код КАК ЗапасКод,
	|	РасходнаяНакладнаяЗапасы.Номенклатура.Артикул КАК Артикул,
	|	РасходнаяНакладнаяЗапасы.Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмеренияПоОКЕИ_Наименование,
	|	РасходнаяНакладнаяЗапасы.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияПоОКЕИ_Код,
	|	РасходнаяНакладнаяЗапасы.Характеристика КАК Характеристика,
	|	РасходнаяНакладнаяЗапасы.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	РасходнаяНакладнаяЗапасы.ЕдиницаИзмерения КАК ВидУпаковки,
	|	РасходнаяНакладнаяЗапасы.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА РасходнаяНакладнаяЗапасы.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
	|			ТОГДА РасходнаяНакладнаяЗапасы.ЕдиницаИзмерения.Коэффициент
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК КоэффициентЕдиницыИзмерения,
	|	РасходнаяНакладнаяЗапасы.СтавкаНДС КАК СтавкаНДС,
	|	РасходнаяНакладнаяЗапасы.Вес КАК Вес,
	|	РасходнаяНакладнаяЗапасы.Объем КАК Объем,
	|	РасходнаяНакладнаяЗапасы.СуммаАвтоматическойСкидки + РасходнаяНакладнаяЗапасы.СуммаСкидкиНаценки КАК СуммаСкидкиПоСтроке,
	|	РасходнаяНакладнаяЗапасы.Цена КАК Цена,
	|	РасходнаяНакладнаяЗапасы.НомерСтроки КАК НомерСтроки,
	|	РасходнаяНакладнаяЗапасы.Сумма КАК Сумма,
	|	РасходнаяНакладнаяЗапасы.СуммаНДС КАК СуммаНДС,
	|	РасходнаяНакладнаяЗапасы.Всего КАК Всего,
	|	РасходнаяНакладнаяЗапасы.Ссылка КАК Ссылка,
	|	РасходнаяНакладнаяЗапасы.НоменклатураНабора КАК НоменклатураНабора,
	|	РасходнаяНакладнаяЗапасы.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ЛОЖЬ КАК ЭтоНабор,
	|	ВЫБОР
	|		КОГДА РасходнаяНакладнаяЗапасы.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|				И РасходнаяНакладнаяЗапасы.НоменклатураНабора.ВариантПечатиНабора = ЗНАЧЕНИЕ(Перечисление.ВариантыПечатиНаборов.НаборИКомплектующие)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НеобходимоВыделитьКакСоставНабора,
	|	РасходнаяНакладнаяЗапасы.СтранаПроисхождения КАК СтранаСсылка,
	|	ПРЕДСТАВЛЕНИЕ(РасходнаяНакладнаяЗапасы.СтранаПроисхождения) КАК СтранаПредставление,
	|	РасходнаяНакладнаяЗапасы.СтранаПроисхождения.Код КАК СтранаКод,
	|	РасходнаяНакладнаяЗапасы.НомерГТД.РегистрационныйНомер КАК ПредставлениеГТД
	|ПОМЕСТИТЬ ВременнаяТаблица_РасходнаяНакладнаяЗапасы
	|ИЗ
	|	Документ.РасходнаяНакладная.Запасы КАК РасходнаяНакладнаяЗапасы
	|ГДЕ
	|	РасходнаяНакладнаяЗапасы.Ссылка = &Документ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасходнаяНакладнаяЗапасы.НоменклатураДоставки,
	|	ВЫРАЗИТЬ(РасходнаяНакладнаяЗапасы.НоменклатураДоставки.НаименованиеПолное КАК СТРОКА(1000)),
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(РасходнаяНакладнаяЗапасы.НоменклатураДоставки.НаименованиеПолное КАК СТРОКА(1000))) = """"
	|			ТОГДА РасходнаяНакладнаяЗапасы.НоменклатураДоставки.Наименование
	|		ИНАЧЕ ВЫРАЗИТЬ(РасходнаяНакладнаяЗапасы.НоменклатураДоставки.НаименованиеПолное КАК СТРОКА(1000))
	|	КОНЕЦ,
	|	РасходнаяНакладнаяЗапасы.НоменклатураДоставки.ТипНоменклатуры,
	|	РасходнаяНакладнаяЗапасы.НоменклатураДоставки.Код,
	|	РасходнаяНакладнаяЗапасы.НоменклатураДоставки.Артикул,
	|	&ШтукаНаименование,
	|	&ШтукаКод,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.шт),
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.шт),
	|	1,
	|	1,
	|	РасходнаяНакладнаяЗапасы.СтавкаНДСДоставки,
	|	0,
	|	0,
	|	0,
	|	РасходнаяНакладнаяЗапасы.СтоимостьДоставки,
	|	МаксНомерСтрокиЗапасы.НомерСтроки + 1,
	|	РасходнаяНакладнаяЗапасы.СтоимостьДоставки,
	|	РасходнаяНакладнаяЗапасы.СуммаНДСДоставки,
	|	ВЫБОР
	|		КОГДА РасходнаяНакладнаяЗапасы.Ссылка.СуммаВключаетНДС
	|			ТОГДА РасходнаяНакладнаяЗапасы.СтоимостьДоставки
	|		ИНАЧЕ РасходнаяНакладнаяЗапасы.СтоимостьДоставки + РасходнаяНакладнаяЗапасы.СуммаНДСДоставки
	|	КОНЕЦ,
	|	РасходнаяНакладнаяЗапасы.Ссылка,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО
	|ИЗ
	|	Документ.РасходнаяНакладная КАК РасходнаяНакладнаяЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ МаксНомерСтрокиЗапасы КАК МаксНомерСтрокиЗапасы
	|		ПО (МаксНомерСтрокиЗапасы.Ссылка = РасходнаяНакладнаяЗапасы.Ссылка)
	|ГДЕ
	|	РасходнаяНакладнаяЗапасы.Ссылка = &Документ
	|	И РасходнаяНакладнаяЗапасы.НоменклатураДоставки <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасходнаяНакладнаяЗапасы.Ссылка КАК Ссылка,
	|	РасходнаяНакладнаяЗапасы.НомерСтроки КАК Номер,
	|	РасходнаяНакладнаяЗапасы.Номенклатура КАК Номенклатура,
	|	РасходнаяНакладнаяЗапасы.ПредставлениеНоменклатуры КАК ЗапасНаименование,
	|	РасходнаяНакладнаяЗапасы.ЗапасКод КАК КодПродукции,
	|	РасходнаяНакладнаяЗапасы.Артикул КАК Артикул,
	|	РасходнаяНакладнаяЗапасы.Вес КАК МассаБрутто,
	|	РасходнаяНакладнаяЗапасы.Объем КАК Объем,
	|	РасходнаяНакладнаяЗапасы.Количество КАК Количество,
	|	0 КАК КоличествоМест,
	|	РасходнаяНакладнаяЗапасы.ЕдиницаИзмерения КАК БазоваяЕдиницаНаименование,
	|	РасходнаяНакладнаяЗапасы.ВидУпаковки КАК ЕдиницаИзмеренияДокумент,
	|	РасходнаяНакладнаяЗапасы.ВидУпаковки КАК ВидУпаковки,
	|	РасходнаяНакладнаяЗапасы.ЕдиницаИзмеренияПоОКЕИ_Код КАК БазоваяЕдиницаКодПоОКЕИ,
	|	РасходнаяНакладнаяЗапасы.КоэффициентЕдиницыИзмерения КАК Коэффициент,
	|	РасходнаяНакладнаяЗапасы.Характеристика КАК Характеристика,
	|	РасходнаяНакладнаяЗапасы.СтавкаНДС КАК СтавкаНДС,
	|	РасходнаяНакладнаяЗапасы.Содержание КАК Содержание,
	|	РасходнаяНакладнаяЗапасы.ЭтоНабор КАК ЭтоНабор,
	|	РасходнаяНакладнаяЗапасы.НеобходимоВыделитьКакСоставНабора КАК НеобходимоВыделитьКакСоставНабора,
	|	РасходнаяНакладнаяЗапасы.НоменклатураНабора КАК НоменклатураНабора,
	|	РасходнаяНакладнаяЗапасы.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	РасходнаяНакладнаяЗапасы.Сумма КАК СуммаВВалютеДокумента,
	|	РасходнаяНакладнаяЗапасы.СуммаНДС КАК СуммаНДСВВалютеДокумента,
	|	РасходнаяНакладнаяЗапасы.Всего КАК ВсегоВВалютеДокумента,
	|	ВЫБОР
	|		КОГДА РасходнаяНакладнаяЗапасы.Ссылка.ВалютаДокумента = НацВалюта.Значение
	|			ТОГДА РасходнаяНакладнаяЗапасы.СуммаСкидкиПоСтроке
	|		ИНАЧЕ ВЫРАЗИТЬ(РасходнаяНакладнаяЗапасы.СуммаСкидкиПоСтроке * РасходнаяНакладнаяЗапасы.Ссылка.Курс / РасходнаяНакладнаяЗапасы.Ссылка.Кратность КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаСкидкиПоСтроке,
	|	ВЫБОР
	|		КОГДА РасходнаяНакладнаяЗапасы.Ссылка.ВалютаДокумента = НацВалюта.Значение
	|			ТОГДА РасходнаяНакладнаяЗапасы.Цена
	|		КОГДА СуммыДокументовРегламентированныйУчет.Всего ЕСТЬ NULL
	|			ТОГДА ВЫРАЗИТЬ(РасходнаяНакладнаяЗапасы.Цена * РасходнаяНакладнаяЗапасы.Ссылка.Курс / РасходнаяНакладнаяЗапасы.Ссылка.Кратность КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ ВЫБОР
	|				КОГДА РасходнаяНакладнаяЗапасы.Количество = 0
	|					ТОГДА СуммыДокументовРегламентированныйУчет.Всего - СуммыДокументовРегламентированныйУчет.НДС
	|				ИНАЧЕ ВЫРАЗИТЬ((СуммыДокументовРегламентированныйУчет.Всего - СуммыДокументовРегламентированныйУчет.НДС) / РасходнаяНакладнаяЗапасы.Количество КАК ЧИСЛО(15, 2))
	|			КОНЕЦ
	|	КОНЕЦ КАК Цена,
	|	ВЫБОР
	|		КОГДА РасходнаяНакладнаяЗапасы.Ссылка.ВалютаДокумента = НацВалюта.Значение
	|			ТОГДА РасходнаяНакладнаяЗапасы.Сумма
	|		КОГДА СуммыДокументовРегламентированныйУчет.Всего ЕСТЬ NULL
	|			ТОГДА ВЫРАЗИТЬ(РасходнаяНакладнаяЗапасы.Сумма * РасходнаяНакладнаяЗапасы.Ссылка.Курс / РасходнаяНакладнаяЗапасы.Ссылка.Кратность КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ ВЫБОР
	|				КОГДА РасходнаяНакладнаяЗапасы.Ссылка.СуммаВключаетНДС
	|					ТОГДА ВЫРАЗИТЬ(СуммыДокументовРегламентированныйУчет.Всего КАК ЧИСЛО(15, 2))
	|				ИНАЧЕ ВЫРАЗИТЬ(СуммыДокументовРегламентированныйУчет.Всего - СуммыДокументовРегламентированныйУчет.НДС КАК ЧИСЛО(15, 2))
	|			КОНЕЦ
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА РасходнаяНакладнаяЗапасы.Ссылка.ВалютаДокумента = НацВалюта.Значение
	|			ТОГДА РасходнаяНакладнаяЗапасы.СуммаНДС
	|		КОГДА СуммыДокументовРегламентированныйУчет.Всего ЕСТЬ NULL
	|			ТОГДА ВЫРАЗИТЬ(РасходнаяНакладнаяЗапасы.СуммаНДС * РасходнаяНакладнаяЗапасы.Ссылка.Курс / РасходнаяНакладнаяЗапасы.Ссылка.Кратность КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовРегламентированныйУчет.НДС
	|	КОНЕЦ КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА РасходнаяНакладнаяЗапасы.Ссылка.ВалютаДокумента = НацВалюта.Значение
	|			ТОГДА РасходнаяНакладнаяЗапасы.Всего
	|		КОГДА СуммыДокументовРегламентированныйУчет.Всего ЕСТЬ NULL
	|			ТОГДА ВЫРАЗИТЬ(РасходнаяНакладнаяЗапасы.Всего * РасходнаяНакладнаяЗапасы.Ссылка.Курс / РасходнаяНакладнаяЗапасы.Ссылка.Кратность КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовРегламентированныйУчет.Всего
	|	КОНЕЦ КАК Всего
	|ИЗ
	|	ВременнаяТаблица_РасходнаяНакладнаяЗапасы КАК РасходнаяНакладнаяЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовРегламентированныйУчет КАК СуммыДокументовРегламентированныйУчет
	|		ПО РасходнаяНакладнаяЗапасы.Ссылка = СуммыДокументовРегламентированныйУчет.Регистратор
	|			И РасходнаяНакладнаяЗапасы.НомерСтроки = СуммыДокументовРегламентированныйУчет.НомерСтрокиДокумента,
	|	Константа.НациональнаяВалюта КАК НацВалюта
	|ГДЕ
	|	РасходнаяНакладнаяЗапасы.Ссылка = &Документ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Номер";
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ДанныеДокумента = МассивРезультатов[0].Выгрузить();
	
	ТЗСтрок = МассивРезультатов[3].Выгрузить();
	
	Для Каждого ТекущаяСтрока Из ДанныеДокумента Цикл
		
		НайденныеСтроки = ТЗСтрок.НайтиСтроки(Новый Структура("Ссылка", ТекущаяСтрока.ТекущийДокумент));
		Если НайденныеСтроки.Количество() > 0 Тогда
			ТекущаяСтрока.ТаблицаЗапасы = ТЗСтрок.Скопировать(НайденныеСтроки);
		КонецЕсли;
		
	КонецЦикла;
	
	// Наборы
	НаборыСервер.КомпоноватьТабличнуюЧастьПоНаборам(ДанныеДокумента, "ТаблицаЗапасы");
	
КонецПроцедуры // ПолучитьДанныеПоРасходнойНакладной()

//Процедура получения данных по расходной накладной
//
Процедура ПолучитьДанныеПоКорректировкеРеализации(ДанныеДокумента, ТекущийДокумент)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Документ",  ТекущийДокумент);
	
	Запрос.Текст =
	"Выбрать разрешенные
	|	КорректировкаРеализации.Номер,
	|	КорректировкаРеализации.Ссылка КАК ТекущийДокумент,
	|	КорректировкаРеализации.Дата КАК ДатаДокумента,
	|	КорректировкаРеализации.СрокДоставки КАК СрокДоставки,
	|	КорректировкаРеализации.Организация,
	|	КорректировкаРеализации.Организация.Префикс КАК Префикс,
	|	КорректировкаРеализации.Организация КАК ЮрФизЛицо,
	|	КорректировкаРеализации.Организация КАК Поставщик,
	|	КорректировкаРеализации.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	КорректировкаРеализации.ПодписьРуководителя.РасшифровкаПодписи КАК РасшифровкаПодписиРуководителя,
	|	КорректировкаРеализации.ПодписьРуководителя.Должность КАК ДолжностьРуководителя,
	|	КорректировкаРеализации.ПодписьРуководителя.РасшифровкаПодписи КАК РасшифровкаПодписиГлавногоБухгалтера,
	|	КорректировкаРеализации.ПодписьКладовщика.РасшифровкаПодписи КАК Кладовщик,
	|	КорректировкаРеализации.ПодписьКладовщика.РасшифровкаПодписи КАК РасшифровкаПодписиКладовщика,
	|	КорректировкаРеализации.ПодписьКладовщика.Должность КАК ДолжностьКладовщика,
	|	ВЫБОР
	|		КОГДА КорректировкаРеализации.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА КорректировкаРеализации.Организация
	|		ИНАЧЕ КорректировкаРеализации.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|	ВЫБОР
	|		КОГДА КорректировкаРеализации.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА КорректировкаРеализации.Контрагент
	|		ИНАЧЕ КорректировкаРеализации.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|	КорректировкаРеализации.БанковскийСчет КАК БанковскийСчет,
	|	КорректировкаРеализации.Контрагент КАК Покупатель,
	|	КорректировкаРеализации.Контрагент КАК Плательщик,
	|	КорректировкаРеализации.БанковскийСчетКонтрагента КАК БанковскийСчетПлательщика,
	|	КорректировкаРеализации.АдресДоставки КАК АдресДоставки,
	|	КорректировкаРеализации.Перевозчик КАК Перевозчик,
	|	КорректировкаРеализации.ВалютаДокумента,
	|	КорректировкаРеализации.Курс КАК Курс,
	|	КорректировкаРеализации.Кратность КАК Кратность,
	|	КорректировкаРеализации.НДСВключатьВСтоимость,
	|	КорректировкаРеализации.СуммаВключаетНДС,
	|	КорректировкаРеализации.ДоверенностьНомер КАК ДоверенностьНомер,
	|	КорректировкаРеализации.ДоверенностьДата КАК ДоверенностьДата,
	|	КорректировкаРеализации.ДоверенностьВыдана КАК ДоверенностьВыдана,
	|	КорректировкаРеализации.ДоверенностьЛицо КАК ДоверенностьЛицо,
	|	КорректировкаРеализации.Автомобиль,
	|	КорректировкаРеализации.Автомобиль.Марка КАК МаркаАвтомобиля,
	|	КорректировкаРеализации.Автомобиль.Код КАК ГосНомерАвтомобиля,
	|	КорректировкаРеализации.Прицеп КАК Прицеп,
	|	КорректировкаРеализации.Прицеп.Марка КАК МаркаПрицепа,
	|	КорректировкаРеализации.Прицеп.Код КАК ГосНомерПрицепа,
	|	КорректировкаРеализации.Автомобиль.ДействующаяЛицензионнаяКарточка КАК ДействующаяЛицензионнаяКарточка,
	|	КорректировкаРеализации.Автомобиль.ДействующаяЛицензионнаяКарточка.РегистрационныйНомерВГосударственномОргане КАК ЛицензионнаяКарточкаРегистрационныйНомер,
	|	КорректировкаРеализации.Автомобиль.ДействующаяЛицензионнаяКарточка.СерияЛицензионнойКарты КАК ЛицензионнаяКарточкаСерия,
	|	КорректировкаРеализации.Автомобиль.ДействующаяЛицензионнаяКарточка.НомерЛицензионнойКарты КАК ЛицензионнаяКарточкаНомер,
	|	КорректировкаРеализации.Автомобиль.ДействующаяЛицензионнаяКарточка.ВидДеятельности КАК ЛицензионнаяКарточкаВидДеятельности,
	|	КорректировкаРеализации.Водитель КАК Водитель,
	|	0 КАК Вес,
	|	0 КАК Объем,
	|	КорректировкаРеализации.НоменклатураДоставки КАК НоменклатураДоставки,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(КорректировкаРеализации.НоменклатураДоставки.НаименованиеПолное КАК СТРОКА(1000))) = """"
	|			ТОГДА КорректировкаРеализации.НоменклатураДоставки.Наименование
	|		ИНАЧЕ ВЫРАЗИТЬ(КорректировкаРеализации.НоменклатураДоставки.НаименованиеПолное КАК СТРОКА(1000))
	|	КОНЕЦ КАК ПредставлениеНоменклатурыДоставки,
	|	КорректировкаРеализации.НоменклатураДоставки.Артикул КАК АртикулДоставки,
	|	КорректировкаРеализации.НоменклатураДоставки.Код КАК КодДоставки,
	|	КорректировкаРеализации.НоменклатураДоставки.ЕдиницаИзмерения КАК ЕдиницаИзмеренияДоставки,
	|	КорректировкаРеализации.НоменклатураДоставки.ЕдиницаИзмерения.Код КАК КодЕдиницыИзмеренияДоставки,
	|	КорректировкаРеализации.СтавкаНДСДоставки КАК СтавкаНДСДоставки,
	|	КорректировкаРеализации.СтоимостьДоставки * КорректировкаРеализации.Курс / КорректировкаРеализации.Кратность КАК СтоимостьДоставки,
	|	КорректировкаРеализации.СуммаНДСДоставки * КорректировкаРеализации.Курс / КорректировкаРеализации.Кратность КАК СуммаНДСДоставки,
	|	КорректировкаРеализации.Запасы.(
	|		НомерСтроки КАК Номер,
	|		Номенклатура,
	|		ВЫБОР
	|			КОГДА (ВЫРАЗИТЬ(КорректировкаРеализации.Запасы.Номенклатура.НаименованиеПолное КАК СТРОКА(1000))) = """"
	|				ТОГДА КорректировкаРеализации.Запасы.Номенклатура.Наименование
	|			ИНАЧЕ ВЫРАЗИТЬ(КорректировкаРеализации.Запасы.Номенклатура.НаименованиеПолное КАК СТРОКА(1000))
	|		КОНЕЦ КАК ЗапасНаименование,
	|		Номенклатура.Код КАК КодПродукции,
	|		0 КАК МассаБрутто,
	|		0 КАК Объем,
	|		Количество КАК Количество,
	|		0 КАК КоличествоМест,
	|		Номенклатура.ЕдиницаИзмерения КАК БазоваяЕдиницаНаименование,
	|		ЕдиницаИзмерения КАК ЕдиницаИзмеренияДокумент,
	|		ЕдиницаИзмерения КАК ВидУпаковки,
	|		Номенклатура.ЕдиницаИзмерения.Код КАК БазоваяЕдиницаКодПоОКЕИ,
	|		ЕдиницаИзмерения.Коэффициент КАК Коэффициент,
	|		0 КАК СуммаСкидкиПоСтроке,
	|		КорректировкаРеализации.Запасы.Цена * КорректировкаРеализации.Курс / КорректировкаРеализации.Кратность КАК Цена,
	|		КорректировкаРеализации.Запасы.Сумма * КорректировкаРеализации.Курс / КорректировкаРеализации.Кратность КАК Сумма,
	|		КорректировкаРеализации.Запасы.СуммаНДС * КорректировкаРеализации.Курс / КорректировкаРеализации.Кратность КАК СуммаНДС,
	|		КорректировкаРеализации.Запасы.Всего * КорректировкаРеализации.Курс / КорректировкаРеализации.Кратность КАК Всего,
	|		Сумма КАК СуммаВВалютеДокумента,
	|		СуммаНДС КАК СуммаНДСВВалютеДокумента,
	|		Всего КАК ВсегоВВалютеДокумента,
	|		СтавкаНДС,
	|		Номенклатура.Артикул КАК Артикул,
	|		Характеристика,
	|		Содержание
	|	) КАК ТаблицаЗапасы
	|ИЗ
	|	Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|ГДЕ
	|	КорректировкаРеализации.Ссылка = &Документ";
	
	ДанныеДокумента = Запрос.Выполнить().Выгрузить();
	ДоставкаСервер.ДобавитьСтрокуДоставкиУниверсальныеДанные(ДанныеДокумента, "ТаблицаЗапасы");
	
КонецПроцедуры // ПолучитьДанныеПоРасходнойНакладной()

//Процедура получения данных по перемещению запасов
//
Процедура ПолучитьДанныеПоПеремещениюЗапасов(ДанныеДокумента, ТекущийДокумент)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаДокумента",	ТекущийДокумент.Дата);
	Запрос.УстановитьПараметр("Документ",  		ТекущийДокумент);
	
	// Если перемещение имеет дело с розницей, попробуем заполнить суммы по розн. ценам
	// иначе заполняем по учетной цене
	Если ЗначениеЗаполнено(ТекущийДокумент.СтруктурнаяЕдиница.РозничныйВидЦен) Тогда
		Запрос.УстановитьПараметр("ВидЦен",  		ТекущийДокумент.СтруктурнаяЕдиница.РозничныйВидЦен);
		Запрос.УстановитьПараметр("ВалютаВидаЦен", ?(ЗначениеЗаполнено(ТекущийДокумент.СтруктурнаяЕдиница.РозничныйВидЦен.ВалютаЦены), ТекущийДокумент.СтруктурнаяЕдиница.РозничныйВидЦен.ВалютаЦены, Константы.НациональнаяВалюта.Получить()));
	ИначеЕсли ЗначениеЗаполнено(ТекущийДокумент.СтруктурнаяЕдиницаПолучатель.РозничныйВидЦен) Тогда
		Запрос.УстановитьПараметр("ВидЦен",  		ТекущийДокумент.СтруктурнаяЕдиницаПолучатель.РозничныйВидЦен);
		Запрос.УстановитьПараметр("ВалютаВидаЦен", ?(ЗначениеЗаполнено(ТекущийДокумент.СтруктурнаяЕдиницаПолучатель.РозничныйВидЦен.ВалютаЦены), ТекущийДокумент.СтруктурнаяЕдиницаПолучатель.РозничныйВидЦен.ВалютаЦены, Константы.НациональнаяВалюта.Получить()));
	Иначе
		Запрос.УстановитьПараметр("ВидЦен",  		Справочники.ВидыЦен.Учетная);
		Запрос.УстановитьПараметр("ВалютаВидаЦен", ?(ЗначениеЗаполнено(Справочники.ВидыЦен.Учетная.ВалютаЦены), Справочники.ВидыЦен.Учетная.ВалютаЦены, Константы.НациональнаяВалюта.Получить()));
	КонецЕсли;
	
	Запрос.Текст =
	"Выбрать разрешенные
	|	ПеремещениеЗапасов.Номер КАК Номер,
	|	ПеремещениеЗапасов.Ссылка КАК ТекущийДокумент,
	|	ПеремещениеЗапасов.Дата КАК ДатаДокумента,
	|	ПеремещениеЗапасов.Организация КАК Организация,
	|	ПеремещениеЗапасов.Организация.Префикс КАК Префикс,
	|	ПеремещениеЗапасов.Организация КАК ЮрФизЛицо,
	|	ПеремещениеЗапасов.Организация КАК Поставщик,
	|	ПеремещениеЗапасов.Организация КАК Контрагент,
	|	ПеремещениеЗапасов.Организация КАК Руководители,
	|	ПеремещениеЗапасов.СтруктурнаяЕдиница.Организация КАК Грузоотправитель,
	|	ПеремещениеЗапасов.Организация.БанковскийСчетПоУмолчанию КАК БанковскийСчет,
	|	ПеремещениеЗапасов.СтруктурнаяЕдиницаПолучатель.Организация КАК Грузополучатель,
	|	ПеремещениеЗапасов.СтруктурнаяЕдиницаПолучатель.Организация КАК Покупатель,
	|	ПеремещениеЗапасов.СтруктурнаяЕдиница.Организация КАК Плательщик,
	|	ПеремещениеЗапасов.Организация.БанковскийСчетПоУмолчанию КАК БанковскийСчетПлательщика,
	|	ПеремещениеЗапасов.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ПеремещениеЗапасов.Ячейка КАК Ячейка,
	|	ПеремещениеЗапасов.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ПеремещениеЗапасов.СчетЗатрат КАК СчетЗатрат,
	|	ПеремещениеЗапасов.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ПеремещениеЗапасов.АдресДоставки КАК АдресДоставки,
	|	ПеремещениеЗапасов.Автомобиль КАК Автомобиль,
	|	ПеремещениеЗапасов.Автомобиль.Марка КАК МаркаАвтомобиля,
	|	ПеремещениеЗапасов.Автомобиль.Код КАК ГосНомерАвтомобиля,
	|	ПеремещениеЗапасов.БанковскийСчетПеревозчика КАК БанковскийСчетПеревозчика,
	|	ПеремещениеЗапасов.Водитель КАК Водитель,
	|	ПеремещениеЗапасов.ДоверенностьВыдана КАК ДоверенностьВыдана,
	|	ПеремещениеЗапасов.ДоверенностьДата КАК ДоверенностьДата,
	|	ПеремещениеЗапасов.ДоверенностьЛицо КАК ДоверенностьЛицо,
	|	ПеремещениеЗапасов.ДоверенностьНомер КАК ДоверенностьНомер,
	|	ПеремещениеЗапасов.ПодписьРуководителя.РасшифровкаПодписи КАК РасшифровкаПодписиРуководителя,
	|	ПеремещениеЗапасов.ПодписьРуководителя.Должность КАК ДолжностьРуководителя,
	|	ПеремещениеЗапасов.ПодписьГлавногоБухгалтера.РасшифровкаПодписи КАК РасшифровкаПодписиГлавногоБухгалтера,
	|	ПеремещениеЗапасов.ПодписьКладовщикаОтправил.РасшифровкаПодписи КАК Кладовщик,
	|	ПеремещениеЗапасов.ПодписьКладовщикаОтправил.РасшифровкаПодписи КАК РасшифровкаПодписиКладовщика,
	|	ПеремещениеЗапасов.ПодписьКладовщикаОтправил.Должность КАК ДолжностьКладовщика,
	|	ПеремещениеЗапасов.Перевозчик КАК Перевозчик,
	|	ПеремещениеЗапасов.Прицеп КАК Прицеп,
	|	ПеремещениеЗапасов.Прицеп.Марка КАК МаркаПрицепа,
	|	ПеремещениеЗапасов.Прицеп.Код КАК ГосНомерПрицепа,
	|	ПеремещениеЗапасов.Автомобиль.ДействующаяЛицензионнаяКарточка КАК ДействующаяЛицензионнаяКарточка,
	|	ПеремещениеЗапасов.Автомобиль.ДействующаяЛицензионнаяКарточка.РегистрационныйНомерВГосударственномОргане КАК ЛицензионнаяКарточкаРегистрационныйНомер,
	|	ПеремещениеЗапасов.Автомобиль.ДействующаяЛицензионнаяКарточка.СерияЛицензионнойКарты КАК ЛицензионнаяКарточкаСерия,
	|	ПеремещениеЗапасов.Автомобиль.ДействующаяЛицензионнаяКарточка.НомерЛицензионнойКарты КАК ЛицензионнаяКарточкаНомер,
	|	ПеремещениеЗапасов.Автомобиль.ДействующаяЛицензионнаяКарточка.ВидДеятельности КАК ЛицензионнаяКарточкаВидДеятельности,
	|	0 КАК Вес,
	|	0 КАК Объем,
	|	НЕОПРЕДЕЛЕНО КАК НоменклатураДоставки,
	|	"""" КАК ПредставлениеНоменклатурыДоставки,
	|	"""" КАК АртикулНоменклатурыДоставки,
	|	"""" КАК КодНоменклатурыДоставки,
	|	НЕОПРЕДЕЛЕНО КАК ЕдиницаИзмеренияНоменклатурыДоставки,
	|	"""" КАК КодЕдиницыИзмеренияНоменклатурыДоставки,
	|	НЕОПРЕДЕЛЕНО КАК СтавкаНДСДоставки,
	|	0 КАК СтоимостьДоставки,
	|	0 КАК СуммаНДСДоставки,
	|	ПеремещениеЗапасов.СрокДоставки КАК СрокДоставки,
	|	ПеремещениеЗапасов.ОснованиеПечати КАК ОснованиеПечати,
	|	ВалютаУчета.Значение КАК ВалютаДокумента,
	|	ПеремещениеЗапасов.Запасы.(
	|		Ссылка КАК Ссылка
	|	) КАК ТаблицаЗапасы
	|ИЗ
	|	Документ.ПеремещениеЗапасов КАК ПеремещениеЗапасов,
	|	Константа.ВалютаУчета КАК ВалютаУчета
	|ГДЕ
	|	ПеремещениеЗапасов.Ссылка = &Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПеремещениеЗапасовЗапасы.Ссылка КАК Ссылка,
	|	ПеремещениеЗапасовЗапасы.НомерСтроки КАК НомерСтроки,
	|	ПеремещениеЗапасовЗапасы.Номенклатура КАК Номенклатура,
	|	0 КАК МассаБрутто,
	|	0 КАК Объем,
	|	ПеремещениеЗапасовЗапасы.Номенклатура.НаименованиеПолное КАК ЗапасНаименование,
	|	ПеремещениеЗапасовЗапасы.Номенклатура.Код КАК КодПродукции,
	|	ПеремещениеЗапасовЗапасы.Номенклатура.Артикул КАК Артикул,
	|	ПеремещениеЗапасовЗапасы.Номенклатура.ЕдиницаИзмерения КАК БазоваяЕдиницаНаименование,
	|	ПеремещениеЗапасовЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмеренияДокумент,
	|	ПеремещениеЗапасовЗапасы.ЕдиницаИзмерения КАК ВидУпаковки,
	|	ПеремещениеЗапасовЗапасы.ЕдиницаИзмерения.Код КАК БазоваяЕдиницаКодПоОКЕИ,
	|	ПеремещениеЗапасовЗапасы.ЕдиницаИзмерения.Коэффициент КАК Коэффициент,
	|	0 КАК КоличествоМест,
	|	ПеремещениеЗапасовЗапасы.Количество КАК Количество,
	|	ПеремещениеЗапасовЗапасы.Характеристика КАК Характеристика,
	|	ПеремещениеЗапасовЗапасы.Партия КАК Партия,
	|	ПеремещениеЗапасовЗапасы.Резерв КАК Резерв,
	|	ПеремещениеЗапасовЗапасы.ЗаказПокупателя КАК ЗаказПокупателя,
	|	0 КАК СуммаСкидкиПоСтроке,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА &ВалютаВидаЦен = КонстантаНациональнаяВалюта.Значение
	|				ТОГДА ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена * ПеремещениеЗапасовЗапасы.Количество, 0)
	|			ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена * ПеремещениеЗапасовЗапасы.Количество, 0) * КурсыВалютСрезПоследних.Курс / ВЫБОР
	|					КОГДА ЕСТЬNULL(КурсыВалютСрезПоследних.Кратность, 0) = 0
	|						ТОГДА 1
	|					ИНАЧЕ КурсыВалютСрезПоследних.Кратность
	|				КОНЕЦ
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Сумма
	|ИЗ
	|	Документ.ПеремещениеЗапасов.Запасы КАК ПеремещениеЗапасовЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|				&ДатаДокумента,
	|				ВидЦен = &ВидЦен
	|					И Номенклатура В
	|						(ВЫБРАТЬ
	|							ПеремещениеЗапасовЗапасы.Номенклатура
	|						ИЗ
	|							Документ.ПеремещениеЗапасов.Запасы КАК ПеремещениеЗапасовЗапасы
	|						ГДЕ
	|							ПеремещениеЗапасовЗапасы.Ссылка = &Документ)
	|					И Характеристика В
	|						(ВЫБРАТЬ
	|							ПеремещениеЗапасовЗапасы.Характеристика
	|						ИЗ
	|							Документ.ПеремещениеЗапасов.Запасы КАК ПеремещениеЗапасовЗапасы
	|						ГДЕ
	|							ПеремещениеЗапасовЗапасы.Ссылка = &Документ)) КАК ЦеныНоменклатурыСрезПоследних
	|		ПО ПеремещениеЗапасовЗапасы.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|			И ПеремещениеЗапасовЗапасы.Характеристика = ЦеныНоменклатурыСрезПоследних.Характеристика,
	|	РегистрСведений.КурсыВалют.СрезПоследних(&ДатаДокумента, Валюта = &ВалютаВидаЦен) КАК КурсыВалютСрезПоследних,
	|	Константа.НациональнаяВалюта КАК КонстантаНациональнаяВалюта
	|ГДЕ
	|	ПеремещениеЗапасовЗапасы.Ссылка = &Документ";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ДанныеДокумента = РезультатЗапроса[0].Выгрузить();
	ДанныеДокумента[0].ТаблицаЗапасы = РезультатЗапроса[1].Выгрузить();
	
КонецПроцедуры // ПолучитьДанныеПоПеремещениюЗапасов()

// Процедура получения данных о отчет о переработке
//
Процедура ПолучитьДанныеПоОтчетуОПереработке(ДанныеДокумента, ТекущийДокумент)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Документ",  ТекущийДокумент);
	
	Запрос.Текст =
	"Выбрать разрешенные
	|	ОтчетОПереработке.Номер,
	|	ОтчетОПереработке.Ссылка КАК ТекущийДокумент,
	|	ОтчетОПереработке.Дата КАК ДатаДокумента,
	|	ОтчетОПереработке.Организация,
	|	ОтчетОПереработке.Организация.Префикс КАК Префикс,
	|	ОтчетОПереработке.Организация КАК ЮрФизЛицо,
	|	ОтчетОПереработке.Организация КАК Поставщик,
	|	ОтчетОПереработке.Организация КАК Контрагент,
	|	ОтчетОПереработке.Контрагент КАК Покупатель,
	|	ОтчетОПереработке.Контрагент КАК Плательщик,
	|	ОтчетОПереработке.БанковскийСчетКонтрагента КАК БанковскийСчетПлательщика,
	|	ОтчетОПереработке.ВалютаДокумента,
	|	ОтчетОПереработке.Курс КАК Курс,
	|	ОтчетОПереработке.Кратность КАК Кратность,
	|	ОтчетОПереработке.НДСВключатьВСтоимость,
	|	ОтчетОПереработке.СуммаВключаетНДС,
	|	ВЫБОР
	|		КОГДА ОтчетОПереработке.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ОтчетОПереработке.Организация
	|		ИНАЧЕ ОтчетОПереработке.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|	ВЫБОР
	|		КОГДА ОтчетОПереработке.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ОтчетОПереработке.Контрагент
	|		ИНАЧЕ ОтчетОПереработке.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|	ОтчетОПереработке.БанковскийСчет КАК БанковскийСчет,
	|	ОтчетОПереработке.АдресДоставки КАК АдресДоставки,
	|	ОтчетОПереработке.Автомобиль,
	|	ОтчетОПереработке.Автомобиль.Марка КАК МаркаАвтомобиля,
	|	ОтчетОПереработке.Автомобиль.Код КАК ГосНомерАвтомобиля,
	|	ОтчетОПереработке.БанковскийСчетПеревозчика,
	|	ОтчетОПереработке.Водитель,
	|	ОтчетОПереработке.ДоверенностьВыдана,
	|	ОтчетОПереработке.ДоверенностьДата,
	|	ОтчетОПереработке.ДоверенностьЛицо,
	|	ОтчетОПереработке.ДоверенностьНомер,
	|	ОтчетОПереработке.ПодписьРуководителя.РасшифровкаПодписи КАК РасшифровкаПодписиРуководителя,
	|	ОтчетОПереработке.ПодписьРуководителя.Должность КАК ДолжностьРуководителя,
	|	ОтчетОПереработке.ПодписьГлавногоБухгалтера.РасшифровкаПодписи КАК РасшифровкаПодписиГлавногоБухгалтера,
	|	ОтчетОПереработке.ПодписьКладовщика.РасшифровкаПодписи КАК Кладовщик,
	|	ОтчетОПереработке.ПодписьКладовщика.РасшифровкаПодписи КАК РасшифровкаПодписиКладовщика,
	|	ОтчетОПереработке.ПодписьКладовщика.Должность КАК ДолжностьКладовщика,
	|	ОтчетОПереработке.Перевозчик,
	|	ОтчетОПереработке.Прицеп,
	|	ОтчетОПереработке.Прицеп.Марка КАК МаркаПрицепа,
	|	ОтчетОПереработке.Прицеп.Код КАК ГосНомерПрицепа,
	|	ОтчетОПереработке.Автомобиль.ДействующаяЛицензионнаяКарточка КАК ДействующаяЛицензионнаяКарточка,
	|	ОтчетОПереработке.Автомобиль.ДействующаяЛицензионнаяКарточка.РегистрационныйНомерВГосударственномОргане КАК ЛицензионнаяКарточкаРегистрационныйНомер,
	|	ОтчетОПереработке.Автомобиль.ДействующаяЛицензионнаяКарточка.СерияЛицензионнойКарты КАК ЛицензионнаяКарточкаСерия,
	|	ОтчетОПереработке.Автомобиль.ДействующаяЛицензионнаяКарточка.НомерЛицензионнойКарты КАК ЛицензионнаяКарточкаНомер,
	|	ОтчетОПереработке.Автомобиль.ДействующаяЛицензионнаяКарточка.ВидДеятельности КАК ЛицензионнаяКарточкаВидДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК Водитель,
	|	0 КАК Вес,
	|	0 КАК Объем,
	|	НЕОПРЕДЕЛЕНО КАК НоменклатураДоставки,
	|	"""" КАК ПредставлениеНоменклатурыДоставки,
	|	"""" КАК АртикулНоменклатурыДоставки,
	|	"""" КАК КодНоменклатурыДоставки,
	|	НЕОПРЕДЕЛЕНО КАК ЕдиницаИзмеренияНоменклатурыДоставки,
	|	"""" КАК КодЕдиницыИзмеренияНоменклатурыДоставки,
	|	НЕОПРЕДЕЛЕНО КАК СтавкаНДСДоставки,
	|	0 КАК СтоимостьДоставки,
	|	0 КАК СуммаНДСДоставки,
	|	ОтчетОПереработке.СрокДоставки,
	|	ОтчетОПереработке.ОснованиеПечати,
	|	ОтчетОПереработке.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ОтчетОПереработке.Продукция.(
	|		НомерСтроки КАК Номер,
	|		Номенклатура,
	|		Номенклатура.НаименованиеПолное КАК ЗапасНаименование,
	|		0 КАК МассаБрутто,
	|		0 КАК Объем,
	|		Содержание КАК Содержание,
	|		Номенклатура.Код КАК КодПродукции,
	|		Количество КАК Количество,
	|		0 КАК КоличествоМест,
	|		Номенклатура.ЕдиницаИзмерения КАК БазоваяЕдиницаНаименование,
	|		ЕдиницаИзмерения КАК ЕдиницаИзмеренияДокумент,
	|		ЕдиницаИзмерения КАК ВидУпаковки,
	|		ЕдиницаИзмерения.Код КАК БазоваяЕдиницаКодПоОКЕИ,
	|		ЕдиницаИзмерения.Коэффициент КАК Коэффициент,
	|		(ОтчетОПереработке.Продукция.СуммаАвтоматическойСкидки + ОтчетОПереработке.Продукция.СуммаСкидкиНаценки) * ОтчетОПереработке.Курс / ОтчетОПереработке.Кратность КАК СуммаСкидкиПоСтроке,
	|		ОтчетОПереработке.Продукция.Цена * ОтчетОПереработке.Курс / ОтчетОПереработке.Кратность КАК Цена,
	|		ОтчетОПереработке.Продукция.Сумма * ОтчетОПереработке.Курс / ОтчетОПереработке.Кратность КАК Сумма,
	|		ОтчетОПереработке.Продукция.СуммаНДС * ОтчетОПереработке.Курс / ОтчетОПереработке.Кратность КАК СуммаНДС,
	|		ОтчетОПереработке.Продукция.Всего * ОтчетОПереработке.Курс / ОтчетОПереработке.Кратность КАК Всего,
	|		Сумма КАК СуммаВВалютеДокумента,
	|		СуммаНДС КАК СуммаНДСВВалютеДокумента,
	|		Всего КАК ВсегоВВалютеДокумента,
	|		СтавкаНДС,
	|		Номенклатура.Артикул КАК Артикул,
	|		Характеристика
	|	) КАК ТаблицаПродукция,
	|	ОтчетОПереработке.Отходы.(
	|		НомерСтроки КАК Номер,
	|		Номенклатура КАК Номенклатура,
	|		Номенклатура.НаименованиеПолное КАК ЗапасНаименование,
	|		0 КАК МассаБрутто,
	|		0 КАК Объем,
	|		Номенклатура.Код КАК КодПродукции,
	|		Количество,
	|		0 КАК КоличествоМест,
	|		Номенклатура.ЕдиницаИзмерения КАК БазоваяЕдиницаНаименование,
	|		ЕдиницаИзмерения КАК ЕдиницаИзмеренияДокумент,
	|		ЕдиницаИзмерения КАК ВидУпаковки,
	|		ЕдиницаИзмерения.Код КАК БазоваяЕдиницаКодПоОКЕИ,
	|		ЕдиницаИзмерения.Коэффициент КАК Коэффициент,
	|		0 КАК Цена,
	|		0 КАК Сумма,
	|		0 КАК СуммаНДС,
	|		0 КАК Всего,
	|		0 КАК СуммаВВалютеДокумента,
	|		0 КАК СуммаНДСВВалютеДокумента,
	|		0 КАК ВсегоВВалютеДокумента,
	|		NULL КАК СтавкаНДС,
	|		Номенклатура.Артикул КАК Артикул,
	|		Характеристика КАК Характеристика
	|	) КАК ТаблицаОтходы
	|ИЗ
	|	Документ.ОтчетОПереработке КАК ОтчетОПереработке
	|ГДЕ
	|	ОтчетОПереработке.Ссылка = &Документ";
	
	ДанныеДокумента = Запрос.Выполнить().Выгрузить();
	
КонецПроцедуры // ПолучитьДанныеПоОтчетуОПереработке()

Функция ПредставлениеОснованияПечати(ОснованиеПечатиСсылка) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ОснованиеПечатиСсылка) Тогда
	
		Возврат "";
		
	ИначеЕсли ТипЗнч(ОснованиеПечатиСсылка) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
		
		ЗаголовокПредставления = "";
		Если Константы.ДобавитьСловоДоговорВПредставлениеДоговораОснованияПечати.Получить() Тогда
			
			ЗаголовокПредставления = Нстр("ru = 'Договор: '");
			
		КонецЕсли;
		
		Возврат ЗаголовокПредставления + Строка(ОснованиеПечатиСсылка.Наименование);
		
	ИначеЕсли ТипЗнч(ОснованиеПечатиСсылка) = Тип("ДокументСсылка.СчетНаОплату")
		ИЛИ ТипЗнч(ОснованиеПечатиСсылка) = Тип("ДокументСсылка.ЗаказПокупателя")
		ИЛИ ТипЗнч(ОснованиеПечатиСсылка) = Тип("ДокументСсылка.ЗаказПоставщику")
		Тогда
		
		Возврат Строка(ОснованиеПечатиСсылка);
		
	КонецЕсли;
	
КонецФункции

Функция МассаГрузаПрописью(Знач ИтогоМассаБрутто, Знач ДанныеОбъектаВес)
	
	КоэффициентПересчетаВТонны = 0.001;
	
	ЗначениеДляПечати = ИтогоМассаБрутто;
	
	Если Не ЗначениеЗаполнено(ЗначениеДляПечати) Тогда
		ЗначениеДляПечати = ДанныеОбъектаВес;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ЗначениеДляПечати) ИЛИ ЗначениеДляПечати<0.5 Тогда
		Возврат "";
	КонецЕсли;
	
	Прописью =  ЧислоПрописью(
	Окр(ЗначениеДляПечати * КоэффициентПересчетаВТонны, 3, РежимОкругления.Окр15как20),
	"ДП=Истина",
	"тонна,тонны,тонн,ж,килограмм,килограмма,килограммов,м,3");
	
	Прописью = СтрЗаменить(Прописью, НСтр("ru = ' ноль килограммов'"), "");
	Прописью = СтрЗаменить(Прописью, НСтр("ru = 'Ноль тонн '"), "");
	
	Возврат Прописью;
	
КонецФункции

Функция ОбъемГрузаПрописью(Знач ИтогоОбъем, Знач ДанныеОбъектаОбъем)
	
	ЗначениеДляПечати = ИтогоОбъем;
	
	Если НЕ ЗначениеЗаполнено(ЗначениеДляПечати) Тогда
		ЗначениеДляПечати = ДанныеОбъектаОбъем;
	КонецЕсли; 
	
	Если Не ЗначениеЗаполнено(ЗначениеДляПечати) Тогда
		Возврат "";
	КонецЕсли;
	
	Возврат СтрШаблон(НСтр("ru = '%1  м³'"), Формат(ЗначениеДляПечати, "ЧГ=0"));
	
КонецФункции

Процедура ДобавитьНовуюСтраницуДокумента(ТабличныйДокумент, ОбластиМакета, СтруктураИтогов)
	
	ОбластьИтоговПоСтранице = ОбластиМакета.ОбластьИтоговПоСтранице;
	ОбластьИтоговПоСтранице.Параметры.ИтогоКоличествоНаСтранице = СтруктураИтогов.ИтогоКоличествоНаСтранице;
	ОбластьИтоговПоСтранице.Параметры.ИтогоСуммаСНДСНаСтранице  = СтруктураИтогов.ИтогоСуммаСНДСНаСтранице;
	ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);
	
	// очистим итоги по странице
	СтруктураИтогов.ИтогоКоличествоНаСтранице = 0;
	СтруктураИтогов.ИтогоСуммаСНДСНаСтранице  = 0;
	
	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	СтруктураИтогов.НомерСтраницы = СтруктураИтогов.НомерСтраницы + 1;
	ОбластиМакета.ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = НСтр("ru = 'Страница '") + СтруктураИтогов.НомерСтраницы;
	
	ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьЗаголовокТаблицы);
	
КонецПроцедуры

Функция СтрокаКорректноРазмещаетсяНаСтранице(ТабличныйДокумент, ОбластиМакета, СтруктураИтогов)
	
	ЕстьВсеОбласти = Истина;
	Для каждого ЭлементСтруктуры Из ОбластиМакета Цикл
		
		Если ЭлементСтруктуры.Значение = Неопределено Тогда
			
			ЕстьВсеОбласти = Ложь;
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если НЕ ЕстьВсеОбласти Тогда
		
		Возврат Неопределено;
		
	КонецЕсли;
	
	МассивОбластейМакета = Новый Массив;
	Для Сч = 0 По ОКР(СтрДлина(ОбластиМакета.ОбластьСтрока.Параметры.ЗапасНаименование) / 45, 0, РежимОкругления.Окр15как10) Цикл
		
		МассивОбластейМакета.Добавить(ОбластиМакета.ОбластьСтрока);
		
	КонецЦикла;
	МассивОбластейМакета.Добавить(ОбластиМакета.ОбластьИтоговПоСтранице);
	
	Если СтруктураИтогов.НомерСтроки = СтруктураИтогов.КоличествоСтрок - 1 Тогда
		
		МассивОбластейМакета.Добавить(ОбластиМакета.ОбластьВсего);
		МассивОбластейМакета.Добавить(ОбластиМакета.ОбластьПодвал);
		МассивОбластейМакета.Добавить(ОбластиМакета.ОбластьТранспортныйРаздел);
		МассивОбластейМакета.Добавить(ОбластиМакета.ОбластьПодвалСведенийОГрузе);
		МассивОбластейМакета.Добавить(ОбластиМакета.ОбластьСведенияОГрузе);
		МассивОбластейМакета.Добавить(ОбластиМакета.ОбластьПогрузочныеОперации);
		МассивОбластейМакета.Добавить(ОбластиМакета.ОбластьПрочиеСведения);
		
	КонецЕсли;
	
	Возврат ТабличныйДокумент.ПроверитьВывод(МассивОбластейМакета)
	
КонецФункции

#КонецОбласти

#Область ИнтерфейсПечати

Функция ПредставлениеПФ() Экспорт
	
	Возврат НСтр("ru ='Приложение №4 к Правилам перевозок грузов автотранспортом'")

КонецФункции

// Функция возвращает табличный документ для печати ТТН
//
Функция ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, ПараметрыПечати) Экспорт
	Перем ПервыйДокумент, НомерСтрокиНачало, Ошибки;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПечатьТТН_ТТН";
	
	ДанныеДокумента		= Новый Структура;
	ОбластиМакета		= Новый Структура;
	ЗначенияПараметров	= Новый Структура;
	КоэффициентПересчетаВТонны = 0.001;
	
	Для каждого ТекущийДокумент Из МассивОбъектов Цикл
		
		ПечатьДокументовУНФ.ПередНачаломФормированияДокумента(ТабличныйДокумент, ПервыйДокумент, НомерСтрокиНачало, ДанныеДокумента);
		
		ДанныеДокумента.Очистить();
		
		Если ТипЗнч(ТекущийДокумент) = Тип("ДокументСсылка.РасходнаяНакладная") Тогда
			
			ПолучитьДанныеПоРасходнойНакладной(ДанныеДокумента, ТекущийДокумент);
			Шапка = ДанныеДокумента[0];
			ТабличнаяЧастьДокумента = Шапка.ТаблицаЗапасы;
			
		ИначеЕсли ТипЗнч(ТекущийДокумент) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
			
			ПолучитьДанныеПоКорректировкеРеализации(ДанныеДокумента, ТекущийДокумент);
			Шапка = ДанныеДокумента[0];
			ТабличнаяЧастьДокумента = Шапка.ТаблицаЗапасы;
			
		ИначеЕсли ТипЗнч(ТекущийДокумент) = Тип("ДокументСсылка.ПеремещениеЗапасов") Тогда
			
			ПолучитьДанныеПоПеремещениюЗапасов(ДанныеДокумента, ТекущийДокумент);
			Шапка = ДанныеДокумента[0];
			ТабличнаяЧастьДокумента = Шапка.ТаблицаЗапасы;
			
		ИначеЕсли ТипЗнч(ТекущийДокумент) = Тип("ДокументСсылка.ОтчетОПереработке") Тогда
			
			ПолучитьДанныеПоОтчетуОПереработке(ДанныеДокумента, ТекущийДокумент);
			Шапка = ДанныеДокумента[0];
			ТабличнаяЧастьПродукция = Шапка.ТаблицаПродукция;
			ТабличнаяЧастьОтходы = Шапка.ТаблицаОтходы;
			
		КонецЕсли; 
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьТТН.ПФ_MXL_ТТН");
		ОбластиМакета.Вставить("ОбластьЗаголовокТаблицы",	ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "ЗаголовокТаблицы", , Ошибки));
		ОбластиМакета.Вставить("ОбластьИтоговПоСтранице",	ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "ИтогоПоСтранице", , Ошибки));
		ОбластиМакета.Вставить("ОбластьСтрока", 			ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "Строка", , Ошибки));
		ОбластиМакета.Вставить("ОбластьВсего",				ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "Всего", , Ошибки));
		ОбластиМакета.Вставить("ОбластьПодвал",				ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "Подвал", , Ошибки));
		ОбластиМакета.Вставить("ОбластьТранспортныйРаздел", ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "ТранспортныйРаздел", , Ошибки));
		ОбластиМакета.Вставить("ОбластьПодвалСведенийОГрузе", ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "ПодвалСведенийОГрузе", , Ошибки));
		ОбластиМакета.Вставить("ОбластьСведенияОГрузе",		ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "СведенияОГрузе", , Ошибки));
		ОбластиМакета.Вставить("ОбластьПогрузочныеОперации",ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "ПогрузочныеОперации", , Ошибки));
		ОбластиМакета.Вставить("ОбластьПрочиеСведения",		ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "ПрочиеСведения", , Ошибки));
		
		// Выводим общие реквизиты шапки
		СведенияОПоставщике       = УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(Шапка.ЮрФизЛицо,        Шапка.ДатаДокумента, , Шапка.БанковскийСчет);
		СведенияОГрузоотправителе = УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(Шапка.Грузоотправитель, Шапка.ДатаДокумента, , ?(Шапка.Грузоотправитель = Шапка.ЮрФизЛицо, Шапка.БанковскийСчет, Неопределено));
		СведенияОПокупателе       = УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(Шапка.Покупатель,       Шапка.ДатаДокумента, , Шапка.БанковскийСчетПлательщика);
		СведенияОГрузополучателе  = УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(Шапка.Грузополучатель,  Шапка.ДатаДокумента);
		
		НомерДокумента = ПечатьДокументовУНФ.ПолучитьНомерНаПечатьСУчетомДатыДокумента(Шапка.ДатаДокумента, Шапка.Номер, Шапка.Префикс);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.НомерДокумента                = НомерДокумента;
		ОбластьМакета.Параметры.ДатаДокумента                 = Шапка.ДатаДокумента;
		ОбластьМакета.Параметры.Грузоотправитель              = Шапка.Грузоотправитель;
		ОбластьМакета.Параметры.Грузополучатель               = Шапка.Грузополучатель;
		ОбластьМакета.Параметры.Плательщик                    = Шапка.Покупатель;
		ОбластьМакета.Параметры.ГрузоотправительПредставление = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОГрузоотправителе, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
		
		Если ПустаяСтрока(Шапка.АдресДоставки) Тогда
			
			ОбластьМакета.Параметры.ГрузополучательПредставление  = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОГрузополучателе,  "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
			
		Иначе
			
			ПерваяЧастьКИ = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОГрузополучателе, "ПолноеНаименование,ИНН");
			ВтораяЧастьКИ = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОГрузополучателе, "Телефоны,НомерСчета,Банк,БИК,КоррСчет");
			
			ОбластьМакета.Параметры.ГрузополучательПредставление  = СтрШаблон("%1, %2, %3", ПерваяЧастьКИ, Шапка.АдресДоставки, ВтораяЧастьКИ);
			
		КонецЕсли;
		
		ОбластьМакета.Параметры.ПлательщикПредставление       = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОПокупателе);
		ОбластьМакета.Параметры.ГрузоотправительПоОКПО        = СведенияОГрузоотправителе.КодПоОКПО;
		ОбластьМакета.Параметры.ГрузополучательПоОКПО         = СведенияОГрузополучателе.КодПоОКПО;
		ОбластьМакета.Параметры.ПлательщикПоОКПО              = СведенияОПокупателе.КодПоОКПО;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выводим заголовок таблицы
		ОбластиМакета.ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = НСтр("ru ='Страница 1'");
		ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьЗаголовокТаблицы);
		
		// инициализация итогов по странице
		ИтогоКоличествоНаСтранице = 0;
		ИтогоСуммаНаСтранице      = 0;
		ИтогоНДСНаСтранице        = 0;
		ИтогоСуммаСНДСНаСтранице  = 0;
		
		// инициализация итогов по документу
		СтруктураИтогов = Новый Структура;
		СтруктураИтогов.Вставить("НомерСтраницы", 1);
		СтруктураИтогов.Вставить("ИтогоКоличествоНаСтранице", 0);
		СтруктураИтогов.Вставить("ИтогоСуммаСНДСНаСтранице", 0);
		
		ИтогоМест		= 0;
		ИтогоКоличество = 0;
		ИтогоСуммаСНДС	= 0;
		ИтогоСумма		= 0;
		ИтогоНДС		= 0;
		Ном				= 0;
		ИтогоМассаБрутто = 0;
		ИтогоОбъем = 0;
		НомерСтроки = 0;
		
		// Выводим многострочную часть документа
		ОбластьМакета = ОбластиМакета.ОбластьСтрока;
		
		Если ТипЗнч(ТекущийДокумент) = Тип("ДокументСсылка.РасходнаяНакладная")
			ИЛИ ТипЗнч(ТекущийДокумент) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
			
			ЭтоРН = (ТипЗнч(ТекущийДокумент) = Тип("ДокументСсылка.РасходнаяНакладная"));
			ПараметрыНоменклатуры = Новый Структура;
			
			КоличествоСтрок = ТабличнаяЧастьДокумента.Количество();
			СтруктураИтогов.Вставить("КоличествоСтрок", КоличествоСтрок);
			КоличествоСтрокПечать = 0;
			
			Для каждого ВыборкаСтрокЗапасы Из ТабличнаяЧастьДокумента Цикл
				
				Если ВыборкаСтрокЗапасы.Количество = 0 Тогда
					Продолжить;
				КонецЕсли;
				
				Если ЭтоРН И ВыборкаСтрокЗапасы.ЭтоНабор Тогда
					НомерСтрокиДляПечати = 0;
				Иначе
					НомерСтроки = НомерСтроки + 1;
					НомерСтрокиДляПечати = НомерСтроки;
				КонецЕсли;
				
				ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокЗапасы);
				
				ПараметрыНоменклатуры.Очистить();
				ПараметрыНоменклатуры.Вставить("Содержание", ВыборкаСтрокЗапасы.Содержание);
				ПараметрыНоменклатуры.Вставить("ПредставлениеНоменклатуры", ВыборкаСтрокЗапасы.ЗапасНаименование);
				ПараметрыНоменклатуры.Вставить("ПредставлениеХарактеристики", ВыборкаСтрокЗапасы.Характеристика);
				ПараметрыНоменклатуры.Вставить("ПредставлениеАртикула", ВыборкаСтрокЗапасы.Артикул);
				// Наборы
				Если ЭтоРН Тогда
					ПараметрыНоменклатуры.Вставить("НеобходимоВыделитьКакСоставНабора", ВыборкаСтрокЗапасы.НеобходимоВыделитьКакСоставНабора);
				КонецЕсли; 
				
				ОбластьМакета.Параметры.ЗапасНаименование = ПечатьДокументовУНФ.ПредставлениеНоменклатуры(ПараметрыНоменклатуры);
						
				СуммаСНДС	= ?(НЕ ЗначениеЗаполнено(ВыборкаСтрокЗапасы.Всего), 0, ВыборкаСтрокЗапасы.Всего);
				
				Мест		= ВыборкаСтрокЗапасы.КоличествоМест;
				
				Коэффициент = 1;
				Если ТипЗнч(ВыборкаСтрокЗапасы.ЕдиницаИзмеренияДокумент) = Тип("СправочникСсылка.ЕдиницыИзмерения") Тогда
					
					Коэффициент = ВыборкаСтрокЗапасы.Коэффициент;
					
				КонецЕсли;
				Количество = ВыборкаСтрокЗапасы.Количество * Коэффициент;
				
				ОбластьМакета.Параметры.Количество = Количество;
				
				СуммаНДС	= ВыборкаСтрокЗапасы.СуммаНДС;
				СуммаБезНДС = ВыборкаСтрокЗапасы.Сумма - ?(Шапка.СуммаВключаетНДС, ВыборкаСтрокЗапасы.СуммаНДС, 0);
				
				ОбластьМакета.Параметры.Сумма = СуммаСНДС;
				ОбластьМакета.Параметры.Цена = СуммаСНДС / ?(Количество = 0, 1, Количество);
				МассаБрутто = Окр(ВыборкаСтрокЗапасы.МассаБрутто*КоэффициентПересчетаВТонны, 3, РежимОкругления.Окр15как20);
				ПечатьДокументовУНФ.УстановитьПараметрБезопасно(ОбластьМакета, "Масса", МассаБрутто);
				
				СтруктураИтогов.Вставить("НомерСтроки", НомерСтроки);
				Если СтруктураИтогов.НомерСтроки <> 1
					И СтрокаКорректноРазмещаетсяНаСтранице(ТабличныйДокумент, ОбластиМакета, СтруктураИтогов) = Ложь Тогда
					
					ДобавитьНовуюСтраницуДокумента(ТабличныйДокумент, ОбластиМакета, СтруктураИтогов);
					
				КонецЕсли;
				
				Если НЕ ЭтоРН ИЛИ НЕ ВыборкаСтрокЗапасы.ЭтоНабор Тогда
					
					// увеличим итоги по странице
					СтруктураИтогов.ИтогоКоличествоНаСтранице = СтруктураИтогов.ИтогоКоличествоНаСтранице + Количество;
					ИтогоСуммаНаСтранице		= ИтогоСуммаНаСтранице		+ СуммаБезНДС;
					ИтогоНДСНаСтранице 			= ИтогоНДСНаСтранице		+ СуммаНДС;
					СтруктураИтогов.ИтогоСуммаСНДСНаСтранице = СтруктураИтогов.ИтогоСуммаСНДСНаСтранице + СуммаСНДС;
					
					// увеличим итоги по документу
					ИтогоМест		= ИтогоМест			+ Мест;
					ИтогоКоличество = ИтогоКоличество	+ Количество;
					ИтогоСумма		= ИтогоСумма		+ СуммаБезНДС;
					ИтогоНДС		= ИтогоНДС			+ СуммаНДС;
					ИтогоСуммаСНДС	= ИтогоСуммаСНДС	+ СуммаСНДС;
					ИтогоМассаБрутто = ИтогоМассаБрутто	+ ВыборкаСтрокЗапасы.МассаБрутто;
					ИтогоОбъем 		= ИтогоОбъем	+ ВыборкаСтрокЗапасы.Объем;
					
					КоличествоСтрокПечать = КоличествоСтрокПечать + 1;
					
				КонецЕсли;
				
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
				// Наборы
				Если ЭтоРН Тогда
					НаборыСервер.УчестьОформлениеСтрокиНабора(ТабличныйДокумент, ОбластьМакета, ВыборкаСтрокЗапасы);
				КонецЕсли; 
			
			КонецЦикла;
			
			КоличествоСтрок = КоличествоСтрокПечать;
			
		ИначеЕсли ТипЗнч(ТекущийДокумент) = Тип("ДокументСсылка.ПеремещениеЗапасов") Тогда
			
			КоличествоСтрок = ТабличнаяЧастьДокумента.Количество();
			СтруктураИтогов.Вставить("КоличествоСтрок", КоличествоСтрок);
			
			Для каждого ВыборкаСтрокЗапасы Из ТабличнаяЧастьДокумента Цикл
				
				Ном = Ном + 1;
				
				ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокЗапасы);
				
				ОбластьМакета.Параметры.ЗапасНаименование = УправлениеНебольшойФирмойСервер.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаСтрокЗапасы.ЗапасНаименование, 
																		ВыборкаСтрокЗапасы.Характеристика, ВыборкаСтрокЗапасы.Артикул);
				
				Мест		= ВыборкаСтрокЗапасы.КоличествоМест;
				
				Коэффициент = 1;
				Если ТипЗнч(ВыборкаСтрокЗапасы.ЕдиницаИзмеренияДокумент) = Тип("СправочникСсылка.ЕдиницыИзмерения") Тогда
					
					Коэффициент = ВыборкаСтрокЗапасы.Коэффициент;
					
				КонецЕсли;
				Количество	= ВыборкаСтрокЗапасы.Количество * Коэффициент;
				
				ОбластьМакета.Параметры.Количество = Количество;
				
				ОбластьМакета.Параметры.Цена  = ВыборкаСтрокЗапасы.Сумма / ?(Количество = 0, 1, Количество);
				
				МассаБрутто = Окр(ВыборкаСтрокЗапасы.МассаБрутто * КоэффициентПересчетаВТонны, 3, РежимОкругления.Окр15как20);
				ПечатьДокументовУНФ.УстановитьПараметрБезопасно(ОбластьМакета, "Масса", МассаБрутто);
				
				СтруктураИтогов.Вставить("НомерСтроки", Ном);
				Если СтруктураИтогов.НомерСтроки <> 1
					И СтрокаКорректноРазмещаетсяНаСтранице(ТабличныйДокумент, ОбластиМакета, СтруктураИтогов) = Ложь Тогда
					
					ДобавитьНовуюСтраницуДокумента(ТабличныйДокумент, ОбластиМакета, СтруктураИтогов);
					
				КонецЕсли;
				
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
				// увеличим итоги по странице
				ИтогоКоличествоНаСтранице = ИтогоКоличествоНаСтранице + Количество;
				ИтогоСуммаНаСтранице      = ИтогоСуммаНаСтранице      + ВыборкаСтрокЗапасы.Сумма;
				ИтогоНДСНаСтранице        = ИтогоНДСНаСтранице        + 0;
				ИтогоСуммаСНДСНаСтранице  = ИтогоСуммаСНДСНаСтранице  + ВыборкаСтрокЗапасы.Сумма;
				
				// увеличим итоги по документу
				ИтогоМест       = ИтогоМест       + Мест;
				ИтогоКоличество = ИтогоКоличество + Количество;
				ИтогоСумма      = ИтогоСумма      + ВыборкаСтрокЗапасы.Сумма; 	//СуммаБезНДС;
				ИтогоНДС        = ИтогоНДС        + 0;							//СуммаНДС;
				ИтогоСуммаСНДС  = ИтогоСуммаСНДС  + ВыборкаСтрокЗапасы.Сумма; 	//СуммаСНДС;
				ИтогоМассаБрутто = ИтогоМассаБрутто + ВыборкаСтрокЗапасы.МассаБрутто;
				ИтогоОбъем 		= ИтогоОбъем + ВыборкаСтрокЗапасы.Объем;
			
			КонецЦикла;
			
		Иначе
			
			КоличествоСтрок = ТабличнаяЧастьПродукция.Количество() + ТабличнаяЧастьОтходы.Количество();
			СтруктураИтогов.Вставить("КоличествоСтрок", КоличествоСтрок);
			
			Для каждого ВыборкаСтрокПродукция Из ТабличнаяЧастьПродукция Цикл
			
				Ном = Ном + 1;
				
				ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокПродукция);
				
				Если НЕ ПустаяСтрока(ВыборкаСтрокПродукция.Содержание) Тогда
					
					ОбластьМакета.Параметры.ЗапасНаименование = ВыборкаСтрокПродукция.Содержание;
					
				Иначе
					
					ОбластьМакета.Параметры.ЗапасНаименование =
						УправлениеНебольшойФирмойСервер.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаСтрокПродукция.ЗапасНаименование, ВыборкаСтрокПродукция.Характеристика);
					
				КонецЕсли;
				
				СуммаСНДС	= ВыборкаСтрокПродукция.Всего;
				Мест		= ВыборкаСтрокПродукция.КоличествоМест;
				
				Коэффициент = 1;
				Если ТипЗнч(ВыборкаСтрокПродукция.ЕдиницаИзмеренияДокумент) = Тип("СправочникСсылка.ЕдиницыИзмерения") Тогда
					
					Коэффициент = ВыборкаСтрокПродукция.Коэффициент;
					
				КонецЕсли;
				Количество	= ВыборкаСтрокПродукция.Количество * Коэффициент;
				
				ОбластьМакета.Параметры.Количество = Количество;
				
				СуммаНДС	= ВыборкаСтрокПродукция.СуммаНДС;
				СуммаБезНДС = ВыборкаСтрокПродукция.Сумма - ?(Шапка.СуммаВключаетНДС, ВыборкаСтрокПродукция.СуммаНДС, 0);
				
				ОбластьМакета.Параметры.Сумма = СуммаСНДС;
				ОбластьМакета.Параметры.Цена  = СуммаСНДС / ?(Количество = 0, 1, Количество);
				
				МассаБрутто = Окр(ВыборкаСтрокПродукция.МассаБрутто * КоэффициентПересчетаВТонны, 3, РежимОкругления.Окр15как20);
				ПечатьДокументовУНФ.УстановитьПараметрБезопасно(ОбластьМакета, "Масса", МассаБрутто);
				
				СтруктураИтогов.Вставить("НомерСтроки", Ном);
				Если СтруктураИтогов.НомерСтроки <> 1
					И СтрокаКорректноРазмещаетсяНаСтранице(ТабличныйДокумент, ОбластиМакета, СтруктураИтогов) = Ложь Тогда
					
					ДобавитьНовуюСтраницуДокумента(ТабличныйДокумент, ОбластиМакета, СтруктураИтогов);
					
				КонецЕсли;
				
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
				// увеличим итоги по странице
				ИтогоКоличествоНаСтранице = ИтогоКоличествоНаСтранице + Количество;
				ИтогоСуммаНаСтранице      = ИтогоСуммаНаСтранице      + СуммаБезНДС;
				ИтогоНДСНаСтранице        = ИтогоНДСНаСтранице        + СуммаНДС;
				ИтогоСуммаСНДСНаСтранице  = ИтогоСуммаСНДСНаСтранице  + СуммаСНДС;
				
				// увеличим итоги по документу
				ИтогоМест       = ИтогоМест       + Мест;
				ИтогоКоличество = ИтогоКоличество + Количество;
				ИтогоСумма      = ИтогоСумма      + СуммаБезНДС;
				ИтогоНДС        = ИтогоНДС        + СуммаНДС;
				ИтогоСуммаСНДС  = ИтогоСуммаСНДС  + СуммаСНДС;
				ИтогоМассаБрутто = ИтогоМассаБрутто + ВыборкаСтрокПродукция.МассаБрутто;
				ИтогоОбъем 		= ИтогоОбъем + ВыборкаСтрокПродукция.Объем;
				
			КонецЦикла;
			
			Для каждого ВыборкаСтрокОтходы Из ТабличнаяЧастьОтходы Цикл
			
				Ном = Ном + 1;
				
				ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокОтходы);
				
				ОбластьМакета.Параметры.ЗапасНаименование = УправлениеНебольшойФирмойСервер.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаСтрокОтходы.ЗапасНаименование, ВыборкаСтрокОтходы.Характеристика);
					
				Мест		= ВыборкаСтрокОтходы.КоличествоМест;
				
				Коэффициент = 1;
				Если ТипЗнч(ВыборкаСтрокОтходы.ЕдиницаИзмеренияДокумент) = Тип("СправочникСсылка.ЕдиницыИзмерения") Тогда
					
					Коэффициент = ВыборкаСтрокОтходы.Коэффициент;
					
				КонецЕсли;
				Количество	= ВыборкаСтрокОтходы.Количество * Коэффициент;
				
				ОбластьМакета.Параметры.Количество = Количество;
				
				МассаБрутто = Окр(ВыборкаСтрокОтходы.МассаБрутто*КоэффициентПересчетаВТонны, 3, РежимОкругления.Окр15как20);
				ПечатьДокументовУНФ.УстановитьПараметрБезопасно(ОбластьМакета, "Масса", МассаБрутто);
				
				СтруктураИтогов.Вставить("НомерСтроки", Ном);
				Если СтруктураИтогов.НомерСтроки <> 1
					И СтрокаКорректноРазмещаетсяНаСтранице(ТабличныйДокумент, ОбластиМакета, СтруктураИтогов) = Ложь Тогда
					
					ДобавитьНовуюСтраницуДокумента(ТабличныйДокумент, ОбластиМакета, СтруктураИтогов);
					
				КонецЕсли;
				
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
				// увеличим итоги по странице
				ИтогоКоличествоНаСтранице = ИтогоКоличествоНаСтранице + Количество;
				
				// увеличим итоги по документу
				ИтогоМест		= ИтогоМест			+ Мест;
				ИтогоКоличество = ИтогоКоличество	+ Количество;
				ИтогоМассаБрутто = ИтогоМассаБрутто + ВыборкаСтрокОтходы.МассаБрутто;
				ИтогоОбъем 		= ИтогоОбъем + ВыборкаСтрокОтходы.Объем;
			
			КонецЦикла;
			
		КонецЕсли;
		
		// Выводим итоги по последней странице
		ОбластьИтоговПоСтранице = ОбластиМакета.ОбластьИтоговПоСтранице;
		ОбластьИтоговПоСтранице.Параметры.ИтогоКоличествоНаСтранице = СтруктураИтогов.ИтогоКоличествоНаСтранице;
		ОбластьИтоговПоСтранице.Параметры.ИтогоСуммаСНДСНаСтранице  = СтруктураИтогов.ИтогоСуммаСНДСНаСтранице;
		ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);
		
		// Выводим итоги по документу в целом
		ОбластьМакета = ОбластиМакета.ОбластьВсего;
		ОбластьМакета.Параметры.ИтогоКоличество = ИтогоКоличество;
		ОбластьМакета.Параметры.ИтогоСуммаСНДС  = ИтогоСуммаСНДС;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выводим подвал документа
		ОбластьМакета = ОбластиМакета.ОбластьПодвал;
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		ЗначенияПараметров.Очистить();
		
		Если ИтогоМест <> 0 Тогда
			
			ЗначенияПараметров.Вставить("ВсегоМестПрописью", ЧислоПрописью(ИтогоМест, ,",,,,,,,,0"));
			
		КонецЕсли;
		
		ЗначенияПараметров.Вставить("ВсегоНаименований", ЧислоПрописью(КоличествоСтрок, ,",,,,,,,,0"));
		
		ЗначенияПараметров.Вставить("ДоверенностьНомер", Шапка.ДоверенностьНомер);
		ЗначенияПараметров.Вставить("ДоверенностьДата", Формат(Шапка.ДоверенностьДата,"ДФ=dd.MM.yyyy"));
		ЗначенияПараметров.Вставить("ДоверенностьВыдана", Шапка.ДоверенностьВыдана);
		ЗначенияПараметров.Вставить("ДоверенностьЛицо", Шапка.ДоверенностьЛицо);
		
		ОтпущеноНаСуммуПрописью = "";
		Если ИтогоСуммаСНДС>0 Тогда
			ОтпущеноНаСуммуПрописью = ОтпущеноНаСуммуПрописью+?(ПустаяСтрока(ОтпущеноНаСуммуПрописью), "", ", ")+
			УправлениеНебольшойФирмойСервер.СформироватьСуммуПрописью(ИтогоСуммаСНДС, Шапка.ВалютаДокумента);
		КонецЕсли; 
		Если ИтогоМассаБрутто>1 ИЛИ Шапка.Вес>1 Тогда
			ОтпущеноНаСуммуПрописью = ОтпущеноНаСуммуПрописью+?(ПустаяСтрока(ОтпущеноНаСуммуПрописью), "", ", ")+
			НСтр("ru = 'масса брутто: '")+НРег(МассаГрузаПрописью(ИтогоМассаБрутто, Шапка.Вес));
		КонецЕсли; 
		Если ИтогоОбъем>1 ИЛИ Шапка.Объем>1  Тогда
			ОтпущеноНаСуммуПрописью = ОтпущеноНаСуммуПрописью+?(ПустаяСтрока(ОтпущеноНаСуммуПрописью), "", ", ")+
			НСтр("ru = 'объем: '")+ОбъемГрузаПрописью(ИтогоОбъем, Шапка.Объем);
		КонецЕсли;
		ЗначенияПараметров.Вставить("ОтпущеноНаСуммуПрописью", ОтпущеноНаСуммуПрописью);
		
		Если ИтогоМассаБрутто>1 ИЛИ Шапка.Вес>1 Тогда
			ЗначенияПараметров.Вставить("МассаГрузаБрутто", Окр(ИтогоМассаБрутто * КоэффициентПересчетаВТонны, 3, РежимОкругления.Окр15как20));
			ЗначенияПараметров.Вставить("МассаГрузаБруттоПрописью", МассаГрузаПрописью(ИтогоМассаБрутто, Шапка.Вес));
		КонецЕсли;
		
		ОбластьМакета.Параметры.Заполнить(ЗначенияПараметров);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		// Выводим транспортный раздел
		ОбластьМакета = ОбластиМакета.ОбластьТранспортныйРаздел;
		ЗначенияПараметров.Очистить();
		
		ЗначенияПараметров.Вставить("Номер", НомерДокумента);
		ЗначенияПараметров.Вставить("СрокДоставки", Формат(Шапка.СрокДоставки, "ДФ=dd.MM.yyyy"));
		
		СведенияОПеревозчике = УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(Шапка.Перевозчик,  Шапка.ДатаДокумента);
		ПеревозчикПредставление = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОПеревозчике, "ПолноеНаименование, ИНН, ФактическийАдрес, Телефоны, НомерСчета, Банк, БИК, КоррСчет");
		ЗначенияПараметров.Вставить("Перевозчик", ПеревозчикПредставление);
		
		ЗначенияПараметров.Вставить("МаркаАвтомобиля", Шапка.МаркаАвтомобиля);
		ЗначенияПараметров.Вставить("ГосНомерАвтомобиля", Шапка.ГосНомерАвтомобиля);
		
		ЗаказчикПеревозокПредставление = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОПокупателе, "ПолноеНаименование, ИНН, ФактическийАдрес, Телефоны, НомерСчета, Банк, БИК, КоррСчет");
		ЗначенияПараметров.Вставить("ЗаказчикПеревозок", ЗаказчикПеревозокПредставление);
		
		Если ЗначениеЗаполнено(Шапка.Водитель) Тогда
			
			ДанныеВодителя = Справочники.ФизическиеЛица.ДанныеФизЛица(Шапка.Организация, Шапка.Водитель, Шапка.ДатаДокумента, Истина);
			
			ЗначенияПараметров.Вставить("Водитель", ДанныеВодителя.Представление);
			
			ДокументыФизическихЛиц = Справочники.ФизическиеЛица.ДокументФизЛицаПоВиду(Шапка.ДатаДокумента, Шапка.Водитель, Справочники.ВидыДокументовФизическихЛиц.ВодительскоеУдостоверение);
			Если ДокументыФизическихЛиц.Количество() > 0 Тогда
				
				ВодительскоеУдостоверение = Нстр("ru = 'Серия '") + Строка(ДокументыФизическихЛиц[0].Серия) + Нстр("ru = ' № '") + Строка(ДокументыФизическихЛиц[0].Номер);
				ЗначенияПараметров.Вставить("ВодительскоеУдостоверение", ВодительскоеУдостоверение);
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Шапка.ДействующаяЛицензионнаяКарточка) Тогда
			
			ЛицензионнаяКарточка = Шапка.ДействующаяЛицензионнаяКарточка.ВидЛицензионнойКарты;
			ЗначенияПараметров.Вставить("ВидПеревозки", Шапка.ЛицензионнаяКарточкаВидДеятельности);
			ЗначенияПараметров.Вставить("ЛицензионнаяКарточкаРегистрационныйНомер", Шапка.ЛицензионнаяКарточкаРегистрационныйНомер);
			ЗначенияПараметров.Вставить("ЛицензионнаяКарточкаСерия", Шапка.ЛицензионнаяКарточкаСерия);
			ЗначенияПараметров.Вставить("ЛицензионнаяКарточкаНомер", Шапка.ЛицензионнаяКарточкаНомер);
			
		Иначе
			
			ЛицензионнаяКарточка = "Стандартная";
			
		КонецЕсли;
		
		ШрифтСтандарт   = Новый Шрифт(ОбластьМакета.Области.Стандарт.Шрифт, , , , , , ЛицензионнаяКарточка = "Ограниченная");
		ШрифтОграничено = Новый Шрифт(ОбластьМакета.Области.Ограничено.Шрифт, , , , , , НЕ ЛицензионнаяКарточка = "Ограниченная");
		
		ОбластьМакета.Области.Стандарт.Шрифт   = ШрифтСтандарт;
		ОбластьМакета.Области.Ограничено.Шрифт = ШрифтОграничено;
		
		МассивВладельцев = Новый Массив;
		
		ПунктПогрузки = "";
		Если ЗначениеЗаполнено(Шапка.СтруктурнаяЕдиница) Тогда
			
			МассивВладельцев = Новый Массив;
			МассивВладельцев.Добавить(Шапка.СтруктурнаяЕдиница);
			Адреса = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъектов(МассивВладельцев, , Справочники.ВидыКонтактнойИнформации.ФактАдресСтруктурнойЕдиницы);
			Если Адреса.Количество() > 0 Тогда
				
				ПунктПогрузки = Адреса[0].Представление;
				
			КонецЕсли;
		
			Телефоны = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъектов(МассивВладельцев, , Справочники.ВидыКонтактнойИнформации.ТелефонСтруктурнойЕдиницы);
			Если Телефоны.Количество() > 0 Тогда
				
				Для каждого Телефон Из Телефоны Цикл
					
					ПунктПогрузки = ПунктПогрузки + ?(ПустаяСтрока(ПунктПогрузки), "", ", ") + Телефон.Представление;
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЕсли;
		ЗначенияПараметров.Вставить("ПунктПогрузки", ПунктПогрузки);
		
		ПунктРазгрузки = "";
		Если НЕ ПустаяСтрока(Шапка.АдресДоставки) Тогда
			
			ПунктРазгрузки = Шапка.АдресДоставки;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Шапка.Покупатель) Тогда
			
			ВидКИПоДокументу = ?(ТипЗнч(ТекущийДокумент) = Тип("ДокументСсылка.ПеремещениеЗапасов"), 
				Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации, Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента);
				
			МассивВладельцев.Очистить();
			МассивВладельцев.Добавить(Шапка.Покупатель);
			
			ТелефоныКонтрагента = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъектов(МассивВладельцев, , ВидКИПоДокументу);
			Если ТелефоныКонтрагента.Количество() > 0 Тогда
				
				Для каждого Телефон Из ТелефоныКонтрагента Цикл
					
					ПунктПогрузки = ПунктПогрузки + ?(ПустаяСтрока(ПунктПогрузки), "", ", ") + Телефон.Представление;
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЕсли;
		ЗначенияПараметров.Вставить("ПунктРазгрузки", ПунктРазгрузки);
		
		ЗначенияПараметров.Вставить("МаркаПрицепа", Шапка.МаркаПрицепа);
		ЗначенияПараметров.Вставить("ГосНомерПрицепа", Шапка.ГосНомерПрицепа);
		
		ОбластьМакета.Параметры.Заполнить(ЗначенияПараметров);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = ОбластиМакета.ОбластьСведенияОГрузе;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = ОбластиМакета.ОбластьПодвалСведенийОГрузе;
		ЗначенияПараметров.Очистить();
		Если ИтогоМассаБрутто>1 ИЛИ Шапка.Вес>1 Тогда
			ЗначенияПараметров.Вставить("МассаГрузаБруттоПрописью", МассаГрузаПрописью(ИтогоМассаБрутто, Шапка.Вес));
		КонецЕсли;
		ОбластьМакета.Параметры.Заполнить(ЗначенияПараметров);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = ОбластиМакета.ОбластьПогрузочныеОперации;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = ОбластиМакета.ОбластьПрочиеСведения;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Зададим параметры макета
		ТабличныйДокумент.ПолеСверху = 0;
		ТабличныйДокумент.ПолеСлева  = 0;
		ТабличныйДокумент.ПолеСнизу  = 0;
		ТабличныйДокумент.ПолеСправа = 0;
		ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ТекущийДокумент);
	
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатнаяФорма()

// Процедура печати ТТН
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТТН") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ТТН", "Товарно-транспортная накладная", ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	
	// параметры отправки печатных форм по электронной почте
	УправлениеНебольшойФирмойСервер.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, МассивОбъектов, КоллекцияПечатныхФорм);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли