
Функция RefreshOrdersPOST(Запрос)  
	//EFSOL_Сальник К.А. 2018-08-20 {+						   
	ТелоЗапроса = Запрос.ПолучитьТелоКакСтроку();	
	Результат = ES_JSON.ПрочитатьJSON_(ТелоЗапроса);
	
	ДатаДоставки = Результат.Получить("date");
	ДатаДоставки = Дата(СтрЗаменить(ДатаДоставки ,"-",""));
	
	
	СтатусыЗаказов = Новый Массив;
	СтатусыЗаказов.Добавить(Перечисления.ES_СтатусыЗаказов.Подготовлен);
	СтатусыЗаказов.Добавить(Перечисления.ES_СтатусыЗаказов.ПодготовленПринят);
	СтатусыЗаказов.Добавить(Перечисления.ES_СтатусыЗаказов.ОжидаетГруз);
	СтатусыЗаказов.Добавить(Перечисления.ES_СтатусыЗаказов.Комплектуется);
	СтатусыЗаказов.Добавить(Перечисления.ES_СтатусыЗаказов.НеДоставлен);
	
	СтатусыЗаборов = Новый Массив;
	СтатусыЗаборов.Добавить(Перечисления.ES_СтатусыЗаборов.ВРаботе);
	СтатусыЗаборов.Добавить(Перечисления.ES_СтатусыЗаборов.Комплектуется);
	СтатусыЗаборов.Добавить(Перечисления.ES_СтатусыЗаборов.НеВыполнен);	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателя.ES_НомерНакладной КАК Номер,
	               |	ЗаказПокупателя.ES_ВхНакладная КАК ВхНакладная,
	               |	ЗаказПокупателя.ES_ДатаДоставки КАК Дата,
	               |	ЗаказПокупателя.ES_ВремяДоставкиС КАК ВремяС,
	               |	ЗаказПокупателя.ES_ВремяДоставкиПо КАК ВремяПо,
	               |	ЗаказПокупателя.ES_АдресДоставки КАК Адрес,
	               |	ЗаказПокупателя.ES_АдресДоставкиДолгота КАК Долгота,
	               |	ЗаказПокупателя.ES_АдресДоставкиШирота КАК Широта,
	               |	ЗаказПокупателя.ES_Получатель КАК Получатель,
	               |	ЗаказПокупателя.Ссылка КАК Ссылка,
	               |	ES_СтатусыЗаказовСрезПоследних.СтатусЗаказа КАК СтатусЗаказа,
	               |	""order"" КАК ВидЗаказа,
	               |	ЗаказПокупателя.ES_Объем КАК Объем,
	               |	ЗаказПокупателя.ES_ОбщийВес КАК Вес
	               |ИЗ
	               |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ES_СтатусыЗаказов.СрезПоследних(&ТекущаяДата, ) КАК ES_СтатусыЗаказовСрезПоследних
	               |		ПО ЗаказПокупателя.Ссылка = ES_СтатусыЗаказовСрезПоследних.Заказ
	               |ГДЕ
	               |	ЗаказПокупателя.ES_ДатаДоставки = &ДатаДоставки
	               |	И ES_СтатусыЗаказовСрезПоследних.СтатусЗаказа В(&СтатусыЗаказов)
	               |
	               |ОБЪЕДИНИТЬ
	               |
	               |ВЫБРАТЬ
	               |	ES_ЗаборГруза.НомерНакладной,
	               |	"""",
	               |	ES_ЗаборГруза.ДатаЗабора,
	               |	ES_ЗаборГруза.ВремяЗабораС,
	               |	ES_ЗаборГруза.ВремяЗабораПо,
	               |	ES_ЗаборГруза.Адрес,
	               |	ES_ЗаборГруза.АдресДолгота,
	               |	ES_ЗаборГруза.АдресШирота,
	               |	ES_ЗаборГруза.Заказчик,
	               |	ES_ЗаборГруза.Ссылка,
	               |	ES_СтатусыЗаборовСрезПоследних.СтатусЗабора,
	               |	""picking"",
	               |	ES_ЗаборГруза.ОбщийОбъем,
	               |	ES_ЗаборГруза.ОбщийВес
	               |ИЗ
	               |	Документ.ES_ЗаборГруза КАК ES_ЗаборГруза
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ES_СтатусыЗаборов.СрезПоследних(&ТекущаяДата, ) КАК ES_СтатусыЗаборовСрезПоследних
	               |		ПО ES_ЗаборГруза.Ссылка = ES_СтатусыЗаборовСрезПоследних.Забор
	               |ГДЕ
	               |	ES_ЗаборГруза.ДатаЗабора = &ДатаДоставки
	               |	И ES_СтатусыЗаборовСрезПоследних.СтатусЗабора В(&СтатусыЗаборов)";
	 
	 Запрос.УстановитьПараметр("ДатаДоставки", ДатаДоставки);
	 Запрос.УстановитьПараметр("СтатусыЗаказов", СтатусыЗаказов);
	 Запрос.УстановитьПараметр("СтатусыЗаборов", СтатусыЗаборов);
	 Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	 
	 Результат = Запрос.Выполнить().Выгрузить();
	 
	 Заказы = Новый Соответствие;
	 МассивЗаказов = Новый Массив;
	 Для каждого Элемент Из Результат Цикл
		Заказ = Новый Структура;
		Заказ.Вставить("gid", Элемент.Ссылка.УникальныйИдентификатор());
		Заказ.Вставить("number", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Элемент.Номер));
		Заказ.Вставить("invoice", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Элемент.ВхНакладная));
		Заказ.Вставить("date", Формат(Элемент.Дата, "ДЛФ=D"));
		Заказ.Вставить("time_from", Лев(Формат(Элемент.ВремяС, "ДЛФ=T"), СтрДлина(Формат(Элемент.ВремяС, "ДЛФ=T"))-3));
		Заказ.Вставить("time_to", Лев(Формат(Элемент.ВремяПо, "ДЛФ=T"), СтрДлина(Формат(Элемент.ВремяПо, "ДЛФ=T"))-3));
		Заказ.Вставить("address", Элемент.Адрес);
		Заказ.Вставить("lng", Элемент.Долгота);
		Заказ.Вставить("lat", Элемент.Широта);
		Заказ.Вставить("receiver", Строка(Элемент.Получатель));
		Заказ.Вставить("type_del", Элемент.ВидЗаказа);
		Заказ.Вставить("amount", Элемент.Объем);
		Заказ.Вставить("weight", Элемент.Вес);
		МассивЗаказов.Добавить(Заказ);
	КонецЦикла;
	
	Заказы.Вставить("orders", МассивЗаказов); 
	
	Результат = ES_JSON.ЗаписатьJSON_(Заказы);
			 
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.Заголовки.Вставить("Access-Control-Allow-Origin", "*");
	Ответ.УстановитьТелоИзСтроки(Результат);
	
	Возврат Ответ;
	//EFSOL_Сальник К.А.  -}
КонецФункции


Функция RefreshPlansPOST(Запрос) 
	//EFSOL_Сальник К.А. 2018-08-20 {+
	ТелоЗапроса = Запрос.ПолучитьТелоКакСтроку();	
	Результат = ES_JSON.ПрочитатьJSON_(ТелоЗапроса);
	
	Дата = Результат.Получить("date");
	Дата = Дата(СтрЗаменить(Дата ,"-",""));
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ES_ПланДоставки.Ссылка КАК Ссылка,
	               |	ES_ПланДоставки.Номер КАК Номер,
	               |	ES_ПланДоставки.Курьер КАК Курьер,
	               |	ES_ПланДоставки.ТранспортноеСредство КАК ТранспортноеСредство,
	               |	ES_ПланДоставки.Дата КАК Дата
	               |ПОМЕСТИТЬ ВТ_План
	               |ИЗ
	               |	Документ.ES_ПланДоставки КАК ES_ПланДоставки
	               |ГДЕ
	               |	КОНЕЦПЕРИОДА(ES_ПланДоставки.Дата, ДЕНЬ) = КОНЕЦПЕРИОДА(&Дата, ДЕНЬ)
	               |	И ES_ПланДоставки.Проведен
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ES_ПланДоставкиЗаказы.Ссылка КАК Ссылка,
	               |	ES_ПланДоставкиЗаказы.ДокументДоставки КАК ДокументДоставки
	               |ПОМЕСТИТЬ ВТ_Заказы1
	               |ИЗ
	               |	Документ.ES_ПланДоставки.Заказы КАК ES_ПланДоставкиЗаказы
	               |ГДЕ
	               |	ES_ПланДоставкиЗаказы.Ссылка В
	               |			(ВЫБРАТЬ
	               |				ВТ_План.Ссылка КАК Ссылка
	               |			ИЗ
	               |				ВТ_План КАК ВТ_План)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Заказы1.ДокументДоставки КАК ДокументДоставки,
	               |	ВТ_Заказы1.Ссылка КАК Ссылка,
	               |	ЗаказПокупателя.ES_НомерНакладной КАК Номер,
	               |	ЗаказПокупателя.ES_ВхНакладная КАК ВхНакладная,
	               |	ЗаказПокупателя.ES_АдресДоставки КАК ES_АдресДоставки,
	               |	ЗаказПокупателя.ES_ДатаДоставки КАК ES_ДатаДоставки,
	               |	ЗаказПокупателя.ES_АдресДоставкиДолгота КАК ES_АдресДоставкиДолгота,
	               |	ЗаказПокупателя.ES_АдресДоставкиШирота КАК ES_АдресДоставкиШирота,
	               |	ЗаказПокупателя.ES_Получатель КАК ES_Получатель,
	               |	ЗаказПокупателя.ES_ВремяДоставкиС КАК ES_ВремяДоставкиС,
	               |	ЗаказПокупателя.ES_ВремяДоставкиПо КАК ES_ВремяДоставкиПо,
	               |	""order"" КАК ВидЗаказа,
	               |	ЗаказПокупателя.Дата КАК Дата,
	               |	ЗаказПокупателя.ES_ОбщийВес КАК ВесЗаказ,
	               |	ЗаказПокупателя.ES_Объем КАК ОбъемЗаказ
	               |ПОМЕСТИТЬ вт_
	               |ИЗ
	               |	ВТ_Заказы1 КАК ВТ_Заказы1
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя КАК ЗаказПокупателя
	               |		ПО ВТ_Заказы1.ДокументДоставки = ЗаказПокупателя.Ссылка
	               |ГДЕ
	               |	ТИПЗНАЧЕНИЯ(ВТ_Заказы1.ДокументДоставки) = ТИП(документ.заказпокупателя)
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ВТ_Заказы1.ДокументДоставки,
	               |	ВТ_Заказы1.Ссылка,
	               |	ES_ЗаборГруза.НомерНакладной,
	               |	"""",
	               |	ES_ЗаборГруза.Адрес,
	               |	ES_ЗаборГруза.ДатаЗабора,
	               |	ES_ЗаборГруза.АдресДолгота,
	               |	ES_ЗаборГруза.АдресШирота,
	               |	ES_ЗаборГруза.Заказчик,
	               |	ES_ЗаборГруза.ВремяЗабораС,
	               |	ES_ЗаборГруза.ВремяЗабораПо,
	               |	""picking"",
	               |	ES_ЗаборГруза.Дата,
	               |	ES_ЗаборГруза.ОбщийВес,
	               |	ES_ЗаборГруза.ОбщийОбъем
	               |ИЗ
	               |	ВТ_Заказы1 КАК ВТ_Заказы1
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ES_ЗаборГруза КАК ES_ЗаборГруза
	               |		ПО ВТ_Заказы1.ДокументДоставки = ES_ЗаборГруза.Ссылка
	               |ГДЕ
	               |	ТИПЗНАЧЕНИЯ(ВТ_Заказы1.ДокументДоставки) = ТИП(документ.ES_ЗаборГруза)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_План.Ссылка КАК ПланДоставки,
	               |	ВТ_План.Номер КАК Номер,
	               |	ВТ_План.Курьер КАК Водитель,
	               |	ВТ_План.ТранспортноеСредство КАК Машина,
	               |	вт_.Номер КАК НомерЗаказа,
	               |	вт_.ВхНакладная КАК ВхНакладная,
	               |	вт_.ES_АдресДоставки КАК Адрес,
	               |	вт_.ES_ДатаДоставки КАК Дата,
	               |	вт_.ES_АдресДоставкиДолгота КАК Долгота,
	               |	вт_.ES_АдресДоставкиШирота КАК Широта,
	               |	вт_.ES_Получатель КАК Получатель,
	               |	вт_.ES_ВремяДоставкиС КАК ВремяС,
	               |	вт_.ES_ВремяДоставкиПо КАК ВремяПо,
	               |	вт_.ВидЗаказа КАК ВидЗаказа,
	               |	вт_.Дата КАК ДатаПлана,
	               |	ES_ОтчетОДоставке.Ссылка КАК Отчет,
	               |	вт_.ВесЗаказ КАК ВесЗаказ,
	               |	вт_.ОбъемЗаказ КАК ОбъемЗаказ,
	               |	вт_.ДокументДоставки КАК Заказ
	               |ИЗ
	               |	ВТ_План КАК ВТ_План
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ES_ОтчетОДоставке КАК ES_ОтчетОДоставке
	               |		ПО ВТ_План.Ссылка = ES_ОтчетОДоставке.ПланДоставки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ вт_ КАК вт_
	               |		ПО ВТ_План.Ссылка = вт_.Ссылка
	               |ИТОГИ
	               |	МАКСИМУМ(Номер),
	               |	МАКСИМУМ(Водитель),
	               |	МАКСИМУМ(Машина),
	               |	МАКСИМУМ(Отчет)
	               |ПО
	               |	ПланДоставки";
	 
	 Запрос.УстановитьПараметр("Дата", Дата);
	 
	 Результат = Запрос.Выполнить();
	 ВыборкаПлан = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	 
	 Планы = Новый Соответствие;
	 МассивПланов = Новый Массив;
	 
	 Пока ВыборкаПлан.Следующий() Цикл
		 План = Новый Структура;
		 План.Вставить("gid", ВыборкаПлан.ПланДоставки.УникальныйИдентификатор());
		 //План.Вставить("gidReport", ВыборкаПлан.Отчет.УникальныйИдентификатор());
		 План.Вставить("gidReport", "");
		 План.Вставить("number", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаПлан.Номер));
		 План.Вставить("vehicle", Строка(ВыборкаПлан.Машина));
		 План.Вставить("driver", Строка(ВыборкаПлан.Водитель));

		 ОбщийВес = 0;
		 ОбщийОбъем = 0;
		 
		 ВыборкаЗаказы = ВыборкаПлан.Выбрать();
		 
		 МассивЗаказов = Новый Массив;
		 Пока ВыборкаЗаказы.Следующий() Цикл 
			 Если ЗначениеЗаполнено(ВыборкаЗаказы.Заказ) Тогда
				 Заказ = Новый Структура;
				 Заказ.Вставить("gid", ВыборкаЗаказы.Заказ.УникальныйИдентификатор());
				 Заказ.Вставить("number", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаЗаказы.НомерЗаказа));
				 Заказ.Вставить("invoice", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаЗаказы.ВхНакладная));
				 Заказ.Вставить("date", Формат(ВыборкаЗаказы.Дата, "ДЛФ=D"));
				 Заказ.Вставить("time_from", Лев(Формат(ВыборкаЗаказы.ВремяС, "ДЛФ=T"), СтрДлина(Формат(ВыборкаЗаказы.ВремяС, "ДЛФ=T"))-3));
				 Заказ.Вставить("time_to", Лев(Формат(ВыборкаЗаказы.ВремяПо, "ДЛФ=T"), СтрДлина(Формат(ВыборкаЗаказы.ВремяПо, "ДЛФ=T"))-3));
				 Заказ.Вставить("address", ВыборкаЗаказы.Адрес);
				 Заказ.Вставить("lng", ВыборкаЗаказы.Долгота);
				 Заказ.Вставить("lat", ВыборкаЗаказы.Широта);
				 Заказ.Вставить("receiver", Строка(ВыборкаЗаказы.Получатель));
				 Заказ.Вставить("type_del", ВыборкаЗаказы.ВидЗаказа);
				 Заказ.Вставить("amount", ВыборкаЗаказы.ОбъемЗаказ);
				 Заказ.Вставить("weight", ВыборкаЗаказы.ВесЗаказ);
				 ОбщийВес = ОбщийВес + ВыборкаЗаказы.ВесЗаказ; 
				 ОбщийОбъем = ОбщийОбъем + ВыборкаЗаказы.ОбъемЗаказ; 
				 МассивЗаказов.Добавить(Заказ);
			 КонецЕсли;
		 конецЦикла;
		 
		 План.Вставить("amount", ОбщийОбъем);
		 План.Вставить("weight", ОбщийВес);
		 План.Вставить("orders", МассивЗаказов);
		 План.Вставить("count", МассивЗаказов.Количество());
		  
		 МассивПланов.Добавить(План);
	 КонецЦикла;
	
	Планы.Вставить("plans", МассивПланов); 
	
	Результат = ES_JSON.ЗаписатьJSON_(Планы);
			 
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.Заголовки.Вставить("Access-Control-Allow-Origin", "*");
	Ответ.УстановитьТелоИзСтроки(Результат);
	
	Возврат Ответ;
	//EFSOL_Сальник К.А.  -}
КонецФункции


Функция RefreshPlanPOST(Запрос)
	//EFSOL_Сальник К.А. 2018-08-20 {+	
	ТелоЗапроса = Запрос.ПолучитьТелоКакСтроку();
	Результат = ES_JSON.ПрочитатьJSON_(ТелоЗапроса);
	ИД = Результат.Получить("gid");
	Ссылка = Документы.ES_ПланДоставки.ПолучитьСсылку(ИД);
	Объект = Ссылка.ПолучитьОбъект();
	ТЗ = Объект.Заказы.Выгрузить();
	ТЗ.Очистить();
	
	Для Каждого Заказ из Результат.Получить("orders") Цикл
		Если ЗначениеЗаполнено(Заказ) Тогда
			ЗаказИД = Заказ.Получить("gid");
			ВидЗаказа = Заказ.Получить("type_del");
			Если ВидЗаказа = "order" Тогда
				ЗаказСсылка = Документы.ЗаказПокупателя.ПолучитьСсылку(ЗаказИД);
			Иначе
				ЗаказСсылка = Документы.ES_ЗаборГруза.ПолучитьСсылку(ЗаказИД);
			КонецЕсли;
			НайденнаяСтрока = Объект.Заказы.Найти(ЗаказСсылка, "ДокументДоставки");
			Если НайденнаяСтрока = Неопределено Тогда
				НоваяСтрока = ТЗ.Добавить();
				ЗаказДанные = ES_ОбщегоНазначения.ПолучитьДанныеПоЗаказам(ЗаказСсылка);
				ВыборкаЗаказ = ЗаказДанные.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаЗаказ.Следующий() Цикл
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаЗаказ);	
					ВыборкаГруз = ВыборкаЗаказ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ВыборкаГруз.Следующий() Цикл
						НоваяСтрокаГрузы = Объект.Грузы.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрокаГрузы, ВыборкаГруз);
					КонецЦикла;
				КонецЦикла;
				НоваяСтрока.ДатаВремяДобавленияЗаказа = ТекущаяДата();
			Иначе
				НоваяСтрока = ТЗ.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, НайденнаяСтрока);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Объект.Заказы.Очистить();
	Объект.Заказы.Загрузить(ТЗ);
	Объект.Записать(РежимЗаписиДокумента.Проведение);
	
	
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.Заголовки.Вставить("Access-Control-Allow-Origin", "*");
	Возврат Ответ;
	//EFSOL_Сальник К.А.  -}
КонецФункции


Функция RefreshZonesPOST(Запрос)
	//EFSOL_Сальник К.А. 2018-08-20 {+
	ТелоЗапроса = Запрос.ПолучитьТелоКакСтроку();
	Результат = ES_JSON.ПрочитатьJSON_(ТелоЗапроса);
	
		Зоны = Результат.Получить("create");
		Для Каждого Элемент из Зоны Цикл
			НовыйЭлемент = Справочники.ES_ЗоныГорода.СоздатьЭлемент();
			НовыйЭлемент.Цвет= Элемент.Получить("color");
			НовыйЭлемент.КодЦвета = Элемент.Получить("color");
			НовыйЭлемент.Наименование = Элемент.Получить("zoneName");
			Координаты = Элемент.Получить("vertexesArray");
			ПоследняяТочка = Координаты.Количество()-1;
			Координаты.Удалить(ПоследняяТочка);
			Для Каждого Точка Из Координаты Цикл
				НоваяСтрока = НовыйЭлемент.СписокКоординат.Добавить();	
				НоваяСтрока.Долгота = Точка[0];
				НоваяСтрока.Широта = Точка[1];
			КонецЦикла;
	        НовыйЭлемент.Записать();
		КонецЦикла;
		
		Зоны = Результат.Получить("edit");
		Для Каждого Элемент из Зоны Цикл
			ИД = Элемент.Получить("gid");
			Ссылка = Справочники.ES_ЗоныГорода.ПолучитьСсылку(ИД);
			Объект = Ссылка.ПолучитьОбъект();
			Объект.Цвет = Элемент.Получить("color");
			Объект.КодЦвета = Элемент.Получить("color");
			Объект.Наименование = Элемент.Получить("zoneName");
			Координаты = Элемент.Получить("vertexesArray");
			ПоследняяТочка = Координаты.Количество()-1;
			Координаты.Удалить(ПоследняяТочка);
			Объект.СписокКоординат.Очистить();
			Для Каждого Точка Из Координаты Цикл
				НоваяСтрока = Объект.СписокКоординат.Добавить();	
				НоваяСтрока.Долгота = Точка[0];
				НоваяСтрока.Широта = Точка[1];
			КонецЦикла;
	        Объект.Записать();
		КонецЦикла;	
		
		Зоны = Результат.Получить("delet");
		Для Каждого Элемент из Зоны Цикл
			ИД = Элемент.Получить("gid");
			Ссылка = Справочники.ES_ЗоныГорода.ПолучитьСсылку(ИД);
			Объект = Ссылка.ПолучитьОбъект();
			Объект.Удалить();
		КонецЦикла;	
			
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.Заголовки.Вставить("Access-Control-Allow-Origin", "*");
	Возврат Ответ;
	//EFSOL_Сальник К.А.  -}
КонецФункции


Функция RefrreshSavedZonesPOST(Запрос)
	//EFSOL_Сальник К.А. 2018-08-20 {+
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ES_ЗоныГорода.Ссылка КАК Ссылка,
	               |	ES_ЗоныГорода.Наименование КАК Наименование,
	               |	ES_ЗоныГорода.КодЦвета КАК КодЦвета,
	               |	ES_ЗоныГородаСписокКоординат.Долгота КАК Долгота,
	               |	ES_ЗоныГородаСписокКоординат.Широта КАК Широта,
	               |	ES_ЗоныГорода.Курьер КАК Курьер
	               |ИЗ
	               |	Справочник.ES_ЗоныГорода КАК ES_ЗоныГорода
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ES_ЗоныГорода.СписокКоординат КАК ES_ЗоныГородаСписокКоординат
	               |		ПО ES_ЗоныГорода.Ссылка = ES_ЗоныГородаСписокКоординат.Ссылка
	               |ИТОГИ
	               |	МАКСИМУМ(Наименование),
	               |	МАКСИМУМ(КодЦвета),
	               |	МАКСИМУМ(Курьер)
	               |ПО
	               |	Ссылка";
	
	Результат = Запрос.Выполнить();
	ВыборкаЗона = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Зоны = Новый Соответствие;
	МассивЗон = Новый Массив;
	
	Пока ВыборкаЗона.Следующий() Цикл
		Зона = Новый Структура;
		Зона.Вставить("gid", ВыборкаЗона.Ссылка.УникальныйИдентификатор());
		Зона.Вставить("zoneName", ВыборкаЗона.Наименование);
		Зона.Вставить("hintContent", ВыборкаЗона.Наименование);
		Зона.Вставить("fillColor", ВыборкаЗона.КодЦвета);
		Зона.Вставить("gidCourier", ВыборкаЗона.Курьер.УникальныйИдентификатор());
		Зона.Вставить("courier", Строка(ВыборкаЗона.Курьер));

		
		ВыборкаТочки = ВыборкаЗона.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		МассивТочек = Новый Массив;
		Пока ВыборкаТочки.Следующий() Цикл
			Точка = Новый Массив;
			Точка.Добавить(ВыборкаТочки.Долгота);
			Точка.Добавить(ВыборкаТочки.Широта);
			МассивТочек.Добавить(Точка);
		КонецЦикла;
		Зона.Вставить("coordinates", МассивТочек);
		
		МассивЗон.Добавить(Зона);
	КонецЦикла;
	
	Зоны.Вставить("zones", МассивЗон); 
	
	Результат = ES_JSON.ЗаписатьJSON_(Зоны);
	
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.Заголовки.Вставить("Access-Control-Allow-Origin", "*");
	Ответ.УстановитьТелоИзСтроки(Результат);
	Возврат Ответ;
	//EFSOL_Сальник К.А.  -}
КонецФункции


Функция CreatePlansPOST(Запрос)
	//EFSOL_Сальник К.А. 2018-08-20 {+
	ТелоЗапроса = Запрос.ПолучитьТелоКакСтроку();
	Результат = ES_JSON.ПрочитатьJSON_(ТелоЗапроса);
	
	СписокПланов = Новый Массив;
	Для каждого План из Результат.Получить("plans") Цикл
		КурьерИД = План.Получить("gidCourier");
		КурьерСсылка = Справочники.Сотрудники.ПолучитьСсылку(КурьерИД);
		НовыйПлан = Документы.ES_ПланДоставки.СоздатьДокумент();
		НовыйПлан.Дата = ТекущаяДата();
		НовыйПлан.Автор = Пользователи.ТекущийПользователь();
		ДокументыДоставки = Новый Массив;
		Для каждого Заказ из План.Получить("orders") Цикл
			ЗаказИД = Заказ.Получить("gid");
			Если Заказ.Получить("type_del") = "order" Тогда 
				ЗаказСсылка = Документы.ЗаказПокупателя.ПолучитьСсылку(ЗаказИД);
			Иначе
				ЗаказСсылка = Документы.ES_ЗаборГруза.ПолучитьСсылку(ЗаказИД);
			КонецЕсли;
			ДокументыДоставки.Добавить(ЗаказСсылка);
		КонецЦикла;
		ЗаказыДанные = ES_ОбщегоНазначения.ПолучитьДанныеПоЗаказам(ДокументыДоставки);
		ВыборкаЗаказ = ЗаказыДанные.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаЗаказ.Следующий() Цикл
			НоваяСтрока = НовыйПлан.Заказы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаЗаказ);	
			ВыборкаГруз = ВыборкаЗаказ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаГруз.Следующий() Цикл
				НоваяСтрокаГрузы = НовыйПлан.Грузы.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаГрузы, ВыборкаГруз);
			КонецЦикла;
			НоваяСтрока.ДатаВремяДобавленияЗаказа = ТекущаяДата();
		КонецЦикла;
			НовыйПлан.Курьер = КурьерСсылка;
			НовыйПлан.Записать(РежимЗаписиДокумента.Проведение);
			СписокПланов.Добавить(НовыйПлан.Ссылка);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ES_ПланДоставки.Ссылка КАК Ссылка,
	               |	ES_ПланДоставки.Номер КАК Номер,
	               |	ES_ПланДоставки.Курьер КАК Курьер,
	               |	ES_ПланДоставки.ТранспортноеСредство КАК ТранспортноеСредство,
	               |	ES_ПланДоставки.Дата КАК Дата
	               |ПОМЕСТИТЬ ВТ_План
	               |ИЗ
	               |	Документ.ES_ПланДоставки КАК ES_ПланДоставки
	               |ГДЕ
	               |	ES_ПланДоставки.Проведен
	               |	И ES_ПланДоставки.Ссылка В(&СписокПланов)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ES_ПланДоставкиЗаказы.Ссылка КАК Ссылка,
	               |	ES_ПланДоставкиЗаказы.ДокументДоставки КАК ДокументДоставки
	               |ПОМЕСТИТЬ ВТ_Заказы1
	               |ИЗ
	               |	Документ.ES_ПланДоставки.Заказы КАК ES_ПланДоставкиЗаказы
	               |ГДЕ
	               |	ES_ПланДоставкиЗаказы.Ссылка В
	               |			(ВЫБРАТЬ
	               |				ВТ_План.Ссылка КАК Ссылка
	               |			ИЗ
	               |				ВТ_План КАК ВТ_План)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Заказы1.Ссылка КАК Ссылка,
	               |	ВТ_Заказы1.ДокументДоставки КАК ДокументДоставки,
	               |	ЗаказПокупателя.ES_НомерНакладной КАК Номер,
	               |	ЗаказПокупателя.ES_ВхНакладная КАК ВхНакладная,
	               |	ЗаказПокупателя.ES_АдресДоставки КАК ES_АдресДоставки,
	               |	ЗаказПокупателя.ES_ДатаДоставки КАК ES_ДатаДоставки,
	               |	ЗаказПокупателя.ES_АдресДоставкиДолгота КАК ES_АдресДоставкиДолгота,
	               |	ЗаказПокупателя.ES_АдресДоставкиШирота КАК ES_АдресДоставкиШирота,
	               |	ЗаказПокупателя.ES_Получатель КАК ES_Получатель,
	               |	ЗаказПокупателя.ES_ВремяДоставкиС КАК ES_ВремяДоставкиС,
	               |	ЗаказПокупателя.ES_ВремяДоставкиПо КАК ES_ВремяДоставкиПо,
	               |	""order"" КАК ВидЗаказа,
	               |	ЗаказПокупателя.Дата КАК Дата,
	               |	ЗаказПокупателя.ES_ОбщийВес КАК ES_ОбщийВес,
	               |	ЗаказПокупателя.ES_Объем КАК ES_Объем
	               |ПОМЕСТИТЬ вт_
	               |ИЗ
	               |	ВТ_Заказы1 КАК ВТ_Заказы1
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя КАК ЗаказПокупателя
	               |		ПО ВТ_Заказы1.ДокументДоставки = ЗаказПокупателя.Ссылка
	               |ГДЕ
	               |	ТИПЗНАЧЕНИЯ(ВТ_Заказы1.ДокументДоставки) = ТИП(документ.заказпокупателя)
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ВТ_Заказы1.Ссылка,
	               |	ВТ_Заказы1.ДокументДоставки,
	               |	ES_ЗаборГруза.НомерНакладной,
	               |	"""",
	               |	ES_ЗаборГруза.Адрес,
	               |	ES_ЗаборГруза.ДатаЗабора,
	               |	ES_ЗаборГруза.АдресДолгота,
	               |	ES_ЗаборГруза.АдресШирота,
	               |	ES_ЗаборГруза.Заказчик,
	               |	ES_ЗаборГруза.ВремяЗабораС,
	               |	ES_ЗаборГруза.ВремяЗабораПо,
	               |	""picking"",
	               |	ES_ЗаборГруза.Дата,
	               |	ES_ЗаборГруза.ОбщийВес,
	               |	ES_ЗаборГруза.ОбщийОбъем
	               |ИЗ
	               |	ВТ_Заказы1 КАК ВТ_Заказы1
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ES_ЗаборГруза КАК ES_ЗаборГруза
	               |		ПО ВТ_Заказы1.ДокументДоставки = ES_ЗаборГруза.Ссылка
	               |ГДЕ
	               |	ТИПЗНАЧЕНИЯ(ВТ_Заказы1.ДокументДоставки) = ТИП(документ.ES_ЗаборГруза)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_План.Ссылка КАК ПланДоставки,
	               |	ВТ_План.Номер КАК Номер,
	               |	ВТ_План.Курьер КАК Водитель,
	               |	ВТ_План.ТранспортноеСредство КАК Машина,
	               |	вт_.ДокументДоставки КАК ДокументДоставки,
	               |	вт_.Номер КАК НомерЗаказа,
				   |	вт_.ВхНакладная КАК ВхНакладная,
	               |	вт_.ES_АдресДоставки КАК Адрес,
	               |	вт_.ES_ДатаДоставки КАК Дата,
	               |	вт_.ES_АдресДоставкиДолгота КАК Долгота,
	               |	вт_.ES_АдресДоставкиШирота КАК Широта,
	               |	вт_.ES_Получатель КАК Получатель,
	               |	вт_.ES_ВремяДоставкиС КАК ВремяС,
	               |	вт_.ES_ВремяДоставкиПо КАК ВремяПо,
	               |	вт_.ВидЗаказа КАК ВидЗаказа,
	               |	вт_.Дата КАК ДатаПлана,
	               |	ES_ОтчетОДоставке.Ссылка КАК Отчет,
	               |	вт_.Ссылка КАК Заказ,
	               |	вт_.ES_ОбщийВес КАК ВесЗаказ,
	               |	вт_.ES_Объем КАК ОбъемЗаказ
	               |ИЗ
	               |	ВТ_План КАК ВТ_План
	               |		ЛЕВОЕ СОЕДИНЕНИЕ вт_ КАК вт_
	               |		ПО ВТ_План.Ссылка = вт_.Ссылка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ES_ОтчетОДоставке КАК ES_ОтчетОДоставке
	               |		ПО ВТ_План.Ссылка = ES_ОтчетОДоставке.ПланДоставки
	               |ИТОГИ
	               |	МАКСИМУМ(Номер),
	               |	МАКСИМУМ(Водитель),
	               |	МАКСИМУМ(Машина),
	               |	МАКСИМУМ(Отчет)
	               |ПО
	               |	ПланДоставки";
	 
	 Запрос.УстановитьПараметр("СписокПланов", СписокПланов);
	 
	 Результат = Запрос.Выполнить();
	 ВыборкаПлан = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	 
	 МассивПланов = Новый Массив;
	 
	 Пока ВыборкаПлан.Следующий() Цикл
		 План = Новый Структура;
		 План.Вставить("gid", ВыборкаПлан.ПланДоставки.УникальныйИдентификатор());
		// План.Вставить("gidReport", ВыборкаПлан.Отчет.УникальныйИдентификатор());
		 План.Вставить("gidReport", "");
		 План.Вставить("number", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаПлан.Номер));
		 План.Вставить("vehicle", Строка(ВыборкаПлан.Машина));
		 План.Вставить("driver", Строка(ВыборкаПлан.Водитель));
				 
		 ВыборкаЗаказы = ВыборкаПлан.Выбрать();
		 
		 ОбщийВес = 0;
		 ОбщийОбъем = 0;

		 МассивЗаказов = Новый Массив;
		 Пока ВыборкаЗаказы.Следующий() Цикл
			 Заказ = Новый Структура;
			 Если (не ЗначениеЗаполнено(ВыборкаЗаказы.Заказ)) Тогда
				 План.Вставить("orders", МассивЗаказов);
				 План.Вставить("count", МассивЗаказов.Количество());
			 иначе
				 
				 Заказ.Вставить("gid", ВыборкаЗаказы.Заказ.УникальныйИдентификатор());
				 Заказ.Вставить("number", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаЗаказы.НомерЗаказа));
				 Заказ.Вставить("invoice", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаЗаказы.ВхНакладная));
				 Заказ.Вставить("date", Формат(ВыборкаЗаказы.Дата, "ДЛФ=D"));
				 Заказ.Вставить("time_from", Лев(Формат(ВыборкаЗаказы.ВремяС, "ДЛФ=T"), СтрДлина(Формат(ВыборкаЗаказы.ВремяС, "ДЛФ=T"))-3));
				 Заказ.Вставить("time_to", Лев(Формат(ВыборкаЗаказы.ВремяПо, "ДЛФ=T"), СтрДлина(Формат(ВыборкаЗаказы.ВремяПо, "ДЛФ=T"))-3));
				 Заказ.Вставить("address", ВыборкаЗаказы.Адрес);
				 Заказ.Вставить("lng", ВыборкаЗаказы.Долгота);
				 Заказ.Вставить("lat", ВыборкаЗаказы.Широта);
				 Заказ.Вставить("receiver", Строка(ВыборкаЗаказы.Получатель));
				 Заказ.Вставить("type_del", ВыборкаЗаказы.ВидЗаказа);
				 Заказ.Вставить("weight", ВыборкаЗаказы.ВесЗаказ);
				 Заказ.Вставить("amount", ВыборкаЗаказы.ОбъемЗаказ);
				 
				 ОбщийВес = ОбщийВес + ВыборкаЗаказы.ВесЗаказ;
				 ОбщийОбъем = ОбщийОбъем + ВыборкаЗаказы.ОбъемЗаказ;
				 
				 МассивЗаказов.Добавить(Заказ);
			 КонецЕсли;
			 План.Вставить("amount", ОбщийОбъем);
			 План.Вставить("weight", ОбщийВес);
			 План.Вставить("orders", МассивЗаказов);
			 План.Вставить("count", МассивЗаказов.Количество());
		 конецЦикла;
		 
		 МассивПланов.Добавить(План);
	 КонецЦикла;
	 
	 Результат = ES_JSON.ЗаписатьJSON_(МассивПланов);
	 
	 Ответ = Новый HTTPСервисОтвет(200);
	 Ответ.Заголовки.Вставить("Access-Control-Allow-Origin", "*");
	 Ответ.УстановитьТелоИзСтроки(Результат);
	 Возврат Ответ;
	 //EFSOL_Сальник К.А.  -}
КонецФункции


Функция GetCouriersPOST(Запрос)
	//EFSOL_Сальник К.А. 2018-08-20 {+
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Сотрудники.Ссылка КАК Ссылка,
		|	Сотрудники.Наименование КАК Наименование
		|ИЗ
		|	Справочник.Сотрудники КАК Сотрудники";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Курьеры = Новый Массив;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Курьер = Новый Структура;
		Курьер.Вставить("gid", ВыборкаДетальныеЗаписи.Ссылка.УникальныйИдентификатор());
		Курьер.Вставить("name", ВыборкаДетальныеЗаписи.Наименование);
		Курьеры.Добавить(Курьер);		
	КонецЦикла;	
	
	Результат = ES_JSON.ЗаписатьJSON_(Курьеры);
	
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.Заголовки.Вставить("Access-Control-Allow-Origin", "*");
	Ответ.УстановитьТелоИзСтроки(Результат);
	
	Возврат Ответ;
	//EFSOL_Сальник К.А.  -}
КонецФункции


Функция CreatePlanPOST(Запрос) 
	//EFSOL_Сальник К.А. 2018-08-20 {+			   
	ТелоЗапроса = Запрос.ПолучитьТелоКакСтроку();
	Результат = ES_JSON.ПрочитатьJSON_(ТелоЗапроса);
	
	КурьерИД = Результат.Получить("gid");
	КурьерСсылка = Справочники.Сотрудники.ПолучитьСсылку(КурьерИД);
	НовыйПлан = Документы.ES_ПланДоставки.СоздатьДокумент();
	НовыйПлан.Дата = Дата(СтрЗаменить(Результат.Получить("date"),"-",""));
	//НовыйПлан.Дата = ТекущаяДата();
	НовыйПлан.Автор = Пользователи.ТекущийПользователь();
	НовыйПлан.Курьер = КурьерСсылка;
	НовыйПлан.Записать(РежимЗаписиДокумента.Проведение);	
	
	СсылкаПлан = НовыйПлан.Ссылка;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ES_ПланДоставки.Ссылка КАК ПланДоставки,
		|	ES_ПланДоставки.Номер КАК Номер,
		|	ES_ПланДоставки.Дата КАК Дата,
		|	ES_ПланДоставки.ТранспортноеСредство КАК Машина,
		|	ES_ПланДоставки.Курьер КАК Водитель,
		|	ES_ОтчетОДоставке.Ссылка КАК Отчет
		|ИЗ
		|	Документ.ES_ПланДоставки КАК ES_ПланДоставки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ES_ОтчетОДоставке КАК ES_ОтчетОДоставке
		|		ПО ES_ПланДоставки.Ссылка = ES_ОтчетОДоставке.ПланДоставки
		|ГДЕ
		|	ES_ПланДоставки.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", СсылкаПлан);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	План = Новый Структура;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		План.Вставить("gid", ВыборкаДетальныеЗаписи.ПланДоставки.УникальныйИдентификатор());
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Отчет) Тогда
			План.Вставить("gidReport", ВыборкаДетальныеЗаписи.Отчет.УникальныйИдентификатор());
		Иначе 
			План.Вставить("gidReport", "");
		КонецЕсли;
		План.Вставить("number", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаДетальныеЗаписи.Номер));
		План.Вставить("vehicle", Строка(ВыборкаДетальныеЗаписи.Машина));
		План.Вставить("driver", Строка(ВыборкаДетальныеЗаписи.Водитель));
		План.Вставить("amount", 0);
		План.Вставить("weight", 0);

				
		МассивЗаказов = Новый Массив;
		План.Вставить("orders", МассивЗаказов);
		План.Вставить("count", МассивЗаказов.Количество());
	
	КонецЦикла;
	
	Результат = ES_JSON.ЗаписатьJSON_(План);
	
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.Заголовки.Вставить("Access-Control-Allow-Origin", "*");
	Ответ.УстановитьТелоИзСтроки(Результат);
	Возврат Ответ;
	//EFSOL_Сальник К.А.  -}
КонецФункции

Функция DeletePlanPOST(Запрос)
	//EFSOL_Сальник К.А. 2018-08-29 {+
	ТелоЗапроса = Запрос.ПолучитьТелоКакСтроку();
	Результат = ES_JSON.ПрочитатьJSON_(ТелоЗапроса);
	
	ПланИД = Результат.Получить("gid");
	ПланСсылка = Документы.ES_ПланДоставки.ПолучитьСсылку(ПланИД); 
	ПланОбъект = ПланСсылка.ПолучитьОбъект();
	ПланОбъект.ПометкаУдаления = Истина;
	ПланОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.Заголовки.Вставить("Access-Control-Allow-Origin", "*");
	Возврат Ответ;
	//EFSOL_Сальник К.А.  -}
КонецФункции


