
Функция ШаблонURLДляБотаТелеграмПолучитьОтвет(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);
	Ошибка = Ложь;
	ПеремДляОтв = Ложь;
	ТекстОтвета = "true";	
	
	ТокенБота 			= ЗапросТокенаБота(); //"725043174:AAHedfPOQK3zOIJIblIoaRqoNc1lcT4fVIQ";
	//АдресБазы 			= "https://d7.efsol.ru:443/DostavkaForBot/hs/Forbot1c/getMessag"; //https://d7.efsol.ru/DostavkaForBot/ru_RU/
	//АдресВебХука 		= АдресБазы+ТокенБота;		
	ИспользоватьПрокси	= Истина;
	ПроксиСервер		= "socks5://s6.esit.info";
	ЗащищенноеСоединение = Новый ЗащищенноеСоединениеOpenSSL(Новый СертификатКлиентаWindows, Новый СертификатыУдостоверяющихЦентровWindows); 
	
	ИнтернетПрокси = Новый ИнтернетПрокси;
	ИнтернетПрокси.Установить("https", ПроксиСервер, 31080, "Delans", "Delans_2019");
		
		//Получаем данные сообщений
		ТелоЗапроса = Запрос.ПолучитьТелоКакСтроку(); 
		
		//Читаем полученные данный форматаJSON
		ЧтениеJSON = Новый ЧтениеJSON();
		ЧтениеJSON.УстановитьСтроку(ТелоЗапроса);
		Результат = ПрочитатьJSON(ЧтениеJSON);
		ЧтениеJSON.Закрыть();
		
		ЗаписьЖурналаРегистрации("Вызов метода Телеграмм",УровеньЖурналаРегистрации.Информация);
		
		//для просмотра результата в отдельном документе
		////////////////////////////////////////////////////////////////////////////////
		//Создаем структуру для формирования ответа
		СтруктураВыгрузки = Новый Структура;
		СтруктураВыгрузки.Вставить("result",Результат); 
		
		//Формируем файл ответа в формате JSON
		НастройкиСериализации = Новый НастройкиСериализацииJSON;
		НастройкиСериализации.ВариантЗаписиДаты = ВариантЗаписиДатыJSON.УниверсальнаяДата;
		НастройкиСериализации.ФорматСериализацииДаты = ФорматДатыJSON.ISO;
		НастройкиСериализации.СериализовыватьМассивыКакОбъекты = Ложь;
		ПараметрыJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Авто, " ", Истина);
		ЗаписьJSON = Новый ЗаписьJSON;
		
		//ЗаписьJSON.ОткрытьФайл("F:\Папки пользователей\Рыбалка\test.json");
		//ЗаписьJSON.ПроверятьСтруктуру = Истина;
		//ЗаписьJSON.УстановитьСтроку(ПараметрыJSON);
		//ЗаписатьJSON(ЗаписьJSON, СтруктураВыгрузки, НастройкиСериализации);
		СтрокаJSON = ЗаписьJSON.Закрыть();
		////////////////////////////////////////////////////////////////////////////////
		
		ЗаписьЖурналаРегистрации("Вызов метода Тел",УровеньЖурналаРегистрации.Информация);
		
		//Проверка: пришла команда или колбек
		//СтруктураОтвета = Новый Структура;
		Если Результат.Свойство("message") = Истина Тогда
			ЗаписьЖурналаРегистрации("Вызов метода Тел325",УровеньЖурналаРегистрации.Информация);
			//СтруктураОтвета.Вставить("chat_id",Результат.message.chat.id);
			//СтруктураОтвета.Вставить("text", Результат.message.text);
			ИДЧата = Формат(Результат.message.chat.id, "ЧГ=");
			ТекстПолСооб = Результат.message.text;
			
			//Смотрим текст команды, /start одна из стандартных команд для бота
			Если ТекстПолСооб = "/start" Тогда
				
				///////////////////////////////////////////////
				//сделать запрос в рабочую базу на сохранение ид чата
				//////////////////////////////////////////////
				
				//Запись в регистр сведений
				////////МенеджерЗаписи = РегистрыСведений.ES_ТаблицаТокенов.СоздатьМенеджерЗаписи();
				////////МенеджерЗаписи.ИдЧата = ИдЧата;
				////////МенеджерЗаписи.Записать(Истина);
				
				
				ПроизвольныйТекст = "Привет! Твой чат сохранен, теперь в него можно отправлять заказы на доставку и сборы грузов из 1с";
				
				//Отправляем сообщение
				Соединение  =  Новый HTTPСоединение("api.telegram.org",443,,,ИнтернетПрокси,,Новый ЗащищенноеСоединениеOpenSSL());
				ПолучениеЗапрос = "bot"+ТокенБота+"/sendMessage?chat_id="+ИдЧата+"&text="+ПроизвольныйТекст;// + "&reply_markup=" +Клавиатура;
				Запрос = Новый HTTPЗапрос(ПолучениеЗапрос);
				Ответ = Соединение.Получить(Запрос);
				//ЗаписьЖурналаРегистрации("Вызов метТелеграмм",УровеньЖурналаРегистрации.Информация);
				
				
				//ответ на команду /help, одна из стандартных команд для бота
				Иначе Если ТекстПолСооб = "/help" Тогда
					ТекстДляХелпа = "Для отправки в этот чат сообщений из 1С перейдите в программу, в стартовых настройках укажите Ид чата и мой токен, после этого из формы списка заказов на доставку и сборов груза нажмите на кнопку ""Отправить в телеграм""";
					Соединение  =  Новый HTTPСоединение("api.telegram.org",443,,,ИнтернетПрокси,,Новый ЗащищенноеСоединениеOpenSSL());
					ПолучениеЗапрос = "bot"+ТокенБота+"/sendMessage?chat_id="+ИдЧата+"&text="+ТекстДляХелпа;
					Запрос = Новый HTTPЗапрос(ПолучениеЗапрос);
					Ответ = Соединение.Получить(Запрос);
					
					//ответ на команду /settings, одна из стандартных команд для бота
					Иначе Если ТекстПолСооб = "/settings" Тогда
						ТекстДляНастроек = "Мои команды:"+ Символы.ПС +"/start - для начала общения" + Символы.ПС + "/help - узнать, что я могу" + Символы.ПС + "/settings - список доступных команд";
						Соединение  =  Новый HTTPСоединение("api.telegram.org",443,,,ИнтернетПрокси,,Новый ЗащищенноеСоединениеOpenSSL());
						ПолучениеЗапрос = "bot"+ТокенБота+"/sendMessage?chat_id="+ИдЧата+"&text="+ТекстДляНастроек;
						Запрос = Новый HTTPЗапрос(ПолучениеЗапрос);
						Ответ = Соединение.Получить(Запрос);
						
						//условие если отправлен неправильный текст	
					Иначе 
						ТекстДляКорОтвета = "введите корректную команду";
						Соединение  =  Новый HTTPСоединение("api.telegram.org",443,,,ИнтернетПрокси,,Новый ЗащищенноеСоединениеOpenSSL());
						ПолучениеЗапрос = "bot"+ТокенБота+"/sendMessage?chat_id="+ИдЧата+"&text="+ТекстДляКорОтвета;
						Запрос = Новый HTTPЗапрос(ПолучениеЗапрос);
						Ответ = Соединение.Получить(Запрос);
					КонецЕсли;
				КонецЕсли;
				
			КонецЕсли;
			
			//Условие, если вернулся колбек
			Иначе если Результат.Свойство("callback_query") = Истина Тогда
				//СтруктураОтвета.Вставить("chat_id", Результат.callback_query.message.chat.id);
				//СтруктураОтвета.Вставить("data", Результат.callback_query.data);
				
				ЗаписьЖурналаРегистрации("Вызов метода Тел1",УровеньЖурналаРегистрации.Информация);
				
				Отправитель = Результат.callback_query.from.first_name + " " +Результат.callback_query.from.last_name;
				ИДЧата = Формат(Результат.callback_query.message.chat.id, "ЧГ=");
				ИДСообщения = Формат(Результат.callback_query.message.message_id, "ЧГ=");
				ОтветКнопки = Сред(Результат.callback_query.data, 1, 1);
				ТекстОтпрСообщ = Результат.callback_query.message.text;
				
				СимволПереноса = СтрНайти(ТекстОтпрСообщ, Символы.ПС);
				//НазваниеДок = Сред(ТекстОтпрСообщ, 1, 3);
				УникИдент = Сред(Результат.callback_query.data, 2);
				Пользователь = Отправитель;
				
				ЗаписьЖурналаРегистрации("Вызов метода Тел2",УровеньЖурналаРегистрации.Информация);
				
				
				
				//////////////////////////////////////ответ в телеграм нужно переместить в отдельные методы
				Если ОтветКнопки = "1" Тогда
					
					//Делаем запрос в рабочую базу на создание или изменение документа по сотруднику, передаем структуру запроса из телеграм
					ОтветИБ = ES_ТелеграмAPI.ЗапросВРабочуюБазу(Запрос, "OrderAssigned", ТелоЗапроса);
					
					ПеременнаяДляСтатусов = ОтветИБ;
					
					ЗаписьЖурналаРегистрации("Вызов метода Тел2_ц",УровеньЖурналаРегистрации.Информация);
					
					Если ПеременнаяДляСтатусов = Ложь Тогда
						
						Отправитель = "Заявка уже назначена на курьера";
						
						//Структура для измененной кнопки
						клСтруктура1 = Новый Структура;
						мСтрок1 = Новый Массив;
						мКнопок1 = Новый Массив;
						мКнопок1.Добавить(Новый Структура("text, callback_data", "Заявка принята", "2"));
						
						мСтрок1.Добавить(мКнопок1);    
						
						клСтруктура1.Вставить("inline_keyboard",мСтрок1);
						
						ЗаписьJSON = Новый ЗаписьJSON;
						ЗаписьJSON.УстановитьСтроку();
						ЗаписатьJSON(ЗаписьJSON,клСтруктура1,,);
						
						Клавиатура1 = ЗаписьJSON.Закрыть();
						
						//Изменяем сообщение
						Соединение  =  Новый HTTPСоединение("api.telegram.org",443,,,ИнтернетПрокси,,Новый ЗащищенноеСоединениеOpenSSL());
						ПолученЗапрос = "bot"+ТокенБота+"/editMessageText?chat_id="+ИдЧата + "&message_id=" +ИДСообщения+"&text="+ТекстОтпрСообщ + Символы.ПС + Отправитель +"&reply_markup=" +Клавиатура1; //+ "&massage_id=" +ИДСообщения+
						Запрос = Новый HTTPЗапрос(ПолученЗапрос);
						Ответ = Соединение.Получить(Запрос);
						
					Иначе
						
						//Делаем запрос в рабочую базу на создание или изменение документа по сотруднику, передаем структуру запроса из телеграм
						ОтветИБ = ES_ТелеграмAPI.ЗапросВРабочуюБазу(Запрос, "CreateEmployee", ТелоЗапроса);
						
						//Изменяем сообщение в телеграм
						клСтруктура1 = Новый Структура;
						мСтрок1 = Новый Массив;
						мКнопок1 = Новый Массив;
						мКнопок1.Добавить(Новый Структура("text, callback_data", "Заявка принята", "2"));
						
						мСтрок1.Добавить(мКнопок1);    
						
						клСтруктура1.Вставить("inline_keyboard",мСтрок1);
						
						ЗаписьJSON = Новый ЗаписьJSON;
						ЗаписьJSON.УстановитьСтроку();
						ЗаписатьJSON(ЗаписьJSON,клСтруктура1,,);
						
						Клавиатура1 = ЗаписьJSON.Закрыть();
						
						//Изменяем сообщение
						Соединение  =  Новый HTTPСоединение("api.telegram.org",443,,,ИнтернетПрокси,,Новый ЗащищенноеСоединениеOpenSSL());
						ПолученЗапрос = "bot"+ТокенБота+"/editMessageText?chat_id="+ИдЧата + "&message_id=" +ИДСообщения+"&text="+ТекстОтпрСообщ + Символы.ПС + Отправитель +"&reply_markup=" +Клавиатура1; //+ "&massage_id=" +ИДСообщения+
						Запрос = Новый HTTPЗапрос(ПолученЗапрос);
						Ответ = Соединение.Получить(Запрос);
						
						
						//Если НазваниеДок = "Сбр" или НазваниеДок = "Зкз" Тогда
						
						
						ЗаписьЖурналаРегистрации("Вызов метода Тел24",УровеньЖурналаРегистрации.Информация);
						
						//Структура для двух кнопок
						клСтруктура2 = Новый Структура;
						мСтрок2 = Новый Массив;
						мКнопок2 = Новый Массив;
						мКнопок2.Добавить(Новый Структура("text, callback_data", "Доставлен", "3" + УникИдент));
						
						мСтрок2.Добавить(мКнопок2);
						
						клСтруктура3 = Новый Структура;
						мКнопок3 = Новый Массив;
						мКнопок3.Добавить(Новый Структура("text, callback_data", "ОтказКлиента", "4" + УникИдент));
						
						мСтрок2.Добавить(мКнопок3);
						
						клСтруктура2.Вставить("inline_keyboard",мСтрок2);
						
						ЗаписьJSON = Новый ЗаписьJSON;
						ЗаписьJSON.УстановитьСтроку();
						ЗаписатьJSON(ЗаписьJSON,клСтруктура2,,);
						
						Клавиатура2 = ЗаписьJSON.Закрыть();
						
						//Для отправки сообщения конкретному человеку, который принял сбор или план
						ИДВозврЧата = Формат(Результат.callback_query.from.id, "ЧГ=");
						Соединение  =  Новый HTTPСоединение("api.telegram.org",443,,,ИнтернетПрокси,,Новый ЗащищенноеСоединениеOpenSSL());
						ПолученЗапрос = "bot"+ТокенБота+"/sendMessage?chat_id="+ИдВозврЧата +"&text="+ТекстОтпрСообщ +"&reply_markup=" +Клавиатура2;
						Запрос = Новый HTTPЗапрос(ПолученЗапрос);
						Ответ = Соединение.Получить(Запрос);
					КонецЕсли;
					
					
				Иначе
					Если ОтветКнопки = "3" Тогда
						
						//Если НазваниеДок = "Сбр" Или НазваниеДок = "Зкз" Тогда
							
							ОтветИБ = ES_ТелеграмAPI.ЗапросВРабочуюБазу(Запрос, "ChangeStatusCompleted", ТелоЗапроса);
							
							ЗаписьЖурналаРегистрации("Вызов метода Тел3",УровеньЖурналаРегистрации.Информация);
							
							//Структура для кнопки
							клСтруктура1 = Новый Структура;
							мСтрок1 = Новый Массив;
							мКнопок1 = Новый Массив;
							мКнопок1.Добавить(Новый Структура("text, callback_data", "Выполнен", "6"));
							
							мСтрок1.Добавить(мКнопок1);    
							
							клСтруктура1.Вставить("inline_keyboard",мСтрок1);
							
							ЗаписьJSON = Новый ЗаписьJSON;
							ЗаписьJSON.УстановитьСтроку();
							ЗаписатьJSON(ЗаписьJSON,клСтруктура1,,);
							
							Клавиатура1 = ЗаписьJSON.Закрыть();
							
							//Для изменения сообщения после доставки груза или отказа клиента
							ИДВозврЧата = Формат(Результат.callback_query.from.id, "ЧГ=");
							Соединение  =  Новый HTTPСоединение("api.telegram.org",443,,,ИнтернетПрокси,,Новый ЗащищенноеСоединениеOpenSSL());
							ПолученЗапрос = "bot"+ТокенБота+"/editMessageText?chat_id="+ИдЧата + "&message_id=" +ИДСообщения+"&text="+ТекстОтпрСообщ +"&reply_markup=" +Клавиатура1;
							Запрос = Новый HTTPЗапрос(ПолученЗапрос);
							Ответ = Соединение.Получить(Запрос);
							
							//КонецЕсли;
					
					Иначе 
						Если ОтветКнопки = "4" Тогда
							
							ОтветИБ = ES_ТелеграмAPI.ЗапросВРабочуюБазу(Запрос, "ChangeStatusFailure", ТелоЗапроса);
							
							ЗаписьЖурналаРегистрации("Вызов метода Тел6",УровеньЖурналаРегистрации.Информация);
							
							//Структура для кнопки
							клСтруктура1 = Новый Структура;
							мСтрок1 = Новый Массив;
							мКнопок1 = Новый Массив;
							мКнопок1.Добавить(Новый Структура("text, callback_data", "Отказ клиента", "5"));
							
							мСтрок1.Добавить(мКнопок1);    
							
							клСтруктура1.Вставить("inline_keyboard",мСтрок1);
							
							ЗаписьJSON = Новый ЗаписьJSON;
							ЗаписьJSON.УстановитьСтроку();
							ЗаписатьJSON(ЗаписьJSON,клСтруктура1,,);
							
							Клавиатура1 = ЗаписьJSON.Закрыть();
							
							//Для изменения сообщения после доставки груза или отказа клиента
							ИДВозврЧата = Формат(Результат.callback_query.from.id, "ЧГ=");
							Соединение  =  Новый HTTPСоединение("api.telegram.org",443,,,ИнтернетПрокси,,Новый ЗащищенноеСоединениеOpenSSL());
							ПолученЗапрос = "bot"+ТокенБота+"/editMessageText?chat_id="+ИдЧата + "&message_id=" +ИДСообщения+"&text="+ТекстОтпрСообщ +"&reply_markup=" +Клавиатура1;
							Запрос = Новый HTTPЗапрос(ПолученЗапрос);
							Ответ = Соединение.Получить(Запрос);
							
						КонецЕсли;
					//КонецЕсли;

				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	//Для подключения вебхука, если адрес вебхука изменится, тогда ее нужно обязательно включить и использовать первой только один раз
	//////Ресурс = "bot"+ТокенБота+"/setWebhook?url="+АдресБазы;  
	//////Попытка	
	//////Соединение  =  Новый HTTPСоединение("api.telegram.org",443,,,ИнтернетПрокси,,ЗащищенноеСоединение);
	//////Запрос = Новый HTTPЗапрос(Ресурс);
	//////Запрос.Заголовки.Вставить("Connection", "keep-alive");
	//////	Ответ = Соединение.Получить(Запрос);
	//////Исключение
	//////	Ошибка  = Истина;
	//////	ТекстОтвета = ОписаниеОшибки();
	//////КонецПопытки;
		
	Если Не Ошибка Тогда
		//ТелоЗапроса = МЗапрос.ПолучитьТелоКакСтроку();
		ЧтениеJSON = Новый ЧтениеJSON();
		ЧтениеJSON.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку());
		Результат = ПрочитатьJSON(ЧтениеJSON);
		ЧтениеJSON.Закрыть();		
	КонецЕсли;
	  ЗаписьЖурналаРегистрации("Вызов методаТ",УровеньЖурналаРегистрации.Информация);
  
	НастройкиСериализации = Новый НастройкиСериализацииJSON;
	НастройкиСериализации.ВариантЗаписиДаты = ВариантЗаписиДатыJSON.УниверсальнаяДата;
	НастройкиСериализации.ФорматСериализацииДаты = ФорматДатыJSON.ISO;
	НастройкиСериализации.СериализовыватьМассивыКакОбъекты = Ложь;
	ПараметрыJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Авто, " ", Истина);
	ЗаписьJSON = Новый ЗаписьJSON;
	СтруктураВыгрузки = Новый Структура;
	СтруктураВыгрузки.Вставить("result",Результат);
	ЗаписьJSON.ПроверятьСтруктуру = Истина;
	ЗаписьJSON.УстановитьСтроку(ПараметрыJSON);
	ЗаписатьJSON(ЗаписьJSON, СтруктураВыгрузки, НастройкиСериализации);
	СтрокаJSON = ЗаписьJSON.Закрыть();
			
	Ответ = Новый HTTPСервисОтвет(200);
    Ответ.УстановитьТелоИзСтроки(СтрокаJSON);
	Возврат Ответ;
КонецФункции

Функция ЗапросТокенаБота()
	
	//ЗапросТок = Новый Запрос;
	//ЗапросТок.Текст = 
	//"ВЫБРАТЬ
	//|	МАКСИМУМ(ES_ТаблицаТокенов.Токен) КАК Токен
	//|ИЗ
	//|	РегистрСведений.ES_ТаблицаТокенов КАК ES_ТаблицаТокенов";
	//Выборка = ЗапросТок.Выполнить().Выбрать();
	//Пока Выборка.Следующий() Цикл
	//	ТокенБота = Выборка.Токен;
	//КонецЦикла;
	
	//ТокенБота = ES_ОбщегоНазначения.ПолучитьСтартовуюНастройку(Перечисления.ES_ВидыСтартовыхНастроек.ТокенБотаДляТелеграм);
	
	ТокенБота = "725043174:AAHedfPOQK3zOIJIblIoaRqoNc1lcT4fVIQ";
	
	Возврат ТокенБота;
		
КонецФункции


Процедура СоздатьИЗаполнитьОтчет(УникИдент)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ES_ПланДоставкиЗаказы.Ссылка КАК Ссылка,
	|	ES_ПланДоставкиЗаказы.ДокументДоставки КАК ДокументДоставки
	|ИЗ
	|	Документ.ES_ПланДоставки.Заказы КАК ES_ПланДоставкиЗаказы
	|ГДЕ
	|	ES_ПланДоставкиЗаказы.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|УПОРЯДОЧИТЬ ПО
	|	ES_ПланДоставкиЗаказы.ДатаЗаказа УБЫВ";
	Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(ТекущаяДата()));
	
	ВыборкаПланов = Запрос.Выполнить().Выбрать();
	
	Пока ВыборкаПланов.Следующий() Цикл
		Если ВыборкаПланов.ДокументДоставки.УникальныйИдентификатор() = Новый УникальныйИдентификатор(УникИдент) Тогда
			ПланДоставкиСсылка = ВыборкаПланов.Ссылка;
		Иначе
			ПланДоставкиСсылка = Документы.ES_ПланДоставки.ПустаяСсылка();
		КонецЕсли;
	КонецЦикла;
	
	ЗаписьЖурналаРегистрации("Вызов метода Тел5",УровеньЖурналаРегистрации.Информация);
	
	Если ЗначениеЗаполнено(ПланДоставкиСсылка) Тогда
		ВыборкаДокум = Документы.ES_ОтчетОДоставке.СоздатьДокумент();
		ВыборкаДокум.ПланДоставки = ПланДоставкиСсылка;
		ВыборкаДокум.Дата = ТекущаяДата();
		ВыборкаДокум.ЗаполнитьДаннымиИзПланаДоставки(ВыборкаПланов.Ссылка);
		Для каждого Строка Из ПланДоставкиСсылка.Заказы Цикл
			Если ТипЗнч(Строка.ДокументДоставки) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
				Строка.СтатусЗаказа = Перечисления.ES_СтатусыЗаказов.Доставлен;
			Иначе
				Строка.СтатусЗаказа = Перечисления.ES_СтатусыЗаборов.Выполнен;
			КонецЕсли;
		КонецЦикла;
		ВыборкаДокум.Записать(РежимЗаписиДокумента.Проведение);
	КонецЕсли
КонецПроцедуры

Процедура НайтиИПерезаполнитьОтчет(Пользователь, ВыборкаПланов)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ES_ОтчетОДоставке.Ссылка КАК Ссылка,
	|	ES_ОтчетОДоставке.Курьер КАК Курьер
	|ИЗ
	|	Документ.ES_ОтчетОДоставке КАК ES_ОтчетОДоставке
	|ГДЕ
	|	ES_ОтчетОДоставке.Дата МЕЖДУ &ТекДата1 И &ТекДата2";
	Запрос.УстановитьПараметр("ТекДата1", НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("ТекДата2", КонецДня(ТекущаяДата()));
	
	ВыборкаОтчет = Запрос.Выполнить().Выбрать();
	//ВыборкаДокум = Документы.ES_ОтчетОДоставке.ПустаяСсылка(); 
	Пока ВыборкаОтчет.Следующий() Цикл
		Если ВыборкаОтчет.Курьер = Пользователь Тогда
			ВыборкаДокум = ВыборкаОтчет.Ссылка.ПолучитьОбъект();
		КонецЕсли;
	КонецЦикла;
	Если ЗначениеЗаполнено(ВыборкаДокум) Тогда
		ДокументОтчет = ВыборкаДокум.ПолучитьОбъект;
		ВыборкаДокум.ПланДоставки = ВыборкаПланов.Ссылка;
		ВыборкаДокум.Дата = ТекущаяДата();
		ВыборкаДокум.ЗаполнитьДаннымиИзПланаДоставки(ВыборкаПланов.Ссылка);
		//Для каждого Строка Из ПланДоставкиСсылка.Заказы Цикл
		//	Если Строка.ДокументДоставки.УникальныйИдентификатор= Новый УникальныйИдентификатор(ИникИдент) Тогда
		//		Если ТипЗнч(Строка.ДокументДоставки) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		//			Строка.СтатусЗаказа = Перечисления.ES_СтатусыЗаказов.Доставлен;
		//		Иначе
		//			Строка.СтатусЗаказа = Перечисления.ES_СтатусыЗаборов.Выполнен;
		//		КонецЕсли;
		//	КонецЕсли;
		//КонецЦикла;
		ВыборкаДокум.Записать(РежимЗаписиДокумента.Запись);
		
	КонецЕсли;
	
КонеЦПроцедуры


Функция T_APIСоздатьНайтиСотрудникаСоздатьНайтиСотрудника(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);
	
	Результат = ES_ТелеграмAPI.ПрочитатьОтветJSON(Запрос);
	
	Отправитель = Результат.callback_query.from.first_name + " " +Результат.callback_query.from.last_name;
	ИДЧата = Формат(Результат.callback_query.message.chat.id, "ЧГ=");
	ИДСообщения = Формат(Результат.callback_query.message.message_id, "ЧГ=");
	ОтветКнопки = Сред(Результат.callback_query.data,1,1);
	ТекстОтпрСообщ = Результат.callback_query.message.text;
	
	СимволПереноса = СтрНайти(ТекстОтпрСообщ, Символы.ПС);
	//НазваниеДок = Сред(ТекстОтпрСообщ, 1, 3);
	УникИдент = Сред(Результат.callback_query.data, 2);
	
	
	Пользователь = Справочники.Сотрудники.НайтиПоРеквизиту("ES_ИдентификаторТелеграм", Отправитель);
	Если Не ЗначениеЗаполнено(Пользователь) Тогда
		Пользователь = Справочники.Сотрудники.СоздатьЭлемент();
		Пользователь.Наименование = Отправитель;
		Пользователь.ES_ИдентификаторТелеграм = Отправитель;
		//Пользователь.Родитель = Справочники.Сотрудники.Курьеры;
		Пользователь.Записать();
	КонецЕсли;
	
	Если ОтветКнопки = "1" Тогда
		//Если НазваниеДок = "Сбр" или НазваниеДок = "Зкз" Тогда
						
			//Выбираем все планы на текущую дату //ПараметрыСеанса
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ES_ПланДоставки.Ссылка КАК Ссылка,
			|	ES_ПланДоставки.Курьер КАК Курьер
			|ИЗ
			|	Документ.ES_ПланДоставки КАК ES_ПланДоставки
			|ГДЕ
			|	ES_ПланДоставки.Дата МЕЖДУ &ТекДата1 И &ТекДата2";
			Запрос.УстановитьПараметр("ТекДата1", НачалоДня(ТекущаяДата()-86400));
			Запрос.УстановитьПараметр("ТекДата2", КонецДня(ТекущаяДата()));
			Выборка = Запрос.Выполнить().Выбрать();
			
			Пока Выборка.Следующий() Цикл
				Если Выборка.Курьер = Пользователь Тогда
					ДокументДоОбъект = Выборка.Ссылка;
				КонецЕсли;
			КонецЦикла;
			Если Не ЗначениеЗаполнено(ДокументДоОбъект) Тогда
				ДокументДоОбъект = Документы.ES_ПланДоставки.ПустаяСсылка();
			КонецЕсли;
			ДокументДоставки = Документы.ЗаказПокупателя.ПолучитьСсылку(Новый УникальныйИдентификатор(УникИдент)).ПолучитьОбъект();
			Если ДокументДоставки = Неопределено Тогда
				ДокументДоставки = Документы.ES_ЗаборГруза.ПолучитьСсылку(Новый УникальныйИдентификатор(УникИдент)).ПолучитьОбъект();
			КонецЕсли;
			
			ЗаписьЖурналаРегистрации("Вызов метода Тел22",УровеньЖурналаРегистрации.Информация);
			
			
			
			Если ЗначениеЗаполнено(ДокументДоОбъект) Тогда
				//редактируем план доставки по документам забора и заказа
				ЗаписьЖурналаРегистрации("Вызов метода Тел22_1",УровеньЖурналаРегистрации.Информация);
				ДокументОбъект = ДокументДоОбъект.ПолучитьОбъект();
				СтрокаПлана = ДокументОбъект.Заказы.Добавить();
				СтрокаПлана.ДокументДоставки = ДокументДоставки.Ссылка;
				ЗаписьЖурналаРегистрации("Вызов метода Тел22_2",УровеньЖурналаРегистрации.Информация);
				//Заполнение табличной части плана доставки
				ES_ОбщегоНазначения.ПолучитьДанныеПоЗаказамДляЗаполненияПланаДоставки(ТипЗнч(ДокументОбъект.Ссылка), ДокументОбъект, ДокументДоставки.Ссылка, Истина, Ложь);
				ЗаписьЖурналаРегистрации("Вызов метода Тел22_3",УровеньЖурналаРегистрации.Информация);
				ДокументОбъект.Подтвержден = Истина;
				ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
				//Перезаполняем отчет о доставке
				//НайтиИПерезаполнитьОтчет(Пользователь, ДокументДоОбъект)
				ЗаписьЖурналаРегистрации("Вызов метода Тел23",УровеньЖурналаРегистрации.Информация);
				
			Иначе
				//Создаем и заполняем план доставки
				ЗаписьЖурналаРегистрации("Вызов метода Тел23_1",УровеньЖурналаРегистрации.Информация);
				ДокументОбъект = Документы.ES_ПланДоставки.СоздатьДокумент();
				ДокументОбъект.Курьер = Пользователь;
				ДокументОбъект.Дата = ТекущаяДата();
				ДокументОбъект.Склад = Справочники.СтруктурныеЕдиницы.ОсновнойСклад;
				НовСтр = ДокументОбъект.Заказы.Добавить();
				НовСтр.ДокументДоставки = ДокументДоставки.Ссылка;
				ЗаписьЖурналаРегистрации("Вызов метода Тел23_2",УровеньЖурналаРегистрации.Информация);
				//Заполнение табличной части плана доставки
				ES_ОбщегоНазначения.ПолучитьДанныеПоЗаказамДляЗаполненияПланаДоставки(ТипЗнч(ДокументОбъект.Ссылка), ДокументОбъект, ДокументДоставки.Ссылка, Истина, Ложь);
				ЗаписьЖурналаРегистрации("Вызов метода Тел23_3",УровеньЖурналаРегистрации.Информация);
				//ДокументОбъект.Подтвержден = Истина;
				ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
				
			КонецЕсли;
			
		//КонецЕсли;
		
	КонецЕсли;
	
	Возврат Ответ;
КонецФункции

Функция T_APIИзменитьСтатусВыполненИзменитьСтатусВыполнен(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);
	
	Результат = ES_ТелеграмAPI.ПрочитатьОтветJSON(Запрос);
	
	Отправитель = Результат.callback_query.from.first_name + " " +Результат.callback_query.from.last_name;
	ИДЧата = Формат(Результат.callback_query.message.chat.id, "ЧГ=");
	ИДСообщения = Формат(Результат.callback_query.message.message_id, "ЧГ=");
	ОтветКнопки = Сред(Результат.callback_query.data, 1, 1);
	ТекстОтпрСообщ = Результат.callback_query.message.text;
	
	СимволПереноса = СтрНайти(ТекстОтпрСообщ, Символы.ПС);
	//НазваниеДок = Сред(ТекстОтпрСообщ, 1, 3);
	УникИдент = Сред(Результат.callback_query.data, 2);
	
	
	Пользователь = Справочники.Сотрудники.НайтиПоРеквизиту("ES_ИдентификаторТелеграм", Отправитель);
	Если Не ЗначениеЗаполнено(Пользователь) Тогда
		Пользователь = Справочники.Сотрудники.СоздатьЭлемент();
		Пользователь.Наименование = Отправитель;
		Пользователь.ES_ИдентификаторТелеграм = Отправитель;
		//Пользователь.Родитель = Справочники.Сотрудники.Курьеры;
		Пользователь.Записать();
	КонецЕсли;
	
	//находим отчет о доставке и изменяем статус заказа
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ES_ОтчетОДоставке.Ссылка КАК Ссылка,
	|	ES_ОтчетОДоставке.Курьер КАК Курьер
	|ИЗ
	|	Документ.ES_ОтчетОДоставке КАК ES_ОтчетОДоставке
	|ГДЕ
	|	ES_ОтчетОДоставке.Дата МЕЖДУ &ТекДата1 И &ТекДата2";
	Запрос.УстановитьПараметр("ТекДата1", НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("ТекДата2", КонецДня(ТекущаяДата()));
	
	ВыборкаОтчет = Запрос.Выполнить().Выбрать();
	Пока ВыборкаОтчет.Следующий() Цикл
		Если ВыборкаОтчет.Курьер = Пользователь Тогда
			ВыборкаОтчетСсылка = ВыборкаОтчет.Ссылка;
		Иначе
			ВыборкаОтчетСсылка = Документы.ES_ОтчетОДоставке.ПустаяСсылка();
		КонецЕсли;
	КонецЦикла;
	
	ЗаписьЖурналаРегистрации("Вызов метода Тел4",УровеньЖурналаРегистрации.Информация);
	
	
	Если ЗначениеЗаполнено(ВыборкаОтчетСсылка) Тогда
		ВыборкаДокум = ВыборкаОтчет.Ссылка.ПолучитьОбъект();
		ПеремДляОбходаСтрокОтчета = Ложь;
		Для каждого Строка Из ВыборкаДокум.Заказы Цикл
			Если Строка.ДокументДоставки.УникальныйИдентификатор() = Новый УникальныйИдентификатор(УникИдент) Тогда
				ПеремДляОбходаСтрокОтчета = Истина;
			Иначе
				ПеремДляОбходаСтрокОтчета = Ложь;
			КонецЕсли;
			
			Если ПеремДляОбходаСтрокОтчета = Истина Тогда
				Если ТипЗнч(Строка.ДокументДоставки) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
					Строка.СтатусЗаказа = Перечисления.ES_СтатусыЗаказов.Доставлен;
					Строка.НПФактНал = Строка.НППлан;
					
				Иначе
					Строка.СтатусЗаказа = Перечисления.ES_СтатусыЗаборов.Выполнен;
					Строка.НПФактНал = Строка.НППлан;
				КонецЕсли;
				//Иначе
				//СоздатьИЗаполнитьОтчет(УникИдент);
				
			КонецЕсли;
			
		КонецЦикла;
		
		
		ВыборкаДокум.Записать(РежимЗаписиДокумента.Проведение);
		
		
	КонецЕсли;
	
	
	Возврат Ответ;
КонецФункции

Функция T_APIИзменитьСтатусОтказИзменитьСтатусОтказ(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);
	
	Результат = ES_ТелеграмAPI.ПрочитатьОтветJSON(Запрос);
	
	Отправитель = Результат.callback_query.from.first_name + " " +Результат.callback_query.from.last_name;
	ИДЧата = Формат(Результат.callback_query.message.chat.id, "ЧГ=");
	ИДСообщения = Формат(Результат.callback_query.message.message_id, "ЧГ=");
	ОтветКнопки = Сред(Результат.callback_query.data, 1, 1);
	ТекстОтпрСообщ = Результат.callback_query.message.text;
	
	СимволПереноса = СтрНайти(ТекстОтпрСообщ, Символы.ПС);
	//НазваниеДок = Сред(ТекстОтпрСообщ, 1, 3);
	УникИдент = Сред(Результат.callback_query.data, 2);
	
	
	Пользователь = Справочники.Сотрудники.НайтиПоРеквизиту("ES_ИдентификаторТелеграм", Отправитель);
	Если Не ЗначениеЗаполнено(Пользователь) Тогда
		Пользователь = Справочники.Сотрудники.СоздатьЭлемент();
		Пользователь.Наименование = Отправитель;
		Пользователь.ES_ИдентификаторТелеграм = Отправитель;
		//Пользователь.Родитель = Справочники.Сотрудники.Курьеры;
		Пользователь.Записать();
	КонецЕсли;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ES_ОтчетОДоставке.Ссылка КАК Ссылка,
	|	ES_ОтчетОДоставке.Курьер КАК Курьер
	|ИЗ
	|	Документ.ES_ОтчетОДоставке КАК ES_ОтчетОДоставке
	|ГДЕ
	|	ES_ОтчетОДоставке.Дата МЕЖДУ &ТекДата1 И &ТекДата2";
	Запрос.УстановитьПараметр("ТекДата1", НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("ТекДата2", КонецДня(ТекущаяДата()));
	ВыборкаОтчет = Запрос.Выполнить().Выбрать();
	
	Пока ВыборкаОтчет.Следующий() Цикл
		Если ВыборкаОтчет.Курьер = Пользователь Тогда
			ВыборкаДокум = ВыборкаОтчет.Ссылка
		КонецЕсли;
	КонецЦикла;
	Если ЗначениеЗаполнено(ВыборкаДокум) Тогда
		ВыборкаДокум.ПолучитьОбъект();
	Иначе
		ВыборкаДокум = Документы.ES_ОтчетОДоставке.ПустаяСсылка();
	КонецЕсли;
	
	ЗаписьЖурналаРегистрации("Вызов метода Тел61",УровеньЖурналаРегистрации.Информация);
	
	Если ЗначениеЗаполнено(ВыборкаДокум) Тогда	
		ВыборкаДокум = ВыборкаОтчет.Ссылка.ПолучитьОбъект();
		ПеремДляОбходаСтрокОтчета = Ложь;
		Для каждого Строка Из ВыборкаДокум.Заказы Цикл
			Если Строка.ДокументДоставки.УникальныйИдентификатор() = Новый УникальныйИдентификатор(УникИдент) Тогда
				ПеремДляОбходаСтрокОтчета = Истина;
			Иначе
				ПеремДляОбходаСтрокОтчета = Ложь;
			КонецЕсли;
			
			Если ПеремДляОбходаСтрокОтчета = Истина Тогда
				Если ТипЗнч(Строка.ДокументДоставки) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
					Строка.СтатусЗаказа = Перечисления.ES_СтатусыЗаказов.Отказ;
					Строка.НПФактНал = 0;
				Иначе
					Строка.СтатусЗаказа = Перечисления.ES_СтатусыЗаборов.Отменен;
					Строка.НПФактНал = 0;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		ВыборкаДокум.Записать(РежимЗаписиДокумента.Проведение);
		
		
	КонецЕсли;
	
	Возврат Ответ;
КонецФункции

Функция T_APIТелеграмПроверитьЗаказНазначенПроверитьЗаказ(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);
	
	Результат = ES_ТелеграмAPI.ПрочитатьОтветJSON(Запрос);
	
	Отправитель = Результат.callback_query.from.first_name + " " +Результат.callback_query.from.last_name;
	ИДЧата = Формат(Результат.callback_query.message.chat.id, "ЧГ=");
	ИДСообщения = Формат(Результат.callback_query.message.message_id, "ЧГ=");
	ОтветКнопки = Сред(Результат.callback_query.data, 1, 1);
	ТекстОтпрСообщ = Результат.callback_query.message.text;
	
	СимволПереноса = СтрНайти(ТекстОтпрСообщ, Символы.ПС);
	//НазваниеДок = Сред(ТекстОтпрСообщ, 1, 3);
	УникИдент = Сред(Результат.callback_query.data, 2);
	
	
	Пользователь = Справочники.Сотрудники.НайтиПоРеквизиту("ES_ИдентификаторТелеграм", Отправитель);
	Если Не ЗначениеЗаполнено(Пользователь) Тогда
		Пользователь = Справочники.Сотрудники.СоздатьЭлемент();
		Пользователь.Наименование = Отправитель;
		Пользователь.ES_ИдентификаторТелеграм = Отправитель;
		//Пользователь.Родитель = Справочники.Сотрудники.Курьеры;
		Пользователь.Записать();
	КонецЕсли;
	
	//находим наш заказ, если он уже назначен тогда нужно сообщить об этом
	ДокументДоставки = Документы.ES_ЗаборГруза.ПолучитьСсылку(Новый УникальныйИдентификатор(УникИдент)).ПолучитьОбъект();
	
	Если ДокументДоставки = Неопределено Тогда
		ДокументДоставки = Документы.ЗаказПокупателя.ПолучитьСсылку(Новый УникальныйИдентификатор(УникИдент)).ПолучитьОбъект();
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ES_СтатусыЗаказовСрезПоследних.Заказ КАК Заказ,
		|	ES_СтатусыЗаказовСрезПоследних.СтатусЗаказа КАК СтатусЗаказа
		|ИЗ
		|	РегистрСведений.ES_СтатусыЗаказов.СрезПоследних(, Заказ = &Заказ) КАК ES_СтатусыЗаказовСрезПоследних";
		Запрос.УстановитьПараметр("Заказ", ДокументДоставки.Ссылка);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			Если Выборка.СтатусЗаказа <> Перечисления.ES_СтатусыЗаказов.Подготовлен Тогда
				ПеременнаяДляСтатусов = Ложь;
			КонецЕсли;
		КонецЦикла;
		
		//Если ДокументДоставки.СостояниеЗаказа <> Справочники.СостоянияЗаказовПокупателей.НайтиПоНаименованию("Подготовлен");//.ES_СтатусыЗаказов.Подготовлен Тогда
		//	ПеременнаяДляСтатусов = Ложь;
		//КонецЕсли;
	Иначе
		ЗаписьЖурналаРегистрации("Вызов метода Тел2_й",УровеньЖурналаРегистрации.Информация);
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ES_СтатусыЗаборовСрезПоследних.Забор КАК Забор,
		|	ES_СтатусыЗаборовСрезПоследних.СтатусЗабора КАК СтатусЗабора
		|ИЗ
		|	РегистрСведений.ES_СтатусыЗаборов.СрезПоследних(, Забор = &Забор) КАК ES_СтатусыЗаборовСрезПоследних";
		Запрос.УстановитьПараметр("Забор", ДокументДоставки.Ссылка);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Если Выборка.СтатусЗабора <> Перечисления.ES_СтатусыЗаборов.ВРаботе Тогда
				ПеременнаяДляСтатусов = Ложь;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Ответ.Заголовки.Вставить("text", ПараметрыСеанса.ТекущийПользователь.Наименование);
	
	Возврат Ответ;
КонецФункции
