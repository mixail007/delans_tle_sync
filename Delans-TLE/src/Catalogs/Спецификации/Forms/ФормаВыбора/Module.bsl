
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("Отбор") И Параметры.Отбор.Свойство("Владелец") Тогда
		
		Если ЗначениеЗаполнено(Параметры.Отбор.Владелец) Тогда
			
			ТипВладелец = Параметры.Отбор.Владелец.ТипНоменклатуры;
			
			Если (ТипВладелец = Перечисления.ТипыНоменклатуры.Операция
				ИЛИ ТипВладелец = Перечисления.ТипыНоменклатуры.ВидРабот
				ИЛИ ТипВладелец = Перечисления.ТипыНоменклатуры.Услуга
				ИЛИ (НЕ Константы.ФункциональнаяОпцияИспользоватьПодсистемуПроизводство.Получить() И ТипВладелец = Перечисления.ТипыНоменклатуры.Запас)
				ИЛИ (НЕ Константы.ФункциональнаяОпцияИспользоватьПодсистемуРаботы.Получить() И ТипВладелец = Перечисления.ТипыНоменклатуры.Работа)) Тогда
			
				Сообщение = Новый СообщениеПользователю();
				ТекстНадписи = НСтр("ru = 'Для номенклатуры типа %ТПНоменклатура% спецификация не указывается!'");
				ТекстНадписи = СтрЗаменить(ТекстНадписи, "%ТПНоменклатура%", ТипВладелец);
				Сообщение.Текст = ТекстНадписи;
				Сообщение.Сообщить();
				Отказ = Истина;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	// Калькуляция
	Если Параметры.Свойство("Отбор") И Параметры.Отбор.Свойство("ЗаказПокупателя") Тогда
		
		ЗаказПокупателя = Параметры.Отбор.ЗаказПокупателя;
		
		Если ЗначениеЗаполнено(ЗаказПокупателя) И ТипЗнч(ЗаказПокупателя)=Тип("ДокументСсылка.ЗаказПокупателя") Тогда
			
			МассивЗначений = Новый Массив;
			МассивЗначений.Добавить(ЗаказПокупателя);
			МассивЗначений.Добавить(Документы.ЗаказПокупателя.ПустаяСсылка());
			Параметры.Отбор.ЗаказПокупателя = Новый ФиксированныйМассив(МассивЗначений);
			
		КонецЕсли;
		
	ИначеЕсли Параметры.Свойство("Отбор") Тогда 
		
		Параметры.Отбор.Вставить("ЗаказПокупателя", Документы.ЗаказПокупателя.ПустаяСсылка());
		
	КонецЕсли; 
	// Конец Калькуляция	
	
	Если Параметры.Свойство("Отбор") И Параметры.Отбор.Свойство("ХарактеристикаПродукции") Тогда
		
		ХарактеристикаПродукции = Параметры.Отбор.ХарактеристикаПродукции;
		
		Если ЗначениеЗаполнено(ХарактеристикаПродукции) Тогда
			
			МассивЗначений = Новый Массив;
			МассивЗначений.Добавить(ХарактеристикаПродукции);
			МассивЗначений.Добавить(Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
			Параметры.Отбор.ХарактеристикаПродукции = Новый ФиксированныйМассив(МассивЗначений);
			
		КонецЕсли; 
		
	КонецЕсли;
	
	УстановитьОтборНедействительная(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "СпецификацияЗаписана" Тогда
		
		СтрокаСписка = Элементы.Список.ТекущиеДанные;
		Если СтрокаСписка<>Неопределено И Параметр.Ссылка=СтрокаСписка.Ссылка Тогда
			ОтразитьВозможностьУстановкиСпецификацииКакОсновной(Параметр.Недействителен);
		КонецЕсли; 
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	ОтразитьВозможностьУстановкиСпецификацииКакОсновной();
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИспользоватьКакОсновную(Команда)
	
	СтрокаСписка = Элементы.Список.ТекущиеДанные;
	Если СтрокаСписка=Неопределено Тогда
		Возврат;
	КонецЕсли; 
	ИспользоватьКакОсновнуюСервер(СтрокаСписка.Владелец, СтрокаСписка.ХарактеристикаПродукции, СтрокаСписка.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ИспользоватьКакОсновнуюСервер(Номенклатура, Характеристика, Спецификация)
	
	Справочники.Спецификации.ИзменитьПризнакОсновнаяСпецификация(Номенклатура, Характеристика, Спецификация); 
	
	Элементы.Список.Обновить();
	Элементы.Список.ТекущаяСтрока = Спецификация;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьНедействительную(Команда)
	
	Элементы.ФормаПоказыватьНедействительную.Пометка = Не Элементы.ФормаПоказыватьНедействительную.Пометка;
	
	УстановитьОтборНедействительная(ЭтотОбъект)
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	НовоеУсловноеОформление = Список.УсловноеОформление.Элементы.Добавить();
	РаботаСФормой.ДобавитьЭлементОтбораКомпоновкиДанных(НовоеУсловноеОформление.Отбор, "Недействителен", Истина, ВидСравненияКомпоновкиДанных.Равно);
	РаботаСФормой.ДобавитьЭлементУсловногоОформления(НовоеУсловноеОформление, "ЦветТекста", ЦветаСтиля.ЦветНедоступногоТекстаТабличнойЧасти); 

КонецПроцедуры

&НаКлиенте
Процедура ОтразитьВозможностьУстановкиСпецификацииКакОсновной(Недействителен = Неопределено)
	
	Если Недействителен=Неопределено Тогда
		СтрокаСписка = Элементы.Список.ТекущиеДанные;
		Если СтрокаСписка=Неопределено Тогда
			Недействителен = Ложь;
		Иначе
			Недействителен = СтрокаСписка.Недействителен;
		КонецЕсли; 
	КонецЕсли; 
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормаИспользоватьКакОсновную", "Доступность", НЕ Недействителен);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборНедействительная(Форма)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Форма.Список,
		"Недействителен",
		Ложь,
		,
		,
		Не Форма.Элементы.ФормаПоказыватьНедействительную.Пометка);
	
КонецПроцедуры

#КонецОбласти
 
