
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстновитьВидимостьФормы();
КонецПроцедуры

&НаКлиенте
Процедура УстновитьВидимостьФормы()
	Элементы.ГруппаАдрес.Доступность = НЕ Объект.ИзКЛАДР;
	Элементы.ПолныйАдрес.Доступность = Объект.ИзКЛАДР;
КонецПроцедуры


&НаКлиенте
Процедура ИзКЛАДРПриИзменении(Элемент)
	УстновитьВидимостьФормы();
КонецПроцедуры


&НаКлиенте
Процедура ПолныйАдресНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ПредставлениеАдресаНачалоВыбора(ЭтотОбъект, Элемент, ДанныеВыбора, СтандартнаяОбработка,
		"ПолныйАдрес", НСтр("ru = 'Адрес ПВЗ'"));
КонецПроцедуры

&НаКлиенте
Процедура ПолныйАдресОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ПредставлениеАдресаОбработкаВыбора(ЭтотОбъект, Элемент, ВыбранноеЗначение, СтандартнаяОбработка, "ПолныйАдрес");
	ЗначениеРеквизитовПоКонтактнойИнформацииАдресРФ(ПолныйАдресXML);
	//ЗаполнитьШиротуИДолготуПоАдресу("ПолныйАдрес");
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеАдресаНачалоВыбора(Форма, Элемент, ДанныеВыбора, СтандартнаяОбработка, ИмяРеквизита, ЗаголовокФормы)
	
	Если Не ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		Возврат;
	КонецЕсли;
	
	МодульУправлениеКонтактнойИнформациейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль(
	"УправлениеКонтактнойИнформациейКлиент");
	
	ИмяТипаКонтактнойИнформации = "Перечисление" + ".ТипыКонтактнойИнформации.Адрес";
	
	ВидКонтактнойИнформации = Новый Структура;
	ВидКонтактнойИнформации.Вставить("Тип", ПредопределенноеЗначение(ИмяТипаКонтактнойИнформации));
	ВидКонтактнойИнформации.Вставить("АдресТолькоРоссийский",        Истина);
	ВидКонтактнойИнформации.Вставить("ВключатьСтрануВПредставление", Ложь);
	ВидКонтактнойИнформации.Вставить("СкрыватьНеактуальныеАдреса",   Ложь);
	
	ПараметрыФормы = МодульУправлениеКонтактнойИнформациейКлиент.ПараметрыФормыКонтактнойИнформации(
	ВидКонтактнойИнформации, Форма[ИмяРеквизита + "XML"], Объект[ИмяРеквизита]);
	
	ПараметрыФормы.Вставить("Заголовок", ЗаголовокФормы);
	ПараметрыФормы.Вставить("Страна", ПредопределенноеЗначение("Справочник.СтраныМира.Россия"));
	
	МодульУправлениеКонтактнойИнформациейКлиент.ОткрытьФормуКонтактнойИнформации(ПараметрыФормы, Элемент);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьАдрес(ИмяРеквизита)
	
	Если Не ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		Возврат;
	КонецЕсли;
	
	МодульУправлениеКонтактнойИнформацией = ОбщегоНазначения.ОбщийМодуль("УправлениеКонтактнойИнформацией");
	
	Сообщение = "";
	Попытка
		ПодробныйИтог = МодульУправлениеКонтактнойИнформацией.ПроверитьАдрес(ЭтотОбъект[ИмяРеквизита + "XML"]);
		
		Если ПодробныйИтог.Результат <> "Корректный" Тогда
			Для каждого ЭлементСписка Из ПодробныйИтог.СписокОшибок Цикл
				Сообщение = Сообщение + Символы.ПС + ЭлементСписка.Представление;
			КонецЦикла;
			Сообщение = СокрЛП(Сообщение);
			Если Не ЗначениеЗаполнено(Сообщение) Тогда
				Сообщение = НСтр("ru = 'Адрес не заполнен'");
			КонецЕсли;
		КонецЕсли;
	Исключение
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		Сообщение = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке);
	КонецПопытки;
	
	Если ЗначениеЗаполнено(Сообщение) Тогда
		Элементы[ИмяРеквизита + "Предупреждение"].Подсказка = Сообщение;
		Элементы[ИмяРеквизита + "Предупреждение"].Видимость = Истина;
	Иначе
		//Элементы[ИмяРеквизита + "Предупреждение"].Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ПредставлениеАдресаОбработкаВыбора(Форма, Элемент, ВыбранноеЗначение, СтандартнаяОбработка, ИмяРеквизита)
	
	СтандартнаяОбработка = Ложь;
	Если ТипЗнч(ВыбранноеЗначение) <> Тип("Структура") Тогда
		// Данные не изменены.
		Возврат;
	КонецЕсли;
	
	Форма[ИмяРеквизита + "XML"] = ВыбранноеЗначение.КонтактнаяИнформация;
	Объект[ИмяРеквизита] = ВыбранноеЗначение.Представление;
	
	ПроверитьАдрес(ИмяРеквизита);
	
КонецПроцедуры



&НаСервере
Процедура ЗначениеРеквизитовПоКонтактнойИнформацииАдресРФ(ES_АдресДоставкиXML)
	
	ТипКонтактнойИнформации = Перечисления.ТипыКонтактнойИнформации.Адрес;
	мОбъект = РеквизитФормыВЗначение("Объект");
	мОбъект.Страна 	= Справочники.СтраныМира.Россия;
	мОбъект.Область = "";
	мОбъект.Город 	= "";
	мОбъект.Улица 	= "";
	мОбъект.Дом     = "";
	мОбъект.Индекс  = "";
	мОбъект.Строение= "";
	мОбъект.Корпус  = "";
	мОбъект.Квартира= "";
	

	Если УправлениеКонтактнойИнформациейКлиентСервер.ЭтоКонтактнаяИнформацияВXML(ES_АдресДоставкиXML) Тогда
		ДанныеАдреса = УправлениеКонтактнойИнформациейСлужебный.КонтактнаяИнформацияИзXML(ES_АдресДоставкиXML, ТипКонтактнойИнформации, "");
		мОбъект.Страна = Справочники.СтраныМира.Россия;
		мГород = ?(ЗначениеЗаполнено(ДанныеАдреса.Состав.Состав.Город),ДанныеАдреса.Состав.Состав.Город,ДанныеАдреса.Состав.Состав.СубъектРФ);
		//мОбъект.ES_АдресДоставкиГород = ДанныеАдреса.Состав.Состав.СубъектРФ;
		мОбъект.Город = СтрЗаменить(мГород," г","");
		мОбласть = ?(ЗначениеЗаполнено(ДанныеАдреса.Состав.Состав.Город),ДанныеАдреса.Состав.Состав.СубъектРФ,"");
		мОбъект.Область = СтрЗаменить(мОбласть," обл","");
		мОбъект.Улица = ДанныеАдреса.Состав.Состав.Улица;
		мОбъект.Улица = СтрЗаменить(мОбъект.Улица," ул","");
		
		//ДанныеАдреса = 
		
		// Индекс просто ставим
		мОбъект.Индекс = Формат(УправлениеКонтактнойИнформациейСлужебный.ПочтовыйИндексАдреса(ДанныеАдреса), "ЧГ=");
		
		//СформироватьДетальныйНаселенныйПункт(Контекст, ДанныеАдреса);
		
		// Дом, строение, помещение
		ЗданияИПомещения = УправлениеКонтактнойИнформациейСлужебный.ЗданияИПомещенияАдреса(ДанныеАдреса);
		
		// Первые два здания выделяем отдельно, остальное в списке.
		ТаблицаДанных = ЗданияИПомещения.Здания;
		
		// Вид = 1 - признак дома, владения. Вид = 2, доп строение.
		СтрокаДома = ТаблицаДанных.Найти(1, "Вид");
		Если СтрокаДома <> Неопределено Тогда
			//мОбъект.ТипДома = СтрокаДома.Тип;
			мОбъект.Дом     = СтрокаДома.Значение;
			//ТаблицаДанных.Удалить(СтрокаДома);
		Иначе
			мОбъект.Дом     = "";
		КонецЕсли;
		
		СтрокаДома = ТаблицаДанных.Найти(2, "Вид");
		Если СтрокаДома <> Неопределено Тогда
			//мОбъект.ТипСтроения = СтрокаДома.Тип;
			мОбъект.Строение    = СтрокаДома.Значение;
			//ТаблицаДанных.Удалить(СтрокаДома);
		Иначе
			мОбъект.Строение    = "";
		КонецЕсли;
				
		// Первое помещение указываем отдельно, остальные в списке.
		ТаблицаДанных = ЗданияИПомещения.Помещения;
		Для каждого СТ_ТаблицаДанных ИЗ ТаблицаДанных Цикл 
			Если СТ_ТаблицаДанных.Тип = "Квартира" Тогда
				мОбъект.Квартира    = ТаблицаДанных[0].Значение;
			ИначеЕсли СТ_ТаблицаДанных.Тип = "Корпус" Тогда
				мОбъект.Корпус    = ТаблицаДанных[0].Значение;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	ЗначениеВРеквизитФормы(мОбъект,"Объект");
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьАдрес()
	//ЕФСОЛ Савченко К.Р. 15.09.2017 +
	
	мАдрес = "";
	мАдрес = мАдрес + ?(ЗначениеЗаполнено(СокрЛП(Объект.Индекс)),СокрЛП(Объект.Индекс),"");
	мАдрес = мАдрес + ?(ЗначениеЗаполнено(СокрЛП(Объект.Область)),", "+СокрЛП(Объект.Область)+" обл","");
	мАдрес = мАдрес + ?(ЗначениеЗаполнено(СокрЛП(Объект.Город)),", "+СокрЛП(Объект.Город)+" г","");
	мАдрес = мАдрес + ?(ЗначениеЗаполнено(СокрЛП(Объект.Улица)),", "+СокрЛП(Объект.Улица)+" ул","");
	мАдрес = мАдрес + ?(ЗначениеЗаполнено(СокрЛП(Объект.Дом)),", дом № "+СокрЛП(Объект.Дом),"");
	мАдрес = мАдрес + ?(ЗначениеЗаполнено(СокрЛП(Объект.Строение)),", строение "+СокрЛП(Объект.Строение),"");
	мАдрес = мАдрес + ?(ЗначениеЗаполнено(СокрЛП(Объект.Корпус)),", корпус "+СокрЛП(Объект.Корпус),"");
	мАдрес = мАдрес + ?(ЗначениеЗаполнено(СокрЛП(Объект.Квартира)),", квартира "+СокрЛП(Объект.Квартира),"");
	
	Объект.ПолныйАдрес = мАдрес;
	ПолныйАдресXML = "";
	//ЗаполнитьШиротуИДолготуПоАдресу("ПолныйАдрес");
	//ЕФСОЛ Савченко К.Р. 15.09.2017 -
КонецПроцедуры

&НаКлиенте
Процедура ГородПриИзменении(Элемент)
	ЗаполнитьАдрес();
КонецПроцедуры
