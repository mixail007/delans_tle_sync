
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ЗначениеЗаполнено(Контрагент) Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ХозяйствующиеСубъектыВЕТИС.Ссылка КАК Ссылка,
		|	ХозяйствующиеСубъектыВЕТИС.Наименование  КАК Наименование,
		|	ХозяйствующиеСубъектыВЕТИС.Идентификатор КАК Идентификатор
		|ИЗ
		|	Справочник.ХозяйствующиеСубъектыВЕТИС КАК ХозяйствующиеСубъектыВЕТИС
		|ГДЕ
		|	ХозяйствующиеСубъектыВЕТИС.Контрагент = &Контрагент
		|	И ХозяйствующиеСубъектыВЕТИС.Ссылка <> &ТекущийХозяйствующийСубъект";
		
		Запрос.УстановитьПараметр("Контрагент", Контрагент);
		Запрос.УстановитьПараметр("ТекущийХозяйствующийСубъект", Ссылка);
		
		УстановитьПривилегированныйРежим(Истина);
		Выборка = Запрос.Выполнить().Выбрать();
		УстановитьПривилегированныйРежим(Ложь);
		
		Если Выборка.Следующий() Тогда
			
			Если СоответствуетОрганизации Тогда
				ТекстСообщения = СтрШаблон(НСтр("ru='Данная организация уже сопоставлена другому хозяйствующему субъекту с идентификатором %1.'"),
				                           Выборка.Идентификатор);
			Иначе
				ТекстСообщения = СтрШаблон(НСтр("ru='Данный контрагент уже сопоставлен другому хозяйствующему субъекту (%1).'"),
				                           Выборка.Наименование);
			КонецЕсли;
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения ,
			                                                  ЭтотОбъект,
			                                                  "Контрагент",
			                                                  ,
			                                                  Отказ);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Предприятия.Количество() > 1 Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	УказанныеПредприятия.ТорговыйОбъект КАК ТорговыйОбъект,
		|	УказанныеПредприятия.ПроизводственныйОбъект КАК ПроизводственныйОбъект,
		|	УказанныеПредприятия.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ УказанныеПредприятия
		|ИЗ
		|	&УказанныеПредприятия КАК УказанныеПредприятия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	УказанныеПредприятия.ТорговыйОбъект КАК ТорговыйОбъект,
		|	СУММА(1) КАК Количество
		|ПОМЕСТИТЬ ТорговыеОбъекты
		|ИЗ
		|	УказанныеПредприятия КАК УказанныеПредприятия
		|
		|СГРУППИРОВАТЬ ПО
		|	УказанныеПредприятия.ТорговыйОбъект
		|
		|ИМЕЮЩИЕ
		|	СУММА(1) > 1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	УказанныеПредприятия.ПроизводственныйОбъект КАК ПроизводственныйОбъект,
		|	СУММА(1) КАК Количество
		|ПОМЕСТИТЬ ПроизводственныеОбъекты
		|ИЗ
		|	УказанныеПредприятия КАК УказанныеПредприятия
		|
		|СГРУППИРОВАТЬ ПО
		|	УказанныеПредприятия.ПроизводственныйОбъект
		|
		|ИМЕЮЩИЕ
		|	СУММА(1) > 1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТорговыеОбъекты.ТорговыйОбъект КАК Объект,
		|	МИНИМУМ(УказанныеПредприятия.НомерСтроки) КАК НомерСтроки,
		|	ТорговыеОбъекты.Количество КАК Количество,
		|	ИСТИНА КАК ЭтоТорговыйОбъект
		|ИЗ
		|	ТорговыеОбъекты КАК ТорговыеОбъекты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ УказанныеПредприятия КАК УказанныеПредприятия
		|		ПО ТорговыеОбъекты.ТорговыйОбъект = УказанныеПредприятия.ТорговыйОбъект
		|
		|СГРУППИРОВАТЬ ПО
		|	ТорговыеОбъекты.ТорговыйОбъект,
		|	ТорговыеОбъекты.Количество
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПроизводственныеОбъекты.ПроизводственныйОбъект,
		|	МИНИМУМ(УказанныеПредприятия.НомерСтроки),
		|	ПроизводственныеОбъекты.Количество,
		|	ЛОЖЬ
		|ИЗ
		|	ПроизводственныеОбъекты КАК ПроизводственныеОбъекты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ УказанныеПредприятия КАК УказанныеПредприятия
		|		ПО ПроизводственныеОбъекты.ПроизводственныйОбъект = УказанныеПредприятия.ПроизводственныйОбъект
		|
		|СГРУППИРОВАТЬ ПО
		|	ПроизводственныеОбъекты.ПроизводственныйОбъект,
		|	ПроизводственныеОбъекты.Количество";
		
		Запрос.УстановитьПараметр("УказанныеПредприятия", Предприятия.Выгрузить());
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			Если Не ЗначениеЗаполнено(Выборка.Объект) Тогда
				Продолжить;
			КонецЕсли;
			
			Если Выборка.ЭтоТорговыйОбъект Тогда
				
				ТекстСообщения = СтрШаблон(НСтр("ru = 'Торговый объект %1 сопоставлен более чем одному предприятию.'"), Выборка.Объект);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,
				                                                  ЭтотОбъект,
				                                                  ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Предприятия", Выборка.НомерСтроки, "ТорговыйОбъект")
				                                                  ,,Отказ);
				
			Иначе
				
				ТекстСообщения = СтрШаблон(НСтр("ru = 'Производственный объект %1 сопоставлен более чем одному предприятию.'"), Выборка.Объект);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, 
				                                                  ЭтотОбъект,
				                                                  ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Предприятия", Выборка.НомерСтроки, "ПроизводственныйОбъект")
				                                                  ,,Отказ);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ИнтеграцияВЕТИС.УстановитьПометкуУдаленияПрисоединенныхФайловХозяйствующегоСубъекта(ЭтотОбъект, Отказ);
	
	КоличествоПредприятий = Предприятия.Количество();
	ЕстьНесопоставленные  = Ложь;
	
	Для Каждого СтрокаПредприятия Из Предприятия Цикл
		
		СтрокаСопоставлена = ЗначениеЗаполнено(СтрокаПредприятия.ТорговыйОбъект);
		
		Если СоответствуетОрганизации Тогда
			СтрокаСопоставлена = СтрокаСопоставлена Или ЗначениеЗаполнено(СтрокаПредприятия.ПроизводственныйОбъект);
		Иначе
			СтрокаПредприятия.ПроизводственныйОбъект = Неопределено;
		КонецЕсли;
		
		ЕстьНесопоставленные = ЕстьНесопоставленные Или НЕ СтрокаСопоставлена;
		
	КонецЦикла;
	
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ДополнительныеСвойства.ЭтоНовый Тогда
		РегистрыСведений.ПредприятияЗонОтветственностиВЕТИС.УдалитьПредприятияХозяйствующегоСубъектаИзЗонОтветственности(Ссылка,, Отказ);
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		РегистрыСведений.ПредприятияЗонОтветственностиВЕТИС.ДобавитьПредприятияВЗоныОтветственностиПоНаследованиюАдреса(Ссылка,, Отказ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции


#КонецОбласти

#КонецЕсли