
&НаКлиенте
Процедура АдресКЛАДРПриИзменении(Элемент)
	
	//Если НЕ ЗначениеЗаполнено(Объект.АдресКЛАДР) Тогда
	//	Объект.Долгота = "";
	//	Объект.Широта = "";
	//	Возврат;
	//КонецЕсли;
	//ЗаполнитьШиротуИДолготуПоАдресу("АдресКЛАДР");
	//
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьШиротуИДолготуПоАдресу(ПолеАдреса)
	
	Если ES_YandexMaps.ПроверкаИнтернет() Тогда
		
		СтруктураГеокодирования = ES_YandexMaps.ГеокодированияПолучитьКоординаты(Объект[ПолеАдреса]);
		
		Если ПолеАдреса = "АдресКЛАДР" Тогда
			Объект.Долгота 	= СтруктураГеокодирования.Долгота;
			Объект.Широта 	= СтруктураГеокодирования.Широта;
			//ДанныеПоМетро = ПолучитьДанныеПоМетро(СтруктураГеокодирования);
		КонецЕсли; 
			
	КонецЕсли;
		
КонецПроцедуры
	
&НаКлиенте
Процедура ПредставлениеАдресаНачалоВыбора(Форма, Элемент, ДанныеВыбора, СтандартнаяОбработка, ИмяРеквизита, ЗаголовокФормы)
	
	Если Не ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		Возврат;
	КонецЕсли;
	
	МодульУправлениеКонтактнойИнформациейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль(
		"УправлениеКонтактнойИнформациейКлиент");
	
	ИмяТипаКонтактнойИнформации = "Перечисление" + ".ТипыКонтактнойИнформации.Адрес";
	
	ВидКонтактнойИнформации = Новый Структура;
	ВидКонтактнойИнформации.Вставить("Тип", ПредопределенноеЗначение(ИмяТипаКонтактнойИнформации));
	ВидКонтактнойИнформации.Вставить("АдресТолькоРоссийский",        Ложь);
	ВидКонтактнойИнформации.Вставить("ВключатьСтрануВПредставление", Ложь);
	ВидКонтактнойИнформации.Вставить("СкрыватьНеактуальныеАдреса",   Ложь);
	
	ПараметрыФормы = МодульУправлениеКонтактнойИнформациейКлиент.ПараметрыФормыКонтактнойИнформации(
		ВидКонтактнойИнформации, Форма[ИмяРеквизита + "XML"], Объект[ИмяРеквизита]);
	
	ПараметрыФормы.Вставить("Заголовок", ЗаголовокФормы);
	ПараметрыФормы.Вставить("Страна", ПредопределенноеЗначение("Справочник.СтраныМира.Россия"));
	
	МодульУправлениеКонтактнойИнформациейКлиент.ОткрытьФормуКонтактнойИнформации(ПараметрыФормы, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура АдресКЛАДРНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ПредставлениеАдресаНачалоВыбора(ЭтотОбъект, Элемент, ДанныеВыбора, СтандартнаяОбработка,
	"АдресКЛАДР", НСтр("ru = 'Адрес КЛАДР'"));
КонецПроцедуры


&НаКлиенте
Процедура АдресКЛАДРОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ПредставлениеАдресаОбработкаВыбора(ЭтотОбъект, Элемент, ВыбранноеЗначение, СтандартнаяОбработка, "АдресКЛАДР");
	//ЗаполнитьШиротуИДолготуПоАдресу("АдресКЛАДР");
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеАдресаОбработкаВыбора(Форма, Элемент, ВыбранноеЗначение, СтандартнаяОбработка, ИмяРеквизита)
	
	СтандартнаяОбработка = Ложь;
	Если ТипЗнч(ВыбранноеЗначение) <> Тип("Структура") Тогда
		// Данные не изменены.
		Возврат;
	КонецЕсли;
	
	Форма[ИмяРеквизита + "XML"] = ВыбранноеЗначение.КонтактнаяИнформация;
	Объект[ИмяРеквизита] = ВыбранноеЗначение.Представление;
	
	//ПроверитьАдрес(ИмяРеквизита);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьАдрес(ИмяРеквизита)
	
	Если Не ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		Возврат;
	КонецЕсли;
	
	МодульУправлениеКонтактнойИнформацией = ОбщегоНазначения.ОбщийМодуль("УправлениеКонтактнойИнформацией");
	
	Сообщение = "";
	Попытка
		ПодробныйИтог = МодульУправлениеКонтактнойИнформацией.ПроверитьАдрес(ЭтотОбъект[ИмяРеквизита + "XML"]);
		
		Если ПодробныйИтог.Результат <> "Корректный" Тогда
			Для каждого ЭлементСписка Из ПодробныйИтог.СписокОшибок Цикл
				Сообщение = Сообщение + Символы.ПС + ЭлементСписка.Представление;
			КонецЦикла;
			Сообщение = СокрЛП(Сообщение);
			Если Не ЗначениеЗаполнено(Сообщение) Тогда
				Сообщение = НСтр("ru = 'Адрес не заполнен'");
			КонецЕсли;
		КонецЕсли;
	Исключение
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		Сообщение = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке);
	КонецПопытки;
	
	Если ЗначениеЗаполнено(Сообщение) Тогда
		Элементы[ИмяРеквизита + "Предупреждение"].Подсказка = Сообщение;
		Элементы[ИмяРеквизита + "Предупреждение"].Видимость = Истина;
	Иначе
		Элементы[ИмяРеквизита + "Предупреждение"].Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКоординаты(Команда)
	ЗаполнитьШиротуИДолготуПоАдресу("АдресКЛАДР");
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//ЭР Несторук С.И. 10.04.2019 9:32:27 {
	 ES_БиллингКлиент.ПроверитьДоступностьСервисаDelans(Отказ);
	//}ЭР Несторук С.И.
КонецПроцедуры


