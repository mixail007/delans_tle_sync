#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриКопировании(ОбъектКопирования)
	
	// Биллинг
	ДоговорОбслуживанияНаправлениеДеятельности = Неопределено;
	
	Если НЕ УправлениеНебольшойФирмойУправлениеДоступомПовтИсп.ЕстьПравоДоступа(
		"Чтение",
		ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Метаданные.Справочники.СтатьиДвиженияДенежныхСредств))
	Тогда
		СтатьяДДСПоУмолчанию = Неопределено;
	КонецЕсли;
	
	ЧисловойНомер = 0;
	НомерДоговора = "";
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Контрагенты") Тогда
		// Программное заполнение по методу Заполнить()
		
		СтандартнаяОбработка = Ложь;
		ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Покупатель,Поставщик,ПрочиеОтношения");
		
		ОрганизацияПоУмолчанию = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(Пользователи.АвторизованныйПользователь(), "ОсновнаяОрганизация");
		Если Не ЗначениеЗаполнено(ОрганизацияПоУмолчанию) Тогда
			ОрганизацияПоУмолчанию = Справочники.Организации.ОрганизацияПоУмолчанию();
		КонецЕсли;
		
		Наименование		= "Основной договор";
		
		Если НЕ ДанныеЗаполнения.ВалютаРасчетовПоУмолчанию.Пустая() И ДанныеЗаполнения.ВестиРасчетыПоДоговорам Тогда
			ВалютаРасчетов		= ДанныеЗаполнения.ВалютаРасчетовПоУмолчанию;
			РасчетыВУсловныхЕдиницах = ДанныеЗаполнения.РасчетыВУсловныхЕдиницахПоУмолчанию;
		Иначе
			ВалютаРасчетов		= Константы.НациональнаяВалюта.Получить();
		КонецЕсли;
		
		Организация			= ОрганизацияПоУмолчанию;
		ВидЦен				= Справочники.ВидыЦен.ПолучитьОсновнойВидЦенПродажи();
		Владелец			= ДанныеЗаполнения;
		СрокОплатыПоставщику = Константы.СрокОплатыПоставщику.Получить();
		СрокОплатыПокупателя = Константы.СрокОплатыПокупателя.Получить();
		ВидДоговора			= Перечисления.ВидыДоговоров.СПокупателем;
		Если ЗначенияРеквизитов.Поставщик И Не ЗначенияРеквизитов.Покупатель Тогда
			ВидДоговора		= Перечисления.ВидыДоговоров.СПоставщиком;
		ИначеЕсли ЗначенияРеквизитов.ПрочиеОтношения И Не ЗначенияРеквизитов.Покупатель И Не ЗначенияРеквизитов.Поставщик Тогда
			ВидДоговора		= Перечисления.ВидыДоговоров.Прочее;
		КонецЕсли;
		
		СпособРазнесенияОплатыПоУмолчанию = ДанныеЗаполнения.СпособРазнесенияОплатыПоУмолчанию;
		СпособЗачетаПредоплатыПоУмолчанию = ДанныеЗаполнения.СпособЗачетаПредоплатыПоУмолчанию;
		
		// Заполним вид цен котрагента
		Если ПолучитьФункциональнуюОпцию("УчетЦенКонтрагентов") И ДанныеЗаполнения.Поставщик Тогда
			
			УстановитьПривилегированныйРежим(Истина);
			
			НовыйВидЦенКонтрагентов = Справочники.ВидыЦенКонтрагентов.ВидЦенКонтрагентаПоУмолчанию(ДанныеЗаполнения);
			Если НЕ ЗначениеЗаполнено(НовыйВидЦенКонтрагентов) Тогда 
				
				НовыйВидЦенКонтрагентов = Справочники.ВидыЦенКонтрагентов.НайтиЛюбойПервыйВидЦенКонтрагента(ДанныеЗаполнения);
				
				Если НЕ ЗначениеЗаполнено(НовыйВидЦенКонтрагентов) Тогда
					
					НовыйВидЦенКонтрагентов = Справочники.ВидыЦенКонтрагентов.СоздатьВидЦенКонтрагента(ДанныеЗаполнения, ВалютаРасчетов);
					
				КонецЕсли;
				
			КонецЕсли;
			
			УстановитьПривилегированныйРежим(Ложь);
			
			ВидЦенКонтрагента = НовыйВидЦенКонтрагентов;
			
		КонецЕсли;
		
		//EFSOL_Шаповал Олег Анатольевич 3 октября 2017 г. 15:58:11 +
		ES_РасчетТарифовОтМаксимальногоВеса = Истина;
		//EFSOL Шаповал О.А. -
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		
		Если ДанныеЗаполнения.Свойство("ОрганизацияВЭквайринговомТерминале") Тогда
			Если ЗначениеЗаполнено(ДанныеЗаполнения.ОрганизацияВЭквайринговомТерминале) Тогда
				Организация = ДанныеЗаполнения.ОрганизацияВЭквайринговомТерминале;
			КонецЕсли;
			ВидДоговора = Перечисления.ВидыДоговоров.Прочее;
		ИначеЕсли ДанныеЗаполнения.Свойство("Организация") Тогда
			Если ЗначениеЗаполнено(ДанныеЗаполнения.Организация) Тогда
				Организация = ДанныеЗаполнения.Организация;
			КонецЕсли;
		КонецЕсли;
		
		Если ДанныеЗаполнения.Свойство("Владелец") Тогда
		
			Если ДанныеЗаполнения.Владелец.ВестиРасчетыПоДоговорам И НЕ ДанныеЗаполнения.Владелец.ВалютаРасчетовПоУмолчанию.Пустая() Тогда
				ВалютаРасчетов		= ДанныеЗаполнения.Владелец.ВалютаРасчетовПоУмолчанию;
				РасчетыВУсловныхЕдиницах = ДанныеЗаполнения.Владелец.РасчетыВУсловныхЕдиницахПоУмолчанию;
			КонецЕсли;
			
			СпособРазнесенияОплатыПоУмолчанию = ДанныеЗаполнения.Владелец.СпособРазнесенияОплатыПоУмолчанию;
			СпособЗачетаПредоплатыПоУмолчанию = ДанныеЗаполнения.Владелец.СпособЗачетаПредоплатыПоУмолчанию;
			
		КонецЕсли;
		
	КонецЕсли;
	
	
	// Автонумерация
	СтруктураНумерация = Нумерация.АктуальнаяНастройкаНумерации(ЭтотОбъект);
	
	Если СтруктураНумерация <> Неопределено 
		И Не СтруктураНумерация.РучнаяНумерация Тогда
		ПараметрыФормирования = Новый Структура;
		ПараметрыФормирования.Вставить("НастройкиНумерации", СтруктураНумерация.Ссылка);
		ПараметрыФормирования.Вставить("Контрагент", Владелец);
		ПараметрыФормирования.Вставить("ДатаДоговора", ?(ЗначениеЗаполнено(ДатаДоговора), ДатаДоговора, ТекущаяДатаСеанса()));
		
		Нумерация.СформироватьЧисловойНомерДокумента(ПараметрыФормирования, ЧисловойНомер);
		
		ПараметрыФормирования.Вставить("ЧисловойНомер", ЧисловойНомер);
		
		ОписанияОшибок = Новый СписокЗначений;
		Нумерация.СформироватьСтроковыйНомерДокумента(ПараметрыФормирования, НомерДоговора, ОписанияОшибок);
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// Вид цен.
	Если ЗначениеЗаполнено(ВидСкидкиНаценки) Тогда
		ПроверяемыеРеквизиты.Добавить("ВидЦен");
	КонецЕсли;
	
	// Биллинг
	Если ЭтоДоговорОбслуживания Тогда
		ПроверяемыеРеквизиты.Добавить("ВидЦен");
		ПроверяемыеРеквизиты.Добавить("ДоговорОбслуживанияДатаНачала");
		ПроверяемыеРеквизиты.Добавить("ДоговорОбслуживанияТарифныйПлан");
		ПроверяемыеРеквизиты.Добавить("ДоговорОбслуживанияПериодичность");
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ПометкаУдаления Тогда
		
		ЗначенияРеквизитовКонтрагента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Владелец, "ПометкаУдаления");
		
		РегистрыСведений.ОсновныеДоговорыКонтрагента.ОчиститьЗаписиСДоговором(Ссылка);
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДоговорыКонтрагентов.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Ссылка <> &Ссылка
	|	И ДоговорыКонтрагентов.Владелец = &Владелец
	|	И НЕ ДоговорыКонтрагентов.Владелец.ВестиРасчетыПоДоговорам");
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Владелец", Владелец);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ТекстСообщения = НСтр("ru = 'Для контрагента не ведется учет по договорам.'");
		УправлениеНебольшойФирмойСервер.СообщитьОбОшибке(
			ЭтотОбъект,
			ТекстСообщения,
			,
			,
			,
			Отказ
		);
	КонецЕсли;
	
	// Биллинг
	Если ЭтоДоговорОбслуживания И ЭтоНовый()
		ИЛИ ЭтоДоговорОбслуживания И НЕ ЭтоНовый() И НЕ Ссылка.ЭтоДоговорОбслуживания Тогда
		
		ИспользоватьНаправленияДеятельности = Константы.БиллингВестиУчетРасходовПоДоговорамОбслуживания.Получить();
		Если ИспользоватьНаправленияДеятельности Тогда
			ДоговорОбслуживанияНаправлениеДеятельности = 
				Справочники.ДоговорыКонтрагентов.СоздатьНаправлениеДеятельностиДляДоговораОбслуживания(Владелец, Наименование);
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Ссылка) Тогда
		ДополнительныеСвойства.Вставить("ПометкаУдаления", Ссылка.ПометкаУдаления);
	КонецЕсли;
	
	//EFSOL_Шаповал Олег Анатольевич 3 октября 2017 г. 10:40:09 +
	Если НЕ ES_УчетПриРасчетеЦенТК И НЕ Ссылка.Пустая() Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ES_УстановкаЦенДоставки.Ссылка
		|ИЗ
		|	Документ.ES_УстановкаЦенДоставки КАК ES_УстановкаЦенДоставки
		|ГДЕ
		|	ES_УстановкаЦенДоставки.Договор = &Договор
		|	И ES_УстановкаЦенДоставки.Проведен";
		Запрос.УстановитьПараметр("Договор",Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Количество() > 0 Тогда
			Сообщить("Нельзя изменить признак! Существуют связанные документы.");
			Пока Выборка.Следующий() Цикл
				Сообщить(Выборка.Ссылка);
			КонецЦикла;
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
	//EFSOL Шаповал О.А. -
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// Биллинг
	Если ЭтоДоговорОбслуживания Тогда
		Если ЗначениеЗаполнено(ДоговорОбслуживанияНаправлениеДеятельности) Тогда
			// Если договор помечается (снимается пометка) на удаление, так же помечаем и связанное с ним направление деятельности.
			Если ДополнительныеСвойства.Свойство("ПометкаУдаления") Тогда
				Если ДополнительныеСвойства.ПометкаУдаления = Ложь И ПометкаУдаления = Истина
					ИЛИ ДополнительныеСвойства.ПометкаУдаления = Истина И ПометкаУдаления = Ложь Тогда
					
					НаправлениеДеятельностиОбъект = ДоговорОбслуживанияНаправлениеДеятельности.ПолучитьОбъект();
					НаправлениеДеятельностиОбъект.ПометкаУдаления = ПометкаУдаления;
					НаправлениеДеятельностиОбъект.Записать();
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	// Эквайринг
	Если ЭтоДоговорЭквайринга Тогда
		Если КонтрольВзаиморасчетовЭквайринг Тогда
			Если НЕ ПолучитьФункциональнуюОпцию("РазноситьОплатуОтЭквайрераПоЭквайринговымОперациям") Тогда
				УстановитьПривилегированныйРежим(Истина);
				Константы.ФункциональнаяОпцияРазноситьОплатуОтЭквайрераПоЭквайринговымОперациям.Установить(Истина);
				УстановитьПривилегированныйРежим(Ложь);
			КонецЕсли; 
		Иначе
			Если НЕ ЭквайринговыеОперацииСервер.ЕстьДоговорыЭквайрингаСРазнесениемОплат() И ПолучитьФункциональнуюОпцию("РазноситьОплатуОтЭквайрераПоЭквайринговымОперациям") Тогда
				УстановитьПривилегированныйРежим(Истина);
				Константы.ФункциональнаяОпцияРазноситьОплатуОтЭквайрераПоЭквайринговымОперациям.Установить(Ложь);
				УстановитьПривилегированныйРежим(Ложь);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли; 
	// Конец Эквайринг
	
	// Кредит
	Если ЭтоДоговорКредита И ПометкаУдаления Тогда
		Справочники.ЭквайринговыеТерминалы.ПометитьНаУдалениеТерминалыСДоговором(Ссылка);
	КонецЕсли;
	// Конец Кредит
	
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ЧисловойНомер > 0 Тогда
		СтруктураНумерация = Нумерация.АктуальнаяНастройкаНумерации(ЭтотОбъект);
		Если СтруктураНумерация <> Неопределено Тогда
			СтруктураПараметров = НумерацияКлиентСервер.ПолучитьПараметрыНумерации(ЭтотОбъект);
			
			СтруктураПараметров.Вставить("НастройкиНумерации", СтруктураНумерация.Ссылка);
			Нумерация.ОсвободитьНомер(СтруктураПараметров);
		КонецЕсли;
	КонецЕсли;
	РегистрыСведений.ОсновныеДоговорыКонтрагента.ОчиститьЗаписиСДоговором(Ссылка);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СформироватьНаименование() Экспорт
	
	Если Не ПустаяСтрока(НомерДоговора) Тогда
		Наименование = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '№ %1 %2 (%3)'"),
			СокрЛП(НомерДоговора),
			?(ЗначениеЗаполнено(ДатаДоговора), "от " + Формат(ДатаДоговора, "ДЛФ=D"), ""),
			Строка(ВалютаРасчетов));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
