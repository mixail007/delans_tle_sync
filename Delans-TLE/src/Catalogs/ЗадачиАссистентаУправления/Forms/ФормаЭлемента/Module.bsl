
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() Тогда
		ПриСозданииПриЧтенииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриСозданииПриЧтенииНаСервере();
	
	Строки = Действия.НайтиСтроки(Новый Структура("Предмет,Идентификатор", ТекущийОбъект.ТипПредмета, ТекущийОбъект.ДействиеИдентификатор));
	
	Если Строки.Количество() <> 0 Тогда
		
		ОписаниеПолей = Строки[0].ОписаниеПолей;
		
		Для каждого ЗаполненноеОписаниеПоля Из ТекущийОбъект.ЗначенияЗаполнения Цикл
			
			Для каждого ОписаниеПоля Из ОписаниеПолей Цикл
				
				Если ОписаниеПоля.Имя = ЗаполненноеОписаниеПоля.Параметр Тогда
					
					ОписаниеПоля.Значение = ЗаполненноеОписаниеПоля.Значение.Получить();
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Объект.ПараметрыУсловия.Очистить();
	
	Для каждого Параметр Из ТекущийОбъект.ПараметрыУсловия Цикл
		НовыйПараметр = Объект.ПараметрыУсловия.Добавить();
		НовыйПараметр.Параметр = Параметр.Параметр;
		НовыйПараметр.ВидСравнения = Параметр.ВидСравнения;
		НовыйПараметр.ЗначениеНаФорме = Параметр.Значение.Получить();
		НовыйПараметр.ЗначениеПредставлениеНаФорме = Параметр.ЗначениеПредставление.Получить();
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.ЗначенияЗаполнения.Очистить();
	
	Действие = ОписаниеВыбранногоДействия();
	
	Для каждого ОписаниеПоля Из Действие.ОписаниеПолей Цикл
		НастройкаЗаполнения = ТекущийОбъект.ЗначенияЗаполнения.Добавить();
		НастройкаЗаполнения.Параметр = ОписаниеПоля.Имя;
		НастройкаЗаполнения.ВариантЗаполнения = ОписаниеПоля.ВариантЗаполнения;
		НастройкаЗаполнения.Значение = Новый ХранилищеЗначения(ОписаниеПоля.Значение);
	КонецЦикла;
	
	ТекущийОбъект.ПараметрыУсловия.Очистить();
	
	Для каждого Параметр Из Объект.ПараметрыУсловия Цикл
		НовыйПараметр = ТекущийОбъект.ПараметрыУсловия.Добавить();
		НовыйПараметр.Параметр = Параметр.Параметр;
		НовыйПараметр.ВидСравнения = Параметр.ВидСравнения;
		НовыйПараметр.Значение = Новый ХранилищеЗначения(Параметр.ЗначениеНаФорме);
		НовыйПараметр.ЗначениеПредставление = Новый ХранилищеЗначения(Параметр.ЗначениеПредставлениеНаФорме);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТипПредметаПриИзменении(Элемент)
	
	ЗаполнитьСписокВыбораСобытий();
	
КонецПроцедуры

&НаКлиенте
Процедура СобытиеИдентификаторПриИзменении(Элемент)
	
	ЗаполнитьСписокВыбораДействий();
	
КонецПроцедуры

&НаКлиенте
Процедура ДействиеИдентификаторПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Объект.Наименование) Тогда
		Объект.Наименование = "" + Объект.ДействиеИдентификатор;
	КонецЕсли;
	
	ПриОпределенииДействия();
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыУсловияЗначениеПредставлениеНаФормеПриИзменении(Элемент)
	
	Элементы.ПараметрыУсловия.ТекущаяСтрока.ЗначениеНаФорме = Элементы.ПараметрыУсловия.ТекущаяСтрока.ЗначениеПредставлениеНаФорме;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВариантЗаполненияПриИзменении(Элемент)
	
	//Индекс = Число(Сред(Элемент.Имя, СтрДлина("ВариантЗаполнения_")+1));
	//ОписаниеПоля = ОписаниеПолей[Индекс];
	//
	//ПривестиЭлементФормыКОписаниюПоля(ЭтотОбъект, ОписаниеПоля);
	//
	//Если ОписаниеПоля.ИмяРеквизита = "Контакт" Тогда
	//	УстановитьСвойстваЭлементовДляВидовКонтактнойИнформации();
	//КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ЗначениеПоляПриИзменении(Элемент)
	
	//Индекс = Число(Сред(Элемент.Имя, СтрДлина("ЗначениеПоля_")+1));
	//ОписаниеПоля = ОписаниеПолей[Индекс];
	//
	//Если ОписаниеПоля.ИмяРеквизита = "Контакт" Тогда
	//	УстановитьСвойстваЭлементовДляВидовКонтактнойИнформации();
	//КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриСозданииПриЧтенииНаСервере()
	
	АссистентУправления.ПриОпределенииСобытий(События);
	АссистентУправления.ПриОпределенииДействий(Действия);
	
	ЗаполнитьСписокВыбораПредметов();
	ЗаполнитьСписокВыбораСобытий();
	ЗаполнитьСписокВыбораДействий();
	ПриОпределенииДействия();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбораПредметов()
	
	Предметы = Новый Соответствие;
	Предметы = АссистентУправления.ДоступныеТипыПредметов();
	
	Для каждого Предмет Из Предметы Цикл
		Элементы.ТипПредмета.СписокВыбора.Добавить(Предмет.Ключ, Предмет.Значение);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбораСобытий()
	
	//Элементы.СобытиеИдентификатор.СписокВыбора.Очистить();
	Элементы.СобытияСобытиеИдентификатор.СписокВыбора.Очистить();
	
	ДоступныеСобытия = События.НайтиСтроки(Новый Структура("Предмет", Объект.ТипПредмета));
	Для каждого ДоступноеСобытие Из ДоступныеСобытия Цикл
		//Элементы.СобытиеИдентификатор.СписокВыбора.Добавить(ДоступноеСобытие.Идентификатор, ДоступноеСобытие.Представление);
		Элементы.СобытияСобытиеИдентификатор.СписокВыбора.Добавить(ДоступноеСобытие.Идентификатор, ДоступноеСобытие.Представление);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбораДействий()
	
	Элементы.ДействиеИдентификатор.СписокВыбора.Очистить();
	
	//Для каждого ДоступноеДействие Из ДоступныеДействия Цикл
	Для каждого ДоступноеДействие Из Действия Цикл
		Элементы.ДействиеИдентификатор.СписокВыбора.Добавить(ДоступноеДействие.Идентификатор, ДоступноеДействие.Представление);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПриОпределенииДействия()
	
	ОбновитьЭлементыНастроекЗаполнения();
	ПривестиЭлементыФормыКОписаниюПолей();
	
КонецПроцедуры

&НаСервере
Функция ОписаниеВыбранногоДействия()
	
	Если НЕ ЗначениеЗаполнено(Объект.ДействиеИдентификатор) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Строки = Действия.НайтиСтроки(Новый Структура("Идентификатор,Предмет", Объект.ДействиеИдентификатор, ""));
	Если Строки.Количество() = 0 Тогда
		Строки = Действия.НайтиСтроки(Новый Структура("Идентификатор,Предмет", Объект.ДействиеИдентификатор, Объект.ТипПредмета));
	КонецЕсли;
	
	Если Строки.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат Строки[0];
	
КонецФункции

&НаСервере
Процедура ОбновитьЭлементыНастроекЗаполнения()
	
	УдаляемыеЭлементы = Новый Массив;
	
	Для Каждого ЭлементФормы Из Элементы.ГруппаРеквизиты.ПодчиненныеЭлементы Цикл
		УдаляемыеЭлементы.Добавить(ЭлементФормы);
	КонецЦикла;
	Для Каждого ЭлементФормы Из Элементы.ГруппаВарианты.ПодчиненныеЭлементы Цикл
		УдаляемыеЭлементы.Добавить(ЭлементФормы);
	КонецЦикла;
	Для Каждого ЭлементФормы Из Элементы.ГруппаЗначения.ПодчиненныеЭлементы Цикл
		УдаляемыеЭлементы.Добавить(ЭлементФормы);
	КонецЦикла;
	
	Для Каждого УдаляемыйЭлемент Из УдаляемыеЭлементы Цикл
		Элементы.Удалить(УдаляемыйЭлемент);
	КонецЦикла;
	
	Действие = ОписаниеВыбранногоДействия();
	
	Если Действие = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИндексДействия = Действия.Индекс(Действие);
	
	Для Каждого ОписаниеПоля Из Действие.ОписаниеПолей Цикл
		
		Индекс = Действие.ОписаниеПолей.Индекс(ОписаниеПоля);
		
		ЗаголовокПоля = Элементы.Добавить("ЗаголовокПоля_" + Индекс, Тип("ПолеФормы"), Элементы.ГруппаРеквизиты);
		ЗаголовокПоля.ПутьКДанным			= "Действия[" + ИндексДействия + "].ОписаниеПолей[" + Индекс + "].Представление";
		ЗаголовокПоля.Вид					= ВидПоляФормы.ПолеНадписи;
		ЗаголовокПоля.ПоложениеЗаголовка	= ПоложениеЗаголовкаЭлементаФормы.Нет;
		ЗаголовокПоля.АвтоМаксимальнаяШирина= Ложь;
		ЗаголовокПоля.МаксимальнаяШирина	= 18;
		
		ВариантЗаполнения = Элементы.Добавить("ВариантЗаполнения_" + Индекс, Тип("ПолеФормы"), Элементы.ГруппаВарианты);
		ВариантЗаполнения.ПутьКДанным		= "Действия[" + ИндексДействия + "].ОписаниеПолей[" + Индекс + "].ВариантЗаполнения";
		ВариантЗаполнения.Вид				= ВидПоляФормы.ПолеПереключателя;
		ВариантЗаполнения.Заголовок			= ОписаниеПоля.Представление;
		ВариантЗаполнения.ПоложениеЗаголовка= ПоложениеЗаголовкаЭлементаФормы.Нет;
		ВариантЗаполнения.УстановитьДействие("ПриИзменении", "Подключаемый_ВариантЗаполненияПриИзменении");
		Если ОписаниеПоля.ОписаниеТипов.СодержитТип(Тип("Дата")) Тогда
			ВариантЗаполнения.СписокВыбора.Добавить("Смещение",		НСтр("ru='смещение даты'"));
			ВариантЗаполнения.СписокВыбора.Добавить("Указанный",	НСтр("ru='указанный'"));
		Иначе
			ВариантЗаполнения.СписокВыбора.Добавить("ИзОснования",	НСтр("ru='из основания'"));
			ВариантЗаполнения.СписокВыбора.Добавить("Указанный",	НСтр("ru='указанный'"));
		КонецЕсли;
		
		ЗначениеПоля = Элементы.Добавить("ЗначениеПоля_" + Индекс, Тип("ПолеФормы"), Элементы.ГруппаЗначения);
		ЗначениеПоля.ПутьКДанным				= "Действия[" + ИндексДействия + "].ОписаниеПолей[" + Индекс + "].Значение";
		ЗначениеПоля.Вид						= ВидПоляФормы.ПолеВвода;
		ЗначениеПоля.ПоложениеЗаголовка			= ПоложениеЗаголовкаЭлементаФормы.Нет;
		ЗначениеПоля.АвтоОтметкаНезаполненного	= ОписаниеПоля.ОбязательноеЗаполнение;
		ЗначениеПоля.ВыборГруппИЭлементов		= ГруппыИЭлементы.Элементы;
		ЗначениеПоля.ИсторияВыбораПриВводе		= ИсторияВыбораПриВводе.НеИспользовать;
		ЗначениеПоля.УстановитьДействие("ПриИзменении", "Подключаемый_ЗначениеПоляПриИзменении");
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПривестиЭлементыФормыКОписаниюПолей(ОчищатьЗначение = Истина)
	
	Действие = ОписаниеВыбранногоДействия();
	
	Если Действие = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ОписаниеПоля Из Действие.ОписаниеПолей Цикл
		ПривестиЭлементФормыКОписаниюПоля(Действие.ОписаниеПолей, ОписаниеПоля, ОчищатьЗначение);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПривестиЭлементФормыКОписаниюПоля(ОписаниеПолей, ОписаниеПоля, ОчищатьЗначение = Истина)
	
	ПолеВариант = Элементы.Найти("ВариантЗаполнения_" + ОписаниеПолей.Индекс(ОписаниеПоля));
	ПолеВариант.Доступность = Не (ПолеВариант.СписокВыбора.НайтиПоЗначению("ИзОснования") <> Неопределено И ОписаниеПоля.СписокПолейОснования.Количество() = 0);
	
	Если Не ПолеВариант.Доступность Тогда
		ОписаниеПоля.ВариантЗаполнения = "Указанный";
	КонецЕсли;
	
	ПолеЗначение = Элементы.Найти("ЗначениеПоля_" + ОписаниеПолей.Индекс(ОписаниеПоля));
	ПолеЗначение.СписокВыбора.Очистить();
	ПолеЗначение.КнопкаВыпадающегоСписка = Неопределено;
	
	Если ОписаниеПоля.ВариантЗаполнения = "ИзОснования" Тогда
		
		ПолеЗначение.ОграничениеТипа = Новый ОписаниеТипов("Строка");
		Если ОчищатьЗначение Тогда
			ОписаниеПоля.Значение = "";
		Иначе
			ОписаниеПоля.Значение = ПолеЗначение.ОграничениеТипа.ПривестиЗначение(ОписаниеПоля.Значение);
		КонецЕсли;
		ПолеЗначение.РежимВыбораИзСписка	= Истина;
		
		Для Каждого ПолеТипа Из ОписаниеПоля.СписокПолейОснования Цикл
			ЭлементСписка = ПолеЗначение.СписокВыбора.Добавить();
			ЗаполнитьЗначенияСвойств(ЭлементСписка, ПолеТипа);
		КонецЦикла;
		
		Если Не ЗначениеЗаполнено(ОписаниеПоля.Значение) И ПолеЗначение.СписокВыбора.Количество() > 0 Тогда
			ОписаниеПоля.Значение = ПолеЗначение.СписокВыбора[0].Значение;
		КонецЕсли;
		
	ИначеЕсли ОписаниеПоля.ВариантЗаполнения = "Указанный" Тогда
		
		ПолеЗначение.ОграничениеТипа = ОписаниеПоля.ОписаниеТипов;
		Если ОчищатьЗначение Тогда
			ОписаниеПоля.Значение = ПолеЗначение.ОграничениеТипа.ПривестиЗначение();
		Иначе
			ОписаниеПоля.Значение = ПолеЗначение.ОграничениеТипа.ПривестиЗначение(ОписаниеПоля.Значение);
		КонецЕсли;
		ПолеЗначение.РежимВыбораИзСписка = Ложь;
		Если ОписаниеПоля.ОписаниеТипов.Типы().Количество() = 1 И ОписаниеПоля.ОписаниеТипов.СодержитТип(Тип("Строка")) Тогда
			ПолеЗначение.КнопкаВыпадающегоСписка = Ложь;
		КонецЕсли;
		
	ИначеЕсли ОписаниеПоля.ВариантЗаполнения = "Смещение" Тогда
		
		ПолеЗначение.ОграничениеТипа = Новый ОписаниеТипов("Строка");
		Если ОчищатьЗначение Тогда
			ОписаниеПоля.Значение = "";
		Иначе
			ОписаниеПоля.Значение = ПолеЗначение.ОграничениеТипа.ПривестиЗначение(ОписаниеПоля.Значение);
		КонецЕсли;
		ПолеЗначение.РежимВыбораИзСписка	= Истина;
		
		ЗаполнитьСписокСтандартныхИнтервалов(ПолеЗначение.СписокВыбора);
		
		Если Не ЗначениеЗаполнено(ОписаниеПоля.Значение) И ПолеЗначение.СписокВыбора.Количество() > 0 Тогда
			ОписаниеПоля.Значение = ПолеЗначение.СписокВыбора[0].Значение;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьСписокСтандартныхИнтервалов(СписокВыбора)
	
	СписокВыбора.Очистить();
	
	СписокВыбора.Добавить("Сразу",		НСтр("ru='Дата срабатывания правила'"));
	СписокВыбора.Добавить("ЧерезЧас",	НСтр("ru='Через час'"));
	СписокВыбора.Добавить("ЧерезДень",	НСтр("ru='Через день'"));
	СписокВыбора.Добавить("ЧерезНеделю",НСтр("ru='Через неделю'"));
	СписокВыбора.Добавить("ЧерезМесяц",	НСтр("ru='Через месяц'"));
	
КонецПроцедуры

#КонецОбласти
