#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	Если Параметры.Отбор.Свойство("Владелец") И ТипЗнч(Параметры.Отбор.Владелец) = Тип("СправочникСсылка.Номенклатура") Тогда
		// Если задана связь параметров выбора по значению номенклатуры,
		// то дополним параметры выбора отбором по владельцу - номенклатурной группе.
		
		ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Параметры.Отбор.Владелец, "КатегорияНоменклатуры, ТипНоменклатуры, ИспользоватьХарактеристики, ЭтоНабор");
		
		Номенклатура 		  = Параметры.Отбор.Владелец;
		КатегорияНоменклатуры = ЗначенияРеквизитов.КатегорияНоменклатуры;
		
		ТекстСообщения = "";
		Если НЕ ЗначениеЗаполнено(Номенклатура) Тогда
			ТекстСообщения = НСтр("ru = 'Не заполнена номенклатура!'");
		ИначеЕсли Параметры.Свойство("ЭтоПриходныйДокумент") И ЗначенияРеквизитов.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга Тогда
			ТекстСообщения = НСтр("ru = 'Для услуг сторонних контрагентов не ведется учет по характеристикам!'");
		ИначеЕсли НЕ ЗначенияРеквизитов.ИспользоватьХарактеристики Тогда
			ТекстСообщения = НСтр("ru = 'Для номенклатуры не ведется учет по характеристикам!'");
		КонецЕсли;
		
		Если НЕ ПустаяСтрока(ТекстСообщения) Тогда
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			СтандартнаяОбработка = Ложь;
			Возврат;
		КонецЕсли;
		
		// Наборы
		Если НЕ Параметры.Свойство("ЭтоПриходныйДокумент") И ЗначенияРеквизитов.ЭтоНабор Тогда
			СтандартнаяОбработка = Ложь;
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
			Запрос.УстановитьПараметр("КатегорияНоменклатуры", КатегорияНоменклатуры);
			Если Параметры.Свойство("СтрокаПоиска") И НЕ ПустаяСтрока(Параметры.СтрокаПоиска) Тогда
				Запрос.УстановитьПараметр("Текст", "%"+Параметры.СтрокаПоиска+"%");
			Иначе
				Запрос.УстановитьПараметр("Текст", "");
			КонецЕсли; 
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ХарактеристикиНоменклатуры.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
			|ГДЕ
			|	(ХарактеристикиНоменклатуры.Владелец = &Номенклатура
			|			ИЛИ ХарактеристикиНоменклатуры.Владелец = &КатегорияНоменклатуры)
			|	И (&Текст = """"
			|			ИЛИ ХарактеристикиНоменклатуры.Наименование ПОДОБНО &Текст)
			|
			|УПОРЯДОЧИТЬ ПО
			|	ХарактеристикиНоменклатуры.Наименование";
			Выборка = Запрос.Выполнить().Выбрать();
			ДанныеВыбора = Новый СписокЗначений;
			ТекстБезХарактеристики = НСтр("ru = '<Без характеристики>'");
			Если НЕ Параметры.Свойство("СтрокаПоиска") ИЛИ ПустаяСтрока(Параметры.СтрокаПоиска) ИЛИ СтрНайти(ТекстБезХарактеристики, Параметры.СтрокаПоиска)>0 Тогда
				ДанныеВыбора.Добавить(Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка(), ТекстБезХарактеристики);
			КонецЕсли; 
			Пока Выборка.Следующий() Цикл
				ДанныеВыбора.Добавить(Выборка.Ссылка);
			КонецЦикла; 
			Возврат;
		КонецЕсли; 
		// Конец Наборы
		
		МассивОтбора = Новый Массив;
		МассивОтбора.Добавить(Номенклатура);
		МассивОтбора.Добавить(КатегорияНоменклатуры);
		
		Параметры.Отбор.Вставить("Владелец", МассивОтбора);
		
	КонецЕсли;
	
	Если Не Параметры.Отбор.Свойство("Недействителен") Тогда
		Параметры.Отбор.Вставить("Недействителен", Ложь);
	КонецЕсли;
	
КонецПроцедуры // ОбработкаПолученияДанныхВыбора()

#КонецОбласти

#Область ИнтерфейсПечати
// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеОбработчики

// Функция возвращает список имен «ключевых» реквизитов.
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	Результат = Новый Массив;
	
	Возврат Результат;
	
КонецФункции // ПолучитьБлокируемыеРеквизитыОбъекта()

#КонецОбласти

#Область ОбработчикиПодсистем

#Область ЗагрузкаДанныхИзВнешнегоИсточника

Процедура ПриОпределенииОбразцовЗагрузкиДанных(НастройкиЗагрузкиДанных, УникальныйИдентификатор) Экспорт
	
	Образец_xlsx = ПолучитьМакет("ОбразецЗагрузкиДанных_xlsx");
	ОбразецЗагрузкиДанных_xlsx = ПоместитьВоВременноеХранилище(Образец_xlsx, УникальныйИдентификатор);
	НастройкиЗагрузкиДанных.Вставить("ОбразецЗагрузкиДанных_xlsx", ОбразецЗагрузкиДанных_xlsx);
	
	НастройкиЗагрузкиДанных.Вставить("ОбразецЗагрузкиДанных_mxl", "ОбразецЗагрузкиДанных_mxl");
	
	Образец_csv = ПолучитьМакет("ОбразецЗагрузкиДанных_csv");
	ОбразецЗагрузкиДанных_csv = ПоместитьВоВременноеХранилище(Образец_csv, УникальныйИдентификатор);
	НастройкиЗагрузкиДанных.Вставить("ОбразецЗагрузкиДанных_csv", ОбразецЗагрузкиДанных_csv);
	
КонецПроцедуры

Процедура ПоляЗагрузкиДанныхИзВнешнегоИсточника(ТаблицаПолейЗагрузки, НастройкиЗагрузкиДанных) Экспорт
	
	//
	// Для группы полей действует правило: хотя бы одно поле в группе должно быть выбрано в колонках
	//
	
	ОписаниеТиповСтрока11 = Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(11));
	ОписаниеТиповСтрока25 = Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(25));
	ОписаниеТиповСтрока150 = Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(150));
	ОписаниеТиповСтрока0000 = Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(0));
	
	ОписаниеТиповКолонка = Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры");
	ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "ХарактеристикаНаименование", "Характеристика (наименование)", ОписаниеТиповСтрока150, ОписаниеТиповКолонка, "Характеристика", 1, Истина, Истина);
	ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "ХарактеристикаНаименованиеДляПечати", "Характеристика (наименование для печати)", ОписаниеТиповСтрока0000, ОписаниеТиповКолонка, "Характеристика", 2, , Истина);
	
	ВидимостьПоля = (ТипЗнч(НастройкиЗагрузкиДанных.ОбщееЗначение) = Тип("СправочникСсылка.Номенклатура"));
	ОписаниеТиповКолонка = Новый ОписаниеТипов("Булево");
	ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, "ПрименитьЦеныНоменклатуры", "Копировать цены номенклатуры (только для новых)", ОписаниеТиповСтрока25, ОписаниеТиповКолонка, , , , , ВидимостьПоля);
	
	// ДополнительныеРеквизиты
	ЗагрузкаДанныхИзВнешнегоИсточника.ПодготовитьСоответствиеПоДополнительнымРеквизитам(НастройкиЗагрузкиДанных, Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_ХарактеристикиНоменклатуры);
	Если НастройкиЗагрузкиДанных.ОписаниеДополнительныхРеквизитов.Количество() > 0 Тогда
		
		ИмяПоля = ЗагрузкаДанныхИзВнешнегоИсточника.ИмяПоляДобавленияДополнительныхРеквизитов();
		ЗагрузкаДанныхИзВнешнегоИсточника.ДобавитьПолеОписанияЗагрузки(ТаблицаПолейЗагрузки, ИмяПоля, "Дополнительные реквизиты", ОписаниеТиповСтрока150, ОписаниеТиповСтрока11, , , , , , Истина, Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_ХарактеристикиНоменклатуры);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СопоставитьЗагружаемыеДанныеИзВнешнегоИсточника(ТаблицаСопоставленияДанных, НастройкиЗагрузкиДанных) Экспорт
	
	ОбновлятьДанные = НастройкиЗагрузкиДанных.ОбновлятьСуществующие;
	
	ВладелецХарактеристик = НастройкиЗагрузкиДанных.ОбщееЗначение;
	
	// ТаблицаСопоставленияДанных - Тип ДанныеФормыКоллекция
	Для каждого СтрокаТаблицыФормы Из ТаблицаСопоставленияДанных Цикл
		
		// Характеристика по Наименованию, НаименованиеДляПечати
		ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.СопоставитьХарактеристикуПоНаименованию(СтрокаТаблицыФормы.Характеристика, СтрокаТаблицыФормы.ХарактеристикаНаименование, СтрокаТаблицыФормы.ХарактеристикаНаименованиеДляПечати, ВладелецХарактеристик);
		
		ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.ПреобразоватьСтрокуВБулево(СтрокаТаблицыФормы.ПрименитьЦеныНоменклатуры, СтрокаТаблицыФормы.ПрименитьЦеныНоменклатуры_ВходящиеДанные);
		
		// Дополнительные реквизиты
		Если НастройкиЗагрузкиДанных.ВыбранныеДополнительныеРеквизиты.Количество() > 0 Тогда
			
			ЗагрузкаДанныхИзВнешнегоИсточникаПереопределяемый.СопоставитьДополнительныеРеквизиты(СтрокаТаблицыФормы, НастройкиЗагрузкиДанных.ВыбранныеДополнительныеРеквизиты);
			
		КонецЕсли;
		
		ПроверитьКорректностьДанныхВСтрокеТаблицы(СтрокаТаблицыФормы);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКорректностьДанныхВСтрокеТаблицы(СтрокаТаблицыФормы, ПолноеИмяОбъектаЗаполнения = "") Экспорт
	
	СтрокаТаблицыФормы._СтрокаСопоставлена = ЗначениеЗаполнено(СтрокаТаблицыФормы.Характеристика);
	
	ИмяСлужебногоПоля = ЗагрузкаДанныхИзВнешнегоИсточника.ИмяСлужебногоПоляЗагрузкаВПриложениеВозможна();
	
	СтрокаТаблицыФормы[ИмяСлужебногоПоля] = СтрокаТаблицыФормы._СтрокаСопоставлена
											ИЛИ (НЕ СтрокаТаблицыФормы._СтрокаСопоставлена И НЕ ПустаяСтрока(СтрокаТаблицыФормы.ХарактеристикаНаименование));
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли