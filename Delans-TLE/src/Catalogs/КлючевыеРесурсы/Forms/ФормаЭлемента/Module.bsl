
#Область ОбработчикиСобытийФормы

// Процедура - обработчик события ПриСозданииНаСервере.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОтчетыУНФ.ПриСозданииНаСервереФормыСвязанногоОбъекта(ЭтотОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Объект.КратностьПланирования = ?(Параметры.Ключ.Пустая(), Элементы.КратностьПланирования.СписокВыбора[0].Значение, Объект.КратностьПланирования);
	
	Если Параметры.Свойство("ВидРесурса") Тогда
		ВидРесурса = Параметры.ВидРесурса;
	КонецЕсли;
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	#Если ВебКлиент Тогда
		ЭтоВебКлиент = Истина;
	#Иначе
		ЭтоВебКлиент = Ложь;
	#КонецЕсли
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ОбновитьРасшифровкуКратности();
	
КонецПроцедуры // ПриОткрытии()

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ЗначениеЗаполнено(ВидРесурса) Тогда
		НаборЗаписей = РегистрыСведений.ВидыРесурсовПредприятия.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.РесурсПредприятия.Установить(ТекущийОбъект.Ссылка);
		НаборЗаписей.Отбор.ВидРесурсаПредприятия.Установить(ВидРесурса);
		
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.ВидРесурсаПредприятия = ВидРесурса;
		НоваяЗапись.РесурсПредприятия = ТекущийОбъект.Ссылка;
		НаборЗаписей.Записать();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_КлючевыеРесурсы");
	
КонецПроцедуры // ПослеЗаписи()

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура КратностьПланированияРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	КратностьПланирования = Объект.КратностьПланирования;
	
	Объект.КратностьПланирования = ?(Направление>0, КратностьПланирования+5, КратностьПланирования-5);
	
	ОбновитьРасшифровкуКратности();
	
КонецПроцедуры

&НаКлиенте
Процедура КратностьПланированияПриИзменении(Элемент)
	
	ОстатокОтДеления = Объект.КратностьПланирования%5;
	
	Если Не ОстатокОтДеления%5 = 0 Тогда
			Объект.КратностьПланирования = Объект.КратностьПланирования + (5-ОстатокОтДеления);
	КонецЕсли;
	
	ОбновитьРасшифровкуКратности();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьРасшифровкуКратности()
	
	Если Не ЭтаФорма.ТолькоПросмотр Тогда
		Объект.КратностьПланирования = ?(Объект.КратностьПланирования > 1440, 1440, Объект.КратностьПланирования);
	КонецЕсли;
	
	Если Объект.КратностьПланирования >= 60 и Объект.КратностьПланирования < 1440 Тогда
		
		КоличествоЧасов = Цел(Объект.КратностьПланирования/60);
		КоличествоМинут = Объект.КратностьПланирования - КоличествоЧасов*60;
		
		Элементы.ДекорацияПодсказкаВремени.Заголовок = "("+Строка(КоличествоЧасов)+ " ч. "+ Строка(КоличествоМинут)+ " мин."+")";
		
	ИначеЕсли Объект.КратностьПланирования >= 1440 Тогда
		
		КоличествоДней = Цел(Объект.КратностьПланирования/1440);
		КоличествоЧасов = Цел((Объект.КратностьПланирования - (КоличествоДней*1440))/60);
		КоличествоМинут = Объект.КратностьПланирования - (КоличествоДней*1440+КоличествоЧасов*60);
		
		Элементы.ДекорацияПодсказкаВремени.Заголовок = "("+Строка(КоличествоДней)+" д. " + Строка(КоличествоЧасов)+ " ч. "+ Строка(КоличествоМинут)+ " мин."+")";
		
	Иначе
		Элементы.ДекорацияПодсказкаВремени.Заголовок = "";
	КонецЕсли
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ЗначениеРесурсаПриИзменении(Элемент)
	
	Если ТипЗнч(Объект.ЗначениеРесурса) = Тип("СправочникСсылка.Бригады") Тогда
		Элементы.ИспользоватьГрафикРесурса.Доступность = Ложь;
		Объект.ИспользоватьГрафикСотрудника = Ложь;
	ИначеЕсли ТипЗнч(Объект.ЗначениеРесурса) = Тип("СправочникСсылка.Сотрудники") Тогда
		Элементы.ИспользоватьГрафикРесурса.Доступность = Истина;
	Иначе
		Элементы.ИспользоватьГрафикРесурса.Доступность = Ложь;
		Объект.ИспользоватьГрафикСотрудника = Ложь;
	КонецЕсли;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти
