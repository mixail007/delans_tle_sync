#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Перем ЭтоНовыйОбъект;

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ЭтоНовыйОбъект = ЭтоНовый();
	
	Если ЭтотОбъект.ПометкаУдаления и Не ЭтотОбъект.Ссылка.ПометкаУдаления
		Тогда
		
		НаборЗаписей = РегистрыСведений.ПартииКонтрагентов.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Номенклатура.Установить(ЭтотОбъект.Владелец);
		НаборЗаписей.Отбор.Статус.Установить(ЭтотОбъект.Ссылка.Статус);
		НаборЗаписей.Отбор.Контрагент.Установить(ЭтотОбъект.Ссылка.ВладелецПартии);
		НаборЗаписей.Отбор.Партия.Установить(ЭтотОбъект.Ссылка);
		
		НаборЗаписей.Прочитать();
		
		Если НаборЗаписей.Количество()
			Тогда
			Попытка
				НаборЗаписей.Очистить();
				НаборЗаписей.Записать();
				ТекстСообщения = НСтр("ru = 'Основная партия %ИмяПартии% помечена на удаление. Признак <основная партия> снят.'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ИмяПартии%", ЭтотОбъект.Наименование);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			Исключение
				ТекстСообщения = НСтр("ru = 'Не удалось снять признак <основная партия> для партии %ИмяПартии%.'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ИмяПартии%", ЭтотОбъект.Наименование);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			КонецПопытки;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не Отказ Тогда
		Если Не ЭтоНовый() Тогда
			УстановленноеЗначениеПоУмолчаниюСУчетомИзменений = НоменклатураВДокументахСервер.ЗначенияПартийНоменклатурыПоУмолчанию(ЭтотОбъект.Владелец, ЭтотОбъект.Статус, ЭтотОбъект.ВладелецПартии);
			
			Если НоменклатураВДокументахСервер.ПартияУстановленаПоУмолчанию(ЭтотОбъект.Ссылка)
				и ((ЗначениеЗаполнено(УстановленноеЗначениеПоУмолчаниюСУчетомИзменений) и Не ЭтотОбъект.Ссылка = УстановленноеЗначениеПоУмолчаниюСУчетомИзменений)
				или (Не ЭтотОбъект.Статус = ЭтотОбъект.Ссылка.Статус  или Не ЭтотОбъект.ВладелецПартии = ЭтотОбъект.Ссылка.ВладелецПартии)) Тогда
				
				ОтменитьИспользованиеПартииКакОсновной(ЭтотОбъект.Ссылка, Отказ)
				
			ИначеЕсли ЭтотОбъект.Недействителен Тогда
				
				ОтменитьИспользованиеПартииКакОсновной(ЭтотОбъект.Ссылка, Отказ)
				
			КонецЕсли;
		Иначе
			
			Если ЗначениеЗаполнено(ЭтотОбъект.Владелец) и Не ЭтотОбъект.Владелец.ИспользоватьПартии Тогда
				ОбъектВладелец = ЭтотОбъект.Владелец.ПолучитьОбъект();
				ОбъектВладелец.ИспользоватьПартии = Истина;
				Попытка
					ОбъектВладелец.Записать();
				Исключение
					Отказ = Истина
				КонецПопытки;
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоНовыйОбъект и Не ЭтотОбъект.Недействителен
		и (ЭтотОбъект.Владелец.ПроверятьЗаполнениеПартий Или Не ЭтотОбъект.Статус = Перечисления.СтатусыПартий.СобственныеЗапасы)
		Тогда
		ИспользоватьКакОсновную(ЭтотОбъект.Ссылка, Отказ);
	КонецЕсли;
	
КонецПроцедуры

//Производит запись в регистр сведений значение партии по умолчанию для номенклатуры
//
Процедура ИспользоватьКакОсновную(Партия, Отказ = Ложь)
	
	НаборЗаписей = РегистрыСведений.ПартииКонтрагентов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Номенклатура.Установить(Партия.Владелец);
	НаборЗаписей.Отбор.Статус.Установить(Партия.Статус);
	НаборЗаписей.Отбор.Контрагент.Установить(Партия.ВладелецПартии);
	
	НаборЗаписей.Прочитать();
	
	Если Не НаборЗаписей.Количество() и КоличествоПартий(Партия) = 1
		Тогда
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Номенклатура = Партия.Владелец;
		НоваяЗапись.Статус = Партия.Статус;
		НоваяЗапись.Партия = Партия;
		НоваяЗапись.Контрагент = Партия.ВладелецПартии;
		
		Попытка
			НаборЗаписей.Записать();
		Исключение
			ТекстСообщения = НСтр("ru = 'При записи партии произошла ошибка!
			|Дополнительное описание: %ДополнительноеОписание%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", ОписаниеОшибки());
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			
			Отказ = Истина;
		КонецПопытки;
		
	КонецЕсли;
	
КонецПроцедуры

//Удаляет запись из регистра сведений значение партии по умолчанию для номенклатуры
//
Процедура ОтменитьИспользованиеПартииКакОсновной(Партия, Отказ = Ложь)
	
	НаборЗаписей = РегистрыСведений.ПартииКонтрагентов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Номенклатура.Установить(Партия.Владелец);
	НаборЗаписей.Отбор.Статус.Установить(Партия.Статус);
	НаборЗаписей.Отбор.Контрагент.Установить(Партия.ВладелецПартии);
	
	Попытка
		НаборЗаписей.Записать();
	Исключение
		ТекстСообщения = НСтр("ru = 'При записи партии произошла ошибка!
		|Дополнительное описание: %ДополнительноеОписание%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", ОписаниеОшибки());
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		
		Отказ = Истина;
	КонецПопытки;
	
КонецПроцедуры

//Возвращает количество партий по владельцу в разрезе статусов и поставщиков
//
Функция КоличествоПартий(Партия)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Владелец", Партия.Владелец);
	Запрос.УстановитьПараметр("Статус", Партия.Статус);
	Запрос.УстановитьПараметр("ВладелецПартии", Партия.ВладелецПартии);
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ПартииНоменклатуры.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.ПартииНоменклатуры КАК ПартииНоменклатуры
	               |ГДЕ
	               |	ПартииНоменклатуры.Владелец = &Владелец
	               |	И ПартииНоменклатуры.ВладелецПартии = &ВладелецПартии
	               |	И ПартииНоменклатуры.Статус = &Статус";
	Результат = Запрос.Выполнить().Выбрать();
	
	Возврат Результат.Количество(); 
	
КонецФункции

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("ПодконтрольнаяПродукцияВЕТИС");
	СтруктураРеквизитов.Вставить("ИспользоватьПроизводителяВЕТИСПартии");
	СтруктураРеквизитов.Вставить("ИспользоватьЗаписьСкладскогоЖурналаВЕТИСПартии");
	СтруктураРеквизитов.Вставить("ИспользоватьИдентификаторПартииВЕТИСПартии");
	СтруктураРеквизитов.Вставить("ИспользоватьДатуПроизводстваПартии");
	СтруктураРеквизитов.Вставить("ИспользоватьСрокГодностиПартии");
	
	ПараметрыВЕТИС = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЭтотОбъект.Владелец, СтруктураРеквизитов);
	
	Если ПолучитьФункциональнуюОпцию("ВестиУчетПодконтрольныхТоваровВЕТИС") И ПараметрыВЕТИС.ПодконтрольнаяПродукцияВЕТИС Тогда
		
		Если Не ПараметрыВЕТИС.ИспользоватьСрокГодностиПартии Тогда
			МассивНепроверяемыхРеквизитов.Добавить("ГоденДо");
		КонецЕсли;
		
		Если Не ПараметрыВЕТИС.ИспользоватьДатуПроизводстваПартии Тогда
			МассивНепроверяемыхРеквизитов.Добавить("ДатаПроизводства");
		КонецЕсли;
		
		Если Не ПараметрыВЕТИС.ИспользоватьПроизводителяВЕТИСПартии Тогда
			МассивНепроверяемыхРеквизитов.Добавить("ПроизводительВЕТИС");
		КонецЕсли;
		
		Если Не ПараметрыВЕТИС.ИспользоватьЗаписьСкладскогоЖурналаВЕТИСПартии Тогда
			МассивНепроверяемыхРеквизитов.Добавить("ЗаписьСкладскогоЖурналаВЕТИС");
		КонецЕсли;
		
		Если Не ПараметрыВЕТИС.ИспользоватьИдентификаторПартииВЕТИСПартии Тогда
			МассивНепроверяемыхРеквизитов.Добавить("ИдентификаторПартииВЕТИС");
		КонецЕсли;
		
	Иначе
		
		МассивНепроверяемыхРеквизитов.Добавить("ГоденДо");
		МассивНепроверяемыхРеквизитов.Добавить("ДатаПроизводства");
		МассивНепроверяемыхРеквизитов.Добавить("ПроизводительВЕТИС");
		МассивНепроверяемыхРеквизитов.Добавить("ЗаписьСкладскогоЖурналаВЕТИС");
		МассивНепроверяемыхРеквизитов.Добавить("ИдентификаторПартииВЕТИС");
		
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

#КонецЕсли