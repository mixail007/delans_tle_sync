#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Владелец)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

// Функция получает блокируемые реквизиты объекта.
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	Результат = Новый Массив;
	Результат.Добавить("ВалютаДенежныхСредств");
	Результат.Добавить("Владелец");
	Результат.Добавить("СтруктурнаяЕдиница");
	Результат.Добавить("Подразделение");
	Результат.Добавить("ТипКассы");
	
	Возврат Результат;
	
КонецФункции // ПолучитьБлокируемыеРеквизитыОбъекта()

// Функция определяет кассу кассу по умолчанию.
//
// Возвращает кассу ККМ, если найдена одна касса.
// Возвращает Неопределено, если касса не найдена или касс больше одной.
//
// Возвращаемое значение:
//	СправочникСсылка.КассыККМ - Найденная касса ККМ
//
Функция ПолучитьКассуККМПоУмолчанию(ТипКассыККМ = Неопределено) Экспорт
	
	Если ТипКассыККМ = Неопределено Тогда
		Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 2
		|	КассыККМ.Ссылка КАК КассаККМ
		|ИЗ
		|	Справочник.КассыККМ КАК КассыККМ
		|ГДЕ
		|	НЕ КассыККМ.ПометкаУдаления");
	Иначе
		Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 2
		|	КассыККМ.Ссылка КАК КассаККМ
		|ИЗ
		|	Справочник.КассыККМ КАК КассыККМ
		|ГДЕ
		|	НЕ КассыККМ.ПометкаУдаления
		|	И КассыККМ.ТипКассы = &ТипКассы");
		
		Запрос.УстановитьПараметр("ТипКассы", ТипКассыККМ);
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 1 
	   И Выборка.Следующий()
	Тогда
		КассаККМ = Выборка.КассаККМ;
	Иначе
		КассаККМ = Неопределено;
	КонецЕсли;
	
	Возврат КассаККМ;

КонецФункции // ПолучитьКассуПоУмолчанию()

// Функция определяет кассу кассу по умолчанию.
//
// Возвращает кассу ККМ, если найдена одна касса.
// Возвращает Неопределено, если касса не найдена или касс больше одной.
//
// Возвращаемое значение:
//	СправочникСсылка.КассыККМ - Найденная касса ККМ
//
Функция ПолучитьКассуККМПоЭкземпляруОборудования(Оборудование) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	КассыККМ.Ссылка КАК КассаККМ
	|ИЗ
	|	Справочник.КассыККМ КАК КассыККМ
	|ГДЕ
	|	КассыККМ.ПодключаемоеОборудование = &Оборудование
	|	И НЕ КассыККМ.ПометкаУдаления");
	Запрос.УстановитьПараметр("Оборудование", Оборудование);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		КассаККМ = Выборка.КассаККМ;
	Иначе
		КассаККМ = Справочники.КассыККМ.ПустаяСсылка();
	КонецЕсли;
	
	Возврат КассаККМ;

КонецФункции // ПолучитьКассуККМПоЭкземпляруОборудования()

Функция ПолучитьРеквизитыКассыККМ(Знач КассаККМ) Экспорт
	
	СтруктураРеквизитов = Новый Структура("СтруктурнаяЕдиница, ПодписьКассира, Подразделение, ПодписьЗаведущегоОтделом, Организация, ПодписьРуководителя, ВидЦен, СуммаВключаетНДС, ВалютаДокумента, ТипКассы, КассаККМ, ФискальноеУстройство");
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КассыККМ.Ссылка КАК КассаККМ,
	|	КассыККМ.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	КассыККМ.СтруктурнаяЕдиница.ПодписьМОЛ КАК ПодписьКассира,
	|	КассыККМ.Подразделение КАК Подразделение,
	|	КассыККМ.Подразделение.ПодписьМОЛ КАК ПодписьЗаведущегоОтделом,
	|	КассыККМ.Владелец КАК Организация,
	|	КассыККМ.Владелец.ПодписьРуководителя КАК ПодписьРуководителя,
	|	КассыККМ.СтруктурнаяЕдиница.РозничныйВидЦен КАК ВидЦен,
	|	КассыККМ.СтруктурнаяЕдиница.РозничныйВидЦен.ЦенаВключаетНДС КАК СуммаВключаетНДС,
	|	КассыККМ.ВалютаДенежныхСредств КАК ВалютаДокумента,
	|	КассыККМ.ТипКассы КАК ТипКассы,
	|	КассыККМ.ПодключаемоеОборудование КАК ФискальноеУстройство
	|ИЗ
	|	Справочник.КассыККМ КАК КассыККМ
	|ГДЕ
	|	КассыККМ.Ссылка = &КассаККМ");
	
	Запрос.УстановитьПараметр("КассаККМ", КассаККМ);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		
		ЗаполнитьЗначенияСвойств(СтруктураРеквизитов, Выборка);
		
		Если НЕ ЗначениеЗаполнено(Выборка.ВидЦен) Тогда
			
			СтруктураРеквизитов.ВидЦен = Справочники.ВидыЦен.Оптовая;
			СтруктураРеквизитов.СуммаВключаетНДС = Справочники.ВидыЦен.Оптовая.ЦенаВключаетНДС;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат СтруктураРеквизитов;
	
КонецФункции

#Область ИнтерфейсПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли