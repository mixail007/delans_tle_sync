
#Область ОбработчикиСобытийФормы

#КонецОбласти

#Область ОбработчикиКомандФормы
//{[+]EFSOL, Козлов Максим 28.05.2019 21:10:20
&НаКлиенте
Процедура ПечатьQR(Команда)
	
	ВыбранныеСтроки = Элементы.Список.ТекущиеДанные;
	Ключ = Новый Структура;
	Ключ.Вставить("Договор", ВыбранныеСтроки.Договор);
	Ключ.Вставить("Контрагент", ВыбранныеСтроки.Контрагент);
		
	МассивСтрок = ПолучитьСтрокуQR(Ключ);
	мТабДок = Новый ТабличныйДокумент;
	мТабДок.АвтоМасштаб = Истина;
	Итератор = 1;
	КоличествоЭлем = МассивСтрок.Количество();
	Для Каждого СТ_Элем Из МассивСтрок Цикл
		QRСтрока = СТ_Элем.СтрокаQR;
		ТекстОшибки = "";
		Ответ = ЗаполнитьТабдок(QRСтрока,ТекстОшибки,мТабДок,КоличествоЭлем,Итератор);
		Итератор = Итератор + 1;
	КонецЦикла;
	
	Если Не ПустаяСтрока(ТекстОшибки) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
	КонецЕсли;
	КоллекцияПечатныхФорм = УправлениеПечатьюКлиент.НоваяКоллекцияПечатныхФорм("QRКод");
    ПечатнаяФорма = УправлениеПечатьюКлиент.ОписаниеПечатнойФормы(КоллекцияПечатныхФорм, "QRКод");
    ПечатнаяФорма.СинонимМакета = "QR Код";
    ПечатнаяФорма.ТабличныйДокумент = Ответ.ТабДок;
    ПечатнаяФорма.ИмяФайлаПечатнойФормы = "QRКод";
    
    ОбластиОбъектов = Новый СписокЗначений;
    УправлениеПечатьюКлиент.ПечатьДокументов(КоллекцияПечатныхФорм, ОбластиОбъектов);

КонецПроцедуры
//}28.05.2019 21:10:20 EFSOL 
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
//{[+]EFSOL, Козлов Максим 28.05.2019 21:10:54
&НаСервере
Функция ПолучитьСтруктуруСтроки()
	мОтвет = Новый Структура;
	мОтвет.Вставить("АдресПодключения");
	мОтвет.Вставить("ИмяБазы");
	мОтвет.Вставить("SSL");
	мОтвет.Вставить("Пользователь");
	мОтвет.Вставить("Пароль");
	мОтвет.Вставить("usrЛогин");
	мОтвет.Вставить("usrПароль");
	мОтвет.Вставить("МенеджерКонтактноеЛицо");
	мОтвет.Вставить("МенеджерТелефон");
	мОтвет.Вставить("МенеджерEmail");
	Возврат мОтвет;
КонецФункции

&НаСервере
Функция ПолучитьСтрокуQR(Ключ)
	мОтвет = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	NS_APIАвторизация.АдресПодключения КАК АдресПодключения,
	               |	NS_APIАвторизация.ИмяБазы КАК ИмяБазы,
	               |	NS_APIАвторизация.SSL КАК SSL,
	               |	NS_APIАвторизация.Пользователь КАК Пользователь,
	               |	NS_APIАвторизация.ПарольПользователя КАК Пароль,
	               |	NS_APIАвторизация.Логин КАК usrЛогин,
	               |	NS_APIАвторизация.Пароль КАК usrПароль
	               |ИЗ
	               |	РегистрСведений.NS_APIАвторизация КАК NS_APIАвторизация
	               |ГДЕ
	               |	NS_APIАвторизация.Контрагент = &Контрагент
	               |	И NS_APIАвторизация.Договор = &Договор";
	Запрос.УстановитьПараметр("Контрагент",Ключ.Контрагент);
	Запрос.УстановитьПараметр("Договор",Ключ.Договор);
	
	Выборка = Запрос.Выполнить().Выбрать();
	ОбработкаJSON = Обработки.JSON_and_UnJSON.Создать();
	Пока Выборка.Следующий() Цикл
		мСтруктураСтроки = ПолучитьСтруктуруСтроки();
		мСтруктураОтвета = Новый Структура;
		ЗаполнитьЗначенияСвойств(мСтруктураСтроки,Выборка);
		ПользовательИБ = ES_БиллингСервер.ОпределитьПользователяИБ(Выборка.Пользователь);
		мСтруктураСтроки.Пользователь = ?(ТипЗнч(ПользовательИБ) = Тип("ПользовательИнформационнойБазы"), ПользовательИБ.Имя, ПользовательИБ);
		
		мСтруктураСтроки.МенеджерКонтактноеЛицо = Константы.ES_МенеджерКонтактноеЛицо.Получить();
		мСтруктураСтроки.МенеджерТелефон = Константы.ES_МенеджерТелефон.Получить();
		мСтруктураСтроки.МенеджерEmail = Константы.ES_МенеджерEmail.Получить();
		
		СтрокаQR 	= ОбработкаJSON.JSON(мСтруктураСтроки);
		
		//{[+]EFSOL, Козлов Максим EFSOL 28.06.2019 9:52:00
		ЗагрузитьФайлАльтернативнойАвторизации(СтрокаQR, мСтруктураСтроки.usrЛогин);
		//}28.06.2019 9:52:00 EFSOL
		
		СтрокаQR	= ES_ОбщегоНазначения.ЗакодироватьСтрокуВДД(СтрокаQR);
		мСтруктураОтвета.Вставить("СтрокаQR",СтрокаQR);
		мОтвет.Добавить(мСтруктураОтвета);
	КонецЦикла;
		
	Возврат мОтвет;

КонецФункции

//{[+]EFSOL, Козлов Максим 28.06.2019 9:51:32
&НаСервере
Процедура ЗагрузитьФайлАльтернативнойАвторизации(Знач СтруктураДанных, Знач Логин)
	ОбластьДанных = ПараметрыСеанса.ОбластьДанныхЗначение;
	Телефон = Логин;
	ТекстФайла = СтруктураДанных;
	ИмяФайлаДанных = СтрШаблон("%1_%2.xml", ОбластьДанных, Телефон);
	ИмяФайлаДанных = СокрЛП(СтрЗаменить(ИмяФайлаДанных, "+", ""));
	ИмяФайлаДанных = СокрЛП(СтрЗаменить(ИмяФайлаДанных, "(", ""));
	ИмяФайлаДанных = СокрЛП(СтрЗаменить(ИмяФайлаДанных, ")", ""));
	ИмяФайлаДанных = СокрЛП(СтрЗаменить(ИмяФайлаДанных, "-", ""));
	ИмяФайлаДанных = СокрЛП(СтрЗаменить(ИмяФайлаДанных, Символы.НПП, ""));
	ИмяСервера = Константы.ES_СерверАльтАвторизации.Получить();
	ИмяРесурса = Константы.ES_СерверАльтАвторизацииРесурс.Получить();
	Токен = Константы.ES_СерверАльтАвторизацииТокен.Получить();
	
	Попытка
		Соединение = Новый HTTPСоединение(?(ЗначениеЗаполнено(ИмяСервера), ИмяСервера, "ext-dev.delans.ru"));
	Исключение
		        	
	КонецПопытки;
	Заголовки = Новый Соответствие;
	Boundary = СтрЗаменить(Строка(Новый УникальныйИдентификатор()), "-", "");
	Заголовки.Вставить("Content-Type",  "multipart/form-data; boundary=" + Boundary);

	Запрос = Новый HTTPЗапрос(СтрШаблон("/%1?token=%2&method=upload",                              // /xml-handling.php?token=d8e933a2be47c9498938e5c7eb84838e&method=upload
									?(ЗначениеЗаполнено(ИмяРесурса), ИмяРесурса, "xml-handling.php"),
									?(ЗначениеЗаполнено(Токен), Токен, "d8e933a2be47c9498938e5c7eb84838e")),
						Заголовки);
			
	Поток = Новый ПотокВПамяти;
	Текст = Новый ЗаписьТекста(Поток,КодировкаТекста.UTF8);
	Текст.Записать(ТекстФайла);
	Текст.Закрыть();

	ДДТекста = Поток.ЗакрытьИПолучитьДвоичныеДанные();
	
	xml = Новый ЗаписьXML;
	xml.УстановитьСтроку();
	ЗаписатьXML(xml, ДДТекста);
	СтрокаXml = xml.Закрыть();
	
	СтрокаТела = "--" + Boundary + 
			Символы.ПС + "Content-Disposition: form-data; name=""toupload""; filename=""" + ИмяФайлаДанных + """" + 
			Символы.ПС + "Content-Type: application/x-zip-compressed" + Символы.ПС +  
			Символы.ПС + СтрокаXml +                //Передаст содержимое JSON строки в Base64 в виде xml
			Символы.ПС + "--" + Boundary;
			
	
	Запрос.УстановитьТелоИзСтроки(СтрокаТела);
	Результат = Соединение.ОтправитьДляОбработки(Запрос).ПолучитьТелоКакСтроку(); 
	Если Результат = "" Тогда  //В документации не описаны коды ошибок и возможные ответы сервера
		Сообщить("Файл альтернативной авторизации успешно создан/обновлен");
	Иначе 
		Сообщить("Загрузка файла альтернативной авторизации завершилась с ошибкой:
					| " + Результат);
	КонецЕсли; 
КонецПроцедуры
//}28.06.2019 9:51:32 EFSOL

&НаСервере
Функция ЗаполнитьТабдок(QRСтрока,ТекстОшибки,мТабДок,КоличествоЭлем,Итератор)

	мМакет = РегистрыСведений.NS_APIАвторизация.ПолучитьМакет("МакетНастроек");
	ОбластьМакета = мМакет.ПолучитьОбласть("ОбластьQR");
	
	СведенияОбОрганизации = УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(Справочники.Организации.ОсновнаяОрганизация, ТекущаяДата());

	
	ДанныеQRКода = УправлениеПечатью.ДанныеQRКода(QRСтрока, 0, 300);
	
	КартинкаQRКода = Новый Картинка(ДанныеQRКода);
	
	ОбластьМакета.Рисунки.КартинкаQR.Картинка = КартинкаQRКода;
	ОбластьМакета.Рисунки.Лого.Картинка = Новый Картинка(РаботаСФайлами.ДвоичныеДанныеФайла(Справочники.Организации.ОсновнаяОрганизация.ФайлЛоготип, Ложь));
	
	ОбластьМакета.Параметры.Реквизиты = СтрЗаменить(УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,"), 
													" ИНН",
													Символы.ПС + "ИНН"); 
	ОбластьМакета.Параметры.менеджер = Константы.ES_МенеджерКонтактноеЛицо.Получить();
	ОбластьМакета.Параметры.email =  Константы.ES_МенеджерEmail.Получить();
	//ОбластьМакета.Параметры.сайт = "модный сайт, только чей?";
	ОбластьМакета.Параметры.телефон = Константы.ES_МенеджерТелефон.Получить();

	мТабДок.Вывести(ОбластьМакета);
	
	Если не КоличествоЭлем = Итератор Тогда 
		мТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;	
	
	мСтрукт = Новый Структура;
	мСтрукт.Вставить("ТабДок",мТабДок);
	
	Возврат мСтрукт;

КонецФункции
//}28.05.2019 21:10:54 EFSOL 
#КонецОбласти