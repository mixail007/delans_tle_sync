#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Регистрирует данные для обработчика обновления
// 
// Параметры:
//  Параметры - Структура - параметры.
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СоответствиеРеквизитовБизнесСеть.ОбъектСопоставления КАК ОбъектСопоставления,
	|	СоответствиеРеквизитовБизнесСеть.РеквизитОбъекта КАК РеквизитОбъекта,
	|	СоответствиеРеквизитовБизнесСеть.ИдентификаторРеквизитаКатегории КАК ИдентификаторРеквизитаКатегории
	|ИЗ
	|	РегистрСведений.СоответствиеРеквизитовБизнесСеть КАК СоответствиеРеквизитовБизнесСеть
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(СоответствиеРеквизитовБизнесСеть.РеквизитОбъекта) = ТИПЗНАЧЕНИЯ("""")
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоответствиеЗначенийРеквизитовБизнесСеть.ОбъектСопоставления КАК ОбъектСопоставления,
	|	СоответствиеЗначенийРеквизитовБизнесСеть.РеквизитОбъекта КАК РеквизитОбъекта,
	|	СоответствиеЗначенийРеквизитовБизнесСеть.Значение КАК Значение
	|ИЗ
	|	РегистрСведений.СоответствиеЗначенийРеквизитовБизнесСеть КАК СоответствиеЗначенийРеквизитовБизнесСеть
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(СоответствиеЗначенийРеквизитовБизнесСеть.РеквизитОбъекта) = ТИПЗНАЧЕНИЯ("""")";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ПолноеИмяРегистра = "РегистрСведений.СоответствиеРеквизитовБизнесСеть";
	ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Результат[0].Выгрузить(), ДополнительныеПараметры);
	
	ДополнительныеПараметры.ПолноеИмяРегистра = "РегистрСведений.СоответствиеЗначенийРеквизитовБизнесСеть";
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Результат[1].Выгрузить(), ДополнительныеПараметры);

КонецПроцедуры
	
// Обработчик обновления.
// 
// Параметры:
//  Параметры - Структура - параметры.
//
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	// Получить список возможных значений дополнительных реквизитов.
	МетаданныеПеречисления = Метаданные.НайтиПоТипу(Метаданные.ОпределяемыеТипы.РеквизитыСопоставленияНоменклатурыБизнесСеть.Тип.Типы()[0]);
	
	// Если отсутствует перечисляемый тип, то обработка прерывается.
	Если Метаданные.Перечисления.Найти(МетаданныеПеречисления.Имя) = Неопределено Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
	РеквизитыСопоставления = Перечисления[МетаданныеПеречисления.Имя];
	СоответствиеРеквизитов = Новый Соответствие;
	Для каждого ЗаписьНабора Из МетаданныеПеречисления.ЗначенияПеречисления Цикл
		СоответствиеРеквизитов.Вставить(ЗаписьНабора.Имя, РеквизитыСопоставления[ЗаписьНабора.Имя]);
	КонецЦикла;
	
	// Обработка регистра сведений СоответствиеРеквизитовБизнесСеть.
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьИзмеренияНезависимогоРегистраСведенийДляОбработки(
		Параметры.Очередь, "РегистрСведений.СоответствиеРеквизитовБизнесСеть");

	НачатьТранзакцию();
	Попытка
		
		Пока Выборка.Следующий() Цикл
			
			НаборЗаписей = РегистрыСведений.СоответствиеРеквизитовБизнесСеть.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ОбъектСопоставления.Установить(Выборка.ОбъектСопоставления);
			НаборЗаписей.Отбор.РеквизитОбъекта.Установить(Выборка.РеквизитОбъекта);
			НаборЗаписей.Отбор.ИдентификаторРеквизитаКатегории.Установить(Выборка.ИдентификаторРеквизитаКатегории);
			НаборЗаписей.Прочитать();
			Если НаборЗаписей.Количество() <> 0 Тогда
				
				// Установка нового значения
				НовыйРеквизит = СоответствиеРеквизитов.Получить(Выборка.РеквизитОбъекта);
				Если НовыйРеквизит <> Неопределено Тогда
					НаборЗаписейНовый = РегистрыСведений.СоответствиеРеквизитовБизнесСеть.СоздатьНаборЗаписей();
					НаборЗаписейНовый.Отбор.ОбъектСопоставления.Установить(Выборка.ОбъектСопоставления);
					НаборЗаписейНовый.Отбор.РеквизитОбъекта.Установить(НовыйРеквизит);
					НаборЗаписейНовый.Отбор.ИдентификаторРеквизитаКатегории.Установить(Выборка.ИдентификаторРеквизитаКатегории);
					НаборЗаписейНовый.Прочитать();
					// Проверка на наличие существующей записи с новым значением.
					Если НаборЗаписейНовый.Количество() = 0 Тогда
						НоваяЗапись = НаборЗаписейНовый.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяЗапись, НаборЗаписей[0]);
						НоваяЗапись.РеквизитОбъекта = НовыйРеквизит;
						ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписейНовый, Истина);
						НаборЗаписейНовый.Записать(Истина);
					КонецЕсли;
				КонецЕсли;
			
				// Очистка старого регистра.
				НаборЗаписей.Очистить();
			КонецЕсли;
			
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей, Истина);
			
		КонецЦикла;
	
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		Операция = НСтр("ru = 'Обновление сопоставления реквизитов номенклатуры 1С:Бизнес-сеть'");
		ПодробныйТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ТекстСообщения = НСтр("ru = 'При обновлении сопоставления номенклатуры 1С:Бизнес-сеть произошла ошибка'");
		ЭлектронноеВзаимодействиеСлужебныйВызовСервера.ОбработатьОшибку(Операция, ПодробныйТекстОшибки, ТекстСообщения, "БизнесСеть");
		ВызватьИсключение;
		
	КонецПопытки;
	
	ОбработкаЗавершенаСоответствиеРеквизитовБизнесСеть = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(
		Параметры.Очередь, "РегистрСведений.СоответствиеРеквизитовБизнесСеть");
		
	// Обработка регистра сведений СоответствиеРеквизитовБизнесСеть.
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьИзмеренияНезависимогоРегистраСведенийДляОбработки(
		Параметры.Очередь, "РегистрСведений.СоответствиеЗначенийРеквизитовБизнесСеть");
		
		НачатьТранзакцию();
	Попытка
		
		Пока Выборка.Следующий() Цикл
			
			НаборЗаписей = РегистрыСведений.СоответствиеЗначенийРеквизитовБизнесСеть.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ОбъектСопоставления.Установить(Выборка.ОбъектСопоставления);
			НаборЗаписей.Отбор.РеквизитОбъекта.Установить(Выборка.РеквизитОбъекта);
			НаборЗаписей.Отбор.Значение.Установить(Выборка.Значение);
			НаборЗаписей.Прочитать();
			Если НаборЗаписей.Количество() <> 0 Тогда
				
				// Установка нового значения
				НовыйРеквизит = СоответствиеРеквизитов.Получить(Выборка.РеквизитОбъекта);
				Если НовыйРеквизит <> Неопределено Тогда
					НаборЗаписейНовый = РегистрыСведений.СоответствиеЗначенийРеквизитовБизнесСеть.СоздатьНаборЗаписей();
					НаборЗаписейНовый.Отбор.ОбъектСопоставления.Установить(Выборка.ОбъектСопоставления);
					НаборЗаписейНовый.Отбор.РеквизитОбъекта.Установить(НовыйРеквизит);
					НаборЗаписейНовый.Отбор.Значение.Установить(Выборка.Значение);
					НаборЗаписейНовый.Прочитать();
					// Проверка на наличие существующей записи с новым значением.
					Если НаборЗаписейНовый.Количество() = 0 Тогда
						НоваяЗапись = НаборЗаписейНовый.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяЗапись, НаборЗаписей[0]);
						НоваяЗапись.РеквизитОбъекта = НовыйРеквизит;
						ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписейНовый, Истина);
						НаборЗаписейНовый.Записать(Истина);
					КонецЕсли;
				КонецЕсли;
			
				// Очистка старого регистра.
				НаборЗаписей.Очистить();
			КонецЕсли;
			
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей, Истина);
			
		КонецЦикла;
	
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		Операция = НСтр("ru = 'Обновление сопоставления значений реквизитов номенклатуры 1С:Бизнес-сеть'");
		ПодробныйТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ТекстСообщения = НСтр("ru = 'При обновлении сопоставления номенклатуры 1С:Бизнес-сеть произошла ошибка'");
		ЭлектронноеВзаимодействиеСлужебныйВызовСервера.ОбработатьОшибку(Операция, ПодробныйТекстОшибки, ТекстСообщения, "БизнесСеть");
		ВызватьИсключение;
		
	КонецПопытки;
	
	ОбработкаЗавершенаССоответствиеЗначенийРеквизитовБизнесСеть = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(
		Параметры.Очередь, "РегистрСведений.СоответствиеЗначенийРеквизитовБизнесСеть");		
		
	Параметры.ОбработкаЗавершена = ОбработкаЗавершенаСоответствиеРеквизитовБизнесСеть
		И ОбработкаЗавершенаССоответствиеЗначенийРеквизитовБизнесСеть;
	
КонецПроцедуры

// См. ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы.
Функция ДанныеОбновленыНаНовуюВерсиюПрограммы(МетаданныеИОтбор) Экспорт
	
	Возврат ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы(МетаданныеИОтбор);
	
КонецФункции

#КонецОбласти

#КонецЕсли