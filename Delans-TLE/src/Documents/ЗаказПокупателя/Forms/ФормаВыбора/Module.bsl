
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("СчетЗатрат") Тогда
		
		Если ЗначениеЗаполнено(Параметры.СчетЗатрат) Тогда
			
			Если Параметры.СчетЗатрат.ТипСчета <> Перечисления.ТипыСчетов.Расходы
				И Параметры.СчетЗатрат.ТипСчета <> Перечисления.ТипыСчетов.Доходы
				И Параметры.СчетЗатрат.ТипСчета <> Перечисления.ТипыСчетов.НезавершенноеПроизводство
				И Параметры.СчетЗатрат.ТипСчета <> Перечисления.ТипыСчетов.КосвенныеЗатраты Тогда
				
				ТекстСообщения = НСтр("ru = 'Для данного типа счета заказ покупателя не указывается!'");
				УправлениеНебольшойФирмойСервер.СообщитьОбОшибке(, ТекстСообщения, , , , Отказ);
				
			КонецЕсли;
			
		Иначе
			
			ТекстСообщения = НСтр("ru = 'Не выбран счет!'");
			УправлениеНебольшойФирмойСервер.СообщитьОбОшибке(, ТекстСообщения, , , , Отказ);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Параметры.Свойство("ВыбиратьЗаказНаряд")
		И Параметры.ВыбиратьЗаказНаряд Тогда
		Параметры.Отбор.Вставить("ВидОперации", Перечисления.ВидыОперацийЗаказПокупателя.ЗаказНаряд);
		АвтоЗаголовок = Ложь;
		Заголовок = НСтр("ru = 'Заказ-наряды'");
		ЭтотОбъект.ЭтоЗаказНаряд = Истина;
	КонецЕсли;
	
	Если Параметры.Свойство("ВидыОпераций") Тогда
		Если Параметры.ВидыОпераций[0] = Перечисления.ВидыОперацийЗаказПокупателя.ЗаказНаряд Тогда
			АвтоЗаголовок = Ложь;
			Заголовок = НСтр("ru = 'Заказ-наряды'");
			ЭтотОбъект.ЭтоЗаказНаряд = Истина;
		КонецЕсли;
		УправлениеНебольшойФирмойКлиентСервер.УстановитьЭлементОтбораСписка(
		Список,
		"ВидОперации",
		Параметры.ВидыОпераций,
		Истина,
		ВидСравненияКомпоновкиДанных.ВСписке);
	КонецЕсли;
	
		
	//EFSOL_oks_kry_22.03.2015 15:19:55_BEGIN
	Если Параметры.Свойство("ВызваноИзES_ПланДоставки")
	 ИЛИ Параметры.Свойство("ВызваноИзES_Выдачи")
	 //ЭР Несторук С.И. 21.12.2016 12:42:28 {
	 ИЛИ Параметры.Свойство("ВызваноИзES_Приемка")
	 ИЛИ Параметры.Свойство("ВызваноИзES_ES_ПеремещениеЗаказов")
	 //ЭР Несторук С.И. 21.12.2016 12:42:28 }
	Тогда
	
		Параметры.Отбор.Вставить("Проведен", Истина);
		Параметры.Отбор.Вставить("ПометкаУдаления", Ложь);
		Параметры.Отбор.Вставить("ВидОперации", Перечисления.ВидыОперацийЗаказПокупателя.ES_ЗаказНаДоставку);
		Параметры.Отбор.Вставить("Закрыт", Ложь);
		
		МассивСтатусов = Новый Массив;
		
		// Статусы в зависимости от вида документа
		Если Параметры.Свойство("ВызваноИзES_ПланДоставки") Тогда
			
			//ЕФСОЛ Несторук 08-11-16 +
			МассивСтатусов.Добавить(Перечисления.ES_СтатусыЗаказов.ПодготовленПринят);
			//ЕФСОЛ Несторук 08-11-16 -
			МассивСтатусов.Добавить(Перечисления.ES_СтатусыЗаказов.Подготовлен);
			МассивСтатусов.Добавить(Перечисления.ES_СтатусыЗаказов.Комплектуется);
			МассивСтатусов.Добавить(Перечисления.ES_СтатусыЗаказов.НеДоставлен);
			//ЭР Несторук С.И. 28.02.2017 10:00:14 {
			ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("ES_ВидДоставки");
			ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.НеРавно;
			ЭлементОтбора.Использование    = Истина;
			ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
			ЭлементОтбора.ПравоеЗначение   = Перечисления.ES_ВидыДоставки.СкладСклад;
			//}ЭР Несторук С.И.
			
		ИначеЕсли Параметры.Свойство("ВызваноИзES_Выдачи") Тогда 
			//ЭР Несторук С.И. 09.02.2017 17:06:26 {
			//МассивСтатусов.Добавить(Перечисления.ES_СтатусыЗаказов.ГотовКВыдаче);
			//МассивСтатусов.Добавить(Перечисления.ES_СтатусыЗаказов.ОжидаетВыдачи);
			
			МассивСтатусов.Добавить(Перечисления.ES_СтатусыЗаказов.Подготовлен);
			
			ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("ES_ВидДоставки");
			ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.Равно;
			ЭлементОтбора.Использование    = Истина;
			ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
			ЭлементОтбора.ПравоеЗначение   = Перечисления.ES_ВидыДоставки.Самовывоз;
			//ЭР Несторук С.И. 09.02.2017 17:06:26 }
			
			//ЭР Несторук С.И. 13.02.2017 11:51:23 {
		ИначеЕсли Параметры.Свойство("ВызваноИзES_ES_ПеремещениеЗаказов") Тогда 
			МассивСтатусов.Добавить(Перечисления.ES_СтатусыЗаказов.ПодготовленПринят);
			МассивСтатусов.Добавить(Перечисления.ES_СтатусыЗаказов.Подготовлен);
			МассивСтатусов.Добавить(Перечисления.ES_СтатусыЗаказов.ОтмененПринят);
			МассивСтатусов.Добавить(Перечисления.ES_СтатусыЗаказов.ЧастичноДоставлен);
			МассивСтатусов.Добавить(Перечисления.ES_СтатусыЗаказов.ЧастичноДоставленРассчитать);
			МассивСтатусов.Добавить(Перечисления.ES_СтатусыЗаказов.Отказ);
			МассивСтатусов.Добавить(Перечисления.ES_СтатусыЗаказов.НеправильныйАдрес);
			МассивСтатусов.Добавить(Перечисления.ES_СтатусыЗаказов.ОфисПолучателяЗакрыт);
			МассивСтатусов.Добавить(Перечисления.ES_СтатусыЗаказов.ПолучательПереехал);
			МассивСтатусов.Добавить(Перечисления.ES_СтатусыЗаказов.ПолучателяНетДомаВОфисе);
								 
			//ЭР Несторук С.И. 13.02.2017 11:51:23 }
		ИначеЕсли Параметры.Свойство("ВызваноИзES_Приемка") Тогда
			
			//ЕФСОЛ Несторук 02-11-16 +
			МассивСтатусов = Новый Массив;
			МассивСтатусов.Добавить(Перечисления.ES_СтатусыЗаказов.Подготовлен);
			МассивСтатусов.Добавить(Перечисления.ES_СтатусыЗаказов.Назначен);
			МассивСтатусов.Добавить(Перечисления.ES_СтатусыЗаказов.МеждуСкладами);
			
			МассивСтатусов.Добавить(Перечисления.ES_СтатусыЗаказов.ОтмененПринят);
			МассивСтатусов.Добавить(Перечисления.ES_СтатусыЗаказов.ЧастичноДоставлен);
			МассивСтатусов.Добавить(Перечисления.ES_СтатусыЗаказов.ЧастичноДоставленРассчитать);
			МассивСтатусов.Добавить(Перечисления.ES_СтатусыЗаказов.Отказ);
			МассивСтатусов.Добавить(Перечисления.ES_СтатусыЗаказов.НеправильныйАдрес);
			МассивСтатусов.Добавить(Перечисления.ES_СтатусыЗаказов.ОфисПолучателяЗакрыт);
			МассивСтатусов.Добавить(Перечисления.ES_СтатусыЗаказов.ПолучательПереехал);
			МассивСтатусов.Добавить(Перечисления.ES_СтатусыЗаказов.ПолучателяНетДомаВОфисе);
			//ЕФСОЛ Несторук 02-11-16 -
	
		КонецЕсли; 
		
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("ES_СтатусЗаказа");
		ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.ВСписке;
		ЭлементОтбора.Использование    = Истина;
		ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		ЭлементОтбора.ПравоеЗначение   = МассивСтатусов;
		
		//ЭР Несторук С.И. 13.02.2017 11:49:47 {
		Если Параметры.Свойство("Склад") Тогда
			//ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			//ЭлементОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("ES_Склад");
			//ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.ВСписке;
			//ЭлементОтбора.Использование    = Истина;
			//ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
			//ЭлементОтбора.ПравоеЗначение   = Параметры.Склад;
		КонецЕсли;
		//ЭР Несторук С.И. 13.02.2017 11:49:48 }
				
		//ЭР Несторук С.И. 01.02.2017 14:38:57 {
		ЭлементСписка = Элементы.Добавить("ВидДоставки",Тип("ПолеФормы"),Элементы.Список);
		ЭлементСписка.ПутьКДанным = "Список.Ссылка.ES_ВидДоставки";
		
		ЭлементСписка = Элементы.Добавить("НомерНаклданой",Тип("ПолеФормы"),Элементы.Список);
		ЭлементСписка.ПутьКДанным = "Список.Ссылка.ES_НомерНакладной";
		
		ЭлементСписка = Элементы.Добавить("ВхНакладная",Тип("ПолеФормы"),Элементы.Список);
		ЭлементСписка.ПутьКДанным = "Список.Ссылка.ES_ВхНакладная";
		
		ЭлементСписка = Элементы.Добавить("СтатусЗаказа",Тип("ПолеФормы"),Элементы.Список);
		ЭлементСписка.ПутьКДанным = "Список.ES_СтатусЗаказа";
		ЭлементСписка.Заголовок = "Статус заказа";
		//ЭР Несторук С.И. }
	
		
	КонецЕсли;
	//EFSOL_oks_kry_22.03.2015 15:19:55_END
	
	СостоянияЗаказов.УстановитьУсловноеОформлениеОтмененногоЗаказа(
		Список.КомпоновщикНастроек.Настройки.УсловноеОформление
	);
	
	УстановитьУсловноеОформлениеПоЦветамСостоянийСервер();
	
	// МобильноеПриложение
	Если МобильноеПриложениеВызовСервера.НужноОграничитьФункциональность() Тогда
		Элементы.ФормаОбщаяКомандаСтруктураПодчиненности.Видимость = Ложь;
		Элементы.ГруппаГлобальныеКомандыЗаказПокупателя.Видимость = Ложь;
	КонецЕсли;
	// Конец МобильноеПриложение
	
	// Установим формат для текущей даты: ДФ=Ч:мм
	УправлениеНебольшойФирмойСервер.УстановитьОформлениеКолонкиДата(Список);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если (ЭтотОбъект.ЭтоЗаказНаряд И ИмяСобытия = "Запись_СостоянияЗаказНарядов")
		Или (Не ЭтотОбъект.ЭтоЗаказНаряд И ИмяСобытия = "Запись_СостоянияЗаказовПокупателей") Тогда
		
		УстановитьУсловноеОформлениеПоЦветамСостоянийСервер();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформлениеПоЦветамСостоянийСервер()
	
	СостоянияЗаказов.УстановитьУсловноеОформлениеПоЦветамСостояний(
		Список.КомпоновщикНастроек.Настройки.УсловноеОформление,
		?(ЭтотОбъект.ЭтоЗаказНаряд, Метаданные.Справочники.СостоянияЗаказНарядов.ПолноеИмя(),
			Метаданные.Справочники.СостоянияЗаказовПокупателей.ПолноеИмя())
	);
	
КонецПроцедуры

#КонецОбласти
