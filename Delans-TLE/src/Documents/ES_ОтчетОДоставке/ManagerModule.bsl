#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

// Переопределяет стандартное представление ссылки.
//
Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Поля.Добавить("Ссылка");
	Поля.Добавить("Дата");
	Поля.Добавить("Номер");
	Поля.Добавить("Проведен");
	Поля.Добавить("ПометкаУдаления");
	
КонецПроцедуры

// Переопределяет стандартное представление ссылки.
//
Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	Если Данные.Номер = Null Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Если Данные.Проведен Тогда
		Состояние = "";
	Иначе
		Если Данные.ПометкаУдаления Тогда
			Состояние = НСтр("ru='(удален)'");
		ИначеЕсли Данные.Свойство("Проведен") И НЕ Данные.Проведен Тогда
			Состояние = НСтр("ru='(не проведен)'");
		КонецЕсли;
	КонецЕсли;
	
	ЗаголовокПредставление = НСтр("ru='Отчет о сборе/доставке'");
	
	Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='%1 %2 от %3 %4'"),
		ЗаголовокПредставление,
		?(Данные.Свойство("Номер"), ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Данные.Номер, Истина, Истина), ""),
		Формат(Данные.Дата, "ДЛФ=D"),
		Состояние);
	
КонецПроцедуры

#КонецОбласти


//ЭР_Тихонова_Татьяна_05.05.2014 begin

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_АктПередачи") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПФ_MXL_АктПередачи", "Акт передачи", СформироватьПечатнуюФорму(МассивОбъектов, ОбъектыПечати));
				
	КонецЕсли; 
	
	//EFSOL_Прилуцкий_Владислав_13.01.2015 14:16:37_{
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ОтчетКурьеров") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПФ_MXL_ОтчетКурьеров", "Отчет Курьеров", СформироватьПечатнуюФормуОтчетКурьеров(МассивОбъектов, ОбъектыПечати));
				
	КонецЕсли;
	//EFSOL_Прилуцкий_Владислав_} 
	
	//Лохоня Ю.А.
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "ПФ_MXL_ES_ДоставочныйЛист");
	Если ПечатнаяФорма <> Неопределено Тогда
		
		ПечатнаяФорма.ТабличныйДокумент = ПечатнаяФормаES_ДостЛист(МассивОбъектов, ОбъектыПечати, "ПФ_MXL_ES_ДоставочныйЛист");
		ПечатнаяФорма.ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ES_ОтчетОДоставке_ПФ_MXL_ES_ДоставочныйЛист";
		ПечатнаяФорма.ПолныйПутьКМакету = "Документ.ES_ОтчетОДоставке.ПФ_MXL_ES_ДоставочныйЛист";
		ПечатнаяФорма.СинонимМакета = НСтр("ru ='Доставочный лист'");
		
	КонецЕсли;

	
КонецПроцедуры

// Заполняет список команд печати Заказа покупателя
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
		
	// Акт о расхождении
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПФ_MXL_ES_ДоставочныйЛист";
	КомандаПечати.Представление = НСтр("ru = 'Доставочный лист'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.МестоРазмещения = "ГруппаВажныеКомандыОтчетаОДоставке";
	КомандаПечати.Порядок = 10;
	
КонецПроцедуры

Функция ПечатнаяФормаES_ДостЛист(МассивОбъектов, ОбъектыПечати, ИмяМакета)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ES_ОтчетОДоставке_ПФ_MXL_ES_ДоставочныйЛист";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ES_ОтчетОДоставке."+ ИмяМакета);
	Если ТипЗнч(Макет)<> Тип("ТабличныйДокумент") Тогда
		Макет = ПолучитьМакет(ИмяМакета);
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ES_ОтчетОДоставкеЗаказы.Ссылка,
		|	ES_ОтчетОДоставкеЗаказы.НомерСтроки,
		|	ES_ОтчетОДоставкеЗаказы.НомерНакладной,
		|	ES_ОтчетОДоставкеЗаказы.ДокументДоставки.ES_НППлан КАК НППлан,
		|	ES_ОтчетОДоставкеЗаказы.НПФакт,
		|	ES_ОтчетОДоставкеЗаказы.ВремяФактическойДоставки,
		|	ES_ОтчетОДоставкеЗаказы.ДокументДоставки.ES_АдресДоставки КАК АдресДоставки,
		|	ВЫБОР
		|		КОГДА ES_ОтчетОДоставкеЗаказы.ДокументДоставки ССЫЛКА Документ.ES_ЗаборГруза
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоКомплектацияГруза,
		|	ES_ОтчетОДоставкеЗаказы.ВидДоставки,
		|	ВЫБОР
		|		КОГДА ES_ОтчетОДоставкеЗаказы.ДокументДоставки ССЫЛКА Документ.ES_ЗаборГруза
		|			ТОГДА ES_ОтчетОДоставкеЗаказы.ДокументДоставки.ДатаЗабора
		|		ИНАЧЕ ES_ОтчетОДоставкеЗаказы.ДатаФактическойДоставки
		|	КОНЕЦ КАК ДатаФактическойДоставки,
		|	ES_ОтчетОДоставкеЗаказы.Заказчик,
		|	ES_ОтчетОДоставкеЗаказы.ФИОПолучателя,
		|	ES_ОтчетОДоставкеЗаказы.Ссылка.Номер,
		|	ES_ОтчетОДоставкеЗаказы.Ссылка.Дата,
		|	ES_ОтчетОДоставкеЗаказы.ДокументДоставки,
		|	ES_ОтчетОДоставкеЗаказы.Ссылка.Курьер КАК Курьер,
		|	ES_ОтчетОДоставкеЗаказы.ДокументДоставки.Комментарий КАК Комментарий,
		|	ES_ОтчетОДоставкеЗаказы.ДокументДоставки.Контрагент КАК Заказчик,
		|	ВЫБОР
		|		КОГДА ES_ОтчетОДоставкеЗаказы.ДокументДоставки ССЫЛКА Документ.ES_ЗаборГруза
		|			ТОГДА ES_ОтчетОДоставкеЗаказы.ДокументДоставки.Отправитель
		|		ИНАЧЕ ES_ОтчетОДоставкеЗаказы.ДокументДоставки.ES_ЗаборОтправитель
		|	КОНЕЦ КАК Отправитель,
		|	ВЫБОР
		|		КОГДА ES_ОтчетОДоставкеЗаказы.ДокументДоставки ССЫЛКА Документ.ES_ЗаборГруза
		|			ТОГДА ES_ОтчетОДоставкеЗаказы.ДокументДоставки.ОбщийВес
		|		ИНАЧЕ ES_ОтчетОДоставкеЗаказы.ДокументДоставки.ES_ОбщийВес
		|	КОНЕЦ КАК ОбщийВес,
		|	ES_ОтчетОДоставкеЗаказы.ДокументДоставки.ES_КоличествоМест КАК КоличествоМест,
		|	ES_ОтчетОДоставкеЗаказы.ДокументДоставки.ES_ВхНакладная КАК ES_ВхНакладная,
		|	ES_ОтчетОДоставкеЗаказы.ДокументДоставки.Организация КАК Организация,
		|	ES_ОтчетОДоставкеЗаказы.ДокументДоставки.ES_Получатель КАК ES_Получатель,
		|	ES_ОтчетОДоставкеЗаказы.ДокументДоставки.ES_ПолучательКонтактноеЛицо КАК ES_ПолучательКонтактноеЛицо,
		|	ES_ОтчетОДоставкеЗаказы.ДокументДоставки.ES_ПолучательТелефон КАК ES_ПолучательТелефон,
		|	ВЫБОР
		|		КОГДА ES_ОтчетОДоставкеЗаказы.ДокументДоставки ССЫЛКА Документ.ES_ЗаборГруза
		|			ТОГДА ES_ОтчетОДоставкеЗаказы.ДокументДоставки.Адрес
		|		ИНАЧЕ ES_ОтчетОДоставкеЗаказы.ДокументДоставки.ES_ЗаборАдрес
		|	КОНЕЦ КАК АдресОтправителя,
		|	ВЫБОР
		|		КОГДА ES_ОтчетОДоставкеЗаказы.ДокументДоставки ССЫЛКА Документ.ES_ЗаборГруза
		|			ТОГДА ES_ОтчетОДоставкеЗаказы.ДокументДоставки.ВремяЗабораС
		|		ИНАЧЕ ES_ОтчетОДоставкеЗаказы.ДокументДоставки.ES_ВремяДоставкиС
		|	КОНЕЦ КАК ВремяС,
		|	ВЫБОР
		|		КОГДА ES_ОтчетОДоставкеЗаказы.ДокументДоставки ССЫЛКА Документ.ES_ЗаборГруза
		|			ТОГДА ES_ОтчетОДоставкеЗаказы.ДокументДоставки.ВремяЗабораПО
		|		ИНАЧЕ ES_ОтчетОДоставкеЗаказы.ДокументДоставки.ES_ВремяДоставкиПо
		|	КОНЕЦ КАК ВремяПО,
		|	ES_ОтчетОДоставкеЗаказы.СтатусЗаказа КАК СтатусЗаказа
		|ИЗ
		|	Документ.ES_ОтчетОДоставке.Заказы КАК ES_ОтчетОДоставкеЗаказы
		|ГДЕ
		|	ES_ОтчетОДоставкеЗаказы.Ссылка В(&МассивОбъектов)";
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	РезультатЗапроса = Запрос.Выполнить();
	Рез = Запрос.Выполнить().Выгрузить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ТабДок = Новый ТабличныйДокумент;

	////////////////////////////////
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		ПервыйДокумент = Истина;	
		
		Для Каждого МассивОбъект Из МассивОбъектов Цикл
			//ВыборкаСсылка = РезультатЗапроса.Выбрать();
			//Пока ВыборкаСсылка.Следующий() Цикл
			Если Не ПервыйДокумент Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			ПервыйДокумент = Ложь;	
			
			// Шапка
			//СведенияОбОрганизации = УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(ВыборкаСсылка.Организация, ВыборкаСсылка.Дата, ,);
			НомерДокумента = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(МассивОбъект.Номер, Истина, Истина);
			
			ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
			ОбластьШапка.Параметры.ТекстЗаголовка = "Доставочный лист №"
			+ НомерДокумента
			+ " от "
			+ Формат(МассивОбъект.Дата, "ДЛФ=DD");
			
			//ОбластьШапка.Параметры.Организация = ВыборкаДетальныеЗаписи.Организация;
			ОбластьШапка.Параметры.Курьер = МассивОбъект.Курьер;
			ОбластьШапка.Параметры.НомерМаршрута = " ";
			//ОбластьШапка.Параметры.ПредставлениеПоставщика = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,");
			ТабДок.Вывести(ОбластьШапка);
			
			ДатаДок = МассивОбъект.Дата;
			//Комментарий = Рез[0].Ссылка.Комментарий;
			//ВыборкаСсылка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Док = МассивОбъект.Ссылка.ПолучитьОбъект();
			ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицы");
			Для Каждого Строка Из Док.Заказы Цикл			
				
				//ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицы");
				ОбластьСтрокаТаблицы.Параметры.НомерСтроки  = Строка.НомерСтроки;
				//ОбластьСтрокаТаблицы.Параметры.Заказ	 	= " " + ВыборкаДетальныеЗаписи.ДокументДоставки + " ";
				Если ТипЗнч(Строка.ДокументДоставки) = ТИП("ДокументСсылка.ES_ЗаборГруза") Тогда
					ОбластьСтрокаТаблицы.Параметры.Заказ	 	= "Сбор груза " + " 
					|" + Строка.НомерНакладной;
				Иначе
					
					ОбластьСтрокаТаблицы.Параметры.Заказ	 	= "Заказ на доставку " + "
					|" + Строка.НомерНакладной;
				КонецЕсли;	
				Если ТипЗнч(Строка.ДокументДоставки) = ТИП("ДокументСсылка.ЗаказПокупателя") И ЗначениеЗаполнено(Строка.ДокументДоставки.ES_Получатель) Тогда
					ОбластьСтрокаТаблицы.Параметры.Получатель	= Строка.ДокументДоставки.ES_Получатель;
				Иначе ОбластьСтрокаТаблицы.Параметры.Получатель	= "";
				КонецЕсли;	
				Если ТипЗнч(Строка.ДокументДоставки) = ТИП("ДокументСсылка.ЗаказПокупателя") И ЗначениеЗаполнено(Строка.ДокументДоставки.ES_ПолучательКонтактноеЛицо) И ЗначениеЗаполнено(Строка.ДокументДоставки.ES_ПолучательТелефон) Тогда
					ОбластьСтрокаТаблицы.Параметры.КонтЛицо		= " " + Строка.ДокументДоставки.ES_ПолучательКонтактноеЛицо + ", " + Строка.ДокументДоставки.ES_ПолучательТелефон;
				ИначеЕсли ТипЗнч(Строка.ДокументДоставки) = ТИП("ДокументСсылка.ЗаказПокупателя") И ЗначениеЗаполнено(Строка.ДокументДоставки.ES_ПолучательКонтактноеЛицо) И НЕ ЗначениеЗаполнено(Строка.ДокументДоставки.ES_ПолучательТелефон) Тогда
					ОбластьСтрокаТаблицы.Параметры.КонтЛицо		= Строка.ДокументДоставки.ES_ПолучательКонтактноеЛицо;
				ИначеЕсли ТипЗнч(Строка.ДокументДоставки) = ТИП("ДокументСсылка.ЗаказПокупателя") И НЕ ЗначениеЗаполнено(Строка.ДокументДоставки.ES_ПолучательКонтактноеЛицо) И ЗначениеЗаполнено(Строка.ДокументДоставки.ES_ПолучательТелефон) Тогда
					ОбластьСтрокаТаблицы.Параметры.КонтЛицо		= Строка.ДокументДоставки.ES_ПолучательТелефон;	
				Иначе ОбластьСтрокаТаблицы.Параметры.КонтЛицо		= "";	
				КонецЕсли;	
				Если ТипЗнч(Строка.ДокументДоставки) = ТИП("ДокументСсылка.ES_ЗаборГруза") Тогда
					ОбластьСтрокаТаблицы.Параметры.АдресДоставки = " " 
				Иначе
					ОбластьСтрокаТаблицы.Параметры.АдресДоставки = Строка.АдресДоставки;
				КонецЕсли;
				Если ТипЗнч(Строка.ДокументДоставки) = ТИП("ДокументСсылка.ES_ЗаборГруза") Тогда
					ОбластьСтрокаТаблицы.Параметры.Отправитель	= Строка.ДокументДоставки.Отправитель;
				Иначе ОбластьСтрокаТаблицы.Параметры.Отправитель	= Строка.ДокументДоставки.ES_ЗаборОтправитель;
				КонецЕсли;
				Если ТипЗнч(Строка.ДокументДоставки) = ТИП("ДокументСсылка.ES_ЗаборГруза") Тогда
					ОбластьСтрокаТаблицы.Параметры.АдресОтправитель	= Строка.ДокументДоставки.Адрес;
				Иначе ОбластьСтрокаТаблицы.Параметры.АдресОтправитель	= Строка.ДокументДоставки.ES_ЗаборАдрес;
				КонецЕсли;
				ОбластьСтрокаТаблицы.Параметры.ВидИСрочность= Строка.ВидДоставки;
				Если ТипЗнч(Строка.ДокументДоставки) = ТИП("ДокументСсылка.ES_ЗаборГруза") Тогда
					//если ЗаборГруза - берем Дату плана из ЗаборГруза
					Если ЗначениеЗаполнено(Строка.ДокументДоставки.ДатаЗабора) И ЗначениеЗаполнено(Строка.ДокументДоставки.ВремяЗабораС) И ЗначениеЗаполнено(Строка.ДокументДоставки.ВремяЗабораПО) Тогда
						ОбластьСтрокаТаблицы.Параметры.ДатаИВремя	= "" + Формат(Строка.ДокументДоставки.ДатаЗабора, "ДЛФ=Д") + ", с " + Лев(Прав(Строка.ДокументДоставки.ВремяЗабораС, 8),5) + " по " + Лев(Прав(Строка.ДокументДоставки.ВремяЗабораПО, 8),5) + "";
					ИначеЕсли ЗначениеЗаполнено(Строка.ДокументДоставки.ДатаЗабора) И НЕ ЗначениеЗаполнено(Строка.ДокументДоставки.ВремяЗабораС) И ЗначениеЗаполнено(Строка.ДокументДоставки.ВремяЗабораПО) Тогда
						ОбластьСтрокаТаблицы.Параметры.ДатаИВремя	= "" + Формат(Строка.ДокументДоставки.ДатаЗабора, "ДЛФ=Д") + ", по " + Лев(Прав(Строка.ДокументДоставки.ВремяЗабораПО, 8),5) + "";
					ИначеЕсли ЗначениеЗаполнено(Строка.ДокументДоставки.ДатаЗабора) И ЗначениеЗаполнено(Строка.ДокументДоставки.ВремяЗабораС) И НЕ ЗначениеЗаполнено(Строка.ДокументДоставки.ВремяЗабораПО) Тогда
						ОбластьСтрокаТаблицы.Параметры.ДатаИВремя	= "" + Формат(Строка.ДокументДоставки.ДатаЗабора, "ДЛФ=Д") + ", с " + Лев(Прав(Строка.ДокументДоставки.ВремяЗабораС, 8),5) + "";
					ИначеЕсли ЗначениеЗаполнено(Строка.ДокументДоставки.ДатаЗабора) И НЕ ЗначениеЗаполнено(Строка.ДокументДоставки.ВремяЗабораС) И НЕ ЗначениеЗаполнено(Строка.ДокументДоставки.ВремяЗабораПО) Тогда
						ОбластьСтрокаТаблицы.Параметры.ДатаИВремя	= "" + Формат(Строка.ДокументДоставки.ДатаЗабора, "ДЛФ=Д") + "";
	                ИначеЕсли НЕ ЗначениеЗаполнено(Строка.ДокументДоставки.ДатаЗабора) И ЗначениеЗаполнено(Строка.ДокументДоставки.ВремяЗабораС) И ЗначениеЗаполнено(Строка.ДокументДоставки.ВремяЗабораПО) Тогда
						ОбластьСтрокаТаблицы.Параметры.ДатаИВремя	= " с " + Лев(Прав(Строка.ДокументДоставки.ВремяЗабораС, 8),5) + " по " + Лев(Прав(Строка.ДокументДоставки.ВремяЗабораПО, 8),5) + "";
					ИначеЕсли НЕ ЗначениеЗаполнено(Строка.ДокументДоставки.ДатаЗабора) И НЕ ЗначениеЗаполнено(Строка.ДокументДоставки.ВремяЗабораС) И ЗначениеЗаполнено(Строка.ДокументДоставки.ВремяЗабораПО) Тогда
						ОбластьСтрокаТаблицы.Параметры.ДатаИВремя	= " по " + Лев(Прав(Строка.ДокументДоставки.ВремяЗабораПО, 8),5) + "";
					ИначеЕсли НЕ ЗначениеЗаполнено(Строка.ДокументДоставки.ДатаЗабора) И ЗначениеЗаполнено(Строка.ДокументДоставки.ВремяЗабораС) И НЕ ЗначениеЗаполнено(Строка.ДокументДоставки.ВремяЗабораПО) Тогда
						ОбластьСтрокаТаблицы.Параметры.ДатаИВремя	= " с " + Лев(Прав(Строка.ДокументДоставки.ВремяЗабораС, 8),5) + " по " + Лев(Прав(Строка.ДокументДоставки.ВремяЗабораПО, 8),5) + "";
	                ИначеЕсли НЕ ЗначениеЗаполнено(Строка.ДокументДоставки.ДатаЗабора) И НЕ ЗначениеЗаполнено(Строка.ДокументДоставки.ВремяЗабораС) И НЕ ЗначениеЗаполнено(Строка.ДокументДоставки.ВремяЗабораПО) Тогда
						ОбластьСтрокаТаблицы.Параметры.ДатаИВремя	= "";						
					КонецЕсли;	
				Иначе
					//если Заказ на доставку - берем Дату факт. доставки + Время факт. доставки из заказа на доставку
					Если ЗначениеЗаполнено(Строка.ДатаФактическойДоставки) И ЗначениеЗаполнено(Строка.ДокументДоставки.ES_ВремяДоставкиС) И ЗначениеЗаполнено(Строка.ДокументДоставки.ES_ВремяДоставкиПо) Тогда
						ОбластьСтрокаТаблицы.Параметры.ДатаИВремя	= "" + Формат(Строка.ДатаФактическойДоставки, "ДЛФ=Д") + ", с " + Лев(Прав(Строка.ДокументДоставки.ES_ВремяДоставкиС, 8),5) + " по " + Лев(Прав(Строка.ДокументДоставки.ES_ВремяДоставкиПо, 8),5) + "";
					ИначеЕсли ЗначениеЗаполнено(Строка.ДатаФактическойДоставки) И НЕ ЗначениеЗаполнено(Строка.ДокументДоставки.ES_ВремяДоставкиС) И ЗначениеЗаполнено(Строка.ДокументДоставки.ES_ВремяДоставкиПо) Тогда
						ОбластьСтрокаТаблицы.Параметры.ДатаИВремя	= "" + Формат(Строка.ДатаФактическойДоставки, "ДЛФ=Д") + ", по " + Лев(Прав(Строка.ДокументДоставки.ES_ВремяДоставкиПо, 8),5) + "";
					ИначеЕсли ЗначениеЗаполнено(Строка.ДатаФактическойДоставки) И ЗначениеЗаполнено(Строка.ДокументДоставки.ES_ВремяДоставкиС) И НЕ ЗначениеЗаполнено(Строка.ДокументДоставки.ES_ВремяДоставкиПо) Тогда
						ОбластьСтрокаТаблицы.Параметры.ДатаИВремя	= "" + Формат(Строка.ДатаФактическойДоставки, "ДЛФ=Д") + ", с " + Лев(Прав(Строка.ДокументДоставки.ES_ВремяДоставкиС, 8),5) + "";
					ИначеЕсли ЗначениеЗаполнено(Строка.ДатаФактическойДоставки) И НЕ ЗначениеЗаполнено(Строка.ДокументДоставки.ES_ВремяДоставкиС) И НЕ ЗначениеЗаполнено(Строка.ДокументДоставки.ES_ВремяДоставкиПо) Тогда
						ОбластьСтрокаТаблицы.Параметры.ДатаИВремя	= "" + Формат(Строка.ДатаФактическойДоставки, "ДЛФ=Д") + "";
	                ИначеЕсли НЕ ЗначениеЗаполнено(Строка.ДатаФактическойДоставки) И ЗначениеЗаполнено(Строка.ДокументДоставки.ES_ВремяДоставкиС) И ЗначениеЗаполнено(Строка.ДокументДоставки.ES_ВремяДоставкиПо) Тогда
						ОбластьСтрокаТаблицы.Параметры.ДатаИВремя	= " с " + Лев(Прав(Строка.ДокументДоставки.ES_ВремяДоставкиС, 8),5) + " по " + Лев(Прав(Строка.ДокументДоставки.ES_ВремяДоставкиПо, 8),5) + "";
					ИначеЕсли НЕ ЗначениеЗаполнено(Строка.ДатаФактическойДоставки) И НЕ ЗначениеЗаполнено(Строка.ДокументДоставки.ES_ВремяДоставкиС) И ЗначениеЗаполнено(Строка.ДокументДоставки.ES_ВремяДоставкиПо) Тогда
						ОбластьСтрокаТаблицы.Параметры.ДатаИВремя	= " по " + Лев(Прав(Строка.ДокументДоставки.ES_ВремяДоставкиПо, 8),5) + "";
					ИначеЕсли НЕ ЗначениеЗаполнено(Строка.ДатаФактическойДоставки) И ЗначениеЗаполнено(Строка.ДокументДоставки.ES_ВремяДоставкиС) И НЕ ЗначениеЗаполнено(Строка.ДокументДоставки.ES_ВремяДоставкиПо) Тогда
						ОбластьСтрокаТаблицы.Параметры.ДатаИВремя	= " с " + Лев(Прав(Строка.ДокументДоставки.ES_ВремяДоставкиС, 8),5) + "";
	                ИначеЕсли НЕ ЗначениеЗаполнено(Строка.ДатаФактическойДоставки) И НЕ ЗначениеЗаполнено(Строка.ДокументДоставки.ES_ВремяДоставкиС) И НЕ ЗначениеЗаполнено(Строка.ДокументДоставки.ES_ВремяДоставкиПо) Тогда
						ОбластьСтрокаТаблицы.Параметры.ДатаИВремя	= "";						
					КонецЕсли;
				КонецЕсли;
				Если ТипЗнч(Строка.ДокументДоставки) = ТИП("ДокументСсылка.ES_ЗаборГруза") Тогда
					ОбластьСтрокаТаблицы.Параметры.Заказчик		= Строка.ДокументДоставки.Заказчик;
				Иначе
					ОбластьСтрокаТаблицы.Параметры.Заказчик		= Строка.ДокументДоставки.Контрагент;
				КонецЕсли;
				ОбластьСтрокаТаблицы.Параметры.Примечание	= Строка.ДокументДоставки.Комментарий;
				Если ТипЗнч(Строка.ДокументДоставки) = ТИП("ДокументСсылка.ES_ЗаборГруза") Тогда
					ОбластьСтрокаТаблицы.Параметры.МестПлан		= Строка.ДокументДоставки.КоличествоМест;
				Иначе
					ОбластьСтрокаТаблицы.Параметры.МестПлан		= Строка.ДокументДоставки.ES_КоличествоМест;
				КонецЕсли;
				ОбластьСтрокаТаблицы.Параметры.МестВыдано	= " ";
				Если ТипЗнч(Строка.ДокументДоставки) = ТИП("ДокументСсылка.ES_ЗаборГруза") Тогда		
					ОбластьСтрокаТаблицы.Параметры.Вес	 		= Строка.ДокументДоставки.ОбщийВес;
					Иначе ОбластьСтрокаТаблицы.Параметры.Вес	= Строка.ДокументДоставки.ES_ОбщийВес;
				КонецЕсли;
				ОбластьСтрокаТаблицы.Параметры.ДопСервисы	= " ";
				ОбластьСтрокаТаблицы.Параметры.НППлан  		= Строка.НППлан;
				//ОбластьСтрокаТаблицы.Параметры.ВремяФакт	= Прав(ВыборкаДетальныеЗаписи.ВремяФактическойДоставки, 8);
				//ОбластьСтрокаТаблицы.Параметры.СтатусДоставки	= ВыборкаДетальныеЗаписи.СтатусЗаказа;
				ОбластьСтрокаТаблицы.Параметры.ВремяФакт	= " ";
				ОбластьСтрокаТаблицы.Параметры.СтатусДоставки	= " ";
				
				
				ОбластьСтрокаТаблицы.Параметры.ФИОПолучателя= Строка.ФИОПолучателя;
				ОбластьСтрокаТаблицы.Параметры.КомментарийПоНедоставке	= " ";
				
				ТабДок.Вывести(ОбластьСтрокаТаблицы);
				
			КонецЦикла;
			
			ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
			ОбластьПодвал.Параметры.Принял = МассивОбъект.Курьер;
			
			//ОбластьПодвал.Параметры.Приемщик = Рез[0].Ответственный;
			//ОбластьПодвал.Параметры.Руководитель  = " ";
			ТабДок.Вывести(ОбластьПодвал);
		КонецЦикла;
	КонецЕсли;		
	ТабличныйДокумент.Вывести(ТабДок);

	Возврат ТабличныйДокумент;	
	
КонецФункции


Функция  СформироватьПечатнуюФорму(МассивОбъектов,ОбъектыПечати)
	
	//ТабДок = Новый ТабличныйДокумент;
	//ПервыйДокумент = Истина;
	//
	//для каждого МассивОбъекта из МассивОбъектов цикл
	//	
	//	Макет = ПолучитьМакет("ПФ_MXL_АктПередачиТМЦ");
	//	Если Не ПервыйДокумент Тогда
	//		ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	//	КонецЕсли;
	//	ПервыйДокумент = Ложь;
	//	
	//	Шапка = Макет.ПолучитьОбласть("Шапка");
	//	
	//	Запрос = Новый Запрос;
	//	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъекта);
	//	Запрос.Текст = 
	//	
	//	"ВЫБРАТЬ
	//	|	ES_ОтчетОДоставкеОбъектыДоставки.ДокументДоставки КАК Заказ,
	//	|	ВЫБОР
	//	|		КОГДА ES_ОтчетОДоставкеОбъектыДоставки.Возврат = ИСТИНА
	//	|			ТОГДА ES_ОтчетОДоставкеОбъектыДоставки.ОбъектДоставки
	//	|		ИНАЧЕ """"
	//	|	КОНЕЦ КАК Описание,
	//	|	ВЫБОР
	//	|		КОГДА ES_ОтчетОДоставкеОбъектыДоставки.Возврат = ИСТИНА
	//	|			ТОГДА ES_ОтчетОДоставкеОбъектыДоставки.ШтрихКод
	//	|		ИНАЧЕ """"
	//	|	КОНЕЦ КАК ШК,
	//	|	ВЫБОР
	//	|		КОГДА ES_ОтчетОДоставкеОбъектыДоставки.Возврат = ИСТИНА
	//	|			ТОГДА ES_ОтчетОДоставкеОбъектыДоставки.Стоимость
	//	|		ИНАЧЕ """"
	//	|	КОНЕЦ КАК Стоимость,
	//	|	ES_ОтчетОДоставкеОбъектыДоставки.Возврат КАК Возврат,
	//	|	ES_ОтчетОДоставкеОбъектыДоставки.ДокументДоставки.Номер КАК НомерДок,
	//	|	ES_ОтчетОДоставкеОбъектыДоставки.ДокументДоставки.Дата КАК ДатаДок,
	//	|	ES_ОтчетОДоставкеОбъектыДоставки.ДокументДоставки.Контрагент КАК Контрагент,
	//	|	ES_ОтчетОДоставкеЗаказы.СтатусЗаказа КАК Статус,
	//	|	ES_ОтчетОДоставкеЗаказы._ДоставленнаяСумма_ КАК ДостСумма,
	//	|	ES_ОтчетОДоставкеЗаказы.Комментарий КАК Комментарий,
	//	|	ES_ОтчетОДоставкеЗаказы.НаложенныйПлатеж КАК НаложенныйПлатеж,
	//	|	ES_ОтчетОДоставкеЗаказы.ДокументДоставки.ES_СтоимостьДоставки КАК ОплатаЗаДоставку
	//	|ИЗ
	//	|	Документ.ES_ОтчетОДоставке.ОбъектыДоставки КАК ES_ОтчетОДоставкеОбъектыДоставки
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ES_ОтчетОДоставке.Заказы КАК ES_ОтчетОДоставкеЗаказы
	//	|		ПО ES_ОтчетОДоставкеОбъектыДоставки.ДокументДоставки = ES_ОтчетОДоставкеЗаказы.ДокументДоставки
	//	|ГДЕ
	//	|	ES_ОтчетОДоставкеЗаказы.Ссылка В(&МассивОбъектов)
	//	|
	//	|УПОРЯДОЧИТЬ ПО
	//	|	ШК
	//	|ИТОГИ
	//	|	МАКСИМУМ(Описание),
	//	|	МАКСИМУМ(ШК),
	//	|	МАКСИМУМ(Стоимость),
	//	|	МАКСИМУМ(Возврат),
	//	|	МАКСИМУМ(НомерДок),
	//	|	МАКСИМУМ(ДатаДок),
	//	|	МАКСИМУМ(Контрагент),
	//	|	МАКСИМУМ(Статус),
	//	|	МАКСИМУМ(Комментарий),
	//	|	МАКСИМУМ(НаложенныйПлатеж),
	//	|	МАКСИМУМ(ОплатаЗаДоставку)
	//	|ПО
	//	|	Заказ";
	//	
	//	Результат = Запрос.Выполнить();
	//	
	//	Если НЕ Результат.Пустой() тогда
	//		
	//		ВыборкаНомер = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	//		данные = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам); 
	//		данные.Следующий();
	//		Шапка.Параметры.Заполнить(данные);
	//		Шапка.Параметры.НомерДок =  МассивОбъекта.Номер;
	//		Шапка.Параметры.дата = Формат(МассивОбъекта.Дата, "ДФ=dd.MM.yyyy");		
	//		ТабДок.Вывести(Шапка); 
	//		
	//		номер = 1;
	//					
	//		Пока ВыборкаНомер.Следующий() цикл
	//			
	//			ВыборкаЗаказ = ВыборкаНомер.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	//			ОблСтрокаЗаказ = Макет.ПолучитьОбласть("Строка");
	//			ОблСтрокаЗаказ.Параметры.НомерДок = ВыборкаНомер.Номердок;
	//			ОблСтрокаЗаказ.Параметры.датаДок = ВыборкаНомер.ДатаДок;
	//			ОблСтрокаЗаказ.Параметры.ОплатаДоставки = ВыборкаНомер.оплатаЗаДоставку;
	//			ОблСтрокаЗаказ.Параметры.НаложенныйПлатеж = ВыборкаНомер.НаложенныйПлатеж; 
	//			ОблСтрокаЗаказ.Параметры.Номер = номер;
	//			ОблСтрокаЗаказ.Параметры.комментарий = ВыборкаНомер.комментарий;
	//			номер = номер + 1;
	//			шк = ВыборкаНомер.Шк;
	//			ОблСтрокаЗаказ.Параметры.Заполнить(ВыборкаНомер); 
	//			ТабДок.Вывести(ОблСтрокаЗаказ); 
	//			
	//			Пока ВыборкаЗаказ.Следующий() Цикл						
	//				если НЕ ШК = ВыборкаЗаказ.Шк тогда  
	//					если ВыборкаНомер.Возврат = Истина тогда
	//						ОблСтрокаОбъект = Макет.ПолучитьОбласть("Строка1");			
	//						ОблСтрокаОбъект.Параметры.Заполнить(ВыборкаЗаказ);				
	//						ТабДок.Вывести(ОблСтрокаОбъект);														
	//					КонецЕсли; 									
	//				КонецЕсли;						
	//			КонецЦикла;				

	//			если номер > 1  тогда
	//				ОбластьМакета = Макет.ПолучитьОбласть("Строка2");
	//				ТабДок.Вывести(ОбластьМакета);
	//			КонецЕсли;
	//						
	//		КонецЦикла;
	//		
	//	иначе
	//		Шапка.Параметры.НомерДок =  МассивОбъекта.Номер;
	//		Шапка.Параметры.дата = Формат(МассивОбъекта.Дата, "ДФ=dd.MM.yyyy");		
	//		ТабДок.Вывести(Шапка);
	//		
	//		ОблСтрокаЗаказ = Макет.ПолучитьОбласть("Строка");
	//		
	//		для каждого док из МассивОбъекта.Заказы цикл
	//			
	//			ОблСтрокаЗаказ.Параметры.НомерДок = док.ДокументДоставки.Номер;
	//			ОблСтрокаЗаказ.Параметры.датаДок = док.ДокументДоставки.Дата;
	//			ОблСтрокаЗаказ.Параметры.ОплатаДоставки = док.ДокументДоставки.ES_СтоимостьДоставки;
	//			ОблСтрокаЗаказ.Параметры.НаложенныйПлатеж = док.НаложенныйПлатеж; 
	//			ОблСтрокаЗаказ.Параметры.Статус =  док.СтатусЗаказа;
	//			ОблСтрокаЗаказ.Параметры.комментарий = док.комментарий;
	//			ТабДок.Вывести(ОблСтрокаЗаказ);
	//			ОбластьМакета = Макет.ПолучитьОбласть("Строка2");
	//			ТабДок.Вывести(ОбластьМакета);
	//			
	//		КонецЦикла;
	//			
	//	КонецЕсли;
	//		
	//		ОбластьМакета = макет.ПолучитьОбласть("Итого");
	//		ОбластьМакета.Параметры.ИтогоКоличество = МассивОбъекта.ИтогоГрузовКВозврату;
	//		ОбластьМакета.Параметры.ИтогоСумма = МассивОбъекта.ИтогоПереданнаяСумма;
	//		ТабДок.Вывести(ОбластьМакета);
	//		
	//	КонецЦикла;
	//	
	//	ТабДок.АвтоМасштаб = Истина;
	//	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	//	
	//	Возврат ТабДок;

КонецФункции 
//ЭР_Тихонова_Татьяна_05.05.2014 end

//EFSOL_Прилуцкий_Владислав_13.01.2015 14:17:04_{
Функция СформироватьПечатнуюФормуОтчетКурьеров(МассивОбъектов, ОбъектыПечати)
	//ТабДок = Новый ТабличныйДокумент;
	//ПервыйДокумент = Истина;
	//
	//Для каждого МассивОбъекта из МассивОбъектов цикл
	//	
	//	Макет = ПолучитьМакет("ПФ_MXL_ОтчетКурьеров");
	//	Если Не ПервыйДокумент Тогда
	//		ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	//	КонецЕсли;
	//	ПервыйДокумент = Ложь;
	//	
	//	Шапка = Макет.ПолучитьОбласть("Шапка");
	//	Шапка.Параметры.НомерДок = МассивОбъекта.Номер; 
	//	Шапка.Параметры.Дата = Формат(МассивОбъекта.Дата, "ДФ=dd.MM.yyyy");	
	//	Шапка.Параметры.ПланДоставки = МассивОбъекта.ПланДоставки;
	//	Шапка.Параметры.Курьер = МассивОбъекта.Курьер;
	//	ТабДок.Вывести(Шапка);
	//	
	//	ТабДок.АвтоМасштаб = Истина;
	//	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	//	
	//	Запрос = Новый Запрос;
	//	Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	ES_ОтчетОДоставкеЗаказы.Ссылка,
	//	|	ES_ОтчетОДоставкеЗаказы.НомерСтроки КАК Номер,
	//	|	ES_ОтчетОДоставкеЗаказы.ДокументДоставки КАК Документ,
	//	|	ES_ОтчетОДоставкеЗаказы.ВидДокументаДоставки,
	//	|	ES_ОтчетОДоставкеЗаказы.НомерЗаказа,
	//	|	ES_ОтчетОДоставкеЗаказы.ВидОплаты КАК ВидОплаты,
	//	|	ES_ОтчетОДоставкеЗаказы.ВремяФактическойДоставки КАК ВремяФакт,
	//	|	ES_ОтчетОДоставкеЗаказы.Комментарий КАК Комментарий,
	//	|	ES_ОтчетОДоставкеЗаказы.Контрагент КАК Получатель,
	//	|	ES_ОтчетОДоставкеЗаказы.НаложенныйПлатеж КАК НП,
	//	|	ES_ОтчетОДоставкеЗаказы.ОплатаЗаДоставку КАК Стоимость,
	//	|	ES_ОтчетОДоставкеЗаказы.Отправитель КАК Заказчик,
	//	|	ES_ОтчетОДоставкеЗаказы.Плательщик КАК Плательщик,
	//	|	ES_ОтчетОДоставкеЗаказы.СтатусЗаказа КАК Статус,
	//	|	ES_ОтчетОДоставкеЗаказы.УдержатьПлатеж КАК Удержать
	//	//|	ES_ОтчетОДоставкеЗаказы.ES_ПричинаОтказа КАК ПричинаОтказа
	//	|ИЗ
	//	|	Документ.ES_ОтчетОДоставке.Заказы КАК ES_ОтчетОДоставкеЗаказы
	//	|ГДЕ
	//	|	ES_ОтчетОДоставкеЗаказы.Ссылка = &Ссылка";
	//	Запрос.УстановитьПараметр("Ссылка",МассивОбъекта);
	//	
	//	РезультатЗапроса = Запрос.Выполнить();
	//	ТЗ = РезультатЗапроса.Выгрузить();
	//	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	//	
	//	ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
	//	ТабДок.Вывести(ОбластьМакета);
	//	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	//	
	//	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//		ОбластьМакета.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
	//		ТабДок.Вывести(ОбластьМакета);
	//	КонецЦикла;
	//	
	//	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	//	ТабДок.Вывести(ОбластьМакета);
	//	
	//	Возврат ТабДок;
	//	
	//КонецЦикла;	
КонецФункции
 //EFSOL_Прилуцкий_Владислав_} 
 
 #КонецЕсли