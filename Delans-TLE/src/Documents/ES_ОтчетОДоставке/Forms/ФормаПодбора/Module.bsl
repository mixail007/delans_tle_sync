
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Склад = Параметры.Склад;
	ЭтоНовый = Параметры.Новый;
	Курьер = Параметры.Курьер;
	ПоискПоВхНакадной = ES_ОбщегоНазначения.ПолучитьСтартовуюНастройку(Перечисления.ES_ВидыСтартовыхНастроек.ПоискЗаказовПоВхНакладной);
КонецПроцедуры

Функция ПолучитьТекстЗапросаПоискаЗаказов()
	ТекстЗапроса = 
	    "ВЫБРАТЬ
	    |	ES_ЗаказыНаСкладеОстатки.Заказ КАК Заказ,
	    |	ES_ЗаказыНаСкладеОстатки.Склад КАК Склад,
	    |	ES_ЗаказыНаСкладеОстатки.Курьер КАК Курьер,
	    |	ES_ЗаказыНаСкладеОстатки.Заказ.ES_НомерНакладной КАК НомерНакладной,
	    |	ES_ЗаказыНаСкладеОстатки.Заказ.ES_ОбщийВес КАК Вес,
	    |	ES_ЗаказыНаСкладеОстатки.Заказ.ES_ВхНакладная КАК ВхНакладная,
	    |	ES_ЗаказыНаСкладеОстатки.Заказ.ES_ВидДоставки КАК ВидДоставки
	    |ПОМЕСТИТЬ ВТ_Заказ
	    |ИЗ
	    |	РегистрНакопления.ES_ЗаказыНаСкладе.Остатки(
	    |			,
	    |			Склад = &Склад
	    |				И Заказ.ES_НомерНакладной = &Штрихкод
	    |				И Курьер <> &Курьер
	    |				И Заказ.ES_ДатаДоставки <> ЗНАЧЕНИЕ(Перечисление.ES_ВидыДоставки.СкладСклад)) КАК ES_ЗаказыНаСкладеОстатки
	    |;
	    |
	    |////////////////////////////////////////////////////////////////////////////////
	    |ВЫБРАТЬ
	    |	МАКСИМУМ(ES_ОтчетОДоставкеЗаказы.Ссылка.Курьер) КАК Курьер,
	    |	ВЫРАЗИТЬ(ES_ОтчетОДоставкеЗаказы.ДокументДоставки КАК Документ.ЗаказПокупателя) КАК Заказ,
	    |	МАКСИМУМ(ES_ОтчетОДоставкеЗаказы.Ссылка) КАК ОтчетОДоставке
	    |ПОМЕСТИТЬ ВТ_КурьерИзОтчета
	    |ИЗ
	    |	Документ.ES_ОтчетОДоставке.Заказы КАК ES_ОтчетОДоставкеЗаказы
	    |ГДЕ
	    |	ES_ОтчетОДоставкеЗаказы.Ссылка.Проведен
	    |	И ES_ОтчетОДоставкеЗаказы.ДокументДоставки В
	    |			(ВЫБРАТЬ
	    |				ВТ_Заказ.Заказ КАК Заказ
	    |			ИЗ
	    |				ВТ_Заказ КАК ВТ_Заказ)
	    |
	    |СГРУППИРОВАТЬ ПО
	    |	ВЫРАЗИТЬ(ES_ОтчетОДоставкеЗаказы.ДокументДоставки КАК Документ.ЗаказПокупателя)
	    |;
	    |
	    |////////////////////////////////////////////////////////////////////////////////
	    |ВЫБРАТЬ
	    |	ВТ_Заказ.Заказ КАК Заказ,
	    |	ВТ_Заказ.Склад КАК Склад,
	    |	ВТ_КурьерИзОтчета.Курьер КАК Курьер,
	    |	ES_СтатусыЗаказовСрезПоследних.СтатусЗаказа КАК СтатусЗаказа,
	    |	ВТ_Заказ.НомерНакладной КАК НомерНакладной,
	    |	ВТ_Заказ.Вес КАК Вес,
	    |	ВТ_Заказ.ВхНакладная КАК ВхНакладная,
	    |	ВТ_Заказ.ВидДоставки КАК ВидДоставки,
	    |	ВТ_КурьерИзОтчета.ОтчетОДоставке КАК ОтчетОДоставке,
	    |	ВТ_Заказ.Курьер КАК ВыданоНаКурьера
	    |ПОМЕСТИТЬ ВТ_Итоговая
	    |ИЗ
	    |	ВТ_Заказ КАК ВТ_Заказ
	    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ES_СтатусыЗаказов.СрезПоследних(
	    |				,
	    |				Заказ В
	    |					(ВЫБРАТЬ
	    |						ВТ_Заказ.Заказ КАК Заказ
	    |					ИЗ
	    |						ВТ_Заказ КАК ВТ_Заказ)) КАК ES_СтатусыЗаказовСрезПоследних
	    |		ПО ВТ_Заказ.Заказ = ES_СтатусыЗаказовСрезПоследних.Заказ
	    |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КурьерИзОтчета КАК ВТ_КурьерИзОтчета
	    |		ПО ВТ_Заказ.Заказ = ВТ_КурьерИзОтчета.Заказ
	    |;
	    |
	    |////////////////////////////////////////////////////////////////////////////////
	    |ВЫБРАТЬ
	    |	ВТ_Итоговая.Заказ КАК Заказ,
	    |	ВТ_Итоговая.Склад КАК Склад,
	    |	ВТ_Итоговая.Курьер КАК Курьер,
	    |	ВТ_Итоговая.СтатусЗаказа КАК СтатусЗаказа,
	    |	ВТ_Итоговая.НомерНакладной КАК НомерНакладной,
	    |	ВТ_Итоговая.Вес КАК Вес,
	    |	ВТ_Итоговая.ВхНакладная КАК ВхНакладная,
	    |	ВТ_Итоговая.ВидДоставки КАК ВидДоставки,
	    |	ВТ_Итоговая.ОтчетОДоставке КАК ОтчетОДоставке,
	    |	ВТ_Итоговая.ВыданоНаКурьера КАК ВыданоНаКурьера
	    |ИЗ
	    |	ВТ_Итоговая КАК ВТ_Итоговая
	    |ГДЕ
	    |	ВТ_Итоговая.СтатусЗаказа В(&МассивСтатусов)";

	Возврат ТекстЗапроса;
КонецФункции


&НаСервере
Процедура НайтиПоШтрихкодуНаСервере(Штрихкод)
	
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаПоискаЗаказов(); 
			
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Штрихкод", Штрихкод);
	Запрос.УстановитьПараметр("Курьер", Курьер);
	Запрос.УстановитьПараметр("МассивСтатусов", ПлучитьМассивНефинальныхСтатусов());
	Если ПоискПоВхНакадной Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"Заказ.ES_НомерНакладной = &Штрихкод","Заказ.ES_ВхНакладная = &Штрихкод");
	КонецЕсли;
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Сообщить("Заказ не найден");
	Иначе
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			//Если ЗначениеЗаполнено(Выборка.ВыданоНаКурьера) Тогда
			//	Продолжить;
			//КонецЕсли;

			Если НЕ ЗначениеЗаполнено(Выборка.Заказ) Тогда
				Продолжить;
			КонецЕсли;
			
			НайтиСтроки = Заказы.НайтиСтроки(Новый Структура("Заказ",Выборка.Заказ));
			Если НайтиСтроки.Количество() > 0 Тогда
				
				Если ЗначениеЗаполнено(Выборка.ВыданоНаКурьера) Тогда
					Сообщить(НСтр("ru='"+ Выборка.Заказ +" уже выдан курьеру " +Выборка.ВыданоНаКурьера+"'"));
					Продолжить;
				КонецЕсли;
				
				Индекс = НайтиСтроки[0].ПолучитьИдентификатор();
				ЭтаФорма.Элементы.Заказы.ТекущаяСтрока = Индекс;
				НайтиСтроки[0].Проверен = Истина;
			Иначе
				НомерСтроки = Заказы.Количество()+1;
				НовСтр = Заказы.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтр, Выборка);
				НовСтр.Проверен = Истина;
				НовСтр.НомерСтроки = НомерСтроки; 
			КонецЕсли;
			
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НайтиПоШтрихкоду(Команда)
	ТекШтрихкод = "";
	ПоказатьВводЗначения(Новый ОписаниеОповещения("ПоискПоШтрихкодуЗавершение", ЭтотОбъект, Новый Структура("ТекШтрихкод", ТекШтрихкод)), ТекШтрихкод, НСтр("ru = 'Введите штрихкод'"));

	
КонецПроцедуры

&НаКлиенте
Процедура ПоискПоШтрихкодуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ТекШтрихкод = ?(Результат = Неопределено, ДополнительныеПараметры.ТекШтрихкод, Результат);
	
	Если НЕ ПустаяСтрока(ТекШтрихкод) Тогда
		
		НайтиПоШтрихкодуНаСервере(ТекШтрихкод);
		
	КонецЕсли;
		
КонецПроцедуры // ПоискПоШтрихкоду()

&НаКлиенте
Процедура Перенести(Команда)
	
	Соответствие = Новый Соответствие;
	Для каждого Стр Из Заказы  Цикл
		Соответствие.Вставить(Стр.Заказ, Стр.Проверен)
	КонецЦикла;
	
	Закрыть(Соответствие);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	//Если НЕ ЭтоНовый Тогда
	//	Возврат;
	//КонецЕсли;
	
	ДанныеФормы = ВладелецФормы.Объект;
	Массив = Новый Массив;
	//МассивЗаборов = Новый Массив;
	Для каждого Стр из ДанныеФормы.Заказы Цикл
		Если ТипЗнч(Стр.ДокументДоставки) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
			Массив.Добавить(Стр.ДокументДоставки);	
		КонецЕсли;
		//Если ТипЗнч(Стр.ДокументДоставки) = Тип("ДокументСсылка.ES_ЗаборГруза") Тогда
		//	МассивЗаборов.Добавить(Стр.ДокументДоставки);	
		//КонецЕсли;
	КонецЦикла;
	
	ЗаполнитьЗаказамиИзОтчета(Массив);
	
	//ЗаполнитьЗаборамиИзОтчета(МассивЗаборов);
	
КонецПроцедуры

&НаСервере
Процедура  ЗаполнитьЗаказамиИзОтчета(МассивЗаказов)
	
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаПоискаЗаказов();
	Запрос.Текст = СтрЗаменить(Запрос.Текст,"Заказ.ES_НомерНакладной = &Штрихкод",
	"Заказ В (&МассивЗаказов)");
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Курьер", Курьер);
	Запрос.УстановитьПараметр("МассивЗаказов",МассивЗаказов);
	Запрос.УстановитьПараметр("МассивСтатусов", ПлучитьМассивНефинальныхСтатусов());

	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	НомерСтроки = 1;
	Пока Выборка.Следующий() Цикл
		//Если ЗначениеЗаполнено(Выборка.ВыданоНаКурьера) Тогда
		//	Продолжить;
		//КонецЕсли;
		
		 НовСтр = Заказы.Добавить();
		 НовСтр.НомерСтроки = НомерСтроки;
		 ЗаполнитьЗначенияСвойств(НовСтр, Выборка);
		 НомерСтроки = НомерСтроки+1;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле.Имя =  "ЗаказыПроверен"  	Тогда
		
	Иначе
		ПоказатьЗначение(,Элемент.ТекущиеДанные.Заказ);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПлучитьМассивНефинальныхСтатусов()
	
	Массив = Новый Массив;
	Массив.Добавить(Перечисления.ES_СтатусыЗаказов.Подготовлен);
	Массив.Добавить(Перечисления.ES_СтатусыЗаказов.Назначен);
	Массив.Добавить(Перечисления.ES_СтатусыЗаказов.НеДоставлен);
	Массив.Добавить(Перечисления.ES_СтатусыЗаказов.ПолучательПереехал);
	Массив.Добавить(Перечисления.ES_СтатусыЗаказов.ПолучателяНетДомаВОфисе);
	Массив.Добавить(Перечисления.ES_СтатусыЗаказов.ОфисПолучателяЗакрыт);
	Возврат Массив;
	
КонецФункции

&НаКлиенте
Процедура ЗаказыПроверенПриИзменении(Элемент)
	
	ТекСтрока = Элементы.Заказы.ТекущиеДанные;
	Если ТекСтрока.Проверен Тогда 
		ТекСтрока.Проверен = ПроверитьВыдачуНаКурьера(ТекСтрока.Заказ, ТекСтрока.Проверен);
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Функция ПроверитьВыдачуНаКурьера(Заказ, Проверен) 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ES_ЗаказыНаСкладеОстатки.Заказ КАК Заказ,
	|	ES_ЗаказыНаСкладеОстатки.Склад КАК Склад,
	|	ES_ЗаказыНаСкладеОстатки.Курьер КАК Курьер
	|ИЗ
	|	РегистрНакопления.ES_ЗаказыНаСкладе.Остатки(
	|			,
	|			Заказ = &Заказ
	|				И Склад = &Склад) КАК ES_ЗаказыНаСкладеОстатки";
	
	Запрос.УстановитьПараметр("Заказ", Заказ);
	Запрос.УстановитьПараметр("Склад", Склад);
	
	РезультатЗапроса = Запрос.Выполнить();
	Проверен = Истина;
	Если НЕ РезультатЗапроса.Пустой() Тогда 
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Если ЗначениеЗаполнено(Выборка.Курьер) Тогда
			Проверен = Ложь;
			Сообщить(НСтр("ru='"+ Выборка.Заказ +" уже выдан курьеру " +Выборка.Курьер+"'"));
		КонецЕсли;
	КонецЕсли;
	
	Возврат Проверен;
	
КонецФункции

