
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура - обработчик нажатия на кнопку ОтборДень.
//
&НаКлиенте
Процедура ОтборДень(Команда)
	
	НастройкаПериода = Элементы.Список.Период;
	НастройкаПериода.Вариант = ВариантСтандартногоПериода.Сегодня;
	
	Элементы.Список.Обновить();
	
КонецПроцедуры // ОтборДень()

// Процедура - обработчик нажатия на кнопку ОтборНеделя.
//
&НаКлиенте
Процедура ОтборНеделя(Команда)
	
	НастройкаПериода = Элементы.Список.Период;
	НастройкаПериода.Вариант = ВариантСтандартногоПериода.ЭтаНеделя;
	
	Элементы.Список.Обновить();
	
КонецПроцедуры // ОтборНеделя()

// Процедура - обработчик нажатия на кнопку ОтборМесяц.
//
&НаКлиенте
Процедура ОтборМесяц(Команда)
	
	НастройкаПериода = Элементы.Список.Период;
	НастройкаПериода.Вариант = ВариантСтандартногоПериода.ЭтотМесяц;
	
	Элементы.Список.Обновить();
	
КонецПроцедуры // ОтборМесяц()

// Процедура - обработчик нажатия на кнопку ОтборОчистить.
//
&НаКлиенте
Процедура ОтборОчистить(Команда)
	
	НастройкаПериода = Элементы.Список.Период;
	НастройкаПериода.Вариант = ВариантСтандартногоПериода.ПроизвольныйПериод;
	НастройкаПериода.ДатаНачала = '00010101';
	НастройкаПериода.ДатаОкончания = '00010101';
	
	Элементы.Список.Обновить();
	
КонецПроцедуры // ОтборОчистить()


// НЕ ИСПОЛЬЗУЕТСЯ
&НаКлиенте
Процедура ОтборИсполнительПриИзменении(Элемент)
	
	//УправлениеНебольшойФирмойКлиентСервер.УстановитьЭлементОтбораСписка(Список, "Исполнитель", ОтборИсполнитель, ЗначениеЗаполнено(ОтборИсполнитель));

КонецПроцедуры

// НЕ ИСПОЛЬЗУЕТСЯ
&НаКлиенте
Процедура ОтборДатаПриИзменении(Элемент)
	
	//ЭлементыОтбора = Список.Отбор.Элементы;
	//
	//// Удаление предыдущего отбора по этому полю
	//Если ЭлементыОтбора.Количество() > 0 Тогда
	//	й = ЭлементыОтбора.Количество() - 1;
	//	Пока й >= 0 Цикл
	//		Если ЭлементыОтбора[й].ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Дата") Тогда
	//			ЭлементыОтбора.Удалить(ЭлементыОтбора[й]);
	//		КонецЕсли; 
	//		й = й - 1;
	//	КонецЦикла;
	//КонецЕсли; 
	//
	//// Добавление нового отбора
	//Если ЗначениеЗаполнено(ОтборДата) Тогда
	//	ЭлементОтбора = ЭлементыОтбора.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Дата");
	//	ЭлементОтбора.Использование = Истина;
	//	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
	//	ЭлементОтбора.ПравоеЗначение = ОтборДата;
	//	ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный;
	//	
	//	ЭлементОтбора = ЭлементыОтбора.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Дата");
	//	ЭлементОтбора.Использование = Истина;
	//	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
	//	ЭлементОтбора.ПравоеЗначение = КонецДня(ОтборДата);
	//	ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный;
	//	Элементы.Список.Обновить();
	//КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьДоставочныйЛист(Команда)
		ВыделенныеСтроки = Элементы.Список.ВыделенныеСтроки;
	МассивОтчетов = Новый Массив;
	Для каждого Элемент из ВыделенныеСтроки Цикл
		//МассивОтчетов.Добавить(Элементы.Список.ДанныеСтроки(Элемент).Ссылка);
		МассивОтчетов.Добавить(Элемент);
	КонецЦикла;	
	
	Если МассивОтчетов.Количество() > 0 Тогда
		
		УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
		"Документ.ES_ОтчетОДоставке",
		"ПФ_MXL_ES_ДоставочныйЛист",
		МассивОтчетов,
		Неопределено,
		Неопределено
		);
		
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	//ЭР Несторук С.И. 10.04.2019 9:32:27 {
	ES_БиллингКлиент.ПроверитьДоступностьСервисаDelans(Отказ);
	//}ЭР Несторук С.И.

КонецПроцедуры
