#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

// Переопределяет стандартное представление ссылки.
//
Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Поля.Добавить("Ссылка");
	Поля.Добавить("Дата");
	Поля.Добавить("Номер");
	Поля.Добавить("ВидОперации");
	Поля.Добавить("Проведен");
	Поля.Добавить("ПометкаУдаления");
	
КонецПроцедуры

// Переопределяет стандартное представление ссылки.
//
Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	Если Данные.Номер = Null Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Если Данные.Проведен Тогда
		Состояние = "";
	Иначе
		Если Данные.ПометкаУдаления Тогда
			Состояние = НСтр("ru='(удален)'");
		ИначеЕсли Данные.Свойство("Проведен") И НЕ Данные.Проведен Тогда
			Состояние = НСтр("ru='(не проведен)'");
		КонецЕсли;
	КонецЕсли;
	
	Если Данные.ВидОперации = ПредопределенноеЗначение("Перечисление.ES_ВидыОперацийВозвраты.Заказы") Тогда
		ЗаголовокПредставление = НСтр("ru='Возврат заказов'");
	ИначеЕсли Данные.ВидОперации = ПредопределенноеЗначение("Перечисление.ES_ВидыОперацийВозвраты.Платежи") Тогда
		ЗаголовокПредставление = НСтр("ru='Возврат платежей'");
	Иначе
		ЗаголовокПредставление = НСтр("ru='Возврат'");
	КонецЕсли;
	
	Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='%1 %2 от %3 %4'"),
		ЗаголовокПредставление,
		?(Данные.Свойство("Номер"), ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Данные.Номер, Истина, Истина), ""),
		Формат(Данные.Дата, "ДЛФ=D"),
		Состояние);
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// Печать

#Область Печать

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_Возврат") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПФ_MXL_Возврат", "Возврат", СформироватьПечатнуюФормуВозврат(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
КонецПроцедуры

// Заполняет список команд печати Заказа покупателя
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Возврат
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПФ_MXL_Возврат";
	КомандаПечати.Представление = НСтр("ru = 'Акт возврата'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	//КомандаПечати.МестоРазмещения = "ГруппаВажныеКоманды";
	КомандаПечати.Порядок = 5;
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуВозврат(МассивОбъектов, ОбъектыПечати)
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДок.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ES_Возврат";
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ES_Возвраты.Ссылка,
	|	ES_Возвраты.Номер КАК НомерДока,
	|	ES_Возвраты.Дата КАК ДатаДока,
	|	ES_Возвраты.ВидОперации,
	|	ES_Возвраты.Заказчик,
	|	ES_Возвраты.Организация,
	|	ES_Возвраты.ПроцентУдержания,
	|	ES_Возвраты.КОплате
	|ПОМЕСТИТЬ Док
	|ИЗ
	|	Документ.ES_Возвраты КАК ES_Возвраты
	|ГДЕ
	|	ES_Возвраты.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ES_ВозвратыПлатежи.Ссылка КАК ПлатежиСсылка,
	|	ES_ВозвратыПлатежи.НомерСтроки КАК ПлатежиНомерСтроки,
	|	ES_ВозвратыПлатежи.Заказ КАК ПлатежиЗаказ,
	|	ES_ВозвратыПлатежи.Заказ.Номер КАК ПлатежиНомер,
	|	ES_ВозвратыПлатежи.Заказ.Дата КАК ПлатежиДата,
	|	ES_ВозвратыПлатежи.ДатаДоставки КАК ПлатежиДатаДоставки,
	|	ES_ВозвратыПлатежи.ВхНакладная КАК ПлатежиВхНакладная,
	|	ES_ВозвратыПлатежи.Заказ.ES_АдресДоставки КАК ПлатежиАдресДоставки,
	|	ES_ВозвратыПлатежи.Заказ.ES_НППлан КАК ПлатежиНППлан,
	|	ES_ВозвратыПлатежи.НПФакт КАК ПлатежиНПФакт,
	|	ES_ВозвратыПлатежи.СуммаУдержано КАК ПлатежиСуммаУдержано,
	|	ES_ВозвратыПлатежи.СуммаКВозврату КАК ПлатежиСуммаКВозврату,
	|	ES_ВозвратыПлатежи.НПФактНал КАК ПлатежиНПФактНал,
	|	ES_ВозвратыПлатежи.НПФактБезнал КАК ПлатежиНПФактБезнал,
	|	ES_ВозвратыПлатежи.НомерНакладной КАК ПлатежиНомерНакладной,
	|	ES_ВозвратыПлатежи.КОплате КАК ПлатежиКОплате
	|ПОМЕСТИТЬ ВТ_Платежи
	|ИЗ
	|	Документ.ES_Возвраты.Платежи КАК ES_ВозвратыПлатежи
	|ГДЕ
	|	ES_ВозвратыПлатежи.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ES_ВозвратыЗаказы.Ссылка КАК ЗаказыСсылка,
	|	ES_ВозвратыЗаказы.НомерСтроки КАК ЗаказыНомерСтроки,
	|	ES_ВозвратыЗаказы.Заказ КАК ЗаказыЗаказ,
	|	ES_ВозвратыЗаказы.СтатусЗаказа КАК ЗаказыСтатусЗаказа,
	|	ES_ВозвратыЗаказы.ВхНакладная КАК ЗаказыВхНакладная,
	|	ES_ВозвратыЗаказы.Заказ.ES_АдресДоставки КАК ЗаказыАдресДоставки,
	|	ES_ВозвратыЗаказы.Вес КАК ЗаказыВес,
	|	ES_ВозвратыЗаказы.Заказ.ES_НППлан КАК ЗаказыНППлан,
	|	ES_ВозвратыЗаказы.НПФакт КАК ЗаказыНПФакт,
	|	ES_ВозвратыЗаказы.Комментарий КАК ЗаказыКомментарий,
	|	ES_ДанныеПоЗаказамСрезПоследних.ДатаДоставки КАК ЗаказыДатаДоставки,
	|	ES_ВозвратыЗаказы.НомерНакладной КАК ЗаказыНомерНакладной
	|ПОМЕСТИТЬ ВТ_ЗаказыДок
	|ИЗ
	|	Документ.ES_Возвраты.Заказы КАК ES_ВозвратыЗаказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ES_ДанныеПоЗаказам.СрезПоследних(, ) КАК ES_ДанныеПоЗаказамСрезПоследних
	|		ПО ES_ВозвратыЗаказы.Заказ = ES_ДанныеПоЗаказамСрезПоследних.Заказ
	|ГДЕ
	|	ES_ВозвратыЗаказы.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВТ_ЗаказыДок.ЗаказыСсылка,
	|	ВТ_ЗаказыДок.ЗаказыНомерСтроки,
	|	ВТ_ЗаказыДок.ЗаказыЗаказ,
	|	ВТ_ЗаказыДок.ЗаказыСтатусЗаказа КАК ЗаказыСтатус,
	|	ВТ_ЗаказыДок.ЗаказыВхНакладная,
	|	ВТ_ЗаказыДок.ЗаказыАдресДоставки,
	|	ВТ_ЗаказыДок.ЗаказыВес,
	|	ВТ_ЗаказыДок.ЗаказыНППлан,
	|	ВТ_ЗаказыДок.ЗаказыНПФакт,
	|	ВТ_ЗаказыДок.ЗаказыДатаДоставки,
	|	ВТ_ЗаказыДок.ЗаказыКомментарий КАК ЗаказыКомментарий,
	|	ВТ_ЗаказыДок.ЗаказыНомерНакладной
	|ПОМЕСТИТЬ ВТ_Заказы
	|ИЗ
	|	ВТ_ЗаказыДок КАК ВТ_ЗаказыДок
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ES_ИзменяемыеРеквизитыЗаказов.СрезПоследних(
	|				,
	|				Заказ В
	|						(ВЫБРАТЬ
	|							ВТ_ЗаказыДок.ЗаказыЗаказ
	|						ИЗ
	|							ВТ_ЗаказыДок КАК ВТ_ЗаказыДок)
	|					И РеквизитЗаказа = ЗНАЧЕНИЕ(Перечисление.ES_ИзменяемыеРеквизитыЗаказа.Комментарий)
	|					И (Регистратор ССЫЛКА Документ.ES_ОтчетОДоставке
	|						ИЛИ Регистратор ССЫЛКА Документ.ES_Самовывоз)) КАК ES_ИзменяемыеРеквизитыЗаказовСрезПоследних
	|		ПО ВТ_ЗаказыДок.ЗаказыЗаказ = ES_ИзменяемыеРеквизитыЗаказовСрезПоследних.Заказ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Док.Ссылка КАК Ссылка,
	|	Док.НомерДока КАК НомерДока,
	|	Док.ДатаДока КАК ДатаДока,
	|	Док.ВидОперации КАК ВидОперации,
	|	Док.Заказчик КАК Заказчик,
	|	Док.Организация КАК Организация,
	|	Док.ПроцентУдержания КАК ПроцентУдержания,
	|	ВТ_Платежи.ПлатежиНомерСтроки КАК ПлатежиНомерСтроки,
	|	ВТ_Платежи.ПлатежиЗаказ,
	|	ВТ_Платежи.ПлатежиНомер,
	|	ВТ_Платежи.ПлатежиДата,
	|	ВТ_Платежи.ПлатежиДатаДоставки,
	|	ВТ_Платежи.ПлатежиВхНакладная,
	|	ВТ_Платежи.ПлатежиАдресДоставки,
	|	ВТ_Платежи.ПлатежиНППлан КАК ПлатежиНППлан,
	|	ВТ_Платежи.ПлатежиНПФакт КАК ПлатежиНПФакт,
	|	ВТ_Платежи.ПлатежиСуммаУдержано КАК ПлатежиСуммаУдержано,
	|	ВТ_Платежи.ПлатежиСуммаКВозврату КАК ПлатежиСуммаКВозврату,
	|	ВТ_Заказы.ЗаказыНомерСтроки КАК ЗаказыНомерСтроки,
	|	ВТ_Заказы.ЗаказыЗаказ,
	|	ВТ_Заказы.ЗаказыВхНакладная,
	|	ВТ_Заказы.ЗаказыАдресДоставки,
	|	ВТ_Заказы.ЗаказыВес КАК ЗаказыВес,
	|	ВТ_Заказы.ЗаказыНППлан КАК ЗаказыНППлан,
	|	ВТ_Заказы.ЗаказыНПФакт КАК ЗаказыНПФакт,
	|	ВТ_Заказы.ЗаказыСтатус,
	|	ВТ_Заказы.ЗаказыДатаДоставки,
	|	ВТ_Заказы.ЗаказыКомментарий,
	|	ВТ_Платежи.ПлатежиНПФактНал КАК ПлатежиНПФактНал,
	|	ВТ_Платежи.ПлатежиНПФактБезнал КАК ПлатежиНПФактБезнал,
	|	ВТ_Заказы.ЗаказыНомерНакладной,
	|	ВТ_Платежи.ПлатежиНомерНакладной,
	|	ЕСТЬNULL(Док.КОплате, ЛОЖЬ) КАК КОплате,
	|	ВТ_Платежи.ПлатежиКОплате КАК ПлатежиКОплате
	|ИЗ
	|	Док КАК Док
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Платежи КАК ВТ_Платежи
	|		ПО Док.Ссылка = ВТ_Платежи.ПлатежиСсылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
	|		ПО Док.Ссылка = ВТ_Заказы.ЗаказыСсылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерДока,
	|	ПлатежиНомерСтроки,
	|	ЗаказыНомерСтроки
	|ИТОГИ
	|	МАКСИМУМ(НомерДока),
	|	МАКСИМУМ(ДатаДока),
	|	МАКСИМУМ(ВидОперации),
	|	МАКСИМУМ(Заказчик),
	|	МАКСИМУМ(Организация),
	|	МАКСИМУМ(ПроцентУдержания),
	|	СУММА(ПлатежиНППлан),
	|	СУММА(ПлатежиНПФакт),
	|	СУММА(ПлатежиСуммаУдержано),
	|	СУММА(ПлатежиСуммаКВозврату),
	|	СУММА(ЗаказыВес),
	|	СУММА(ЗаказыНППлан),
	|	СУММА(ЗаказыНПФакт),
	|	СУММА(ПлатежиНПФактНал),
	|	СУММА(ПлатежиНПФактБезнал),
	|	МАКСИМУМ(КОплате),
	|	СУММА(ПлатежиКОплате)
	|ПО
	|	Ссылка";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ES_Возвраты.ПФ_MXL_Возврат");
		Если ТипЗнч(Макет)<> Тип("ТабличныйДокумент") Тогда
			Макет = ПолучитьМакет("ПФ_MXL_Возврат");
		КонецЕсли;
				
		ПервыйДокумент = Истина;
				
		ВыборкаИтог = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаИтог.Следующий() Цикл
			
			Если ПервыйДокумент Тогда
				ПервыйДокумент = Ложь;
			Иначе	
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ЭтоВозвратПлатежей = ВыборкаИтог.ВидОперации = Перечисления.ES_ВидыОперацийВозвраты.Платежи;
			ЭтоВозвратЗаказов = ВыборкаИтог.ВидОперации = Перечисления.ES_ВидыОперацийВозвраты.Заказы;
			
			// ОбластьШапка
			НомерДокумента = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ВыборкаИтог.НомерДока, Истина, Истина);
			Если ЭтоВозвратПлатежей Тогда
				Заголовок = "Возврат платежей №";
			ИначеЕсли ЭтоВозвратЗаказов Тогда
				Заголовок = "Возврат заказов №";
			Иначе
				Заголовок = "Возврат №";
			КонецЕсли; 
			СведенияОбОрганизации = УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(ВыборкаИтог.Организация, ВыборкаИтог.ДатаДока);
			Организация = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОбОрганизации,"ПолноеНаименование");
			
			ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
			ОбластьШапка.Параметры.ТекстЗаголовка = Заголовок
													+ НомерДокумента
													+ " от "
													+ Формат(ВыборкаИтог.ДатаДока, "ДЛФ=DD");
													
			ОбластьШапка.Параметры.Организация 	= Организация; 
			ОбластьШапка.Параметры.Заказчик 	= ВыборкаИтог.Заказчик;
			ТабДок.Вывести(ОбластьШапка);
			
			Если ЭтоВозвратПлатежей Тогда
				ОбластьПроцентУдержания = Макет.ПолучитьОбласть("СтрокаПроцентУдержания");
				ОбластьПроцентУдержания.Параметры.ПроцентУдержания = ВыборкаИтог.ПроцентУдержания;
				ТабДок.Вывести(ОбластьПроцентУдержания);
			КонецЕсли;
			
			// Возврат платежей
			Если ЭтоВозвратПлатежей Тогда
				
				// Шапка таблицы
				ОбластьПлатежиШапка = Макет.ПолучитьОбласть("ПлатежиШапка");
				
				//ОбластьПлатежиШапка.Параметры.Удержано =  ?(ВыборкаИтог.КОплате,"К оплате", "Удержано");
				ОбластьПлатежиШапка.Параметры.Удержано =   "Удержано";				 
				ТабДок.Вывести(ОбластьПлатежиШапка);
				
				// Строки таблицы
				Выборка = ВыборкаИтог.Выбрать();
				Пока Выборка.Следующий() Цикл
					
					ОбластьПлатежиСтрока = Макет.ПолучитьОбласть("ПлатежиСтрока");
					//ЕФСОЛ Несторук 11.08.2016 +
					ЗаказСНомером = "Заказ на доставку
					|" + Выборка.ПлатежиНомерНакладной;
					//ЕФСОЛ Несторук 11.08.2016 -
					
					ОбластьПлатежиСтрока.Параметры.Номер 			= Выборка.ПлатежиНомерСтроки;
					ОбластьПлатежиСтрока.Параметры.Заказ 			= ЗаказСНомером;
					ОбластьПлатежиСтрока.Параметры.ДатаДоставки 	= Выборка.ПлатежиДатаДоставки;
					ОбластьПлатежиСтрока.Параметры.ВхНакладная 		= Выборка.ПлатежиВхНакладная;
					ОбластьПлатежиСтрока.Параметры.АдресДоставки 	= Выборка.ПлатежиАдресДоставки;
					ОбластьПлатежиСтрока.Параметры.НППлан 			= Выборка.ПлатежиНППлан;
					//ОбластьПлатежиСтрока.Параметры.НПФакт 			= Выборка.ПлатежиНПФакт;
					
					ОбластьПлатежиСтрока.Параметры.НПФактНал 		= Выборка.ПлатежиНПФактНал;
					ОбластьПлатежиСтрока.Параметры.НПФактБезнал		= Выборка.ПлатежиНПФактБезнал;
					
					Если ОбластьПлатежиШапка.Параметры.Удержано = "К оплате" тогда
						ОбластьПлатежиСтрока.Параметры.Удержано 	= Выборка.ПлатежиКОплате;
					Иначе
						ОбластьПлатежиСтрока.Параметры.Удержано 	= Выборка.ПлатежиСуммаУдержано;
					КонецЕсли;
					
					ОбластьПлатежиСтрока.Параметры.СуммаКВозврату 	= Выборка.ПлатежиСуммаКВозврату;
					
					ТабДок.Вывести(ОбластьПлатежиСтрока);
					
				КонецЦикла;
				
				// Итоги таблицы
				ОбластьПлатежиИтого = Макет.ПолучитьОбласть("ПлатежиИтого");
				ОбластьПлатежиИтого.Параметры.ИтогоНППлан 	= ВыборкаИтог.ПлатежиНППлан;
				//ОбластьПлатежиИтого.Параметры.ИтогоНПФакт 	= ВыборкаИтог.ПлатежиНПФакт;
				ОбластьПлатежиИтого.Параметры.ИтогоНПФактНал 	= ВыборкаИтог.ПлатежиНПФактНал;
				ОбластьПлатежиИтого.Параметры.ИтогоНПФактБезнал 	= ВыборкаИтог.ПлатежиНПФактБезнал;
				Если ОбластьПлатежиШапка.Параметры.Удержано = "К оплате" тогда
					ОбластьПлатежиИтого.Параметры.ИтогУдержано = ВыборкаИтог.ПлатежиКОплате;
				Иначе
					ОбластьПлатежиИтого.Параметры.ИтогУдержано 	= ВыборкаИтог.ПлатежиСуммаУдержано;
				КонецЕсли;
				
				ОбластьПлатежиИтого.Параметры.ИтогСуммаКВозврату = ВыборкаИтог.ПлатежиСуммаКВозврату;
				
				ТабДок.Вывести(ОбластьПлатежиИтого);
				
			// Возврат заказов	
			ИначеЕсли ЭтоВозвратЗаказов Тогда 
				
				// Шапка таблицы
				ОбластьЗаказыШапка = Макет.ПолучитьОбласть("ЗаказыШапка");
				ТабДок.Вывести(ОбластьЗаказыШапка);
				
				// Строки таблицы
				Выборка = ВыборкаИтог.Выбрать();
				Пока Выборка.Следующий() Цикл
					
					ОбластьЗаказыСтрока = Макет.ПолучитьОбласть("ЗаказыСтрока");
					//ЕФСОЛ Несторук 11.08.2016 +
					ЗаказСНомером = "Заказ на доставку
					|" + Выборка.ЗаказыНомерНакладной;
					//ЕФСОЛ Несторук 11.08.2016 - 	
					
					ОбластьЗаказыСтрока.Параметры.Номер 		= Выборка.ЗаказыНомерСтроки;
					ОбластьЗаказыСтрока.Параметры.Заказ 		= ЗаказСНомером;
					ОбластьЗаказыСтрока.Параметры.Статус 		= Выборка.ЗаказыСтатус;
					ОбластьЗаказыСтрока.Параметры.ВхНакладная 	= Выборка.ЗаказыВхНакладная;
					ОбластьЗаказыСтрока.Параметры.АдресДоставки = Выборка.ЗаказыАдресДоставки;
					ОбластьЗаказыСтрока.Параметры.Вес 			= Выборка.ЗаказыВес;
					//ОбластьЗаказыСтрока.Параметры.НППлан 		= Выборка.ЗаказыНППлан;
					//ОбластьЗаказыСтрока.Параметры.НПФакт 		= Выборка.ЗаказыНПФакт;
					ОбластьЗаказыСтрока.Параметры.ДатаДоставки 	= Выборка.ЗаказыДатаДоставки;
					ОбластьЗаказыСтрока.Параметры.Комментарий 	= Выборка.ЗаказыКомментарий;
					
					ТабДок.Вывести(ОбластьЗаказыСтрока);
					
				КонецЦикла;
				
				// Итоги таблицы
				ОбластьЗаказыИтого = Макет.ПолучитьОбласть("ЗаказыИтого");
				ОбластьЗаказыИтого.Параметры.ИтогоВес 		= ВыборкаИтог.ЗаказыВес;
				//ОбластьЗаказыИтого.Параметры.ИтогоНППлан 	= ВыборкаИтог.ЗаказыНППлан;
				//ОбластьЗаказыИтого.Параметры.ИтогоНПФакт 	= ВыборкаИтог.ЗаказыНПФакт;
				
				ТабДок.Вывести(ОбластьЗаказыИтого);
				
			КонецЕсли; 
			
			// Область Подвал
			ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
			ТабДок.Вывести(ОбластьПодвал);
			
		КонецЦикла;
		
		Возврат ТабДок;
		
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#КонецЕсли