#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ПометкаУдаления ИЛИ РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		
		// Нельзя пометить на удаление и отменить проведение документа, если он проходит по другим документам
		МассивСсылок = Новый Массив;
		МассивСсылок.Добавить(Ссылка);
		
		УстановитьПривилегированныйРежим(Истина);
		ТабНайденныхСсылок = НайтиПоСсылкам(МассивСсылок);
		УстановитьПривилегированныйРежим(Ложь);
		
		Для каждого Строка Из ТабНайденныхСсылок Цикл
			Если Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(Строка.Данные)) Тогда
				//ЭР Несторук С.И. 13.10.2017 14:44:41 {
				//Смотрим ссылаются ли на документ проведенные документы, а не помеченные на удаление
				//Если НЕ Строка.Данные.ПометкаУдаления и НЕ Ссылка = Строка.Данные Тогда
				Если ТипЗнч(Строка.Данные) = Тип("ДокументСсылка.ES_ОтчетОДоставке") Тогда Продолжить; КонецЕсли;
				Если Строка.Данные.Проведен и НЕ Ссылка = Строка.Данные Тогда
					//}ЭР Несторук С.И.
					Сообщить("На документ ссылается " + Строка.Данные);
					Отказ = Истина;
					Возврат;
				КонецЕсли; 
			КонецЕсли; 
		КонецЦикла; 
		
	КонецЕсли; 
	
	// Удаление пустых строк в ТЧ СписокГрузов и Грузы
	ПустыеСтрокиСписокГрузов = СписокГрузов.НайтиСтроки(Новый Структура("КлючСтроки", Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000")));
	Для каждого Стр Из ПустыеСтрокиСписокГрузов Цикл
		СписокГрузов.Удалить(Стр);
	КонецЦикла; 
	ПустыеСтрокиГрузы = Грузы.НайтиСтроки(Новый Структура("Номенклатура", Справочники.Номенклатура.ПустаяСсылка()));
	Для каждого Стр Из ПустыеСтрокиГрузы Цикл
		Грузы.Удалить(Стр);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)

	// Заказы могут быть только в одном плане
	//Если НЕ ПометкаУдаления Тогда
	//	
	//	Запрос = Новый Запрос;
	//	Запрос.Текст = 
	//		"ВЫБРАТЬ
	//		|	ES_ПланДоставкиЗаказы.ДокументДоставки КАК ДокументДоставки
	//		|ПОМЕСТИТЬ ВТ_ДокументыДоставки
	//		|ИЗ
	//		|	Документ.ES_ПланДоставки.Заказы КАК ES_ПланДоставкиЗаказы
	//		|ГДЕ
	//		|	ES_ПланДоставкиЗаказы.Ссылка = &Ссылка
	//		|;
	//		|
	//		|////////////////////////////////////////////////////////////////////////////////
	//		|ВЫБРАТЬ
	//		|	ВТ_ДокументыДоставки.ДокументДоставки,
	//		|	ВЫБОР
	//		|		КОГДА ВТ_ДокументыДоставки.ДокументДоставки ССЫЛКА Документ.ES_ЗаборГруза
	//		|			ТОГДА ES_СтатусыЗаборовСрезПоследних.СтатусЗабора
	//		|		ИНАЧЕ ES_СтатусыЗаказовСрезПоследних.СтатусЗаказа
	//		|	КОНЕЦ КАК Статус,
	//		|	ВЫБОР
	//		|		КОГДА ВТ_ДокументыДоставки.ДокументДоставки ССЫЛКА Документ.ES_ЗаборГруза
	//		|			ТОГДА ES_СтатусыЗаборовСрезПоследних.Регистратор
	//		|		ИНАЧЕ ES_СтатусыЗаказовСрезПоследних.Регистратор
	//		|	КОНЕЦ КАК Регистратор
	//		|ПОМЕСТИТЬ ВТ_ДокСтатус
	//		|ИЗ
	//		|	ВТ_ДокументыДоставки КАК ВТ_ДокументыДоставки
	//		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ES_СтатусыЗаказов.СрезПоследних(
	//		|				,
	//		|				Заказ В
	//		|					(ВЫБРАТЬ
	//		|						ВТ_ДокументыДоставки.ДокументДоставки
	//		|					ИЗ
	//		|						ВТ_ДокументыДоставки КАК ВТ_ДокументыДоставки)) КАК ES_СтатусыЗаказовСрезПоследних
	//		|		ПО ВТ_ДокументыДоставки.ДокументДоставки = ES_СтатусыЗаказовСрезПоследних.Заказ
	//		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ES_СтатусыЗаборов.СрезПоследних(
	//		|				,
	//		|				Забор В
	//		|					(ВЫБРАТЬ
	//		|						ВТ_ДокументыДоставки.ДокументДоставки
	//		|					ИЗ
	//		|						ВТ_ДокументыДоставки КАК ВТ_ДокументыДоставки)) КАК ES_СтатусыЗаборовСрезПоследних
	//		|		ПО ВТ_ДокументыДоставки.ДокументДоставки = ES_СтатусыЗаборовСрезПоследних.Забор
	//		|;
	//		|
	//		|////////////////////////////////////////////////////////////////////////////////
	//		|ВЫБРАТЬ
	//		|	ВТ_ДокСтатус.ДокументДоставки,
	//		|	ВТ_ДокСтатус.Статус
	//		|ИЗ
	//		|	ВТ_ДокСтатус КАК ВТ_ДокСтатус
	//		|ГДЕ
	//		|	НЕ ВТ_ДокСтатус.Регистратор = &Ссылка";
	//	
	//	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	//	
	//	РезультатЗапроса = Запрос.Выполнить();
	//	Если НЕ РезультатЗапроса.Пустой() Тогда
	//		Выборка = РезультатЗапроса.Выбрать();
	//		Пока Выборка.Следующий() Цикл
	//			Если Выборка.Статус = Перечисления.ES_СтатусыЗаборов.Назначен
	//			 ИЛИ Выборка.Статус = Перечисления.ES_СтатусыЗаказов.Назначен Тогда
	//				Сообщить("" + Выборка.ДокументДоставки + " уже внесен в план");
	//				Отказ = Истина;
	//				Возврат;
	//			КонецЕсли; 
	//		КонецЦикла;
	//	КонецЕсли; 
	//
	//КонецЕсли;  // ПометкаУдаления
	 //ЭР Несторук С.И. 13.10.2017 14:59:10 {
	 ///////////////////////////////////////////////////////////////////ЗАКОММЕНТИЛИ///////////////////////////////////////////////////////////////////
	 //// запись в регистр делается при записи документа, для того, чтобы в обработке "Распределение заказов"
	 ////при обновлении вкладки Заказы не попадали заказы, которые уже находятся в Плане - и проведенном, и не проведенном
	 //
	 //// Сведения о заказах / заборах
	 //НаборЗаписейСведенияОЗаказах = РегистрыСведений.ES_СведенияОЗаказах.СоздатьНаборЗаписей();
	 //НаборЗаписейСведенияОЗаказах.Отбор.Регистратор.Установить(Ссылка);	
	 //НаборЗаписейСведенияОЗаказах.Записать();
	 //
	 //НаборЗаписейСведенияОЗаборах = РегистрыСведений.ES_СведенияОЗаборах.СоздатьНаборЗаписей();
	 //НаборЗаписейСведенияОЗаборах.Отбор.Регистратор.Установить(Ссылка);	
	 //НаборЗаписейСведенияОЗаборах.Записать();
	 //
	 //// Статусы заказов / заборов
	 //НаборЗаписейСтатусЗаказа = РегистрыСведений.ES_СтатусыЗаказов.СоздатьНаборЗаписей();
	 //НаборЗаписейСтатусЗаказа.Отбор.Регистратор.Установить(Ссылка);	
	 //НаборЗаписейСтатусЗаказа.Записать();
	 //
	 //НаборЗаписейСтатусЗабора = РегистрыСведений.ES_СтатусыЗаборов.СоздатьНаборЗаписей();
	 //НаборЗаписейСтатусЗабора.Отбор.Регистратор.Установить(Ссылка);	
	 //НаборЗаписейСтатусЗабора.Записать();
	 //
	 ////ЕФСОЛ Несторук 03-11-16 +
	 //Запрос = Новый Запрос;
	 //Запрос.Текст = 
	 //"ВЫБРАТЬ
	 //|	ES_ПланДоставкиЗаказы.ДокументДоставки,
	 //|	ES_ПланДоставкиЗаказы.СвязанныйДокумент,
	 //|	ES_ПланДоставкиЗаказы.ДатаЗаказа,
	 //|	ES_ПланДоставкиЗаказы.ДатаВремяДобавленияЗаказа
	 //|ПОМЕСТИТЬ ВТ_ДанныеИзПлана
	 //|ИЗ
	 //|	Документ.ES_ПланДоставки.Заказы КАК ES_ПланДоставкиЗаказы
	 //|ГДЕ
	 //|	ES_ПланДоставкиЗаказы.Ссылка = &Ссылка
	 //|;
	 //|
	 //|////////////////////////////////////////////////////////////////////////////////
	 //|ВЫБРАТЬ
	 //|	ES_СтатусыЗаказовСрезПоследних.Период КАК Период,
	 //|	ES_СтатусыЗаказовСрезПоследних.Заказ,
	 //|	ES_СтатусыЗаказовСрезПоследних.СтатусЗаказа,
	 //|	ES_СтатусыЗаказовСрезПоследних.Ответственный
	 //|ПОМЕСТИТЬ ВТ_Статусы
	 //|ИЗ
	 //|	РегистрСведений.ES_СтатусыЗаказов.СрезПоследних(
	 //|			,
	 //|			Заказ В
	 //|					(ВЫБРАТЬ
	 //|						ВТ_ДанныеИзПлана.ДокументДоставки
	 //|					ИЗ
	 //|						ВТ_ДанныеИзПлана КАК ВТ_ДанныеИзПлана)
	 //|				И СтатусЗаказа В (&СтатусыЗаказов)) КАК ES_СтатусыЗаказовСрезПоследних
	 //|
	 //|ОБЪЕДИНИТЬ ВСЕ
	 //|
	 //|ВЫБРАТЬ
	 //|	ES_СтатусыЗаборовСрезПоследних.Период,
	 //|	ES_СтатусыЗаборовСрезПоследних.Забор,
	 //|	ES_СтатусыЗаборовСрезПоследних.СтатусЗабора,
	 //|	ES_СтатусыЗаборовСрезПоследних.Ответственный
	 //|ИЗ
	 //|	РегистрСведений.ES_СтатусыЗаборов.СрезПоследних(
	 //|			,
	 //|			Забор В
	 //|					(ВЫБРАТЬ
	 //|						ВТ_ДанныеИзПлана.ДокументДоставки
	 //|					ИЗ
	 //|						ВТ_ДанныеИзПлана КАК ВТ_ДанныеИзПлана)
	 //|				И СтатусЗабора В (&СтатусыЗаборов)) КАК ES_СтатусыЗаборовСрезПоследних
	 //|;
	 //|
	 //|////////////////////////////////////////////////////////////////////////////////
	 //|ВЫБРАТЬ
	 //|	ВТ_ДанныеИзПлана.ДокументДоставки,
	 //|	ВТ_ДанныеИзПлана.СвязанныйДокумент,
	 //|	ВТ_ДанныеИзПлана.ДатаЗаказа,
	 //|	ВТ_ДанныеИзПлана.ДатаВремяДобавленияЗаказа,
	 //|	ЕСТЬNULL(ВТ_Статусы.Период, &ТекДата) КАК Период,
	 //|	ВТ_Статусы.СтатусЗаказа,
	 //|	ЕСТЬNULL(ES_ДанныеПоЗаказамСрезПоследних.ВидДоставки, ЗНАЧЕНИЕ(Перечисление.ES_ВидыДоставки.ПустаяСсылка)) КАК ВидДоставки,
	 //|	ЕСТЬNULL(ES_ДанныеПоЗаказамСрезПоследних.ВидЗабора, ЗНАЧЕНИЕ(Перечисление.ES_ВидыЗабора.ПустаяСсылка)) КАК ВидЗабора,
	 //|	ВТ_Статусы.Ответственный
	 //|ИЗ
	 //|	ВТ_ДанныеИзПлана КАК ВТ_ДанныеИзПлана
	 //|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Статусы КАК ВТ_Статусы
	 //|		ПО ВТ_ДанныеИзПлана.ДокументДоставки = ВТ_Статусы.Заказ
	 //|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ES_ДанныеПоЗаказам.СрезПоследних КАК ES_ДанныеПоЗаказамСрезПоследних
	 //|		ПО ВТ_ДанныеИзПлана.ДокументДоставки = ES_ДанныеПоЗаказамСрезПоследних.Заказ
	 //|
	 //|УПОРЯДОЧИТЬ ПО
	 //|	Период";
	 //
	 //Запрос.УстановитьПараметр("Ссылка", Ссылка);
	 //Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	 //
	 //МассивСтатусовЗаказов = Новый Массив;
	 //МассивСтатусовЗаказов.Добавить(Перечисления.ES_СтатусыЗаказов.Комплектуется);
	 //МассивСтатусовЗаказов.Добавить(Перечисления.ES_СтатусыЗаказов.НеДоставлен);
	 //МассивСтатусовЗаказов.Добавить(Перечисления.ES_СтатусыЗаказов.Подготовлен);
	 ////ЕФСОЛ Несторук 03-11-16 +
	 //МассивСтатусовЗаказов.Добавить(Перечисления.ES_СтатусыЗаказов.ПодготовленПринят);
	 //МассивСтатусовЗаказов.Добавить(Перечисления.ES_СтатусыЗаказов.ОжидаетГруз);
	 //МассивСтатусовЗаказов.Добавить(Перечисления.ES_СтатусыЗаказов.ОжидаетГрузНазначен); 
	 ////ЕФСОЛ Несторук 03-11-16 -
	 //Запрос.УстановитьПараметр("СтатусыЗаказов", МассивСтатусовЗаказов);
	 //
	 //МассивСтатусовЗаборов = Новый Массив;
	 //МассивСтатусовЗаборов.Добавить(Перечисления.ES_СтатусыЗаборов.ВРаботе);
	 //МассивСтатусовЗаборов.Добавить(Перечисления.ES_СтатусыЗаборов.Комплектуется);
	 //Запрос.УстановитьПараметр("СтатусыЗаборов", МассивСтатусовЗаборов);
	 //
	 //РезультатЗапроса = Запрос.Выполнить();
	 //
	 //Выборка = РезультатЗапроса.Выбрать();
	 //Если НЕ ПометкаУдаления Тогда
	 //    
	 //    Пока Выборка.Следующий() Цикл
	 //   	 
	 //   	 // Движения Заказов на доставку
	 //   	 Если ТипЗнч(Выборка.ДокументДоставки) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
	 //   		 
	 //   		 // РС ES_СведенияОЗаказах
	 //   		 НоваяЗаписьСведенияОЗаказах = НаборЗаписейСведенияОЗаказах.Добавить();
	 //   		 НоваяЗаписьСведенияОЗаказах.Период 			= Дата;
	 //   		 НоваяЗаписьСведенияОЗаказах.Регистратор 	= Ссылка;
	 //   		 НоваяЗаписьСведенияОЗаказах.ПланДоставки 	= Ссылка;
	 //   		 НоваяЗаписьСведенияОЗаказах.Заказ 			= Выборка.ДокументДоставки;
	 //   		 
	 //   		 //ЭР Несторук С.И. 16.02.2017 13:59:07 {
	 //   		 СтрокаЗабор = Заказы.НайтиСтроки(Новый Структура("ДокументДоставки", Выборка.СвязанныйДокумент));
	 //   		 Если СтрокаЗабор.Количество() = 0 Тогда
	 //   			 
	 //   			 Если Выборка.СтатусЗаказа = Перечисления.ES_СтатусыЗаказов.ОжидаетГруз 
	 //   				 И Выборка.ВидДоставки = Перечисления.ES_ВидыДоставки.ДвериДвери Тогда
	 //   				 Отказ = Истина;
	 //   				 Сообщить(НСтр("ru='"+Выборка.ДокументДоставки+" не может находиться в Плане без своего забора " + Выборка.СвязанныйДокумент +"'"));
	 //   				 Продолжить;
	 //   			 КонецЕсли;
	 //   			 
	 //   			 //ЭР Несторук С.И. 16.02.2017 13:59:07 }
	 //   			 
	 //   			 // РС ES_СтатусыЗаказов
	 //   			 НоваяЗаписьСтатусЗаказа = НаборЗаписейСтатусЗаказа.Добавить();
	 //   			 НоваяЗаписьСтатусЗаказа.Период 					= Дата;
	 //   			 НоваяЗаписьСтатусЗаказа.Регистратор 			= Ссылка;
	 //   			 НоваяЗаписьСтатусЗаказа.Заказ 					= Выборка.ДокументДоставки;
	 //   			 //ЕФСОЛ Несторук 03-11-16 +
	 //   			 Если Выборка.СтатусЗаказа = Перечисления.ES_СтатусыЗаказов.ПодготовленПринят 
	 //   				 ИЛИ Выборка.СтатусЗаказа = Перечисления.ES_СтатусыЗаказов.НеДоставлен  Тогда
	 //   				 НоваяЗаписьСтатусЗаказа.СтатусЗаказа 	= Перечисления.ES_СтатусыЗаказов.НазначенПринят;
	 //   			 Иначе
	 //   				 //ЕФСОЛ Несторук 03-11-16 -	
	 //   				 НоваяЗаписьСтатусЗаказа.СтатусЗаказа 		= Перечисления.ES_СтатусыЗаказов.Назначен;
	 //   				 //ЕФСОЛ Несторук 03-11-16 +
	 //   			 КонецЕсли;
	 //   			 //ЕФСОЛ Несторук 03-11-16 -
	 //   			 
	 //   			 НоваяЗаписьСтатусЗаказа.Ответственный 			= Ответственный;
	 //   			 //ЭР Несторук С.И. 16.02.2017 13:59:31 {
	 //   		 КонецЕсли;
	 //   		 //ЭР Несторук С.И. 16.02.2017 13:59:31 }
	 //   		 
	 //   	 КонецЕсли; 
	 //   	 
	 //   	 // Движения Заборов
	 //   	 Если ТипЗнч(Выборка.ДокументДоставки) = Тип("ДокументСсылка.ES_ЗаборГруза") Тогда
	 //   		 
	 //   		 // РС ES_СведенияОЗаборах
	 //   		 НоваяЗаписьСведенияОЗаборах = НаборЗаписейСведенияОЗаборах.Добавить();
	 //   		 НоваяЗаписьСведенияОЗаборах.Период 			= Дата;
	 //   		 НоваяЗаписьСведенияОЗаборах.Регистратор 	= Ссылка;
	 //   		 НоваяЗаписьСведенияОЗаборах.ПланДоставки 	= Ссылка;
	 //   		 НоваяЗаписьСведенияОЗаборах.ОснованиеЗабора = ?(ЗначениеЗаполнено(Выборка.СвязанныйДокумент), Выборка.СвязанныйДокумент, Выборка.ДокументДоставки);
	 //   		 НоваяЗаписьСведенияОЗаборах.Забор 			= Выборка.ДокументДоставки;
	 //   		 
	 //   		 // РС ES_СтатусыЗаборов
	 //   		 НоваяЗаписьСтатусЗабора = НаборЗаписейСтатусЗабора.Добавить();
	 //   		 НоваяЗаписьСтатусЗабора.Период 				= Дата;
	 //   		 НоваяЗаписьСтатусЗабора.Регистратор 		= Ссылка;
	 //   		 НоваяЗаписьСтатусЗабора.Забор 				= Выборка.ДокументДоставки;
	 //   		 НоваяЗаписьСтатусЗабора.Заказ 				= Выборка.СвязанныйДокумент;
	 //   		 НоваяЗаписьСтатусЗабора.СтатусЗабора 		= Перечисления.ES_СтатусыЗаборов.Назначен;
	 //   		 НоваяЗаписьСтатусЗабора.Ответственный 		= Ответственный;
	 //   		 
	 //   		 //ЭР Несторук С.И. 16.02.2017 13:58:58 {
	 //   		 // РС ES_СтатусыЗаказов
	 //   		 СтрокаЗаказ = Заказы.НайтиСтроки(Новый Структура("ДокументДоставки", Выборка.СвязанныйДокумент));
	 //   		 Если СтрокаЗаказ.Количество() > 0 Тогда
	 //   			 
	 //   			 НоваяЗаписьСтатусЗаказа = НаборЗаписейСтатусЗаказа.Добавить();
	 //   			 НоваяЗаписьСтатусЗаказа.Период 					= Дата;
	 //   			 НоваяЗаписьСтатусЗаказа.Регистратор 			= Ссылка;
	 //   			 НоваяЗаписьСтатусЗаказа.Заказ 					= СтрокаЗаказ[0].ДокументДоставки;
	 //   			 НоваяЗаписьСтатусЗаказа.СтатусЗаказа 			= Перечисления.ES_СтатусыЗаказов.ОжидаетГрузНазначен;
	 //   			 НоваяЗаписьСтатусЗаказа.Ответственный 			= Ответственный;
	 //   		 КонецЕсли;
	 //   		 //ЭР Несторук С.И. 16.02.2017 13:58:58 }
	 //   	 КонецЕсли; 
	 //   	 
	 //    КонецЦикла;
	 //    НаборЗаписейСведенияОЗаказах.Записать();
	 //    НаборЗаписейСведенияОЗаборах.Записать();
	 //    НаборЗаписейСтатусЗаказа.Записать();
	 //    НаборЗаписейСтатусЗабора.Записать();
	 //    
	 //КонецЕсли;
	 ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	 ////}ЭР Несторук С.И.
	
	//ЭР Несторук С.И. 26.09.2017 21:56:12 {
	//Склеиваем план и отчет
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ES_ОтчетОДоставке.Ссылка,
	|	ES_ОтчетОДоставке.ПланДоставки
	|ИЗ
	|	Документ.ES_ОтчетОДоставке КАК ES_ОтчетОДоставке
	|ГДЕ
	|	ES_ОтчетОДоставке.ПланДоставки = &ПланДоставки";
	
	Запрос.УстановитьПараметр("ПланДоставки", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			ОтчетОДоставке = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
			Если ПометкаУдаления Тогда
				ОтчетОДоставке.Записать(РежимЗаписиДокумента.ОтменаПроведения);
				ОтчетОДоставке.ПометкаУдаления = Истина;
				ОтчетОДоставке.Записать();
			Иначе
				ОтчетОДоставке = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
				ОтчетОДоставке.ПометкаУдаления = Ложь;
				ОтчетОДоставке.Записать();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	//}ЭР Несторук С.И.
	//ЕФСОЛ Несторук 03-11-16 -

	//Если НЕ ПометкаУдаления Тогда
	//	Для каждого Строка Из Заказы Цикл
	//		
	//		// Движения Заказов на доставку
	//		Если ТипЗнч(Строка.ДокументДоставки) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
	//			
	//			// РС ES_СведенияОЗаказах
	//			НоваяЗаписьСведенияОЗаказах = НаборЗаписейСведенияОЗаказах.Добавить();
	//			НоваяЗаписьСведенияОЗаказах.Период 			= Дата;
	//			НоваяЗаписьСведенияОЗаказах.Регистратор 	= Ссылка;
	//			НоваяЗаписьСведенияОЗаказах.ПланДоставки 	= Ссылка;
	//			НоваяЗаписьСведенияОЗаказах.Заказ 			= Строка.ДокументДоставки;
	//			
	//			// РС ES_СтатусыЗаказов
	//			НоваяЗаписьСтатусЗаказа = НаборЗаписейСтатусЗаказа.Добавить();
	//			НоваяЗаписьСтатусЗаказа.Период 					= Дата;
	//			НоваяЗаписьСтатусЗаказа.Регистратор 			= Ссылка;
	//			НоваяЗаписьСтатусЗаказа.Заказ 					= Строка.ДокументДоставки;
	//			НоваяЗаписьСтатусЗаказа.СтатусЗаказа 			= Перечисления.ES_СтатусыЗаказов.Назначен;
	//			НоваяЗаписьСтатусЗаказа.Ответственный 			= Ответственный;
	//		КонецЕсли; 
	//		
	//		// Движения Заборов
	//		Если ТипЗнч(Строка.ДокументДоставки) = Тип("ДокументСсылка.ES_ЗаборГруза") Тогда
	//			
	//			// РС ES_СведенияОЗаборах
	//			НоваяЗаписьСведенияОЗаборах = НаборЗаписейСведенияОЗаборах.Добавить();
	//			НоваяЗаписьСведенияОЗаборах.Период 			= Дата;
	//			НоваяЗаписьСведенияОЗаборах.Регистратор 	= Ссылка;
	//			НоваяЗаписьСведенияОЗаборах.ПланДоставки 	= Ссылка;
	//			НоваяЗаписьСведенияОЗаборах.ОснованиеЗабора = ?(ЗначениеЗаполнено(Строка.СвязанныйДокумент), Строка.СвязанныйДокумент, Строка.ДокументДоставки);
	//			НоваяЗаписьСведенияОЗаборах.Забор 			= Строка.ДокументДоставки;
	//			
	//			// РС ES_СтатусыЗаборов
	//			НоваяЗаписьСтатусЗабора = НаборЗаписейСтатусЗабора.Добавить();
	//			НоваяЗаписьСтатусЗабора.Период 				= Дата;
	//			НоваяЗаписьСтатусЗабора.Регистратор 		= Ссылка;
	//			НоваяЗаписьСтатусЗабора.Забор 				= Строка.ДокументДоставки;
	//			НоваяЗаписьСтатусЗабора.Заказ 				= Строка.СвязанныйДокумент;
	//			НоваяЗаписьСтатусЗабора.СтатусЗабора 		= Перечисления.ES_СтатусыЗаборов.Назначен;
	//			НоваяЗаписьСтатусЗабора.Ответственный 		= Ответственный;
	//		КонецЕсли; 

	//	КонецЦикла;
	//	
	//	НаборЗаписейСведенияОЗаказах.Записать();
	//	НаборЗаписейСведенияОЗаборах.Записать();
	//	НаборЗаписейСтатусЗаказа.Записать();
	//	НаборЗаписейСтатусЗабора.Записать();
	//КонецЕсли; 

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	//на одного курьера в день создается только один план доставки
	//Отказ = ПроверитьВозможностьСозданияПланаДоставки();
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = ПроверитьГрузоподьемностьТранспорта();
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;    
	
	ТабСведенияОЗаказе 			= ES_ФормированиеДвиженийПоРегистрамДоставки.СоздатьТаблицуСведенийОЗаказах();
	ТабСведенияОЗаборе 			= ES_ФормированиеДвиженийПоРегистрамДоставки.СоздатьТаблицуСведенийОЗаборах();
	ТабИзменяемыеРеквизитыЗаказа = ES_ФормированиеДвиженийПоРегистрамДоставки.СоздатьТабДляИзменяемыхРеквизитов();
	ТабИзменяемыеРеквизитыЗабора = ES_ФормированиеДвиженийПоРегистрамДоставки.СоздатьТабДляИзменяемыхРеквизитовЗаборов();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ES_ПланДоставкиЗаказы.ДокументДоставки КАК ДокументДоставки,
	|	ES_ПланДоставкиЗаказы.СвязанныйДокумент КАК СвязанныйДокумент,
	|	ES_ПланДоставкиЗаказы.ДатаЗаказа КАК ДатаЗаказа,
	|	ES_ПланДоставкиЗаказы.ДатаВремяДобавленияЗаказа КАК ДатаВремяДобавленияЗаказа,
	|	ES_ПланДоставкиЗаказы.ВидДоставки КАК ВидДоставки,
	|	ES_ПланДоставкиЗаказы.НомерНакладной КАК НомерНакладной
	|ПОМЕСТИТЬ ВТ_ДанныеИзПлана
	|ИЗ
	|	Документ.ES_ПланДоставки.Заказы КАК ES_ПланДоставкиЗаказы
	|ГДЕ
	|	ES_ПланДоставкиЗаказы.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ES_СтатусыЗаказовСрезПоследних.Период КАК Период,
	|	ES_СтатусыЗаказовСрезПоследних.Заказ КАК Заказ,
	|	ES_СтатусыЗаказовСрезПоследних.СтатусЗаказа КАК СтатусЗаказа
	|ПОМЕСТИТЬ ВТ_Статусы
	|ИЗ
	|	РегистрСведений.ES_СтатусыЗаказов.СрезПоследних(
	|			,
	|			Заказ В
	|					(ВЫБРАТЬ
	|						ВТ_ДанныеИзПлана.ДокументДоставки
	|					ИЗ
	|						ВТ_ДанныеИзПлана КАК ВТ_ДанныеИзПлана)
	|				И СтатусЗаказа В (&СтатусыЗаказов)) КАК ES_СтатусыЗаказовСрезПоследних
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ES_СтатусыЗаборовСрезПоследних.Период,
	|	ES_СтатусыЗаборовСрезПоследних.Забор,
	|	ES_СтатусыЗаборовСрезПоследних.СтатусЗабора
	|ИЗ
	|	РегистрСведений.ES_СтатусыЗаборов.СрезПоследних(
	|			,
	|			Забор В
	|					(ВЫБРАТЬ
	|						ВТ_ДанныеИзПлана.ДокументДоставки
	|					ИЗ
	|						ВТ_ДанныеИзПлана КАК ВТ_ДанныеИзПлана)
	|				И СтатусЗабора В (&СтатусыЗаборов)) КАК ES_СтатусыЗаборовСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДанныеИзПлана.ДокументДоставки КАК ДокументДоставки,
	|	ВТ_ДанныеИзПлана.СвязанныйДокумент КАК СвязанныйДокумент,
	|	ВТ_ДанныеИзПлана.ДатаЗаказа КАК ДатаЗаказа,
	|	ВТ_ДанныеИзПлана.ДатаВремяДобавленияЗаказа КАК ДатаВремяДобавленияЗаказа,
	|	ЕСТЬNULL(ВТ_Статусы.Период, &ТекДата) КАК Период,
	|	ВТ_Статусы.СтатусЗаказа КАК СтатусЗаказа,
	|	ВТ_ДанныеИзПлана.ВидДоставки КАК ВидДоставки,
	|	ВТ_ДанныеИзПлана.НомерНакладной КАК НомерНакладной
	|ИЗ
	|	ВТ_ДанныеИзПлана КАК ВТ_ДанныеИзПлана
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Статусы КАК ВТ_Статусы
	|		ПО ВТ_ДанныеИзПлана.ДокументДоставки = ВТ_Статусы.Заказ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	
	МассивСтатусовЗаказов = Новый Массив;
	МассивСтатусовЗаказов.Добавить(Перечисления.ES_СтатусыЗаказов.Комплектуется);
	МассивСтатусовЗаказов.Добавить(Перечисления.ES_СтатусыЗаказов.НеДоставлен);
	МассивСтатусовЗаказов.Добавить(Перечисления.ES_СтатусыЗаказов.Подготовлен);
	//ЕФСОЛ Несторук 03-11-16 +
	МассивСтатусовЗаказов.Добавить(Перечисления.ES_СтатусыЗаказов.ПодготовленПринят);
	МассивСтатусовЗаказов.Добавить(Перечисления.ES_СтатусыЗаказов.ОжидаетГруз);
	МассивСтатусовЗаказов.Добавить(Перечисления.ES_СтатусыЗаказов.ОжидаетГрузНазначен);
	//ЕФСОЛ Несторук 03-11-16 -
	Запрос.УстановитьПараметр("СтатусыЗаказов", МассивСтатусовЗаказов);
	
	МассивСтатусовЗаборов = Новый Массив;
	МассивСтатусовЗаборов.Добавить(Перечисления.ES_СтатусыЗаборов.ВРаботе);
	МассивСтатусовЗаборов.Добавить(Перечисления.ES_СтатусыЗаборов.Комплектуется);
	Запрос.УстановитьПараметр("СтатусыЗаборов", МассивСтатусовЗаборов);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Движения.ES_СтатусыЗаказов.Записывать = Истина;
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			//ПериодПроведения = ?(Дата < Выборка.ДатаЗаказа, Выборка.Период + 1, Дата);
			Если ТипЗнч(Выборка.ДокументДоставки) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
			
				// РС ES_СведенияОЗаказах - заполнение таблицы
				НоваяСтрока = ТабСведенияОЗаказе.Добавить();
				НоваяСтрока.Движения 		= Движения.ES_СведенияОЗаказах;
				//ЕФСОЛ Несторук 21-11-16 +
				//НоваяСтрока.Период 			= Выборка.ДатаВремяДобавленияЗаказа;//ПериодПроведения; закомментированно
				НоваяСтрока.Период			= Дата; //добавлено
				//ЕФСОЛ Несторук 21-11-16 -
				НоваяСтрока.Регистратор 	= Ссылка;
				НоваяСтрока.Заказ 			= Выборка.ДокументДоставки;
				НоваяСтрока.ПланДоставки 	= Ссылка;
				
				// РС ES_СтатусыЗаказов
				СтрокаЗабор = Заказы.НайтиСтроки(Новый Структура("ДокументДоставки", Выборка.СвязанныйДокумент));
				Если СтрокаЗабор.Количество() = 0 Тогда
					//ЭР Несторук С.И. 09.03.2017 14:35:25 {
					Если Выборка.СтатусЗаказа = Перечисления.ES_СтатусыЗаказов.ОжидаетГруз 
						И Выборка.ВидДоставки = Перечисления.ES_ВидыДоставки.ДвериДвери Тогда
						Отказ = Истина;
						Сообщить(НСтр("ru='"+Выборка.ДокументДоставки+" " + "("+выборка.НомерНакладной+")"+" не может находиться в Плане без своего забора " + Выборка.СвязанныйДокумент +"'"));
						Продолжить;
					КонецЕсли;
					//}ЭР Несторук С.И.
					Движение = Движения.ES_СтатусыЗаказов.Добавить();
					Движение.Период 		= Выборка.ДатаВремяДобавленияЗаказа;//ПериодПроведения;
					Движение.Заказ 			= Выборка.ДокументДоставки;
					//ЕФСОЛ Несторук 03-11-16 +
					Если Выборка.СтатусЗаказа = Перечисления.ES_СтатусыЗаказов.ПодготовленПринят 
						ИЛИ Выборка.СтатусЗаказа = Перечисления.ES_СтатусыЗаказов.НеДоставлен Тогда
						Движение.СтатусЗаказа 	= Перечисления.ES_СтатусыЗаказов.НазначенПринят;
					Иначе
						//ЕФСОЛ Несторук 03-11-16 -	
						Движение.СтатусЗаказа 	= Перечисления.ES_СтатусыЗаказов.Назначен;
						//ЕФСОЛ Несторук 03-11-16 +
					КонецЕсли;
					//ЕФСОЛ Несторук 03-11-16 -	
					Движение.Ответственный 	= Ответственный;
				КонецЕсли;
			
				// РС ES_ИзменяемыеРеквизитыЗаказов
				// Курьер
				НоваяСтрока = ТабИзменяемыеРеквизитыЗаказа.Добавить();
				НоваяСтрока.Движения 		= Движения.ES_ИзменяемыеРеквизитыЗаказов;
				НоваяСтрока.Период 			= Выборка.ДатаВремяДобавленияЗаказа;//ПериодПроведения;
				НоваяСтрока.Регистратор 	= Ссылка;
				НоваяСтрока.Заказ 			= Выборка.ДокументДоставки;
				НоваяСтрока.РеквизитЗаказа 	= Перечисления.ES_ИзменяемыеРеквизитыЗаказа.Курьер;
				НоваяСтрока.Значение 		= Курьер;
				
				// Подрядчик
				НоваяСтрока = ТабИзменяемыеРеквизитыЗаказа.Добавить();
				НоваяСтрока.Движения 		= Движения.ES_ИзменяемыеРеквизитыЗаказов;
				НоваяСтрока.Период 			= Выборка.ДатаВремяДобавленияЗаказа;//ПериодПроведения;
				НоваяСтрока.Регистратор 	= Ссылка;
				НоваяСтрока.Заказ 			= Выборка.ДокументДоставки;
				НоваяСтрока.РеквизитЗаказа 	= Перечисления.ES_ИзменяемыеРеквизитыЗаказа.Подрядчик;
				НоваяСтрока.Значение 		= Подрядчик;

				
			ИначеЕсли ТипЗнч(Выборка.ДокументДоставки) = Тип("ДокументСсылка.ES_ЗаборГруза") Тогда
				
				// РС ES_СведенияОЗаборах - заполнение таблицы
				НоваяСтрока = ТабСведенияОЗаборе.Добавить();
				НоваяСтрока.Движения 		= Движения.ES_СведенияОЗаборах;
				//ЕФСОЛ Несторук 22-11-16 +
				//НоваяСтрока.Период 			= Выборка.ДатаВремяДобавленияЗаказа;//ПериодПроведения; закомментировано
				НоваяСтрока.Период 			= Дата;//добавлено
				//ЕФСОЛ Несторук 22-11-16 -
				НоваяСтрока.Регистратор 	= Ссылка;
				НоваяСтрока.ОснованиеЗабора = ?(ЗначениеЗаполнено(Выборка.СвязанныйДокумент), Выборка.СвязанныйДокумент, Выборка.ДокументДоставки);
				НоваяСтрока.Забор 			= Выборка.ДокументДоставки;
				НоваяСтрока.ПланДоставки 	= Ссылка;
				
				// РС ES_СтатусыЗаборов
				Движения.ES_СтатусыЗаборов.Записывать = Истина;
				Движение = Движения.ES_СтатусыЗаборов.Добавить();
				Движение.Период 		= Выборка.ДатаВремяДобавленияЗаказа;//ПериодПроведения;
				Движение.Забор 			= Выборка.ДокументДоставки;
				Движение.Заказ 			= Выборка.СвязанныйДокумент;
				Движение.СтатусЗабора 	= Перечисления.ES_СтатусыЗаборов.Назначен;
				Движение.Ответственный 	= Ответственный;
				
				// РС ES_ИзменяемыеРеквизитыЗаборов
				// Курьер
				НоваяСтрока = ТабИзменяемыеРеквизитыЗабора.Добавить();
				НоваяСтрока.Движения 		= Движения.ES_ИзменяемыеРеквизитыЗаборов;
				НоваяСтрока.Период 			= Выборка.ДатаВремяДобавленияЗаказа;//ПериодПроведения;
				НоваяСтрока.Регистратор 	= Ссылка;
				НоваяСтрока.Забор 			= Выборка.ДокументДоставки;
				НоваяСтрока.РеквизитЗабора 	= Перечисления.ES_ИзменяемыеРеквизитыЗабора.Курьер;
				НоваяСтрока.Значение 		= Курьер;
				
				//ЭР Несторук С.И. 16.02.2017 11:20:49 {
				СтрокаЗаказ = Заказы.НайтиСтроки(Новый Структура("ДокументДоставки", Выборка.СвязанныйДокумент));
				Если СтрокаЗаказ.Количество() > 0 Тогда
				
					Движение = Движения.ES_СтатусыЗаказов.Добавить();
					Движение.Период 		= Выборка.ДатаВремяДобавленияЗаказа;//ПериодПроведения;
					Движение.Заказ 			= СтрокаЗаказ[0].ДокументДоставки;
					Движение.СтатусЗаказа 	= Перечисления.ES_СтатусыЗаказов.ОжидаетГрузНазначен;
					Движение.Ответственный 	= Ответственный;
				КонецЕсли;
	            
				КонецЕсли;
				//ЭР Несторук С.И. 16.02.2017 11:20:49 } 
				//// Подрядчик
				//Если ЗначениеЗаполнено(Подрядчик) Тогда
				//НоваяСтрока = ТабИзменяемыеРеквизитыЗаказа.Добавить();
				//НоваяСтрока.Движения 		= Движения.ES_ИзменяемыеРеквизитыЗаказов;
				//НоваяСтрока.Период 			= Выборка.ДатаВремяДобавленияЗаказа;//ПериодПроведения;
				//НоваяСтрока.Регистратор 	= Ссылка;
				//НоваяСтрока.Заказ 			= Выборка.ДокументДоставки;
				//НоваяСтрока.РеквизитЗаказа 	= Перечисления.ES_ИзменяемыеРеквизитыЗаказа.Подрядчик;
				//НоваяСтрока.Значение 		= Подрядчик;
				//КонецЕсли;
			
		КонецЦикла;
		
		// РС ES_СведенияОЗаказах
		ES_ФормированиеДвиженийПоРегистрамДоставки.СделатьЗаписьВРССведенияОЗаказах(ТабСведенияОЗаказе, Выборка.ДатаВремяДобавленияЗаказа);//ПериодПроведения);
				
		// РС ES_СведенияОЗаборах
		ES_ФормированиеДвиженийПоРегистрамДоставки.СделатьЗаписьВРССведенияОЗаборах(ТабСведенияОЗаборе, Выборка.ДатаВремяДобавленияЗаказа);//ПериодПроведения);
		
		// РС ES_ИзменяемыеРеквизитыЗаказов
		ES_ФормированиеДвиженийПоРегистрамДоставки.СделатьЗаписьВРегистрСведенийИзменяемыеРеквизитыЗаказа(ТабИзменяемыеРеквизитыЗаказа, Ссылка);
		
		// РС ES_ИзменяемыеРеквизитыЗаборов
		ES_ФормированиеДвиженийПоРегистрамДоставки.СделатьЗаписьВРегистрСведенийИзменяемыеРеквизитыЗабора(ТабИзменяемыеРеквизитыЗабора, Ссылка);

	КонецЕсли;
	
	Если ЗначениеЗаполнено(Склад.ES_Партнер) И НЕ Отказ Тогда
		ДобавитьДвиженияПоРегиструЗаказыНаСкладе(Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьДвиженияПоРегиструЗаказыНаСкладе(Отказ) 
	
	 	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ES_ПланДоставкиЗаказы.ДокументДоставки КАК Документ.ЗаказПокупателя) КАК Заказ,
		|	ES_ПланДоставкиЗаказы.СвязанныйДокумент КАК СвязанныйДокумент,
		|	ES_ПланДоставкиЗаказы.ВидДоставки КАК ВидДоставки
		|ПОМЕСТИТЬ ВТ_Заказы
		|ИЗ
		|	Документ.ES_ПланДоставки.Заказы КАК ES_ПланДоставкиЗаказы
		|ГДЕ
		|	ES_ПланДоставкиЗаказы.Ссылка = &Ссылка
		|	И ES_ПланДоставкиЗаказы.ДокументДоставки ССЫЛКА Документ.ЗаказПокупателя
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Заказы.Заказ КАК Заказ,
		|	ЕСТЬNULL(ES_ЗаказыНаСкладеОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
		|	ВТ_Заказы.СвязанныйДокумент КАК СвязанныйДокумент,
		|	ВТ_Заказы.ВидДоставки КАК ВидДоставки
		|ИЗ
		|	ВТ_Заказы КАК ВТ_Заказы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ES_ЗаказыНаСкладе.Остатки(
		|				,
		|				Заказ В
		|						(ВЫБРАТЬ
		|							ВТ_Заказы.Заказ
		|						ИЗ
		|							ВТ_Заказы КАК ВТ_Заказы)
		|					И Склад = &Склад) КАК ES_ЗаказыНаСкладеОстатки
		|		ПО ВТ_Заказы.Заказ = ES_ЗаказыНаСкладеОстатки.Заказ";
	
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		//ЭР Несторук С.И. 25.10.2017 14:28:22 {
		Если Выборка.ВидДоставки = Перечисления.ES_ВидыДоставки.ДвериДвери Тогда
			НайтиСтроки = Заказы.НайтиСтроки(Новый Структура("ДокументДоставки", Выборка.СвязанныйДокумент));
			Если НайтиСтроки.Количество() > 0 Тогда 
				Продолжить;
			КонецЕсли;
		КонецЕсли;	
		//}ЭР Несторук С.И.
			
		Если Выборка.КоличествоОстаток > 0 Тогда
			Движение = Движения.ES_ЗаказыНаСкладе.ДобавитьРасход();
			Движение.Заказ			= Выборка.Заказ;
			Движение.Период			= Дата;
			//Движение.Период			= ДатаПодтверждения;
			Движение.Количество		= Выборка.КоличествоОстаток;
			Движение.Склад			= Склад; 
			
			Движение = Движения.ES_ЗаказыНаСкладе.ДобавитьПриход();
			Движение.Заказ			= Выборка.Заказ;
			Движение.Период			= Дата;
			//Движение.Период			= ДатаПодтверждения;
			Движение.Количество		= Выборка.КоличествоОстаток;
			Движение.Склад			= Склад;
			Движение.Курьер			= Курьер;
		Иначе 
			Отказ = Истина;
			Сообщить("На складе "+ Склад + " "+ Выборка.Заказ + " отсутствует");
		КонецЕсли;
	КонецЦикла;
	
	
	

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	////Если документ находится в проведенном документе отчет о доставке, запрещать отменять проведение
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	ES_ОтчетОДоставке.Ссылка
	//	|ИЗ
	//	|	Документ.ES_ОтчетОДоставке КАК ES_ОтчетОДоставке
	//	|ГДЕ
	//	|	ES_ОтчетОДоставке.ПланДоставки = &ПланДоставки
	//	|	И ES_ОтчетОДоставке.Проведен";

	//Запрос.УстановитьПараметр("ПланДоставки", Ссылка);

	//РезультатЗапроса = Запрос.Выполнить();
	//Если НЕ РезультатЗапроса.Пустой() Тогда
	//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("На документ найдены ссылки в других объектах");
	//	Отказ = Истина;
	//КонецЕсли;
	
КонецПроцедуры

Функция ПроверитьВозможностьСозданияПланаДоставки ()
	
	Отказ = Ложь;
	Если Подрядчиком = Ложь Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ES_ПланДоставки.Ссылка
		|ИЗ
		|	Документ.ES_ПланДоставки КАК ES_ПланДоставки
		|ГДЕ
		|	ES_ПланДоставки.Дата МЕЖДУ &ДатаН И &ДатаК
		|	И ES_ПланДоставки.Проведен = ИСТИНА
		|	И ES_ПланДоставки.Курьер = &Курьер
		|	И НЕ ES_ПланДоставки.Ссылка = &Ссылка
		|	И ES_ПланДоставки.Подрядчиком = ЛОЖЬ";
		Запрос.УстановитьПараметр("ДатаН",НачалоДня(ЭтотОбъект.Дата));
		Запрос.УстановитьПараметр("ДатаК",КонецДня(ЭтотОбъект.Дата));
		Запрос.УстановитьПараметр("Курьер",Курьер);
		Запрос.УстановитьПараметр("Ссылка",ЭтотОбъект.Ссылка);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			Отказ = Истина;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Для курьера " + Курьер + " уже создан документ " + Выборка.Ссылка);
			Прервать;
		КонецЦикла;
	КонецЕсли;
	Возврат Отказ;
	
КонецФункции

Функция ПроверитьГрузоподьемностьТранспорта()
	Отказ = Ложь;
	Если ЗначениеЗаполнено(ТранспортноеСредство) Тогда
		Если ТранспортноеСредство.ГрузоподъемностьВТоннах*1000 < Заказы.Итог("ОбщийВес") Тогда
			Отказ = Истина;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Грузоподъемность транспортного средства меньше общего веса заказов в плане");
		КонецЕсли;
	КонецЕсли;
	
	Возврат Отказ;
	
КонецФункции

#КонецЕсли
