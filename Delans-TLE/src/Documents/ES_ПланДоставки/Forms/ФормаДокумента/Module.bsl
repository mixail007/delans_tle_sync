
////////////////////////////////////////////////////////////////////////////////
// СОБЫТИЯ ФОРМЫ

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//УправлениеНебольшойФирмойСервер.ЗаполнитьШапкуДокумента(
	//	Объект,
	//	,
	//	Параметры.ЗначениеКопирования,
	//	Параметры.Основание,
	//	РазрешеноПроведение,
	//	Параметры.ЗначенияЗаполнения
	//);
	ГрузыВРазрезеЗаказов = Истина;
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда   
		// ЗАКОММЕНТИРОВАНО. нужно понять назначение
		//Если Параметры.Свойство("МассивЗаказовДоставки") Тогда
		//	ЗаполнитьТЧДаннымиЗаказаДоставки(Параметры.МассивЗаказовДоставки);
		//КонецЕсли;
	Иначе
		ЗаполнитьГиперссылкуОтчетОДоставке();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.СхемаПроезда) Тогда
		УправлениеНебольшойФирмойКлиентСервер.УстановитьКартинкуДляКомментария(Элементы.ГруппаСхемаПроезда, Объект.СхемаПроезда);
	Иначе
		УправлениеНебольшойФирмойКлиентСервер.УстановитьКартинкуДляКомментария(Элементы.ГруппаСхемаПроезда, Объект.Комментарий);
	КонецЕсли; 
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма, Элементы.ГруппаВажныеКомандыПланДоставки);
	// Конец СтандартныеПодсистемы.Печать
	
	Если Объект.Подрядчиком Тогда
		Элементы.ДанныеПодрадчикаПолучателя.Видимость = Истина;	
	Иначе
		Элементы.ДанныеПодрадчикаПолучателя.Видимость = Ложь;
	КонецЕсли;
	
	////ES_Савченко Е.Р. 14.08.2017 +
	Если НЕ ЗначениеЗаполнено(Объект.Склад)Тогда
		Объект.Склад = ES_ОбщегоНазначения.ПолучитьСтартовуюНастройку(Перечисления.ES_ВидыСтартовыхНастроек.Склад);
	КонецЕсли;
	////ES_Савченко Е.Р. 14.08.2017 -
	
    ////ES_Савченко Е.Р. 27.09.2017 +
 	Если НЕ ЗначениеЗаполнено(Объект.Ответственный) Тогда
		
		Объект.Ответственный = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(Пользователи.ТекущийПользователь(), "ОсновнойОтветственный");
		
	КонецЕсли;
    ////ES_Савченко Е.Р. 27.09.2017 -
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
		
	// СтандартныеПодсистемы.Свойства
	//УправлениеСвойствами.ПриСозданииНаСервере(ЭтаФорма, Объект);
	// Конец СтандартныеПодсистемы.Свойства

	//ЭР Несторук С.И. 11.12.2018 12:26:26 {
	УстновитьВидимостьЭлеменотов();
	//}ЭР Несторук С.И.

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	//
	//Заголовок = "";
	//АвтоЗаголовок = Истина;
	
	 ЗаполнитьГиперссылкуОтчетОДоставке();
	 
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// СОБЫТИЯ ЭЛЕМЕНТОВ

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПодтвержденПриИзменении(Элемент)
	
	Если Объект.Подтвержден Тогда
		Объект.ДанныеПодтверждения = "" + ПользователиКлиентСервер.ТекущийПользователь() + ", " + Формат(ТекущаяДата(), "ДФ='dd.MM.yyyy ""в"" ЧЧ:мм'");
	Иначе
		Объект.ДанныеПодтверждения = "";
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура СхемаПроездаПриИзменении(Элемент)
	
	ПодключитьОбработчикОжидания("Подключаемый_УстановитьКартинкуДляКомментария", 0.5, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийПриИзменении(Элемент)
	
	ПодключитьОбработчикОжидания("Подключаемый_УстановитьКартинкуДляКомментария", 0.5, Истина);
	
КонецПроцедуры // КомментарийПриИзменении()

&НаКлиенте
Процедура Подключаемый_УстановитьКартинкуДляКомментария()
	
	Если ЗначениеЗаполнено(Объект.СхемаПроезда) Тогда
		УправлениеНебольшойФирмойКлиентСервер.УстановитьКартинкуДляКомментария(Элементы.ГруппаСхемаПроезда, Объект.СхемаПроезда);
	Иначе
		УправлениеНебольшойФирмойКлиентСервер.УстановитьКартинкуДляКомментария(Элементы.ГруппаСхемаПроезда, Объект.Комментарий);
	КонецЕсли; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТЧ ЗАКАЗЫ

&НаКлиенте
Процедура ЗаказыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	// При двойному клике на строке открывается заказ покупателя
	Если НЕ Поле.Имя = "ЗаказыДокументДоставки"
	   И НЕ Поле.Имя = "ЗаказыОбщийОбъем"
	   И НЕ Поле.Имя = "ЗаказыДатаВремяДобавленияЗаказа"
		  //ES_Савчеко К.Р. 10.08.2017 +
	   И НЕ Поле.Имя = "ЗаказыНомерПломбы"
	    //ES_Савчеко К.Р. 10.08.2017 -
    Тогда
		ПоказатьЗначение(,Элемент.ТекущиеДанные.ДокументДоставки); 
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыПриАктивизацииСтроки(Элемент)
	
	ОтборСтрокВТчГрузы(Элемент.ТекущиеДанные);
	
	Если НЕ Элемент.ТекущиеДанные = Неопределено Тогда
		ТекущийДокументДоставки = Элемент.ТекущиеДанные.ДокументДоставки;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте

Процедура ЗаказыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Копирование Тогда
		Отказ = Истина;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыПередУдалением(Элемент, Отказ)

	ТекСтрока = Элементы.Заказы.ТекущиеДанные;
	
	УдалитьГрузыЗаказа(ТекСтрока.ДокументДоставки, ТекСтрока.СвязкаЗаказЗабор);
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	УдалитьПустыеСтрокиВТЧЗаказы();
	
	
	УстановитьВидимостьУпрощенногоЗабора();
	
	ПересчитатьИтогиНалБезнал();

	//ЭР Несторук С.И. 25.02.2017 14:23:39 {
	Объект.Подтвержден = Ложь;
	Объект.ДанныеПодтверждения = "";
	//}ЭР Несторук С.И.
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыПослеУдаления(Элемент)
	
	ПересчитатьДанныеПодвала();

КонецПроцедуры

&НаКлиенте
Процедура ЗаказыДокументДоставкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ЗаказПередИзменением = Новый Структура;
	
	ТекСтрока = Элементы.Заказы.ТекущиеДанные;
	
	Если ТекСтрока.ДокументДоставки <> Неопределено Тогда
		ЗаказПередИзменением.Вставить("ДокументДоставки", ТекСтрока.ДокументДоставки);
		ЗаказПередИзменением.Вставить("СвязкаЗаказЗабор", ТекСтрока.СвязкаЗаказЗабор);
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	// Заполняется выпадающий список для выбора типа документа
	Список = Новый СписокЗначений;
	Список.Добавить("ЗаказНаДоставку","Заказ на доставку");
	Список.Добавить("ЗаборГруза","Сбор груза");
	
	Оповещение = Новый ОписаниеОповещения("ОповещениеОВыбореТипаДокумента",ЭтаФорма);

	ПоказатьВыборИзСписка(Оповещение, Список, Элементы.Заказы.ТекущиеДанные.ДокументДОставки);         
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеОВыбореТипаДокумента(Результат, Параметры) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
		Если Результат.Значение = "ЗаказНаДоставку" Тогда
			Уникальность = "ФормаВыбораЗаказаВПлан";
			Оповещение = Новый ОписаниеОповещения("ЗаполнитьТЧДаннымиДокументаДоставки",ЭтаФорма);
			ПараметрыФормы = Новый Структура("ВызваноИзES_ПланДоставки", Истина);	
			ОткрытьФорму("Документ.ЗаказПокупателя.ФормаВыбора", ПараметрыФормы, ЭтаФорма, Уникальность, , , Оповещение);
		ИначеЕсли Результат.Значение = "ЗаборГруза" Тогда 
			Уникальность = "ФормаВыбораЗабораВПлан";
			Оповещение = Новый ОписаниеОповещения("ЗаполнитьТЧДаннымиДокументаДоставки",ЭтаФорма);
			ЗначениеОтбора  = Новый Структура("Проведен, СтатусЗабора", Истина, ПредопределенноеЗначение("Перечисление.ES_СтатусыЗаборов.ВРаботе"));
			ПараметрыОтбора = Новый Структура("Отбор", ЗначениеОтбора);
			ОткрытьФорму("Документ.ES_ЗаборГруза.ФормаВыбора", ПараметрыОтбора, ЭтаФорма, Уникальность, , , Оповещение);
		КонецЕсли;
	КонецЕсли; 
		
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТЧДаннымиДокументаДоставки(ДокументДоставки, Параметры) Экспорт
	
	Если НЕ ДокументДоставки = Неопределено Тогда
		
		Элементы.Заказы.ТекущиеДанные.ДокументДоставки = ДокументДоставки;
		
		// Запрет добавления одного заказа дважды
		НайденныеСтроки = Объект.Заказы.НайтиСтроки(Новый Структура("ДокументДоставки", ДокументДоставки));
		Если НайденныеСтроки.Количество() > 1 Тогда
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "" + ДокументДоставки + " уже есть в табличной части";
			Сообщение.Сообщить();
			
			Элементы.Заказы.ТекущиеДанные.ДокументДоставки = ТекущийДокументДоставки;
			Возврат;
		КонецЕсли; 
		
		// Удаление Грузов заказа
		Если ЗаказПередИзменением.Количество() > 0 Тогда
			УдалитьГрузыЗаказа(ЗаказПередИзменением.ДокументДоставки, ЗаказПередИзменением.СвязкаЗаказЗабор);
		КонецЕсли;
		
		// Заполнение всех ТЧ данными выбранного заказа
		Если ТипЗнч(ДокументДоставки) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
			ЗаполнитьТЧДаннымиЗаказаДоставки(ДокументДоставки);
		ИначеЕсли ТипЗнч(ДокументДоставки) = Тип("ДокументСсылка.ES_ЗаборГруза") Тогда
			ЗаполнитьТЧДаннымиЗабораГруза(ДокументДоставки);
		КонецЕсли; 
		
		ОтборСтрокВТчГрузы(Элементы.Заказы.ТекущиеДанные);
		
		ПересчитатьДанныеПодвала();
	КонецЕсли; 
	
КонецПроцедуры


&НаКлиенте
Процедура ГрузыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	// При двойном клике на строке открывается элемент справочника Наменклатура
	ПоказатьЗначение(,Элемент.ТекущиеДанные.Номенклатура);
	
КонецПроцедуры

&НаКлиенте
Процедура ГрузыВРазрезеЗаказовПриИзменении(Элемент)
	
	ОтборСтрокВТчГрузы(Элементы.Заказы.ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// СОБЫТИЯ КНОПОК

#Область ОбработчикиКомандФормы

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// Клиент

&НаКлиенте
Процедура ОтборСтрокВТчГрузы(ТекСтрока)
	
	ГрузыВРазрезеЗаказов = Истина;
	
	Если ГрузыВРазрезеЗаказов Тогда
		
		Если ТекСтрока <> Неопределено
		   И ТекСтрока.ДокументДоставки <> Неопределено Тогда
		   
			   Элементы.СписокГрузов.ОтборСтрок 	= Новый ФиксированнаяСтруктура("Заказ", ТекСтрока.ДокументДоставки);
			   Элементы.Грузы.ОтборСтрок 			= Новый ФиксированнаяСтруктура("Заказ", ТекСтрока.ДокументДоставки);
		   	
		КонецЕсли; 
		
	Иначе
		Элементы.СписокГрузов.ОтборСтрок 	= Неопределено;
		Элементы.Грузы.ОтборСтрок 			= Неопределено;
	КонецЕсли; 
	
КонецПроцедуры
 
// Параметры:
//  * ДокументДоставка - для удаления связанных грузов из ТЧ Грузы
//  * СвязкаЗаказЗабор - для удаления связанных документов
&НаКлиенте
Процедура УдалитьГрузыЗаказа(ДокументДоставки, СвязкаЗаказЗабор)
	
	// Находим связанные документы
	СтрокиДокументыДоставки = Объект.Заказы.НайтиСтроки(Новый Структура("СвязанныйДокумент", ДокументДоставки));
	Если СтрокиДокументыДоставки.Количество() > 0 Тогда
		Для каждого Строка Из СтрокиДокументыДоставки Цикл
			Объект.Заказы.Удалить(Строка);
		КонецЦикла; 
	КонецЕсли; 
	
	ПараметрыОтбора = Новый Структура("СвязкаЗаказЗабор", ДокументДоставки);
	
	// ТЧ СписокГрузов
	СтрокиСписокГрузов = Объект.СписокГрузов.НайтиСтроки(ПараметрыОтбора);
	Если СтрокиСписокГрузов.Количество() <> 0 Тогда
		Для каждого Строка Из СтрокиСписокГрузов Цикл
			Объект.СписокГрузов.Удалить(Строка);
		КонецЦикла; 
	КонецЕсли; 
	
	// ТЧ Грузы
	СтрокиГрузы = Объект.Грузы.НайтиСтроки(ПараметрыОтбора);
	Если СтрокиГрузы.Количество() <> 0 Тогда
		Для каждого Строка Из СтрокиГрузы Цикл
			Объект.Грузы.Удалить(Строка);
		КонецЦикла; 
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьПустыеСтрокиВТЧЗаказы()
	
	й = Объект.Заказы.Количество() - 1;
	Пока й >= 0 Цикл
		Если НЕ ЗначениеЗаполнено(Объект.Заказы[й].ДокументДоставки) Тогда
			Объект.Заказы.Удалить(й);
		КонецЕсли; 
		й = й - 1;
	КонецЦикла;
	
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьГиперссылкуОтчетОДоставке()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ES_СвязьПлановИОтчетовСрезПоследних.ОтчетОДоставке
		|ИЗ
		|	РегистрСведений.ES_СвязьПлановИОтчетов.СрезПоследних(, ПланДоставки = &ПланДоставки) КАК ES_СвязьПлановИОтчетовСрезПоследних";

	Запрос.УстановитьПараметр("ПланДоставки", Объект.Ссылка);

	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			СсылкаОтчетОДоставке = ВыборкаДетальныеЗаписи.ОтчетОДоставке;
		КонецЕсли;
	КонецЕсли; 
		
КонецПроцедуры

&НаСервере
Процедура ПересчитатьДанныеПодвала()
	
	СуммаВес 	= 0;
	//СуммаОбъем 	= 0;
	
	Для каждого ДокДоставки Из Объект.Заказы Цикл
		Если ТипЗнч(ДокДоставки) = Тип("ДокументСсылка.ES_ЗаборГруза")
		   И ДокДоставки.ВидДоставки = Перечисления.ES_ВидыЗабора.ПоПути Тогда
			Продолжить;
		КонецЕсли; 
		
		СуммаВес 	= СуммаВес + ДокДоставки.ОбщийВес;
		//СуммаОбъем 	= СуммаОбъем + ДокДоставки.ОбщийОбъем;
	КонецЦикла;
	
	Объект.ОбщийВесВТоннах = Окр(СуммаВес, 3);
	//Объект.ОбщийОбъемВКубическихМетрах = СуммаОбъем;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТЧДаннымиЗаказаДоставки(Знач ЗаказыДоставки, ПоПути = Ложь)
	
	ES_ОбщегоНазначения.ПолучитьДанныеПоЗаказамДляЗаполненияПланаДоставки(ТипЗнч(Объект.Ссылка), Объект, ЗаказыДоставки, Истина, ПоПути);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТЧДаннымиЗабораГруза(Знач ДокументыЗабора)

	ES_ОбщегоНазначения.ПолучитьДанныеПоЗаказамДляЗаполненияПланаДоставки(ТипЗнч(Объект.Ссылка), Объект, ДокументыЗабора, Истина);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Вызов сервера

&НаСервере
Процедура УстновитьВидимостьЭлеменотов()
	
	//ЭР Несторук С.И. 11.12.2018 12:29:45 {
	РаспределениеВОтдельномОкне = Константы.ES_РаспределениеЗаявокВОтдельномОкне.Получить();
	
	Элементы.ДанныеПодтверждения.Видимость = РаспределениеВОтдельномОкне;
	Элементы.ФормаУтвердитьПлан.Видимость	= РаспределениеВОтдельномОкне;
	//}ЭР Несторук С.И.
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

#КонецОбласти


#Область ПроцедурыИФункцииНеВыполняются_НужноПонятьИхНазначение

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	//Если ИмяСобытия = "ПеречитатьСхемуПроездаВПлане" Тогда
	//	ЭтаФорма.Прочитать();
	//КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПодрядчикомПриИзменении(Элемент)
	Если Объект.Подрядчиком Тогда
		Элементы.ДанныеПодрадчикаПолучателя.Видимость = Истина;	
	Иначе
		Элементы.ДанныеПодрадчикаПолучателя.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

//ЕФСОЛ Несторук 25.07.2016 +
&НаСервере
Процедура УстановитьВидимостьУпрощенногоЗабора()

	//Для каждого Стр Из Объект.Заказы Цикл
	//	Если Стр.ВидДоставки = Перечисления.ES_ВидыДоставки.ДвериДвери И Стр.ВидЗабора = Перечисления.ES_ВидыЗабора.Упрощенный Тогда
	//		Элементы.Забор.Видимость = Истина;
	//		Прервать;
	//	Иначе 
	//		Элементы.Забор.Видимость = Ложь;
	//	КонецЕсли;
	//КонецЦикла;
		
		
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыПриИзменении(Элемент)
	
	УстановитьВидимостьУпрощенногоЗабора();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	//ЭР Несторук С.И. 10.04.2019 9:32:27 {
	ES_БиллингКлиент.ПроверитьДоступностьСервисаDelans(Отказ);
	//}ЭР Несторук С.И.

	УстановитьВидимостьУпрощенногоЗабора();
	
	ПересчитатьИтогиНалБезнал();

	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьИтогиНалБезнал()
	
	//ЭР Несторук С.И. 01.03.2017 12:34:49 {
	//СуммаНал = 0;
	//СуммаБезнал = 0;
	//Для каждого Стр из Объект.Заказы Цикл
	//	Если Стр.ВидОплаты = ПредопределенноеЗначение("Перечисление.ТипыДенежныхСредств.Безналичные") Тогда
	//		СуммаБезнал = СуммаБезнал+ Стр.НППлан;
	//	ИначеЕсли Стр.ВидОплаты = ПредопределенноеЗначение("Перечисление.ТипыДенежныхСредств.Наличные") Тогда
	//		СуммаНал = СуммаНал+ Стр.НППлан;
	//	КонецЕсли;
	//			
	//КонецЦикла;
	//
	//ИтогоНал = СуммаНал;
	//ИтогоБезнал = СуммаБезнал;
		
	//}ЭР Несторук С.И.
	
КонецПроцедуры


&НаКлиенте
Процедура ОбновитьЗаказы(Команда)
	
	КоличествоСтрок = Объект.Заказы.Количество();
	
	Объект.СписокГрузов.Очистить();
	Объект.Грузы.Очистить();
	Для каждого Стр Из Объект.Заказы Цикл
		
		Если ТипЗнч(Стр.ДокументДоставки) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
			ПоПути = ЗаборПоПути(Стр.СвязанныйДокумент);
			ДатаДобавленияЗаказа = Стр.ДатаВремяДобавленияЗаказа;
			ЗаполнитьТЧДаннымиЗаказаДоставки(Стр.ДокументДоставки, ПоПути);
			Стр.ДатаВремяДобавленияЗаказа = ДатаДобавленияЗаказа;
		ИначеЕсли ТипЗнч(Стр.ДокументДоставки) = Тип("ДокументСсылка.ES_ЗаборГруза") Тогда
			ДатаДобавленияЗаказа = Стр.ДатаВремяДобавленияЗаказа;
			ЗаполнитьТЧДаннымиЗабораГруза(Стр.ДокументДоставки);
			Стр.ДатаВремяДобавленияЗаказа = ДатаДобавленияЗаказа;
		КонецЕсли;
		Если Объект.Заказы.Количество() > КоличествоСтрок Тогда
			Прервать;
		КонецЕсли;
		
		
	КонецЦикла;

	ПересчитатьИтогиНалБезнал();

	//УстановитьВидимостьУпрощенногоЗабора();
	
КонецПроцедуры

&НаСервере
Функция ЗаборПоПути(Забор)
	
	Результат = Ложь;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ES_ДанныеПоЗаборамСрезПоследних.ВидЗабора
		|ИЗ
		|	РегистрСведений.ES_ДанныеПоЗаборам.СрезПоследних КАК ES_ДанныеПоЗаборамСрезПоследних
		|ГДЕ
		|	ES_ДанныеПоЗаборамСрезПоследних.Забор = &Забор";
	
	Запрос.УстановитьПараметр("Забор", Забор);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если НЕ РезультатЗапроса.Пустой()Тогда
		Выборка.Следующий();
		Если Выборка.ВидЗабора = Перечисления.ES_ВидыЗабора.ПоПути Тогда
			Результат = Истина;
		КонецЕсли;
	КонецЕсли;
	Возврат Результат;
		
		
КонецФункции



&НаКлиенте
Процедура ПечатьНакладныеНаЗапасы(Команда) Экспорт 
	
	МассивЗаказов = Новый Массив;
	Для каждого Стр Из Объект.Заказы Цикл
		Если НЕ ТипЗнч(Стр.ДокументДоставки) = Тип("ДокументСсылка.ES_ЗаборГруза") Тогда
			МассивЗаказов.Добавить(Стр.ДокументДоставки);
		КонецЕсли; 
	КонецЦикла; 
	
	Если МассивЗаказов.Количество() > 0 Тогда
		
		УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
		"Документ.ЗаказПокупателя",
		"ПФ_MXL_ES_НакладнаяНаЗапасы",
		МассивЗаказов,
		Неопределено,
		Неопределено
		);

	КонецЕсли; 

КонецПроцедуры
	
//ЕФСОЛ Несторук 25.07.2016 -

&НаКлиенте
Процедура ОбработатьШтрихкодЗаказаЗавершение(Результат, ДополнительныеПараметры) Экспорт
    
	Если НЕ ПустаяСтрока(Результат) Тогда
		ДанныеПоЗаказу = НайтиЗаказПоШтрихКодуНаСервере(Результат);
		Если НЕ ЗначениеЗаполнено(ДанныеПоЗаказу.Заказ) Тогда
			Если ДанныеПоЗаказу.Свойство("Сообщение") Тогда
				Сообщить(ДанныеПоЗаказу.Сообщение);
			Иначе
				Сообщить("Заказ не найден");
			КонецЕсли;
			
		Иначе
			
			НайденныеСтроки = Объект.Заказы.НайтиСтроки(Новый Структура("ДокументДоставки", ДанныеПоЗаказу.Заказ));
			Если НайденныеСтроки.Количество() >= 1 Тогда
				
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "" + ДанныеПоЗаказу.Заказ + " уже есть в табличной части";
				Сообщение.Сообщить();
				
				Возврат;
			Иначе
				НовСтр = Объект.Заказы.Добавить();
				НовСтр.ДокументДоставки = ДанныеПоЗаказу.Заказ;
				ЗаполнитьТЧДаннымиЗаказаДоставки(НовСтр.ДокументДоставки);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры


&НаКлиенте
Процедура НайтиЗаказПоШтрихКоду(Команда)
	ОчиститьСообщения();
	
	ТекШтрихкод = "";	
	ПоказатьВводЗначения(Новый ОписаниеОповещения("ОбработатьШтрихкодЗаказаЗавершение", ЭтаФорма), ТекШтрихкод, НСтр("ru = 'Введите штрихкод'"));

КонецПроцедуры

&НаСервере
Функция НайтиЗаказПоШтрихКодуНаСервере(Результат)
	
	Структура = Новый Структура ("Заказ", Документы.ЗаказПокупателя.ПустаяСсылка());
	ИскатьПоВхНакладной = ES_ОбщегоНазначения.ПолучитьСтартовуюНастройку(Перечисления.ES_ВидыСтартовыхНастроек.ПоискЗаказовПоВхНакладной);
	
	Если ЗначениеЗаполнено(ИскатьПоВхНакладной) Тогда
		Если ИскатьПоВхНакладной Тогда
			Условие = "ВхНакладная";
		Иначе
			Условие = "НомерНакладной";
		КонецЕсли;
	Иначе 
		Условие = "НомерНакладной";
	КонецЕсли;
	
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ES_ДанныеПоЗаказамСрезПоследних.Заказ,
		|   ES_ДанныеПоЗаказамСрезПоследних.ВидДоставки
		|ПОМЕСТИТЬ ВТ_Заказ
		|ИЗ
		|	РегистрСведений.ES_ДанныеПоЗаказам.СрезПоследних(, "+Условие+" = &НомерНакладной И ВидДоставки <> ЗНАЧЕНИЕ(Перечисление.ES_ВидыДоставки.СкладСклад)) КАК ES_ДанныеПоЗаказамСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Заказ.Заказ,
		|	ВТ_Заказ.ВидДоставки,
		|	ES_СтатусыЗаказовСрезПоследних.СтатусЗаказа
		|ИЗ
		|	ВТ_Заказ КАК ВТ_Заказ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ES_СтатусыЗаказов.СрезПоследних(
		|				,
		|				Заказ В
		|					(ВЫБРАТЬ
		|						ВТ_Заказ.Заказ
		|					ИЗ
		|						ВТ_Заказ КАК ВТ_Заказ)) КАК ES_СтатусыЗаказовСрезПоследних
		|		ПО ВТ_Заказ.Заказ = ES_СтатусыЗаказовСрезПоследних.Заказ";
		

	Запрос.УстановитьПараметр("НомерНакладной", Результат);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗАпроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Если Выборка.СтатусЗаказа = Перечисления.ES_СтатусыЗаказов.Подготовлен ИЛИ
			Выборка.СтатусЗаказа = Перечисления.ES_СтатусыЗаказов.ПодготовленПринят ИЛИ
			Выборка.СтатусЗаказа = Перечисления.ES_СтатусыЗаказов.НеДоставлен ИЛИ
			Выборка.СтатусЗаказа = Перечисления.ES_СтатусыЗаказов.Комплектуется
			Тогда
			Структура =  Новый Структура("Заказ", Выборка.Заказ);
		Иначе
			мСообщение = ("Невозможно добавить Документ " + Выборка.Заказ + " в статусе " + Выборка.СтатусЗаказа);
			Структура.Вставить("Сообщение", мСообщение);
		КонецЕсли;
		
	Иначе
		мСообщение = ("Заказ не найден");
		Структура.Вставить("Сообщение", мСообщение);
	КонецЕсли;
	

Возврат Структура;
	
КонецФункции

&НаКлиенте
Процедура УтвердитьПлан(Команда)
	
	Если НЕ Объект.Проведен Тогда
		Сообщить(НСтр("ru='Документ не проведен'"));
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Склад) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Поле ""Склад"" не заполнено";
		Сообщение.Поле = "Объект.Склад";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	Если Объект.Заказы.Количество() > 0 Тогда
		
		Отказать = ПроверитьЗаказыНаСервере();
		Если НЕ Отказать Тогда
			Объект.Подтвержден = Истина;
			ПодтвержденПриИзменении("Ок");
			ЭтотОбъект.Записать();
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПроверитьЗаказыНаСервере ()
	
	Отказать =Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ES_ПланДоставкиЗаказы.ДокументДоставки КАК ДокументДоставки
		|ПОМЕСТИТЬ ВТ_Заказы
		|ИЗ
		|	Документ.ES_ПланДоставки.Заказы КАК ES_ПланДоставкиЗаказы
		|ГДЕ
		|	ES_ПланДоставкиЗаказы.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Заказы.ДокументДоставки КАК ДокументДоставки,
		|	ES_СтатусыЗаказовСрезПоследних.СтатусЗаказа КАК СтатусЗаказа,
		|	ES_ДанныеПоЗаказамСрезПоследних.ВидДоставки КАК ВидДоставки,
		|	ES_ДанныеПоЗаказамСрезПоследних.ВидЗабора КАК ВидЗабора,
		|	ЕСТЬNULL(ES_ЗаказыНаСкладеОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток
		|ИЗ
		|	ВТ_Заказы КАК ВТ_Заказы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ES_СтатусыЗаказов.СрезПоследних(
		|				,
		|				Заказ В
		|					(ВЫБРАТЬ
		|						ВТ_Заказы.ДокументДоставки
		|					ИЗ
		|						ВТ_Заказы КАК ВТ_Заказы)) КАК ES_СтатусыЗаказовСрезПоследних
		|		ПО ВТ_Заказы.ДокументДоставки = ES_СтатусыЗаказовСрезПоследних.Заказ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ES_ДанныеПоЗаказам.СрезПоследних(
		|				,
		|				Заказ В
		|					(ВЫБРАТЬ
		|						ВТ_Заказы.ДокументДоставки
		|					ИЗ
		|						ВТ_Заказы КАК ВТ_Заказы)) КАК ES_ДанныеПоЗаказамСрезПоследних
		|		ПО ВТ_Заказы.ДокументДоставки = ES_ДанныеПоЗаказамСрезПоследних.Заказ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ES_ЗаказыНаСкладе.Остатки(
		|				,
		|				Заказ В
		|						(ВЫБРАТЬ
		|							ВТ_Заказы.ДокументДоставки
		|						ИЗ
		|							ВТ_Заказы КАК ВТ_Заказы)
		|					И Склад = &Склад) КАК ES_ЗаказыНаСкладеОстатки
		|		ПО ВТ_Заказы.ДокументДоставки = ES_ЗаказыНаСкладеОстатки.Заказ
		|ГДЕ
		|	ES_ДанныеПоЗаказамСрезПоследних.ВидЗабора <> ЗНАЧЕНИЕ(перечисление.ES_ВидыЗабора.Упрощенный)";
		
		Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
		Запрос.УстановитьПараметр("Склад", объект.Склад);
		
		РезультатЗапроса = Запрос.Выполнить();
		Если Не РезультатЗапроса.Пустой() Тогда
			Выборка = РезультатЗапроса.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				
				Если ТипЗнч( Выборка.ДокументДоставки) = Тип ("ДокументСсылка.ЗаказПокупателя") Тогда
					
					//Если НЕ Выборка.СтатусЗаказа = Перечисления.ES_СтатусыЗаказов.НазначенПринят Тогда
					
					//ЭР Несторук С.И. 27.02.2017 13:37:10 {
					//Временно убрал проверку статуса
					//Если Выборка.ВидДоставки = Перечисления.ES_ВидыДоставки.СкладДвери И 
					//	(Выборка.СтатусЗаказа = Перечисления.ES_СтатусыЗаказов.Назначен 
					//	ИЛИ Выборка.СтатусЗаказа = Перечисления.ES_СтатусыЗаказов.Подготовлен) Тогда
					
					//	Сообщить("Текущий статус заказа " + Выборка.ДокументДоставки + " - "+ Выборка.СтатусЗаказа +". План не может быть утвержден!");
					//	Отказать = Истина;
					//КонецЕсли;
					Если Выборка.ВидДоставки = Перечисления.ES_ВидыДоставки.СкладДвери
						И (Выборка.СтатусЗаказа = Перечисления.ES_СтатусыЗаказов.Подготовлен 
						ИЛИ Выборка.СтатусЗаказа = Перечисления.ES_СтатусыЗаказов.Назначен) Тогда
						Если Выборка.КоличествоОстаток = 0 Тогда
							Сообщить(НСтр("ru='На складе "+Объект.Склад +" "+ Выборка.ДокументДоставки +" отсутствует'"));						
							Отказать = Истина;
						КонецЕсли;
					КонецЕсли;
					 //}ЭР Несторук С.И.
					
				КонецЕсли;
				
				
			КонецЦикла;
		КонецЕсли;
		Возврат Отказать;
	
	
	//Отказать = Ложь;	
	//Запрос = Новый Запрос;
	//ТекстЗапроса = "";
	//НомерСтроки = 0;
	//Для каждого Стр ИЗ Объект.Заказы Цикл
	//	НомерСтроки = НомерСтроки +1;
	//	ТекстЗапроса = ТекстЗапроса + Символы.ПС +
	//	
	//	"ВЫБРАТЬ
	//	|	ES_ЗаказыНаСкладеОстатки.Склад,
	//	|	ЕСТЬNULL(ES_ЗаказыНаСкладеОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	//	|	ЕСТЬNULL(ES_ДанныеПоЗаказамСрезПоследних.ВидДоставки, ЗНАЧЕНИЕ(Перечисление.ES_ВидыДоставки.ПустаяСсылка)) КАК ВидДоставки,
	//	|	ES_ДанныеПоЗаказамСрезПоследних.Заказ
	//	|ИЗ
	//	|	РегистрСведений.ES_ДанныеПоЗаказам.СрезПоследних(&Период"+НомерСтроки+", Заказ = &Заказ"+НомерСтроки+") КАК ES_ДанныеПоЗаказамСрезПоследних
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ES_ЗаказыНаСкладе.Остатки(
	//	|				&Период"+НомерСтроки+",
	//	|				Заказ = &Заказ"+НомерСтроки+"
	//	|					И Склад = &Склад) КАК ES_ЗаказыНаСкладеОстатки
	//	|		ПО ES_ДанныеПоЗаказамСрезПоследних.Заказ = ES_ЗаказыНаСкладеОстатки.Заказ;
	//	|///////////////////////////////////////////////////////////////////////////////////////////////////";
	//	
	//	Запрос.УстановитьПараметр("Заказ"+НомерСтроки, Стр.ДокументДоставки);
	//	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	//	Запрос.УстановитьПараметр("Период"+НомерСтроки, Стр.ДатаВремяДобавленияЗаказа);
	//КонецЦикла;
	//Запрос.Текст = ТекстЗапроса;
	//МассивРезультатов = Запрос.ВыполнитьПакет();
	//Для й = 0 По МассивРезультатов.Количество()-1 Цикл
	//	
	//	Выборка = МассивРезультатов[й].Выбрать();
	//	Выборка.Следующий();
	//	Если Выборка.ВидДоставки = Перечисления.ES_ВидыДоставки.СкладДвери Тогда
	//		Если Выборка.КоличествоОстаток = 0 Тогда
	//			Сообщить(НСтр("ru='На складе "+Объект.Склад +" "+ Выборка.Заказ +" отсутствует'"));						
	//			Отказать = Истина;
	//		КонецЕсли;
	//	КонецЕсли;
	//	
	//	
	//КонецЦикла;
	//
	//Возврат Отказать;
	
	
КонецФункции

&НаСервереБезКонтекста
Процедура СкладОткрытиеНаСервере()

КонецПроцедуры

Функция ПолучитьСтартовуюНастройку(ВидСтартовойНастройки) Экспорт
	
	
	
КонецФункции

&НаСервере
Функция ПолучитьРеквизитЗаказаНаСервере(ИмяРеквизита,Заказ)
	Возврат Заказ[ИмяРеквизита];
КонецФункции	

&НаКлиенте
Процедура Печать(Команда)
	
	ФормаПечать = ПолучитьФорму("Документ.ES_ПланДоставки.Форма.ФормаВыбораОбъектовПечати",,ЭтаФорма);
	//ЭтаФорма.Объект.Заказы.Очистить();
	Для каждого Заказ Из ЭтаФорма.Объект.Заказы Цикл
		Если ТипЗнч(Заказ.ДокументДоставки) = ТИП("ДокументСсылка.ЗаказПокупателя") Тогда
			СтрокаТабПриемника = ФормаПечать.СписокДокументовДляПечати.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТабПриемника, Заказ, "ДокументДоставки, НомерНакладнойПредставление");
			СтрокаТабПриемника.ВходящаяНакладная = ПолучитьРеквизитЗаказаНаСервере("ES_ВхНакладная", Заказ.ДокументДоставки);
		КонецЕсли;
	КонецЦикла;
	
	ФормаПечать.Открыть();	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
	
	// УНФ
	СтатистикаИспользованияФормКлиент.ДобавитьСтатистикуПодключаемойКоманды(ЭтотОбъект, Команда);
	// Конец УНФ
	
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ПечатьПланДоставки(Команда)
	МассивОбъековПечати = Новый Массив;
	МассивОбъековПечати.Добавить(Объект.Ссылка); 
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
	"Документ.ES_ПланДоставки",
	"ПФ_MXL_ПланДоставки",
	МассивОбъековПечати,
	Неопределено,
	Неопределено
	);
КонецПроцедуры

&НаКлиенте
Процедура ПечатьПланДоставкиУпрощенный(Команда)
	МассивОбъековПечати = Новый Массив;
	МассивОбъековПечати.Добавить(Объект.Ссылка); 
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
	"Документ.ES_ПланДоставки",
	"ПФ_MXL_ПланДоставкиУпрощенный",
	МассивОбъековПечати,
	Неопределено,
	Неопределено
	);
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьSMS(Команда)
		
	//EFSOL_Сальник К.А. 2018-12-07 {+ 
	//ДанныеПоЗаказу = ПолучитьДанныеПоЗаказу(Объект.Ссылка);
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Документ", Объект.Ссылка);
	
	ОткрытьФорму("ОбщаяФорма.ES_ФормаОтправкиСМС", ПараметрыОткрытия, ЭтаФорма);
	//EFSOL_Сальник К.А.  -} 
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьРеестрДоставки(Команда)
	МассивОбъековПечати = Новый Массив;
	МассивОбъековПечати.Добавить(Объект.Ссылка); 
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
	"Документ.ES_ПланДоставки",
	"ПФ_MXL_РеестрДоставки",
	МассивОбъековПечати,
	Неопределено,
	Неопределено
	);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("ПланЗаписан", Объект.Ссылка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды




