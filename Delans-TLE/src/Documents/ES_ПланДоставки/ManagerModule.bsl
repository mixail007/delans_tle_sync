#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

// Переопределяет стандартное представление ссылки.
//
Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Поля.Добавить("Ссылка");
	Поля.Добавить("Дата");
	Поля.Добавить("Номер");
	Поля.Добавить("Проведен");
	Поля.Добавить("ПометкаУдаления");
	
КонецПроцедуры

// Переопределяет стандартное представление ссылки.
//
Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	Если Данные.Номер = Null Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Если Данные.Проведен Тогда
		Состояние = "";
	Иначе
		Если Данные.ПометкаУдаления Тогда
			Состояние = НСтр("ru='(удален)'");
		ИначеЕсли Данные.Свойство("Проведен") И НЕ Данные.Проведен Тогда
			Состояние = НСтр("ru='(не проведен)'");
		КонецЕсли;
	КонецЕсли;
	
	ЗаголовокПредставление = НСтр("ru='План доставки'");
	
	Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='%1 %2 от %3 %4'"),
		ЗаголовокПредставление,
		?(Данные.Свойство("Номер"), ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Данные.Номер, Истина, Истина), ""),
		Формат(Данные.Дата, "ДЛФ=D"),
		Состояние);
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// Печать

#Область Печать

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ПланДоставки") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПФ_MXL_ПланДоставки", "ПланДоставки", СформироватьПечатнуюФормуМаршрутныйЛист(МассивОбъектов, ОбъектыПечати));
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_РеестрДоставки") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПФ_MXL_РеестрДоставки", "РеестрДоставки", СформироватьПечатнуюФормуРеестрДоставки(МассивОбъектов, ОбъектыПечати));	
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_Манифест") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПФ_MXL_Манифест", "Манифест", СформироватьПечатнуюФормуМанифест(МассивОбъектов, ОбъектыПечати));
		//ЕФСОЛ Несторук 12.09.2016 +	
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ПланДоставкиУпрощенный") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПФ_MXL_ПланДоставкиУпрощенный", "ПланДоставкиГермес", СформироватьПечатнуюФормуМаршрутныйЛистУпрощенный(МассивОбъектов, ОбъектыПечати));
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ES_НакладнаяНаЗапасы") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПФ_MXL_ES_НакладнаяНаЗапасы", "НакладнаяНаЗапасы", ПечатнаяФормаES_НакладнаяНаЗапасы(МассивОбъектов, ОбъектыПечати));
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ES_НакладнаяНаДоставку") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПФ_MXL_ES_НакладнаяНаДоставку", "НакладнаяНаДоставку", ПечатьESНакладнаяНаДоставку(МассивОбъектов, ОбъектыПечати));
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ES_НаклейкаЗаказа") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПФ_MXL_ES_НаклейкаЗаказа", "НаклейкаЗаказа", ПечатьESНаклейкаЗаказа(МассивОбъектов, ОбъектыПечати));
		//ЕФСОЛ Несторук 12.09.2016 -	
	КонецЕсли;
	
	//Лохоня Ю.А. 13.09.2017 11:56:32
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ES_Стикер") Тогда
		ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "ПФ_MXL_ES_Стикер");
		Если ПечатнаяФорма <> Неопределено Тогда	
			ПечатнаяФорма.ТабличныйДокумент = ПечатьESСтикер(МассивОбъектов, ОбъектыПечати, "ПФ_MXL_ES_Стикер");
			ПечатнаяФорма.ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ES_ПланДоставки_ES_Стикер";
			ПечатнаяФорма.ПолныйПутьКМакету = "Документ.ES_ПланДоставки.ПФ_MXL_ES_Стикер";
			ПечатнаяФорма.СинонимМакета = НСтр("ru ='Стикер'");		
		КонецЕсли;
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ES_НакладнаяB2B") Тогда
		ТабДок_В2В = Новый ТабличныйДокумент;
		ТабДок_В2В.АвтоМасштаб = Истина;
		ТабДок_В2В.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
		
		ТабДок_B2C = Новый ТабличныйДокумент;
		ТабДок_B2C.АвтоМасштаб = Истина;
		ТабДок_B2C.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;	
		
		МакетВ2С = КоллекцияПечатныхФорм.Добавить();
		МакетВ2С.ИмяМакета = "ПФ_MXL_ES_НакладнаяB2C";
		МакетВ2С.ИмяВРЕГ = "ПФ_MXL_ES_НАКЛАДНАЯB2C";
		МакетВ2С.Экземпляров = 1;
		Для каждого Заказ Из МассивОбъектов Цикл
			Если Заказ.Контрагент.ES_ВидКонтрагента = Перечисления.ES_ВидКонтрагента.В2В Тогда							
				ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "ПФ_MXL_ES_НакладнаяB2B");
				Если ПечатнаяФорма <> Неопределено Тогда	
					ПечатнаяФорма.ТабличныйДокумент = ПечатьESНакладнаяB2B(Заказ, ОбъектыПечати, "ПФ_MXL_ES_НакладнаяB2B", ТабДок_В2В);
					ПечатнаяФорма.ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ES_ПланДоставки_ES_НакладнаяB2B";
					ПечатнаяФорма.ПолныйПутьКМакету = "Документ.ES_ПланДоставки.ПФ_MXL_ES_НакладнаяB2B";
					ПечатнаяФорма.СинонимМакета = НСтр("ru ='Накладная B2B'");			
				КонецЕсли;
			ИначеЕсли Заказ.Контрагент.ES_ВидКонтрагента = Перечисления.ES_ВидКонтрагента.В2С Тогда			
				ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "ПФ_MXL_ES_НакладнаяB2C");
				Если ПечатнаяФорма <> Неопределено Тогда
					
					ПечатнаяФорма.ТабличныйДокумент = ПечатьESНакладнаяB2C(Заказ, ОбъектыПечати, "ПФ_MXL_ES_НакладнаяB2C", ТабДок_B2C);
					ПечатнаяФорма.ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ES_ПланДоставки_ES_НакладнаяB2C";
					ПечатнаяФорма.ПолныйПутьКМакету = "Документ.ES_ПланДоставки.ПФ_MXL_ES_НакладнаяB2C";
					ПечатнаяФорма.СинонимМакета = НСтр("ru ='Накладная B2C'");	
				КонецЕсли;
			Иначе Сообщить("В документе не заполнено значение Тип отправлений! Печать невозможна!");	
			КонецЕсли;
		КонецЦикла;
		Если НЕ ЗначениеЗаполнено(ТабДок_В2В.ИмяПараметровПечати) Тогда
			КоллекцияПечатныхФорм.Удалить(КоллекцияПечатныхФорм.Найти("ПФ_MXL_ES_НакладнаяB2B", "ИмяМакета"));	
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ТабДок_B2C.ИмяПараметровПечати) Тогда
			КоллекцияПечатныхФорм.Удалить(КоллекцияПечатныхФорм.Найти("ПФ_MXL_ES_НакладнаяB2C", "ИмяМакета"));	
		КонецЕсли;

	КонецЕсли;	
КонецПроцедуры

// Заполняет список команд печати Заказа покупателя
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	//// Манифест
	//КомандаПечати = КомандыПечати.Добавить();
	//КомандаПечати.Идентификатор = "ПФ_MXL_Манифест";
	//КомандаПечати.Представление = НСтр("ru = 'Реестр'");
	//КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	////КомандаПечати.СписокФорм = "ФормаСписка";
	//КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	//КомандаПечати.МестоРазмещения = "ГруппаВажныеКомандыПланДоставки";
	//КомандаПечати.Порядок = 5;
	//
	//// Маршрутный лист
	//КомандаПечати = КомандыПечати.Добавить();
	//КомандаПечати.Идентификатор = "ПФ_MXL_ПланДоставки";
	//КомандаПечати.Представление = НСтр("ru = 'План доставки'");
	//КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	////КомандаПечати.СписокФорм = "ФормаСписка";
	//КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	//КомандаПечати.МестоРазмещения = "ГруппаВажныеКомандыПланДоставки";
	//КомандаПечати.Порядок = 10;
	//
	////ЕФСОЛ Несторук 12.09.2016 +
	//// Маршрутный лист упрощенный
	//КомандаПечати = КомандыПечати.Добавить();
	//КомандаПечати.Идентификатор = "ПФ_MXL_ПланДоставкиУпрощенный";
	//КомандаПечати.Представление = НСтр("ru = 'План доставки (Упрощенный)'");
	//КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	////КомандаПечати.СписокФорм = "ФормаСписка";
	//КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	//КомандаПечати.МестоРазмещения = "ГруппаВажныеКомандыПланДоставки";
	//КомандаПечати.Порядок = 15;
	////ЕФСОЛ Несторук 12.09.2016 -
	
	//ЕФСОЛ Несторук 22.09.2016 +
	// Накладная на запасы
	//КомандаПечати = КомандыПечати.Добавить();
	//КомандаПечати.Идентификатор = "ПФ_MXL_ES_НакладнаяНаЗапасы";
	//КомандаПечати.Представление = НСтр("ru = 'Накладная на запасы'");
	//КомандаПечати.СписокФорм = "ФормаДокумента";
	////КомандаПечати.СписокФорм = "ФормаСписка";
	//КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	//КомандаПечати.МестоРазмещения = "ГруппаВажныеКомандыПланДоставки";
	//КомандаПечати.Порядок = 20;
	////ЕФСОЛ Несторук 22.09.2016 -
	
	//КомандаПечати = КомандыПечати.Добавить();
	//КомандаПечати.Идентификатор = "ПФ_MXL_ES_НакладнаяНаДоставку";
	//КомандаПечати.Представление = НСтр("ru = 'Накладная на доставку'");
	//КомандаПечати.СписокФорм = "ФормаДокумента";
	////КомандаПечати.СписокФорм = "ФормаСписка";
	//КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	//КомандаПечати.МестоРазмещения = "ГруппаВажныеКомандыПланДоставки";
	//КомандаПечати.Порядок = 20;

	//КомандаПечати = КомандыПечати.Добавить();
	//КомандаПечати.Идентификатор = "ПФ_MXL_ES_НаклейкаЗаказа";
	//КомандаПечати.Представление = НСтр("ru = 'Наклейка заказа'");
	//КомандаПечати.СписокФорм = "ФормаДокумента";
	////КомандаПечати.СписокФорм = "ФормаСписка";
	//КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	//КомандаПечати.МестоРазмещения = "ГруппаВажныеКомандыПланДоставки";
	//КомандаПечати.Порядок = 25;
	
	//Лохоня Ю.А.
	// Стикер
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПФ_MXL_ES_Стикер";
	КомандаПечати.Представление = НСтр("ru = 'Стикер'");
	КомандаПечати.СписокФорм = "ФормаВыбораОбъектовПечати";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.МестоРазмещения = "ГруппаВажныеКомандыПланДоставки";
	КомандаПечати.Порядок = 30;
	
	//Лохоня Ю.А.
	// Накладная 
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПФ_MXL_ES_НакладнаяB2B";
	КомандаПечати.Представление = НСтр("ru = 'Накладная'");
	КомандаПечати.СписокФорм = "ФормаВыбораОбъектовПечати";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.МестоРазмещения = "ГруппаВажныеКомандыПланДоставки";
	КомандаПечати.Порядок = 35;
	
	//КомандаПечати = КомандыПечати.Добавить();
	//КомандаПечати.МенеджерПечати = "Документ.ES_ПланДоставки";
	//КомандаПечати.Идентификатор = "ПФ_MXL_ES_Стикер";
	//КомандаПечати.Представление = НСтр("ru = 'Стикер'");
	//КомандаПечати.ЗаголовокФормы = "ЕS: Стикер";
	//КомандаПечати.СписокФорм = "ФормаПечать";
	//КомандаПечати.Картинка = БиблиотекаКартинок.Печать;
	//КомандаПечати1 = КомандыПечати.Добавить();
	//КомандаПечати1.Идентификатор = "ПФ_MXL_ES_НакладнаяB2B";
	//КомандаПечати1.Представление = НСтр("ru = 'Накладная'");
	//КомандаПечати1.ЗаголовокФормы = "ЕS: Накладная B2B";
	//КомандаПечати1.СписокФорм = "ФормаПечать";
	//КомандаПечати1.Картинка = БиблиотекаКартинок.Печать;
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуМанифест(МассивОбъектов, ОбъектыПечати)	
	
	ТабДок = Новый ТабличныйДокумент;
	//ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДок.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПланДоставки_Манифест";
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ES_ПланДоставкиЗаказы.Ссылка КАК План_Ссылка,
	               |	ES_ПланДоставкиЗаказы.Ссылка.Номер КАК План_Номер,
	               |	ES_ПланДоставкиЗаказы.Ссылка.Дата КАК План_Дата,
	               |	ES_ПланДоставкиЗаказы.Ссылка.Курьер КАК План_Курьер,
	               |	ES_ПланДоставкиЗаказы.ДокументДоставки,
	               |	ES_ПланДоставкиЗаказы.Ссылка.Автор,
	               |	ES_ПланДоставкиЗаказы.Ссылка.Подрядчиком
	               |ПОМЕСТИТЬ Док
	               |ИЗ
	               |	Документ.ES_ПланДоставки.Заказы КАК ES_ПланДоставкиЗаказы
	               |ГДЕ
	               |	ES_ПланДоставкиЗаказы.Ссылка В(&МассивОбъектов)
	               |	И ES_ПланДоставкиЗаказы.Ссылка.Проведен
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЕСТЬNULL(ЗаказПокупателя.ES_КоличествоМест, 1) КАК КоличествоМест,
	               |	ЕСТЬNULL(ЗаказПокупателя.ES_ОбщийВес, 0) КАК ОбщийВес,
	               |	ЕСТЬNULL(ЗаказПокупателя.ES_ОбщийОбъемныйВес, 0) КАК ОбщийОбъемныйВес,
	               |	ЕСТЬNULL(ЗаказПокупателя.ES_Получатель, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Получатель,
	               |	ЕСТЬNULL(ЗаказПокупателя.ES_ПолучательКонтактноеЛицо, ЗНАЧЕНИЕ(Справочник.КонтактныеЛица.ПустаяСсылка)) КАК КонтактноеЛицоПолучателя,
	               |	ЕСТЬNULL(ЗаказПокупателя.ES_ПолучательТелефон, """") КАК ТелефонПолучателя,
	               |	ВЫБОР
	               |		КОГДА ЗаказПокупателя.ES_ВидДоставки = ЗНАЧЕНИЕ(Перечисление.ES_ВидыДоставки.СкладСклад)
	               |			ТОГДА ЗаказПокупателя.ES_АдресСкладаДоставки
	               |		ИНАЧЕ ЗаказПокупателя.ES_АдресДоставки
	               |	КОНЕЦ КАК АдресПолучателя,
	               |	ЕСТЬNULL(ЗаказПокупателя.ES_ВремяДоставкиС, """") КАК ВремяС,
	               |	ЕСТЬNULL(ЗаказПокупателя.ES_ВремяДоставкиПо, """") КАК ВремяПо,
	               |	ЕСТЬNULL(ЗаказПокупателя.ES_ДатаДоставки, """") КАК ДатаДоставки,
	               |	ЕСТЬNULL(ЗаказПокупателя.ES_НППлан, 0) КАК НаложенныйПлатеж,
	               |	ЕСТЬNULL(ЗаказПокупателя.Комментарий, """") КАК Комментарий,
	               |	Док.План_Ссылка КАК План_Ссылка,
	               |	Док.План_Номер КАК План_Номер,
	               |	Док.План_Дата КАК План_Дата,
	               |	Док.План_Курьер КАК План_Курьер,
	               |	ЕСТЬNULL(ЗаказПокупателя.ES_НомерНакладной, 0) КАК Накладная,
	               |	ЕСТЬNULL(ЗаказПокупателя.Контрагент, """") КАК Заказчик,
	               |	ЕСТЬNULL(ЗаказПокупателя.ES_НомерНакладной, 0) КАК КодЗаказа,
	               |	Док.Автор КАК АвторДока,
	               |	ЕСТЬNULL(ЗаказПокупателя.ES_СправочноПолучатель, """") КАК СправочноПолучатель,
	               |	ЕСТЬNULL(ЗаказПокупателя.ES_СправочноТелПолучателя, """") КАК СправочноТелПолучателя,
	               |	ЕСТЬNULL(ЗаказПокупателя.ES_СправочноАдресПолучателя, """") КАК СправочноАдресПолучателя,
	               |	Док.Подрядчиком КАК Подрядчиком,
	               |	ЗаказПокупателя.Ссылка,
	               |	ЗаказПокупателя.ES_ТипГруза КАК ТипГрузаОбщ
	               |ПОМЕСТИТЬ ВТ
	               |ИЗ
	               |	Док КАК Док
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя КАК ЗаказПокупателя
	               |		ПО Док.ДокументДоставки = ЗаказПокупателя.Ссылка
	               |ГДЕ
	               |	ЗаказПокупателя.Ссылка В
	               |			(ВЫБРАТЬ
	               |				ДОК.ДокументДоставки
	               |			ИЗ
	               |				ДОК КАК ДОК)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ.КоличествоМест КАК КоличествоМест,
	               |	ВТ.ОбщийВес КАК ОбщийВес,
	               |	ВТ.ОбщийОбъемныйВес,
	               |	ВТ.Получатель,
	               |	ВТ.КонтактноеЛицоПолучателя,
	               |	ВТ.ТелефонПолучателя,
	               |	ВТ.АдресПолучателя,
	               |	ВТ.ВремяС,
	               |	ВТ.ВремяПо,
	               |	ВТ.ДатаДоставки,
	               |	ВТ.НаложенныйПлатеж,
	               |	ВТ.План_Ссылка КАК План_Ссылка,
	               |	ВТ.План_Номер КАК План_Номер,
	               |	ВТ.План_Дата КАК План_Дата,
	               |	ВТ.План_Курьер,
	               |	ВТ.Накладная,
	               |	ВТ.Заказчик,
	               |	ВТ.КодЗаказа,
	               |	ВТ.АвторДока,
	               |	ВТ.СправочноПолучатель,
	               |	ВТ.СправочноТелПолучателя,
	               |	ВТ.СправочноАдресПолучателя,
	               |	ВТ.Подрядчиком КАК Подрядчиком,
	               |	МАКСИМУМ(ЗаказПокупателяES_СписокГрузов.ТипГруза) КАК ТипГруза,
	               |	ВТ.Ссылка,
	               |	ВТ.ТипГрузаОбщ
	               |ИЗ
	               |	ВТ КАК ВТ
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя.ES_СписокГрузов КАК ЗаказПокупателяES_СписокГрузов
	               |		ПО ВТ.Ссылка = ЗаказПокупателяES_СписокГрузов.Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ.КонтактноеЛицоПолучателя,
	               |	ВТ.ВремяПо,
	               |	ВТ.План_Ссылка,
	               |	ВТ.План_Номер,
	               |	ВТ.План_Дата,
	               |	ВТ.План_Курьер,
	               |	ВТ.Заказчик,
	               |	ВТ.АдресПолучателя,
	               |	ВТ.АвторДока,
	               |	ВТ.ВремяС,
	               |	ВТ.ДатаДоставки,
	               |	ВТ.СправочноПолучатель,
	               |	ВТ.СправочноТелПолучателя,
	               |	ВТ.СправочноАдресПолучателя,
	               |	ВТ.Подрядчиком,
	               |	ВТ.ТелефонПолучателя,
	               |	ВТ.Ссылка,
	               |	ВТ.Получатель,
	               |	ВТ.КодЗаказа,
	               |	ВТ.Накладная,
	               |	ВТ.ОбщийОбъемныйВес,
	               |	ВТ.НаложенныйПлатеж,
	               |	ВТ.КоличествоМест,
	               |	ВТ.ОбщийВес,
	               |	ВТ.ТипГрузаОбщ
	               |ИТОГИ
	               |	СУММА(КоличествоМест),
	               |	СУММА(ОбщийВес),
	               |	МАКСИМУМ(План_Номер),
	               |	МАКСИМУМ(План_Дата),
	               |	МАКСИМУМ(Подрядчиком)
	               |ПО
	               |	План_Ссылка";
			
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ES_ПланДоставки.ПФ_MXL_Манифест");
		Если ТипЗнч(Макет)<> Тип("ТабличныйДокумент") Тогда
			Макет = ПолучитьМакет("ПФ_MXL_Манифест");
		КонецЕсли;
		
		ПервыйДокумент = Истина;
		
		ВыборкаНомер = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаНомер.Следующий() Цикл
			
			Если НЕ ВыборкаНомер.Подрядчиком Тогда
				Сообщить("" + ВыборкаНомер.План_Ссылка + " доставляется не подрядчиком");
				Продолжить;
			КонецЕсли; 
			
			Если ПервыйДокумент Тогда
				ПервыйДокумент = Ложь;
			Иначе	
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			// ОбластьШапка
			ОбластьШапка 	= Макет.ПолучитьОбласть("Шапка");
			ОбластьПодвал 	= Макет.ПолучитьОбласть("Подвал");
			
			ОсновнаяОрганизация 	= ES_ОбщегоНазначения.ПолучитьСтартовуюНастройку(Перечисления.ES_ВидыСтартовыхНастроек.Организация);					
			СведенияОбОрганизации 	= УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(ОсновнаяОрганизация,ВыборкаНомер.План_Дата);
			
			ОбластьШапка.Параметры.Отправитель 			= УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОбОрганизации,"ПолноеНаименование");
			ОбластьШапка.Параметры.План_Номер 			= ВыборкаНомер.План_Номер;
			ОбластьШапка.Параметры.План_Дата 			= Формат(ВыборкаНомер.План_Дата,"ДФ=dd.MM.yyyy");
			ОбластьШапка.Параметры.План_Получатель 		= ВыборкаНомер.План_Ссылка.Подрядчик;
			ОбластьШапка.Параметры.План_Контрагент 		= ВыборкаНомер.План_Ссылка.Перевозчик;
			ОбластьШапка.Параметры.ИтогоМест 			= ВыборкаНомер.КоличествоМест;
			ОбластьШапка.Параметры.ИтогоВес 			= ВыборкаНомер.ОбщийВес;

			ТабДок.Вывести(ОбластьШапка);
			
			НомерСтр = 0;
			
			Выборка = ВыборкаНомер.Выбрать();
			Пока Выборка.Следующий() Цикл
				
				НомерСтр = НомерСтр + 1;
				
				// ОбластьСтрока
				ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
				ОбластьСтрока.Параметры.Заполнить(Выборка);
				ОбластьСтрока.Параметры.НомерСтр = НомерСтр;
				Если ЗначениеЗаполнено(Выборка.ТипГрузаОбщ) Тогда
				ОбластьСтрока.Параметры.ТипГруза = Выборка.ТипГрузаОбщ;
				Иначе
				ОбластьСтрока.Параметры.ТипГруза = Выборка.ТипГруза;
				КонецЕсли;
				
				ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
				ТабДок.Вывести(ОбластьСтрока);
				
			КонецЦикла; 

			ОбластьПодвал.Параметры.АвторДока = ВыборкаНомер.План_Ссылка.Автор; 
			ТабДок.Вывести(ОбластьПодвал);

		КонецЦикла;
		
	КонецЕсли; 
	
	Возврат ТабДок;
	
КонецФункции

Функция СформироватьПечатнуюФормуМаршрутныйЛист(МассивОбъектов, ОбъектыПечати)
	
	ЕстьУпрощенныйЗабор = ПроверитьУпрощенныйЗабор(МассивОбъектов);
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДок.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПланДоставки_ПланДоставки";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ES_ПланДоставки.ПФ_MXL_ПланДоставки");
	Если ТипЗнч(Макет)<> Тип("ТабличныйДокумент") Тогда
	Макет = ПолучитьМакет("ПФ_MXL_ПланДоставки");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ES_ПланДоставкиЗаказы.Ссылка КАК СсылкаНаПлан,
		|	ES_ПланДоставкиЗаказы.НомерСтроки,
		|	ES_ПланДоставкиЗаказы.ДокументДоставки,
		|	ES_ПланДоставкиЗаказы.ДокументДоставки.Представление,
		|	ВЫБОР
		|		КОГДА ES_ПланДоставкиЗаказы.ДокументДоставки ССЫЛКА Документ.ES_ЗаборГруза
		|			ТОГДА ВЫБОР
		|					КОГДА ES_ПланДоставкиЗаказы.ВидДоставки = ЗНАЧЕНИЕ(Перечисление.ES_ВидыЗабора.ПоПути)
		|						ТОГДА ES_ПланДоставкиЗаказы.СвязанныйДокумент.Представление
		|					ИНАЧЕ НЕОПРЕДЕЛЕНО
		|				КОНЕЦ
		|		КОГДА ES_ПланДоставкиЗаказы.ДокументДоставки ССЫЛКА Документ.ЗаказПокупателя
		|			ТОГДА ВЫБОР
		|					КОГДА ES_ПланДоставкиЗаказы.ВидДоставки = ЗНАЧЕНИЕ(Перечисление.ES_ВидыДоставки.ДвериДвери)
		|							И ES_ПланДоставкиЗаказы.ВидСвязанногоДокЗабора = ЗНАЧЕНИЕ(Перечисление.ES_ВидыЗабора.ПоПути)
		|						ТОГДА ES_ПланДоставкиЗаказы.СвязанныйДокумент.Представление
		|					ИНАЧЕ НЕОПРЕДЕЛЕНО
		|				КОНЕЦ
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СвязкаПредставление,
		|	ВЫБОР
		|		КОГДА ES_ПланДоставкиЗаказы.ДокументДоставки ССЫЛКА Документ.ЗаказПокупателя
		|			ТОГДА ES_ПланДоставкиЗаказы.ДокументДоставки.ES_НомерНакладной
		|		КОГДА ES_ПланДоставкиЗаказы.СвязанныйДокумент ССЫЛКА Документ.ЗаказПокупателя
		|			ТОГДА ES_ПланДоставкиЗаказы.СвязанныйДокумент.ES_НомерНакладной
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК НомерЗаказа,
		|	ES_ПланДоставкиЗаказы.Получатель,
		|	ES_ПланДоставкиЗаказы.ПолучательКонтЛицо,
		|	ES_ПланДоставкиЗаказы.ПолучательТелефон,
		|	ES_ПланДоставкиЗаказы.ПолучательАдрес,
		|	ES_ПланДоставкиЗаказы.ВремяДоставки,
		|	ES_ПланДоставкиЗаказы.СтоимостьДоставки,
		|	ES_ПланДоставкиЗаказы.НППлан,
		|	ES_ПланДоставкиЗаказы.Комментарий,
		|	ES_ПланДоставкиЗаказы.ДокументДоставки.Контрагент КАК Заказчик,
		|	ES_ПланДоставкиЗаказы.ЗаборОтправитель КАК ЗаборОтправитель,
		|	ES_ПланДоставкиЗаказы.ЗаборКонтактноеЛицо КАК ЗаборКонтактноеЛицо,
		|	ES_ПланДоставкиЗаказы.ЗаборАдрес КАК ЗаборАдрес,
		|	ES_ПланДоставкиЗаказы.ЗаборТелефон КАК ЗаборТелефон,
		|	ES_ПланДоставкиЗаказы.ЗаборВремя КАК ЗаборВремя,
		|	ES_ПланДоставкиЗаказы.НомерНакладной,
		|	ES_ПланДоставкиЗаказы.ВидДоставки,
		|	ES_ПланДоставкиЗаказы.ВидЗабора,
		|	ES_ПланДоставкиЗаказы.НомерПломбы
		|ПОМЕСТИТЬ ВТ_Заказы
		|ИЗ
		|	Документ.ES_ПланДоставки.Заказы КАК ES_ПланДоставкиЗаказы
		|ГДЕ
		|	ES_ПланДоставкиЗаказы.Ссылка В(&МассивОбъектов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ES_ИзменяемыеРеквизитыЗаказовТрекНомер.Заказ КАК ДокументДоставки,
		|	ES_ИзменяемыеРеквизитыЗаказовТрекНомер.Значение КАК ТрекНомер,
		|	NULL КАК Расходы
		|ПОМЕСТИТЬ ВТ_ИзмРекв
		|ИЗ
		|	РегистрСведений.ES_ИзменяемыеРеквизитыЗаказов.СрезПоследних(
		|			,
		|			Заказ В
		|					(ВЫБРАТЬ
		|						ВТ_Заказы.ДокументДоставки
		|					ИЗ
		|						ВТ_Заказы КАК ВТ_Заказы)
		|				И РеквизитЗаказа = ЗНАЧЕНИЕ(Перечисление.ES_ИзменяемыеРеквизитыЗаказа.ТрекНомер)) КАК ES_ИзменяемыеРеквизитыЗаказовТрекНомер
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ES_ИзменяемыеРеквизитыЗаказовРасходы.Заказ,
		|	NULL,
		|	ES_ИзменяемыеРеквизитыЗаказовРасходы.Значение
		|ИЗ
		|	РегистрСведений.ES_ИзменяемыеРеквизитыЗаказов.СрезПоследних(
		|			,
		|			Заказ В
		|					(ВЫБРАТЬ
		|						ВТ_Заказы.ДокументДоставки
		|					ИЗ
		|						ВТ_Заказы КАК ВТ_Заказы)
		|				И РеквизитЗаказа = ЗНАЧЕНИЕ(Перечисление.ES_ИзменяемыеРеквизитыЗаказа.Расходы)) КАК ES_ИзменяемыеРеквизитыЗаказовРасходы
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ES_ИзменяемыеРеквизитыЗаборовТрекНомер.Забор,
		|	ES_ИзменяемыеРеквизитыЗаборовТрекНомер.Значение,
		|	NULL
		|ИЗ
		|	РегистрСведений.ES_ИзменяемыеРеквизитыЗаборов.СрезПоследних(
		|			,
		|			Забор В
		|					(ВЫБРАТЬ
		|						ВТ_Заказы.ДокументДоставки
		|					ИЗ
		|						ВТ_Заказы КАК ВТ_Заказы)
		|				И РеквизитЗабора = ЗНАЧЕНИЕ(Перечисление.ES_ИзменяемыеРеквизитыЗабора.ТрекНомер)) КАК ES_ИзменяемыеРеквизитыЗаборовТрекНомер
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	NULL,
		|	ES_ИзменяемыеРеквизитыЗаборовРасходы.Значение,
		|	ES_ИзменяемыеРеквизитыЗаборовРасходы.Забор
		|ИЗ
		|	РегистрСведений.ES_ИзменяемыеРеквизитыЗаборов.СрезПоследних(
		|			,
		|			Забор В
		|					(ВЫБРАТЬ
		|						ВТ_Заказы.ДокументДоставки
		|					ИЗ
		|						ВТ_Заказы КАК ВТ_Заказы)
		|				И РеквизитЗабора = ЗНАЧЕНИЕ(Перечисление.ES_ИзменяемыеРеквизитыЗабора.Расходы)) КАК ES_ИзменяемыеРеквизитыЗаборовРасходы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ИзмРекв.ДокументДоставки,
		|	МАКСИМУМ(ВТ_ИзмРекв.ТрекНомер) КАК ТрекНомер,
		|	МАКСИМУМ(ВТ_ИзмРекв.Расходы) КАК Расходы
		|ПОМЕСТИТЬ ВТ_ИзмРеквГруп
		|ИЗ
		|	ВТ_ИзмРекв КАК ВТ_ИзмРекв
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ИзмРекв.ДокументДоставки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ES_ПланДоставки.Ссылка КАК СсылкаНаПлан,
		|	ES_ПланДоставки.Номер КАК НомерДок,
		|	ES_ПланДоставки.Дата КАК ДатаДок,
		|	ES_ПланДоставки.Курьер КАК Курьер,
		|	ES_ПланДоставки.ТранспортноеСредство КАК Транспорт,
		|	ES_ПланДоставки.СхемаПроезда,
		|	ВТ_Заказы.ДокументДоставки КАК ДокументДоставки,
		|	ВТ_Заказы.ДокументДоставкиПредставление,
		|	ВТ_Заказы.СвязкаПредставление,
		|	ВТ_Заказы.НомерЗаказа,
		|	ВТ_Заказы.НомерСтроки,
		|	ВТ_Заказы.Получатель,
		|	ВТ_Заказы.ПолучательКонтЛицо,
		|	ВТ_Заказы.ПолучательТелефон,
		|	ВТ_Заказы.ПолучательАдрес,
		|	ВТ_Заказы.ВремяДоставки,
		|	ВТ_Заказы.ЗаборОтправитель КАК ЗаборОтправитель,
		|	ВТ_Заказы.ЗаборКонтактноеЛицо КАК ЗаборКонтактноеЛицо,
		|	ВТ_Заказы.ЗаборАдрес КАК ЗаборАдрес,
		|	ВТ_Заказы.ЗаборТелефон КАК ЗаборТелефон,
		|	ВТ_Заказы.ЗаборВремя КАК ЗаборВремя,
		|	ЕСТЬNULL(ВТ_Заказы.СтоимостьДоставки, 0) КАК СтоимостьДоставки,
		|	ЕСТЬNULL(ВТ_Заказы.НППлан, 0) КАК НППлан,
		|	ВТ_Заказы.Комментарий,
		|	ВТ_ИзмРеквГруп.ТрекНомер,
		|	ВТ_ИзмРеквГруп.Расходы,
		|	ВЫБОР
		|		КОГДА ВТ_Заказы.ДокументДоставки ССЫЛКА Документ.ES_ЗаборГруза
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоКомплектацияГруза,
		|	ВТ_Заказы.Заказчик,
		|	ВТ_Заказы.НомерНакладной,
		|	ВТ_Заказы.ВидДоставки,
		|	ВТ_Заказы.ВидЗабора,
		|	ЕСТЬNULL(ES_ДанныеПоЗаказамСрезПоследних.Возврат, ЛОЖЬ) КАК Возврат,
		|	ВТ_Заказы.НомерПломбы
		|ИЗ
		|	Документ.ES_ПланДоставки КАК ES_ПланДоставки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИзмРеквГруп КАК ВТ_ИзмРеквГруп
		|			ПО ВТ_Заказы.ДокументДоставки = ВТ_ИзмРеквГруп.ДокументДоставки
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ES_ДанныеПоЗаказам.СрезПоследних КАК ES_ДанныеПоЗаказамСрезПоследних
		|			ПО ВТ_Заказы.ДокументДоставки = ES_ДанныеПоЗаказамСрезПоследних.Заказ
		|		ПО ES_ПланДоставки.Ссылка = ВТ_Заказы.СсылкаНаПлан
		|ГДЕ
		|	ES_ПланДоставки.Ссылка В(&МассивОбъектов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВТ_Заказы.НомерСтроки
		|ИТОГИ
		|	МАКСИМУМ(НомерДок),
		|	МАКСИМУМ(ДатаДок),
		|	МАКСИМУМ(Курьер),
		|	МАКСИМУМ(Транспорт)
		|ПО
		|	СсылкаНаПлан";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		ОписаниеПроезда = "";
		ПервыйДокумент = Истина;
		
		ВыборкаСсылкаНаПлан = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСсылкаНаПлан.Следующий() Цикл
			
			Если ПервыйДокумент Тогда
				ПервыйДокумент = Ложь;
			Иначе	
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			// Шапка
			НомерДокумента = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ВыборкаСсылкаНаПлан.НомерДок, Истина, Истина);
			ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
			ОбластьШапка.Параметры.ТекстЗаголовка = "План доставки №"
													+ НомерДокумента
													+ " от "
													+ Формат(ВыборкаСсылкаНаПлан.ДатаДок, "ДЛФ=DD");
			ОбластьШапка.Параметры.Заполнить(ВыборкаСсылкаНаПлан);
			ТабДок.Вывести(ОбластьШапка);
						
			Выборка = ВыборкаСсылкаНаПлан.Выбрать();
			Пока Выборка.Следующий() Цикл
				
				СокращениеВидаДоставки = " (" + ES_ОбщегоНазначения.ВернутьСокращениеВидовДоставки(Выборка.ВидДоставки, Выборка.ВидЗабора, Выборка.Возврат)+")"; 
				
				Если Выборка.ЭтоКомплектацияГруза Тогда
					
					//ЕФСОЛ Несторук +
					//ПредставлениеДокДоставкиБезДаты = Выборка.ДокументДоставкиПредставление;
					//НомСимвола = Найти(Выборка.ДокументДоставкиПредставление, " от ");
					//Если НомСимвола > 0 Тогда
						//ПредставлениеДокДоставкиБезДаты = Лев(ПредставлениеДокДоставкиБезДаты, НомСимвола - 1);
						//ПредставлениеДокДоставкиБезДаты = ПредставлениеДокДоставкиБезДаты + "
						//|" + Выборка.НомерНакладной;
						  ПредставлениеДокДоставкиБезДаты = "Забор груза" + "
						|" + Выборка.НомерНакладной + СокращениеВидаДоставки;
					//КонецЕсли; 
					//ЕФСОЛ Несторук -
					ПредставлениеСвязкиБезДаты = "";
					//Если ЗначениеЗаполнено(Выборка.СвязкаПредставление) Тогда
						//ЕФСОЛ Несторук 11.08.2016 +
						//ПредставлениеСвязкиБезДаты = "Заказ на доставку " + Выборка.НомерЗаказа;
						//ПредставлениеСвязкиБезДаты = "Заказ на доставку " +" " + Выборка.ВидДоставки+" "+ Выборка.НомерНакладной;
						//ЕФСОЛ Несторук 11.08.2016 -
					//КонецЕсли; 

				Иначе
					
					ПредставлениеДокДоставкиБезДаты = "Заказ на доставку " + "
					|" + Выборка.НомерНакладной + СокращениеВидаДоставки;
					
					ПредставлениеСвязкиБезДаты = "";
					//Если ЗначениеЗаполнено(Выборка.СвязкаПредставление) Тогда
					//	ПредставлениеСвязкиБезДаты = Выборка.СвязкаПредставление;
					//	НомСимвола = Найти(Выборка.СвязкаПредставление, " от ");
					//	Если НомСимвола > 0 Тогда
					//		ПредставлениеСвязкиБезДаты = Лев(ПредставлениеСвязкиБезДаты, НомСимвола - 1);
					//	КонецЕсли; 
					//КонецЕсли; 
					
				КонецЕсли; 
				
				ПредставлениеДокументаДоставки = ПредставлениеДокДоставкиБезДаты + ?(ЗначениеЗаполнено(ПредставлениеСвязкиБезДаты), " (" + ПредставлениеСвязкиБезДаты + ")", "");
				
				ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
				ОбластьСтрока.Параметры.Заполнить(Выборка);
				ОбластьСтрока.Параметры.ПредставлениеДокументаДоставки = ПредставлениеДокументаДоставки;
				//ЕФСОЛ Несторук 10.10.2016 + Закомментировано 
				//ОбластьСтрока.Параметры.ОбщаяСумма = Выборка.СтоимостьДоставки + Выборка.НППлан;
				//ЕФСОЛ Несторук 10.10.2016 -
				//ОбластьСтрокаНачало = Макет.ПолучитьОбласть("Строка|ЗаказНачало");
				//ОбластьСтрокаПродолжение = Макет.ПолучитьОбласть("Строка|ЗаказПродолжение");
				//ОбластьСтрокаНачало.Параметры.Заполнить(Выборка);
				//ОбластьСтрокаПродолжение.Параметры.Заполнить(Выборка);
				//ОбластьСтрокаНачало.Параметры.ПредставлениеДокументаДоставки = ПредставлениеДокументаДоставки;
				//ОбластьСтрокаПродолжение.Параметры.ОбщаяСумма = Выборка.СтоимостьДоставки + Выборка.НППлан;
				//EFSOL_Прилуцкий_Владислав_13.03.2015 11:05:00_{
				Если ТипЗнч(Выборка.ДокументДоставки) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда	
					Если Выборка.ДокументДоставки.ES_ПредставлениеГрузов = Перечисления.ES_ПредставлениеГрузов.Запасы  Тогда 
						Если Выборка.ДокументДоставки.ES_Грузы.количество()= 1 Тогда
							Строк = Выборка.ДокументДоставки.ES_Грузы.Найти(1, "НомерСтроки");
							//ОбластьСтрокаПродолжение.Параметры.Груз = Строка(строк.НомерСтроки) + ". " + Строка(Строк.Номенклатура) + " " + Строка(Строк.Характеристика) + " " + Строка(Строк.Количество) + " " + Строка(Строк.ЕдиницаИзмерения) + ". " + Строка(Строк.Цена) + " руб.";
							ОбластьСтрока.Параметры.Груз = Строка(строк.НомерСтроки) + ". " + Строка(Строк.Номенклатура) + " " + Строка(Строк.Характеристика) + " " + Строка(Строк.Количество) + " " + Строка(Строк.ЕдиницаИзмерения) + ". " + Строка(Строк.Цена) + " руб.";
						ИначеЕсли Выборка.ДокументДоставки.ES_Грузы.количество()> 1 Тогда 
							Грузы = "";
							Номер = 1;
							Для каждого Строк Из Выборка.ДокументДоставки.ES_Грузы Цикл
								Грузы = Грузы + Строка(Номер) + ". "+ Строка(Строк.Номенклатура) + " " + Строка(Строк.Характеристика) + " " + Строка(Строк.Количество) + " " + Строка(Строк.ЕдиницаИзмерения) + ". " + Строка(Строк.Цена) + " руб." + Символы.ПС;
								Номер = Номер + 1;
							КонецЦикла;
							ОбластьСтрока.Параметры.Груз = Грузы;
							//ОбластьСтрокаПродолжение.Параметры.Груз = Грузы;
						КонецЕсли;
					ИначеЕсли Выборка.ДокументДоставки.ES_ПредставлениеГрузов = Перечисления.ES_ПредставлениеГрузов.Места Тогда  	
						Если Выборка.ДокументДоставки.ES_СписокГрузов.количество()= 1 Тогда
							Строк = Выборка.ДокументДоставки.ES_СписокГрузов.Найти(1, "НомерСтроки");
						//ОбластьСтрокаПродолжение.Параметры.Груз = Строка(строк.НомерСтроки) + ". " + Строка(Строк.ТипГруза) + " " + Строка(Строк.НППлан)+ " руб.";
						ОбластьСтрока.Параметры.Груз = Строка(строк.НомерСтроки) + ". " + Строка(Строк.ТипГруза) + " " + Строка(Строк.НППлан)+ " руб.";
						ИначеЕсли Выборка.ДокументДоставки.ES_СписокГрузов.количество()> 1 Тогда 
							Грузы = "";
							Номер = 1;
							Для каждого Строк Из  Выборка.ДокументДоставки.ES_СписокГрузов Цикл
								Грузы = Грузы + Строка(строк.НомерСтроки) + ". " + Строка(Строк.ТипГруза) + " " + Строка(Строк.НППлан)+" руб."+ Символы.ПС;
								Номер = Номер + 1;
							КонецЦикла;
							//ОбластьСтрокаПродолжение.Параметры.Груз = Грузы;
							ОбластьСтрока.Параметры.Груз = Грузы;
						КонецЕсли;			
					КонецЕсли;
				КонецЕсли;
				//EFSOL_Прилуцкий_Владислав_}
	
				ТабДок.Вывести(ОбластьСтрока);
				//ЕФСОЛ Несторук 26.07.2016 +
				//ТабДок.Вывести(ОбластьСтрокаНачало);
				//Если ЕстьУпрощенныйЗабор Тогда
				//	ОбластьСтрокаЗабор = Макет.ПолучитьОбласть("Строка|Забор");
				//	ОбластьСтрокаЗабор.Параметры.Заполнить(Выборка);
				//	ТабДок.Присоединить(ОбластьСтрокаЗабор);
				//КонецЕсли;
				//ТабДок.Присоединить(ОбластьСтрокаПродолжение);
				//ЕФСОЛ Несторук 26.07.2016 -
				
				Если НЕ ЗначениеЗаполнено(ОписаниеПроезда) Тогда
					ОписаниеПроезда = Выборка.СхемаПроезда;
				КонецЕсли; 
			КонецЦикла;
			
			//ОбластьМакета = макет.ПолучитьОбласть("Подвал");
			//ТабДок.Вывести(ОбластьМакета);   
			//
			//// Описание проезда
			//ОбластьМакета = Макет.ПолучитьОбласть("ОписаниеПроезда");		
			//КоличествоСтрок = СтрЧислоСтрок(СокрЛП(ОписаниеПроезда));
			//ЧислоСтрВК = КоличествоСтрок / 2;//3;
			//ЦелаяЧасть = Цел(ЧислоСтрВК);
			//ДробнаяЧасть = ЧислоСтрВК - ЦелаяЧасть;
			//КоличествоВКолонке = ?(ДробнаяЧасть = 0, ЦелаяЧасть, ЦелаяЧасть + 1);
			//сч = 1;
			//Номер = 1;
			//индекс = 0;
			//тз = новый ТаблицаЗначений;
			//тз.Колонки.Добавить("к1");
			//тз.Колонки.Добавить("к2");
			////тз.Колонки.Добавить("к3");
			//
			//Пока НЕ КоличествоСтрок = 0 цикл
			//	если номер <= КоличествоВКолонке и Не номер = 0 тогда
			//		строка = тз.Добавить();
			//		строка.к1 = СтрПолучитьСтроку(ОписаниеПроезда, сч);
			//		номер = номер + 1;
			//	//ИначеЕсли номер > КоличествоВКолонке тогда
			//	//	если индекс <= (КоличествоВКолонке - 1) тогда
			//	Иначе
			//			ДрСтрока = тз.Получить(индекс);
			//			ДрСтрока.к2 = СтрПолучитьСтроку(ОписаниеПроезда, сч);
			//			индекс = индекс + 1;
			//			номер = номер + 1;
			//	//	иначе
			//	//		номер = 0;
			//	//		индекс = 0;
			//	//		ДрСтрока3 = тз.Получить(индекс);
			//	//		ДрСтрока3.к3 = СтрПолучитьСтроку(ОписаниеПроезда, сч);
			//	//		индекс = индекс + 1;
			//	//	КонецЕсли;
			//	//ИначеЕсли номер = 0 тогда
			//	//	ДрСтрока3 = тз.Получить(индекс);
			//	//	ДрСтрока3.к3 = СтрПолучитьСтроку(ОписаниеПроезда, сч);			
			//	//	индекс = индекс + 1;				
			//	КонецЕсли;
			//	сч = сч + 1;
			//	КоличествоСтрок = КоличествоСтрок - 1;			
			//КонецЦикла;
			//
			//Для каждого строчка из тз цикл
			//	если Не(строчка.к1 = Неопределено и строчка.к2 = Неопределено) тогда  // и строчка.к3 = Неопределено
			//		ОбластьМакета.Параметры.ОписаниеПроезда1 = строчка.к1;
			//		ОбластьМакета.Параметры.ОписаниеПроезда2 = строчка.к2;
			//		//ОбластьМакета.Параметры.ОписаниеПроезда3 = строчка.к3;		
			//		ТабДок.Вывести(ОбластьМакета);
			//	КонецЕсли;
			//КонецЦикла;
			//
			ОбластьМакета = Макет.ПолучитьОбласть("Подпись");
			ТабДок.Вывести(ОбластьМакета);
			
		КонецЦикла;
	КонецЕсли; 
	
	Возврат ТабДок;
	
КонецФункции

//ЕФСОЛ Несторук 26.07.2016 +
Функция ПроверитьУпрощенныйЗабор(МассивОбъектов)
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ES_ПланДоставкиЗаказы.ВидЗабора
		|ИЗ
		|	Документ.ES_ПланДоставки.Заказы КАК ES_ПланДоставкиЗаказы
		|ГДЕ
		|	ES_ПланДоставкиЗаказы.Ссылка В(&МассивОбъектов)
		|	И ES_ПланДоставкиЗаказы.ВидЗабора = ЗНАЧЕНИЕ(Перечисление.ES_ВидыЗабора.Упрощенный)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции
//ЕФСОЛ Несторук 26.07.2016 -

//ЕФСОЛ 12.09.2016 +
Функция СформироватьПечатнуюФормуМаршрутныйЛистУпрощенный(МассивОбъектов, ОбъектыПечати)
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДок.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПланДоставки_Упрощенный";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ES_ПланДоставки.ПФ_MXL_ПланДоставкиУпрощенный");
	Если ТипЗнч(Макет)<> Тип("ТабличныйДокумент") Тогда
		Макет = ПолучитьМакет("ПФ_MXL_ПланДоставкиУпрощенный");
	КонецЕсли;

	Запрос = Новый Запрос;
		
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ES_ПланДоставкиЗаказы.Ссылка КАК СсылкаНаПлан,
		|	ES_ПланДоставкиЗаказы.НомерСтроки,
		|	ES_ПланДоставкиЗаказы.ДокументДоставки,
		|	ES_ПланДоставкиЗаказы.ДокументДоставки.Представление,
		|	ВЫБОР
		|		КОГДА ES_ПланДоставкиЗаказы.ДокументДоставки ССЫЛКА Документ.ES_ЗаборГруза
		|			ТОГДА ВЫБОР
		|					КОГДА ES_ПланДоставкиЗаказы.ВидДоставки = ЗНАЧЕНИЕ(Перечисление.ES_ВидыЗабора.ПоПути)
		|						ТОГДА ES_ПланДоставкиЗаказы.СвязанныйДокумент.Представление
		|					ИНАЧЕ НЕОПРЕДЕЛЕНО
		|				КОНЕЦ
		|		КОГДА ES_ПланДоставкиЗаказы.ДокументДоставки ССЫЛКА Документ.ЗаказПокупателя
		|			ТОГДА ВЫБОР
		|					КОГДА ES_ПланДоставкиЗаказы.ВидДоставки = ЗНАЧЕНИЕ(Перечисление.ES_ВидыДоставки.ДвериДвери)
		|							И ES_ПланДоставкиЗаказы.ВидСвязанногоДокЗабора = ЗНАЧЕНИЕ(Перечисление.ES_ВидыЗабора.ПоПути)
		|						ТОГДА ES_ПланДоставкиЗаказы.СвязанныйДокумент.Представление
		|					ИНАЧЕ НЕОПРЕДЕЛЕНО
		|				КОНЕЦ
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СвязкаПредставление,
		|	ВЫБОР
		|		КОГДА ES_ПланДоставкиЗаказы.ДокументДоставки ССЫЛКА Документ.ЗаказПокупателя
		|			ТОГДА ES_ПланДоставкиЗаказы.ДокументДоставки.ES_НомерНакладной
		|		КОГДА ES_ПланДоставкиЗаказы.СвязанныйДокумент ССЫЛКА Документ.ЗаказПокупателя
		|			ТОГДА ES_ПланДоставкиЗаказы.СвязанныйДокумент.ES_НомерНакладной
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК НомерЗаказа,
		|	ВЫБОР
		|		КОГДА ES_ПланДоставкиЗаказы.Получатель = """"
		|			ТОГДА ES_ПланДоставкиЗаказы.ЗаборОтправитель
		|		ИНАЧЕ ES_ПланДоставкиЗаказы.Получатель
		|	КОНЕЦ КАК Получатель,
		|	ВЫБОР
		|		КОГДА ES_ПланДоставкиЗаказы.ПолучательКонтЛицо = """"
		|			ТОГДА ES_ПланДоставкиЗаказы.ЗаборКонтактноеЛицо
		|		ИНАЧЕ ES_ПланДоставкиЗаказы.ПолучательКонтЛицо
		|	КОНЕЦ КАК ПолучательКонтЛицо,
		|	ВЫБОР
		|		КОГДА ES_ПланДоставкиЗаказы.ПолучательТелефон = """"
		|			ТОГДА ES_ПланДоставкиЗаказы.ЗаборТелефон
		|		ИНАЧЕ ES_ПланДоставкиЗаказы.ПолучательТелефон
		|	КОНЕЦ КАК ПолучательТелефон,
		|	ВЫБОР
		|		КОГДА ES_ПланДоставкиЗаказы.ПолучательАдрес = """"
		|			ТОГДА ES_ПланДоставкиЗаказы.ЗаборАдрес
		|		ИНАЧЕ ES_ПланДоставкиЗаказы.ПолучательАдрес
		|	КОНЕЦ КАК ПолучательАдрес,
		|	ВЫБОР
		|		КОГДА ES_ПланДоставкиЗаказы.ВремяДоставки = """"
		|			ТОГДА ES_ПланДоставкиЗаказы.ЗаборВремя
		|		ИНАЧЕ ES_ПланДоставкиЗаказы.ВремяДоставки
		|	КОНЕЦ КАК ВремяДоставки,
		|	ES_ПланДоставкиЗаказы.СтоимостьДоставки,
		|	ES_ПланДоставкиЗаказы.НППлан,
		|	ES_ПланДоставкиЗаказы.Комментарий,
		|	ВЫБОР
		|		КОГДА ES_ПланДоставкиЗаказы.ДокументДоставки ССЫЛКА Документ.ЗаказПокупателя
		|			ТОГДА ES_ПланДоставкиЗаказы.ДокументДоставки.Контрагент
		|		КОГДА ES_ПланДоставкиЗаказы.ДокументДоставки ССЫЛКА Документ.ES_ЗаборГруза
		|			ТОГДА ES_ПланДоставкиЗаказы.ДокументДоставки.Заказчик
		|		ИНАЧЕ ES_ПланДоставкиЗаказы.ДокументДоставки.Контрагент
		|	КОНЕЦ КАК Заказчик,
		|	ES_ПланДоставкиЗаказы.НомерНакладной,
		|	ES_ПланДоставкиЗаказы.ВидДоставки,
		|	ES_ПланДоставкиЗаказы.ВидЗабора,
		|	ES_ПланДоставкиЗаказы.НомерПломбы
		|ПОМЕСТИТЬ ВТ_Заказы
		|ИЗ
		|	Документ.ES_ПланДоставки.Заказы КАК ES_ПланДоставкиЗаказы
		|ГДЕ
		|	ES_ПланДоставкиЗаказы.Ссылка В(&МассивОбъектов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ES_ИзменяемыеРеквизитыЗаказовТрекНомер.Заказ КАК ДокументДоставки,
		|	ES_ИзменяемыеРеквизитыЗаказовТрекНомер.Значение КАК ТрекНомер,
		|	NULL КАК Расходы
		|ПОМЕСТИТЬ ВТ_ИзмРекв
		|ИЗ
		|	РегистрСведений.ES_ИзменяемыеРеквизитыЗаказов.СрезПоследних(
		|			,
		|			Заказ В
		|					(ВЫБРАТЬ
		|						ВТ_Заказы.ДокументДоставки
		|					ИЗ
		|						ВТ_Заказы КАК ВТ_Заказы)
		|				И РеквизитЗаказа = ЗНАЧЕНИЕ(Перечисление.ES_ИзменяемыеРеквизитыЗаказа.ТрекНомер)) КАК ES_ИзменяемыеРеквизитыЗаказовТрекНомер
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ES_ИзменяемыеРеквизитыЗаказовРасходы.Заказ,
		|	NULL,
		|	ES_ИзменяемыеРеквизитыЗаказовРасходы.Значение
		|ИЗ
		|	РегистрСведений.ES_ИзменяемыеРеквизитыЗаказов.СрезПоследних(
		|			,
		|			Заказ В
		|					(ВЫБРАТЬ
		|						ВТ_Заказы.ДокументДоставки
		|					ИЗ
		|						ВТ_Заказы КАК ВТ_Заказы)
		|				И РеквизитЗаказа = ЗНАЧЕНИЕ(Перечисление.ES_ИзменяемыеРеквизитыЗаказа.Расходы)) КАК ES_ИзменяемыеРеквизитыЗаказовРасходы
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ES_ИзменяемыеРеквизитыЗаборовТрекНомер.Забор,
		|	ES_ИзменяемыеРеквизитыЗаборовТрекНомер.Значение,
		|	NULL
		|ИЗ
		|	РегистрСведений.ES_ИзменяемыеРеквизитыЗаборов.СрезПоследних(
		|			,
		|			Забор В
		|					(ВЫБРАТЬ
		|						ВТ_Заказы.ДокументДоставки
		|					ИЗ
		|						ВТ_Заказы КАК ВТ_Заказы)
		|				И РеквизитЗабора = ЗНАЧЕНИЕ(Перечисление.ES_ИзменяемыеРеквизитыЗабора.ТрекНомер)) КАК ES_ИзменяемыеРеквизитыЗаборовТрекНомер
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	NULL,
		|	ES_ИзменяемыеРеквизитыЗаборовРасходы.Значение,
		|	ES_ИзменяемыеРеквизитыЗаборовРасходы.Забор
		|ИЗ
		|	РегистрСведений.ES_ИзменяемыеРеквизитыЗаборов.СрезПоследних(
		|			,
		|			Забор В
		|					(ВЫБРАТЬ
		|						ВТ_Заказы.ДокументДоставки
		|					ИЗ
		|						ВТ_Заказы КАК ВТ_Заказы)
		|				И РеквизитЗабора = ЗНАЧЕНИЕ(Перечисление.ES_ИзменяемыеРеквизитыЗабора.Расходы)) КАК ES_ИзменяемыеРеквизитыЗаборовРасходы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ИзмРекв.ДокументДоставки,
		|	МАКСИМУМ(ВТ_ИзмРекв.ТрекНомер) КАК ТрекНомер,
		|	МАКСИМУМ(ВТ_ИзмРекв.Расходы) КАК Расходы
		|ПОМЕСТИТЬ ВТ_ИзмРеквГруп
		|ИЗ
		|	ВТ_ИзмРекв КАК ВТ_ИзмРекв
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ИзмРекв.ДокументДоставки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ES_ПланДоставки.Ссылка КАК СсылкаНаПлан,
		|	ES_ПланДоставки.Номер КАК НомерДок,
		|	ES_ПланДоставки.Дата КАК ДатаДок,
		|	ES_ПланДоставки.Курьер КАК Курьер,
		|	ES_ПланДоставки.ТранспортноеСредство КАК Транспорт,
		|	ES_ПланДоставки.СхемаПроезда,
		|	ВТ_Заказы.ДокументДоставки КАК ДокументДоставки,
		|	ВТ_Заказы.ДокументДоставкиПредставление,
		|	ВТ_Заказы.СвязкаПредставление,
		|	ВТ_Заказы.НомерЗаказа,
		|	ВТ_Заказы.НомерСтроки,
		|	ВТ_Заказы.Получатель,
		|	ВТ_Заказы.ПолучательКонтЛицо,
		|	ВТ_Заказы.ПолучательАдрес,
		|	ВТ_Заказы.ПолучательТелефон,
		|	ВТ_Заказы.ВремяДоставки,
		|	ЕСТЬNULL(ВТ_Заказы.СтоимостьДоставки, 0) КАК СтоимостьДоставки,
		|	ЕСТЬNULL(ВТ_Заказы.НППлан, 0) КАК НППлан,
		|	ВТ_Заказы.Комментарий,
		|	ВТ_ИзмРеквГруп.ТрекНомер,
		|	ВТ_ИзмРеквГруп.Расходы,
		|	ВЫБОР
		|		КОГДА ВТ_Заказы.ДокументДоставки ССЫЛКА Документ.ES_ЗаборГруза
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоКомплектацияГруза,
		|	ВТ_Заказы.Заказчик,
		|	ВТ_Заказы.НомерНакладной,
		|	ВТ_Заказы.ВидДоставки,
		|	ВТ_Заказы.ВидЗабора,
		|	ЕСТЬNULL(ES_ДанныеПоЗаказамСрезПоследних.Возврат, ЛОЖЬ) КАК Возврат,
		|	ВТ_Заказы.НомерПломбы
		|ИЗ
		|	Документ.ES_ПланДоставки КАК ES_ПланДоставки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИзмРеквГруп КАК ВТ_ИзмРеквГруп
		|			ПО ВТ_Заказы.ДокументДоставки = ВТ_ИзмРеквГруп.ДокументДоставки
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ES_ДанныеПоЗаказам.СрезПоследних(
		|					,
		|					Заказ В
		|						(ВЫБРАТЬ
		|							ВТ_Заказы.ДокументДоставки
		|						ИЗ
		|							ВТ_Заказы КАК ВТ_Заказы)) КАК ES_ДанныеПоЗаказамСрезПоследних
		|			ПО ВТ_Заказы.ДокументДоставки = ES_ДанныеПоЗаказамСрезПоследних.Заказ
		|		ПО ES_ПланДоставки.Ссылка = ВТ_Заказы.СсылкаНаПлан
		|ГДЕ
		|	ES_ПланДоставки.Ссылка В(&МассивОбъектов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВТ_Заказы.НомерСтроки
		|ИТОГИ
		|	МАКСИМУМ(НомерДок),
		|	МАКСИМУМ(ДатаДок),
		|	МАКСИМУМ(Курьер),
		|	МАКСИМУМ(Транспорт)
		|ПО
		|	СсылкаНаПлан";

	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		ОписаниеПроезда = "";
		ПервыйДокумент = Истина;
		
		ВыборкаСсылкаНаПлан = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСсылкаНаПлан.Следующий() Цикл
			//ЕФСОЛ Несторук 12.09.2016 +
			//ЕстьЗабор = ВыборкаСсылкаНаПлан.ЕстьЗабор > 0;
			ЕстьЗабор = Ложь;
			//ЕФСОЛ Несторук 12.09.2016 -
			
			Если ПервыйДокумент Тогда
				ПервыйДокумент = Ложь;
			Иначе	
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			// Шапка
			НомерДокумента = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ВыборкаСсылкаНаПлан.НомерДок, Истина, Истина);
			//ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
			//ОбластьШапка.Параметры.ТекстЗаголовка = "План доставки №"
			//										+ НомерДокумента
			//										+ " от "
			//										+ Формат(ВыборкаСсылкаНаПлан.ДатаДок, "ДЛФ=DD");
			//ОбластьШапка.Параметры.Заполнить(ВыборкаСсылкаНаПлан);
			//ТабДок.Вывести(ОбластьШапка);
			
			ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
			ОбластьШапка.Параметры.ТекстЗаголовка = "План доставки №"
													+ НомерДокумента
													+ " от "
													+ Формат(ВыборкаСсылкаНаПлан.ДатаДок, "ДЛФ=DD");
			ОбластьШапка.Параметры.Заполнить(ВыборкаСсылкаНаПлан);
			ТабДок.Вывести(ОбластьШапка);
			//Если ЕстьЗабор Тогда
			//ОбластьШапкаЗабор = Макет.ПолучитьОбласть("Шапка");
			//ТабДок.Присоединить(ОбластьШапкаЗабор);
			//КонецЕсли;
			//ОбластьШапкаПродолжение = Макет.ПолучитьОбласть("Шапка|ЗаказПродолжение");
			//ТабДок.Присоединить(ОбластьШапкаПродолжение);
					

			
						
			Выборка = ВыборкаСсылкаНаПлан.Выбрать();
			Пока Выборка.Следующий() Цикл
				
			СокращениеВидаДоставки = " (" + ES_ОбщегоНазначения.ВернутьСокращениеВидовДоставки(Выборка.ВидДоставки, Выборка.ВидЗабора, Выборка.Возврат)+")"; 
	
				Если Выборка.ЭтоКомплектацияГруза Тогда
					
					//ЕФСОЛ Несторук +
					//ПредставлениеДокДоставкиБезДаты = Выборка.ДокументДоставкиПредставление;
					//НомСимвола = Найти(Выборка.ДокументДоставкиПредставление, " от ");
					//Если НомСимвола > 0 Тогда
						//ПредставлениеДокДоставкиБезДаты = Лев(ПредставлениеДокДоставкиБезДаты, НомСимвола - 1);
						//ПредставлениеДокДоставкиБезДаты = ПредставлениеДокДоставкиБезДаты + "
						//|" + Выборка.НомерНакладной;
						  ПредставлениеДокДоставкиБезДаты = "Забор груза" + "
						|" + Выборка.НомерНакладной + СокращениеВидаДоставки;
					//КонецЕсли; 
					//ЕФСОЛ Несторук -
					ПредставлениеСвязкиБезДаты = "";
					//Если ЗначениеЗаполнено(Выборка.СвязкаПредставление) Тогда
						//ЕФСОЛ Несторук 11.08.2016 +
						//ПредставлениеСвязкиБезДаты = "Заказ на доставку " + Выборка.НомерЗаказа;
						//ПредставлениеСвязкиБезДаты = "Заказ на доставку " +" " + Выборка.ВидДоставки+" "+ Выборка.НомерНакладной;
						//ЕФСОЛ Несторук 11.08.2016 -
					//КонецЕсли; 

				Иначе
					
					ПредставлениеДокДоставкиБезДаты = "Заказ на доставку " + "
					|" + Выборка.НомерНакладной + СокращениеВидаДоставки;
					
					ПредставлениеСвязкиБезДаты = "";
					//Если ЗначениеЗаполнено(Выборка.СвязкаПредставление) Тогда
					//	ПредставлениеСвязкиБезДаты = Выборка.СвязкаПредставление;
					//	НомСимвола = Найти(Выборка.СвязкаПредставление, " от ");
					//	Если НомСимвола > 0 Тогда
					//		ПредставлениеСвязкиБезДаты = Лев(ПредставлениеСвязкиБезДаты, НомСимвола - 1);
					//	КонецЕсли; 
					//КонецЕсли; 
					
				КонецЕсли; 
				
				ПредставлениеДокументаДоставки = ПредставлениеДокДоставкиБезДаты + ?(ЗначениеЗаполнено(ПредставлениеСвязкиБезДаты), " (" + ПредставлениеСвязкиБезДаты + ")", "");
				
				//ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
				//ОбластьСтрока.Параметры.Заполнить(Выборка);
				//ОбластьСтрока.Параметры.ПредставлениеДокументаДоставки = ПредставлениеДокументаДоставки;
				//ОбластьСтрока.Параметры.ОбщаяСумма = Выборка.СтоимостьДоставки + Выборка.НППлан;
				ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
				ОбластьСтрока.Параметры.Заполнить(Выборка);
				ОбластьСтрока.Параметры.ПредставлениеДокументаДоставки = ПредставлениеДокументаДоставки;
				//ОбластьСтрокаПродолжение.Параметры.ОбщаяСумма = Выборка.СтоимостьДоставки + Выборка.НППлан;
				//EFSOL_Прилуцкий_Владислав_13.03.2015 11:05:00_{
				//Если ТипЗнч(Выборка.ДокументДоставки) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда	
				//	Если Выборка.ДокументДоставки.ES_ПредставлениеГрузов = Перечисления.ES_ПредставлениеГрузов.Запасы  Тогда 
				//		Если Выборка.ДокументДоставки.ES_Грузы.количество()= 1 Тогда
				//			Строк = Выборка.ДокументДоставки.ES_Грузы.Найти(1, "НомерСтроки");
				//			ОбластьСтрокаПродолжение.Параметры.Груз = Строка(строк.НомерСтроки) + ". " + Строка(Строк.Номенклатура) + " " + Строка(Строк.Характеристика) + " " + Строка(Строк.Количество) + " " + Строка(Строк.ЕдиницаИзмерения) + ". " + Строка(Строк.Цена) + " руб.";
				//			//ОбластьСтрока.Параметры.Груз = Строка(строк.НомерСтроки) + ". " + Строка(Строк.Номенклатура) + " " + Строка(Строк.Характеристика) + " " + Строка(Строк.Количество) + " " + Строка(Строк.ЕдиницаИзмерения) + ". " + Строка(Строк.Цена) + " руб.";
				//		ИначеЕсли Выборка.ДокументДоставки.ES_Грузы.количество()> 1 Тогда 
				//			Грузы = "";
				//			Номер = 1;
				//			Для каждого Строк Из Выборка.ДокументДоставки.ES_Грузы Цикл
				//				Грузы = Грузы + Строка(Номер) + ". "+ Строка(Строк.Номенклатура) + " " + Строка(Строк.Характеристика) + " " + Строка(Строк.Количество) + " " + Строка(Строк.ЕдиницаИзмерения) + ". " + Строка(Строк.Цена) + " руб." + Символы.ПС;
				//				Номер = Номер + 1;
				//			КонецЦикла;
				//			//ОбластьСтрока.Параметры.Груз = Грузы;
				//			ОбластьСтрокаПродолжение.Параметры.Груз = Грузы;
				//		КонецЕсли;
				//	ИначеЕсли Выборка.ДокументДоставки.ES_ПредставлениеГрузов = Перечисления.ES_ПредставлениеГрузов.Места Тогда  	
				//		Если Выборка.ДокументДоставки.ES_СписокГрузов.количество()= 1 Тогда
				//			Строк = Выборка.ДокументДоставки.ES_СписокГрузов.Найти(1, "НомерСтроки");
				//		ОбластьСтрокаПродолжение.Параметры.Груз = Строка(строк.НомерСтроки) + ". " + Строка(Строк.ТипГруза) + " " + Строка(Строк.НППлан)+ " руб.";
				//		//ОбластьСтрока.Параметры.Груз = Строка(строк.НомерСтроки) + ". " + Строка(Строк.ТипГруза) + " " + Строка(Строк.НППлан)+ " руб.";
				//		ИначеЕсли Выборка.ДокументДоставки.ES_СписокГрузов.количество()> 1 Тогда 
				//			Грузы = "";
				//			Номер = 1;
				//			Для каждого Строк Из  Выборка.ДокументДоставки.ES_СписокГрузов Цикл
				//				Грузы = Грузы + Строка(строк.НомерСтроки) + ". " + Строка(Строк.ТипГруза) + " " + Строка(Строк.НППлан)+" руб."+ Символы.ПС;
				//				Номер = Номер + 1;
				//			КонецЦикла;
				//			ОбластьСтрокаПродолжение.Параметры.Груз = Грузы;
				//			//ОбластьСтрока.Параметры.Груз = Грузы;
				//		КонецЕсли;			
				//	КонецЕсли;
				//КонецЕсли;
				//EFSOL_Прилуцкий_Владислав_}
	
				//ТабДок.Вывести(ОбластьСтрока);
				//ЕФСОЛ Несторук 26.07.2016 +
				ТабДок.Вывести(ОбластьСтрока);
				//Если ЕстьЗабор Тогда
				//	ОбластьСтрокаЗабор = Макет.ПолучитьОбласть("Строка|Забор");
				//	ОбластьСтрокаЗабор.Параметры.Заполнить(Выборка);
				//	ТабДок.Присоединить(ОбластьСтрокаЗабор);
				//КонецЕсли;
				//ТабДок.Присоединить(ОбластьСтрокаПродолжение);
				//ЕФСОЛ Несторук 26.07.2016 -
				
				Если НЕ ЗначениеЗаполнено(ОписаниеПроезда) Тогда
					ОписаниеПроезда = Выборка.СхемаПроезда;
				КонецЕсли; 
			КонецЦикла;
			
			//ОбластьМакета = макет.ПолучитьОбласть("Подвал");
			//ТабДок.Вывести(ОбластьМакета);   
			//
			//// Описание проезда
			//ОбластьМакета = Макет.ПолучитьОбласть("ОписаниеПроезда");		
			//КоличествоСтрок = СтрЧислоСтрок(СокрЛП(ОписаниеПроезда));
			//ЧислоСтрВК = КоличествоСтрок / 2;//3;
			//ЦелаяЧасть = Цел(ЧислоСтрВК);
			//ДробнаяЧасть = ЧислоСтрВК - ЦелаяЧасть;
			//КоличествоВКолонке = ?(ДробнаяЧасть = 0, ЦелаяЧасть, ЦелаяЧасть + 1);
			//сч = 1;
			//Номер = 1;
			//индекс = 0;
			//тз = новый ТаблицаЗначений;
			//тз.Колонки.Добавить("к1");
			//тз.Колонки.Добавить("к2");
			////тз.Колонки.Добавить("к3");
			//
			//Пока НЕ КоличествоСтрок = 0 цикл
			//	если номер <= КоличествоВКолонке и Не номер = 0 тогда
			//		строка = тз.Добавить();
			//		строка.к1 = СтрПолучитьСтроку(ОписаниеПроезда, сч);
			//		номер = номер + 1;
			//	//ИначеЕсли номер > КоличествоВКолонке тогда
			//	//	если индекс <= (КоличествоВКолонке - 1) тогда
			//	Иначе
			//			ДрСтрока = тз.Получить(индекс);
			//			ДрСтрока.к2 = СтрПолучитьСтроку(ОписаниеПроезда, сч);
			//			индекс = индекс + 1;
			//			номер = номер + 1;
			//	//	иначе
			//	//		номер = 0;
			//	//		индекс = 0;
			//	//		ДрСтрока3 = тз.Получить(индекс);
			//	//		ДрСтрока3.к3 = СтрПолучитьСтроку(ОписаниеПроезда, сч);
			//	//		индекс = индекс + 1;
			//	//	КонецЕсли;
			//	//ИначеЕсли номер = 0 тогда
			//	//	ДрСтрока3 = тз.Получить(индекс);
			//	//	ДрСтрока3.к3 = СтрПолучитьСтроку(ОписаниеПроезда, сч);			
			//	//	индекс = индекс + 1;				
			//	КонецЕсли;
			//	сч = сч + 1;
			//	КоличествоСтрок = КоличествоСтрок - 1;			
			//КонецЦикла;
			//
			//Для каждого строчка из тз цикл
			//	если Не(строчка.к1 = Неопределено и строчка.к2 = Неопределено) тогда  // и строчка.к3 = Неопределено
			//		ОбластьМакета.Параметры.ОписаниеПроезда1 = строчка.к1;
			//		ОбластьМакета.Параметры.ОписаниеПроезда2 = строчка.к2;
			//		//ОбластьМакета.Параметры.ОписаниеПроезда3 = строчка.к3;		
			//		ТабДок.Вывести(ОбластьМакета);
			//	КонецЕсли;
			//КонецЦикла;
			//
			ОбластьМакета = Макет.ПолучитьОбласть("Подпись");
			ТабДок.Вывести(ОбластьМакета);
			
		КонецЦикла;
	КонецЕсли; 
	
	Возврат ТабДок;
	
КонецФункции

Функция ПроверитьЗабор(МассивОбъектов)
	
	Результат = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ES_ПланДоставкиЗаказы.ДокументДоставки
		|ИЗ
		|	Документ.ES_ПланДоставки.Заказы КАК ES_ПланДоставкиЗаказы
		|ГДЕ
		|	ES_ПланДоставкиЗаказы.Ссылка В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если ТипЗнч(Выборка.ДокументДоставки) = Тип("ДокументСсылка.ES_ЗаборГруза") Тогда
			Результат =  Истина;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	КонецЕсли;

	Возврат Результат;
	
КонецФункции
//ЕФСОЛ 12.09.2016 -

Функция ПечатьESСтикер(МассивОбъектов, ОбъектыПечати, ИмяМакета) Экспорт
	//Лохоня Ю.А.
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДок.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ES_ПланДоставки_ES_Стикер";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ES_ПланДоставки."+ ИмяМакета);
	Если ТипЗнч(Макет)<> Тип("ТабличныйДокумент") Тогда
		Макет = ПолучитьМакет(ИмяМакета);
	КонецЕсли;
	ОбластьПеч = Макет.ПолучитьОбласть("Шапка|Шапка2");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказПокупателя.Номер КАК Номер,
		|	ЗаказПокупателя.Дата КАК Дата,
		|	ЗаказПокупателя.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТ_Заказы
		|ИЗ
		|	Документ.ЗаказПокупателя КАК ЗаказПокупателя
		|ГДЕ
		|	НЕ ЗаказПокупателя.Ссылка.ПометкаУдаления
		|	И ЗаказПокупателя.Ссылка В(&МассивОбъектов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ES_ЗаказыНаСкладе.Регистратор.Дата) КАК ДатаПриемки,
		|	ES_ЗаказыНаСкладе.Заказ КАК Заказ
		|ПОМЕСТИТЬ ВТ_ЗаказыНаСклад
		|ИЗ
		|	РегистрНакопления.ES_ЗаказыНаСкладе КАК ES_ЗаказыНаСкладе
		|ГДЕ
		|	ТИПЗНАЧЕНИЯ(ES_ЗаказыНаСкладе.Регистратор) = ТИП(Документ.ES_Приемка)
		|
		|СГРУППИРОВАТЬ ПО
		|	ES_ЗаказыНаСкладе.Заказ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Заказы.Ссылка КАК Ссылка,
		|	ВТ_Заказы.Номер КАК Номер,
		|	ВТ_Заказы.Дата КАК Дата,
		|	ВТ_ЗаказыНаСклад.ДатаПриемки КАК ДатаПриемки
		|ИЗ
		|	ВТ_Заказы КАК ВТ_Заказы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗаказыНаСклад КАК ВТ_ЗаказыНаСклад
		|		ПО ВТ_Заказы.Ссылка = ВТ_ЗаказыНаСклад.Заказ";
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	НачЗнач = 0;
	
	СчетчикДокументов = 0;
	Инд = 0;
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаНаЗаказПокупателя = РезультатЗапроса.Выгрузить();
		ПервыйДокумент = Истина;
		//Для Каждого МассивОбъект Из ВыборкаНаЗаказПокупателя Цикл 
		Для Каждого МассивОбъект Из ВыборкаНаЗаказПокупателя Цикл
			Если Не ПервыйДокумент Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			ПервыйДокумент = Ложь;
			Инд = Инд + 1;
			
			СчетчикДокументов = СчетчикДокументов + 1; 
			
			//Если НЕ МассивОбъектов.ES_КоличествоМест = 0 Тогда 
			Если НЕ МассивОбъект.Ссылка.ES_КоличествоМест = 0 Тогда	
				
				НачЗнач = 1;
				
				Для Счетчик = НачЗнач  по  МассивОбъект.Ссылка.ES_КоличествоМест Цикл   			
					       
					Если МассивОбъект.Ссылка.ВидОперации = Перечисления.ВидыОперацийЗаказПокупателя.ES_ЗаказНаДоставку И МассивОбъект.Ссылка.ПометкаУдаления = Ложь тогда
						
						ВнешняяКомпонента = МенеджерОборудованияСерверПовтИсп.ПодключитьВнешнююКомпонентуПечатиШтрихкода_Стикер(); 
						
						НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1; 					
						
						НомерШК = МассивОбъект.Ссылка.ES_НомерНакладной;
						
						ОбластьПеч.Рисунки.Штрих.Картинка = ES_ПолучитьКартинкуШтрихкода_Стикер(ВнешняяКомпонента,номерШК , 50, 300);
												
						ОбластьПеч.Параметры.Получатель 	= МассивОбъект.Ссылка.ES_Получатель;
						ОбластьПеч.Параметры.Адрес 	= МассивОбъект.Ссылка.ES_АдресДоставки;	
						ОбластьПеч.Параметры.Телефон 	= МассивОбъект.Ссылка.ES_ПолучательТелефон;
						
						Док = МассивОбъект.Ссылка.ПолучитьОбъект();
												
						Если Док.ES_Грузы.Количество()>0 Тогда
							Если ЗначениеЗаполнено(Док.ES_Грузы[0].Содержание) Тогда
								Товар1 	= Док.ES_Грузы[0].Содержание;
							КонецЕсли;
							Если ЗначениеЗаполнено(Док.ES_Грузы[0].Артикул) Тогда
								Артикул1 = Док.ES_Грузы[0].Артикул;
							КонецЕсли;
							Если Док.ES_Грузы.Количество()>1 Тогда
								Если ЗначениеЗаполнено(Док.ES_Грузы[1].Содержание) Тогда
									Товар2 	= Док.ES_Грузы[1].Содержание;
								КонецЕсли;
								Если ЗначениеЗаполнено(Док.ES_Грузы[1].Артикул) Тогда
									Артикул2 = Док.ES_Грузы[1].Артикул;
								КонецЕсли;
							КонецЕсли;
						Иначе
							Товар1 	= ""; 
							Артикул1= "";
							Товар2  = "";
							Артикул2= "";
						КонецЕсли;

						ОбластьПеч.Параметры.Товар1 = Товар1;
						ОбластьПеч.Параметры.Артикул1 = Артикул1;
						ОбластьПеч.Параметры.Товар2 = Товар2;
						ОбластьПеч.Параметры.Артикул2 = Артикул2;

						//ОбластьПеч.Параметры.Вес 	= " " + Вес + " кг.";
						ОбластьПеч.Параметры.Вес 	= " " + МассивОбъект.Ссылка.ES_ОбщийВес + " кг.";
						//ОбластьПеч.Параметры.Мест = Строка(МассивОбъект.ES_КоличествоМест);
						ОбластьПеч.Параметры.Мест = Строка(Счетчик) + " из " + Строка(МассивОбъект.Ссылка.ES_КоличествоМест);
						//ОбластьПеч.Параметры.Вес 	= МассивОбъект.ES_Грузы[0].Вес;
						//ОбластьПеч.Параметры.Артикул 	= МассивОбъект.ES_Грузы[0].Артикул;
						ОбластьПеч.Параметры.Отправитель 	= МассивОбъект.Ссылка.Контрагент;
						//ОбластьПеч.Параметры.ДатаПриема 	= Лев(МассивОбъект.ДатаПриемки, 10);
						Для Каждого ЭЛ ИЗ ВыборкаНаЗаказПокупателя ЦИКЛ 
							Если НЕ Запрос.Выполнить().Пустой() Тогда 
								//ОбластьПеч.Параметры.ДатаПриема 	= Лев(ВыборкаНаЗаказПокупателя[0].ДатаПриемки, 10);//Дата(Формат(МассивОбъект.ES_ДатаДоставки, "ДФ=yyyyММдд"));
								ОбластьПеч.Параметры.ДатаПриема 	= Формат(ВыборкаНаЗаказПокупателя[Инд-1].ДатаПриемки, "ДЛФ=Д");	
							Иначе ОбластьПеч.Параметры.ДатаПриема 	= "";	
							КонецЕсли;
						КонецЦикла;	
						ОбластьПеч.Параметры.Код			= Справочники.ES_Направления.НайтиПоНаименованию(МассивОбъект.Ссылка.ES_Направление).КодНаправления;
						
						ТабДок.Вывести(ОбластьПеч);
						
					КонецЕсли;
					
				КонецЦикла;
				
			Иначе 
				Если МассивОбъект.Ссылка.ВидОперации = Перечисления.ВидыОперацийЗаказПокупателя.ES_ЗаказНаДоставку И МассивОбъект.Ссылка.ПометкаУдаления = Ложь тогда
					
					ВнешняяКомпонента = МенеджерОборудованияСерверПовтИсп.ПодключитьВнешнююКомпонентуПечатиШтрихкода(); 
					
					НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
					
					НомерДокБезПрефикса = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(МассивОбъект.Ссылка.Номер,Истина,Истина);
					НомерШК = ES_СформироватьШтрихкод(НомерДокБезПрефикса);
					
					//ОбластьПеч.Рисунки.Штрих.Картинка = ПолучитьКартинкуШтрихкода(ВнешняяКомпонента,номерШК , 25, 40);
					//ОбластьПеч.Рисунки.Штрих.Картинка = ES_ПолучитьКартинкуШтрихкода_Стикер(ВнешняяКомпонента,номерШК , 70, 50);
					//ОбластьПеч.Параметры.Организация = "" + МассивОбъект.Контрагент + ", тел. " + МассивОбъект.ES_ЗаказчикТелефон;
					//ОбластьПеч.Параметры.Получатель = МассивОбъект.ES_Получатель.Наименование + ", тел. " + МассивОбъект.ES_ПолучательТелефон;
					//ОбластьПеч.Параметры.ВидДоставки = МассивОбъект.ES_ВидДоставки;
					
					ОбластьПеч.Рисунки.Штрих.Картинка = ES_ПолучитьКартинкуШтрихкода_Стикер(ВнешняяКомпонента,номерШК , 50, 300);
					//ОбластьПеч.Параметры.Организация 	= "" + МассивОбъект.Контрагент + ?(ЗначениеЗаполнено(МассивОбъект.ES_ЗаказчикТелефон), ", тел. " + МассивОбъект.ES_ЗаказчикТелефон, "");
					//ОбластьПеч.Параметры.КоличествоМест = "(" + Строка(Счетчик) + " из " + Строка(МассивОбъект.ES_КоличествоМест) +")";
					ОбластьПеч.Параметры.Получатель 	= МассивОбъект.Ссылка.ES_Получатель;
					ОбластьПеч.Параметры.Адрес 	= МассивОбъект.Ссылка.ES_АдресДоставки;	
					ОбластьПеч.Параметры.Телефон 	= МассивОбъект.Ссылка.ES_ПолучательТелефон;
					//Если ЗначениеЗаполнено(МассивОбъект.ES_Грузы[0].Номенклатура) Тогда
					//	ОбластьПеч.Параметры.Товар 	= МассивОбъект.ES_Грузы[0].Номенклатура;
					//Иначе ОбластьПеч.Параметры.Товар = " ";
					//КонецЕсли;	
					Док = МассивОбъект.Ссылка.ПолучитьОбъект();
					//Товары = Новый Массив();
					//Артикулы = Новый Массив();
					////ВесМас = Новый Массив();
					//Для Каждого Стр Из Док.ES_Грузы Цикл
					//	Товар 	= Стр.Содержание;
					//	Артикул 	= Стр.Артикул;
					//	//Вес 	= Стр.Вес;
					//	
					//	Товары.Добавить(Товар);
					//	Артикулы.Добавить(Артикул);
					//	//ВесМас.Добавить(Вес);
					//КонецЦикла;
					Если Док.ES_Грузы.Количество()>0 Тогда
						Если ЗначениеЗаполнено(Док.ES_Грузы[0].Содержание) Тогда
							Товар1 	= Док.ES_Грузы[0].Содержание;
						КонецЕсли;
						Если ЗначениеЗаполнено(Док.ES_Грузы[0].Артикул) Тогда
							Артикул1 = Док.ES_Грузы[0].Артикул;
						КонецЕсли;
						Если Док.ES_Грузы.Количество()>1 Тогда
							Если ЗначениеЗаполнено(Док.ES_Грузы[1].Содержание) Тогда
								Товар2 	= Док.ES_Грузы[1].Содержание;
							КонецЕсли;
							Если ЗначениеЗаполнено(Док.ES_Грузы[1].Артикул) Тогда
								Артикул2 = Док.ES_Грузы[1].Артикул;
							КонецЕсли;
						КонецЕсли;
					Иначе
						Товар1 	= ""; 
						Артикул1= "";
						Товар2  = "";
						Артикул2= "";
					КонецЕсли;

					//Для Каждого ЭлементТов из Товары Цикл
					//	Тов = " " + Строка(Тов) + Символы.ПС + Строка(ЭлементТов) + " "; // 100 300 500
					//КонецЦикла;
					//
					//Для Каждого ЭлементАрт из Артикулы Цикл
					//	Арт = " " + Строка(Арт) + Символы.ПС + Строка(ЭлементАрт) + " "; // 100 300 500
					//КонецЦикла;
					//Вес = 0;
					//Для Каждого ЭлементВес из ВесМас Цикл
					//	Вес = Вес + ЭлементВес; // 100 300 500
					//КонецЦикла;
					
					//ОбластьПеч.Параметры.Товар = Тов;
					//ОбластьПеч.Параметры.Артикул = Арт;
					ОбластьПеч.Параметры.Товар1 = Товар1;
					ОбластьПеч.Параметры.Артикул1 = Артикул1;
					ОбластьПеч.Параметры.Товар2 = Товар2;
					ОбластьПеч.Параметры.Артикул2 = Артикул2;

					//ОбластьПеч.Параметры.Вес 	= Вес;
					ОбластьПеч.Параметры.Вес 	= МассивОбъект.Ссылка.ES_ОбщийВес;
					ОбластьПеч.Параметры.Мест = Строка(МассивОбъект.Ссылка.ES_КоличествоМест);
					//ОбластьПеч.Параметры.Вес 	= МассивОбъект.ES_Грузы[0].Вес;
					//ОбластьПеч.Параметры.Артикул 	= МассивОбъект.ES_Грузы[0].Артикул;
					ОбластьПеч.Параметры.Отправитель 	= МассивОбъект.Ссылка.Контрагент;
					//ОбластьПеч.Параметры.ДатаПриема 	= Лев(МассивОбъект.ДатаПриемки, 10);// МассивОбъект.ES_ДатаДоставки;
					Для Каждого ЭЛ ИЗ ВыборкаНаЗаказПокупателя ЦИКЛ 
						Если НЕ Запрос.Выполнить().Пустой() Тогда 
							//ОбластьПеч.Параметры.ДатаПриема 	= Лев(ВыборкаНаЗаказПокупателя[0].ДатаПриемки, 10);//Дата(Формат(МассивОбъект.ES_ДатаДоставки, "ДФ=yyyyММдд"));
							ОбластьПеч.Параметры.ДатаПриема 	= Формат(ЭЛ.ДатаПриемки, "ДЛФ=Д");	
						Иначе ОбластьПеч.Параметры.ДатаПриема 	= "";	
						КонецЕсли;
					КонецЦикла;	
					ОбластьПеч.Параметры.Код			= Справочники.ES_Направления.НайтиПоНаименованию(МассивОбъект.Ссылка.ES_Направление).КодНаправления;
					
					ТабДок.Вывести(ОбластьПеч);								
				КонецЕсли;
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;	
	Возврат ТабДок;

КонецФункции

Функция ПечатьESНакладнаяB2C(МассивОбъектов, ОбъектыПечати, ИмяМакета, ТабДок_B2C) Экспорт
	//Лохоня Ю.А.
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ES_ПланДоставки."+ ИмяМакета);
	Если ТипЗнч(Макет)<> Тип("ТабличныйДокумент") Тогда
		Макет = ПолучитьМакет(ИмяМакета);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА КонтрагентыКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресДоставкиКонтрагета)
		|			ТОГДА КонтрагентыКонтактнаяИнформация.Представление
		|		ИНАЧЕ "" ""
		|	КОНЕЦ КАК Заказчик_ПолныйАдрес,
		|	ВЫБОР
		|		КОГДА КонтрагентыКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресДоставкиКонтрагета)
		|			ТОГДА КонтрагентыКонтактнаяИнформация.Страна
		|		ИНАЧЕ "" ""
		|	КОНЕЦ КАК Заказчик_Страна,
		|	ВЫБОР
		|		КОГДА КонтрагентыКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресДоставкиКонтрагета)
		|			ТОГДА КонтрагентыКонтактнаяИнформация.Регион
		|		ИНАЧЕ "" ""
		|	КОНЕЦ КАК Заказчик_Регион,
		|	ВЫБОР
		|		КОГДА КонтрагентыКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресДоставкиКонтрагета)
		|			ТОГДА КонтрагентыКонтактнаяИнформация.Город
		|		ИНАЧЕ "" ""
		|	КОНЕЦ КАК Заказчик_Город,
		|	КонтрагентыКонтактнаяИнформация.Ссылка КАК Ссылка,
		|	КонтрагентыКонтактнаяИнформация.Вид КАК Вид
		|ПОМЕСТИТЬ ВТ_КИ_Адрес
		|ИЗ
		|	Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыКонтактнаяИнформация
		|ГДЕ
		|	КонтрагентыКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресДоставкиКонтрагета)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаказПокупателя.Ссылка КАК Ссылка,
		|	ЗаказПокупателя.Номер КАК Номер,
		|	ЗаказПокупателя.Дата КАК Дата,
		|	ЗаказПокупателя.Договор КАК Договор,
		|	ЗаказПокупателя.Контрагент.ES_ВидКонтрагента КАК ВидДоставки,
		|	ЗаказПокупателя.Контрагент КАК Контрагент,
		|	ЗаказПокупателя.ES_ЗаказчикКонтактноеЛицо КАК ЗаказчикКонтактноеЛицо,
		|	ЗаказПокупателя.ES_ЗаказчикТелефон КАК ЗаказчикТелефон,
		|	ЗаказПокупателя.ES_Получатель КАК Получатель,
		|	ЗаказПокупателя.ES_ПолучательКонтактноеЛицо КАК ПолучательКонтактноеЛицо,
		|	ЗаказПокупателя.ES_ПолучательТелефон КАК ПолучательТелефон,
		|	ЗаказПокупателя.ES_ПолучательРегион КАК ПолучательРегион,
		|	ЗаказПокупателя.ES_Плательщик КАК Плательщик,
		|	ЗаказПокупателя.ES_ВидОплаты КАК ВидОплаты,
		|	ЗаказПокупателя.ES_СтоимостьДоставки КАК СтоимостьДоставки,
		|	ЗаказПокупателя.ES_КоличествоМест КАК КоличествоМест,
		|	ЗаказПокупателя.ES_НППлан КАК НППлан,
		|	ЗаказПокупателя.Ответственный КАК Ответственный,
		|	ЗаказПокупателя.ES_ДатаДоставки КАК ДатаДоставки,
		|	ЗаказПокупателя.ES_ЗаборАдрес КАК АдресОтправителя,
		|	ЗаказПокупателя.ES_ЗаборОтправитель КАК Отправитель,
		|	ЗаказПокупателя.ES_ЗаборТелефон КАК ТелефонОтправителя,
		|	ЗаказПокупателя.ES_ЗаборКонтактноеЛицо КАК КонтактноеЛицоОтправителя,
		|	ЗаказПокупателя.ES_Город1 КАК ГородОтправителя,
		|	ЗаказПокупателя.ES_ЗаборРегион КАК РегионОтправителя,
		|	ЗаказПокупателя.Комментарий КАК Описание,
		|	ЗаказПокупателя.ES_ОбщийВес КАК Вес,
		|	ЗаказПокупателя.ES_НомерНакладной КАК НомерНакладной,
		|	ЗаказПокупателя.ES_ТипДоставки КАК ТипДоставки,
		|	ЗаказПокупателя.ES_ТипГруза КАК ТипГруза,
		|	ЗаказПокупателя.ES_АдресДоставки КАК ES_АдресДоставки,
		|	ЗаказПокупателя.ES_КоличествоМест КАК ES_КоличествоМест,
		|	ЗаказПокупателя.ES_ОбщийВес КАК ES_ОбщийВес,
		|	ЗаказПокупателя.ES_Объем КАК ES_Объем,
		|	ЗаказПокупателя.Ширина КАК Ширина,
		|	ЗаказПокупателя.Длина КАК Длина,
		|	ЗаказПокупателя.Высота КАК Высота,
		|	ЗаказПокупателя.ВремяДоставкиПо КАК ВремяДоставкиПо,
		|	ЗаказПокупателя.ES_ЧекНаОбщуюСумму КАК ES_ЧекНаОбщуюСумму,
		|	ЗаказПокупателя.Контрагент.КонтактнаяИнформация.(
		|		Ссылка КАК Поле1,
		|		НомерСтроки КАК Поле2,
		|		Тип КАК Поле3,
		|		Вид КАК Поле4,
		|		Представление КАК Поле5,
		|		ЗначенияПолей КАК Поле6,
		|		Страна КАК Поле7,
		|		Регион КАК Поле8,
		|		Город КАК Поле9,
		|		АдресЭП КАК Поле10,
		|		ДоменноеИмяСервера КАК Поле11,
		|		НомерТелефона КАК Поле12,
		|		НомерТелефонаБезКодов КАК Поле13
		|	) КАК Контрагент1,
		|	ЗаказПокупателя.ES_АдресДоставкиГород КАК ES_АдресДоставкиГород,
		|	ВТ_КИ_Адрес.Заказчик_ПолныйАдрес КАК Заказчик_ПолныйАдрес,
		|	ВТ_КИ_Адрес.Заказчик_Страна КАК Заказчик_Страна,
		|	ВТ_КИ_Адрес.Заказчик_Регион КАК Заказчик_Регион,
		|	ВТ_КИ_Адрес.Заказчик_Город КАК Заказчик_Город,
		|	ЗаказПокупателя.ES_ВидДоставки КАК ES_ВидДоставки,
		|   ЗаказПокупателя.ES_ЗаказчикИОтправительОдноЛицо
		|ИЗ
		|	Документ.ЗаказПокупателя КАК ЗаказПокупателя
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КИ_Адрес КАК ВТ_КИ_Адрес
		|		ПО ЗаказПокупателя.Контрагент = ВТ_КИ_Адрес.Ссылка
		|ГДЕ
		|	НЕ ЗаказПокупателя.ПометкаУдаления
		|	И ЗаказПокупателя.Ссылка В(&МассивОбъектов)";		
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		ВыборкаСсылка = РезультатЗапроса.Выбрать();
		Пока ВыборкаСсылка.Следующий() Цикл
			//НомерДокумента = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ВыборкаСсылка.Номер, Истина, Истина);
			//
			ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
			//ОбластьШапка.Параметры.ТекстЗаголовка = "Накладная на доставку "
			//										+ НомерДокумента
			//										+ " от "
			//										+ Формат(ВыборкаСсылка.Дата, "ДЛФ=DD");
			//										
			ВнешняяКомпонента = МенеджерОборудованияСерверПовтИсп.ПодключитьВнешнююКомпонентуПечатиШтрихкода();
			номерШК = ВыборкаСсылка.НомерНакладной;
			ОбластьШапка.Рисунки.Штрих4.Картинка = ES_ПолучитьКартинкуШтрихкода(ВнешняяКомпонента,номерШК , 70, 50);

			ОбластьШапка.Параметры.НомДог = "" + ВыборкаСсылка.Договор + " ";
			//Отправитель
			Если ВыборкаСсылка.ES_ВидДоставки = Перечисления.ES_ВидыДоставки.ДвериДвери Тогда
				//Заказчик = Отправитель
				Если  ВыборкаСсылка.ES_ЗаказчикИОтправительОдноЛицо Тогда				
					ОбластьШапка.Параметры.Отправитель_Конт = "" + ВыборкаСсылка.ЗаказчикКонтактноеЛицо + " ";
					ОбластьШапка.Параметры.Отправитель = "" + ВыборкаСсылка.Контрагент + " ";
					ОбластьШапка.Параметры.Отправитель_Регион = "" + ВыборкаСсылка.Заказчик_Регион + " ";
					ОбластьШапка.Параметры.Отправитель_Город = "" + ВыборкаСсылка.Заказчик_Город + " ";
					ОбластьШапка.Параметры.Отправитель_Адрес = "" + ВыборкаСсылка.Заказчик_ПолныйАдрес + " ";
					ОбластьШапка.Параметры.Отправитель_Телефон = "" + ВыборкаСсылка.ЗаказчикТелефон + " ";							
				Иначе 
					ОбластьШапка.Параметры.Отправитель_Конт = "" + ВыборкаСсылка.КонтактноеЛицоОтправителя + " ";
					ОбластьШапка.Параметры.Отправитель = "" + ВыборкаСсылка.Отправитель + " ";
					ОбластьШапка.Параметры.Отправитель_Регион = "" + ВыборкаСсылка.РегионОтправителя + " ";
					ОбластьШапка.Параметры.Отправитель_Город = "" + ВыборкаСсылка.ГородОтправителя + " ";
					ОбластьШапка.Параметры.Отправитель_Адрес = "" + ВыборкаСсылка.АдресОтправителя + " ";
					ОбластьШапка.Параметры.Отправитель_Телефон = "" + ВыборкаСсылка.ТелефонОтправителя + " ";				
				КонецЕсли;
			Иначе
				ОбластьШапка.Параметры.Отправитель_Конт = "" + ВыборкаСсылка.ЗаказчикКонтактноеЛицо + " ";
				ОбластьШапка.Параметры.Отправитель = "" + ВыборкаСсылка.Контрагент + " ";
				ОбластьШапка.Параметры.Отправитель_Регион = "" + ВыборкаСсылка.Заказчик_Регион + " ";
				ОбластьШапка.Параметры.Отправитель_Город = "" + ВыборкаСсылка.Заказчик_Город + " ";
				ОбластьШапка.Параметры.Отправитель_Адрес = "" + ВыборкаСсылка.Заказчик_ПолныйАдрес + " ";
				ОбластьШапка.Параметры.Отправитель_Телефон = "" + ВыборкаСсылка.ЗаказчикТелефон + " ";
			КонецЕсли;
			
			//Получатель
			ОбластьШапка.Параметры.Получатель_Конт = "" + ВыборкаСсылка.ПолучательКонтактноеЛицо + " ";
			ОбластьШапка.Параметры.Получатель = "" + ВыборкаСсылка.Получатель + " ";
			ОбластьШапка.Параметры.Получатель_Регион = "" + ВыборкаСсылка.ПолучательРегион + " ";
			ОбластьШапка.Параметры.Получатель_Город = "" + ВыборкаСсылка.ES_АдресДоставкиГород + " ";
			ОбластьШапка.Параметры.Получатель_Адрес = "" + ВыборкаСсылка.ES_АдресДоставки + " ";
			ОбластьШапка.Параметры.Получатель_Телефон = "" + ВыборкаСсылка.ПолучательТелефон + " ";
			ОбластьШапка.Параметры.Получатель_ТипДоставки = "" + ВыборкаСсылка.ВидДоставки + " ";			
						
			ОбластьШапка.Параметры.НомНакл = ВыборкаСсылка.НомерНакладной;		
			ОбластьШапка.Параметры.ТипВл = ВыборкаСсылка.ТипГруза;
			ОбластьШапка.Параметры.Примечание = ВыборкаСсылка.Описание;
			ОбластьШапка.Параметры.КМест = ВыборкаСсылка.ES_КоличествоМест;
			ОбластьШапка.Параметры.Вес = ВыборкаСсылка.ES_ОбщийВес;
			ОбластьШапка.Параметры.Габариты = " " + ВыборкаСсылка.Ширина + " х " + ВыборкаСсылка.Длина + " х " + ВыборкаСсылка.Высота + " ";
			
			Док = ВыборкаСсылка.Ссылка.ПолучитьОбъект();
			Номер = 0;
			Для Каждого Строка Из Док.ES_Грузы Цикл
				Номер = Номер + 1;
				Если Номер = 1 Тогда
					ОбластьШапка.Параметры.Ном0 = 1;
					ОбластьШапка.Параметры.Артикул0 = Строка.Артикул;
					//ОбластьШапка.Параметры.Номенклатура0 = Строка.Номенклатура; 
					ОбластьШапка.Параметры.Номенклатура0 = Строка.Содержание; 
					ОбластьШапка.Параметры.Кол0 = Строка.Количество;
					ОбластьШапка.Параметры.Стоим0 = Строка.Количество * Строка.Цена;
					ОбластьШапка.Параметры.V0 = " ";//Строка.Объем;
				КонецЕсли;
				Если Номер = 2 Тогда
					ОбластьШапка.Параметры.Ном1 = 2;
					ОбластьШапка.Параметры.Артикул1 = Строка.Артикул;
					//ОбластьШапка.Параметры.Номенклатура1 = Строка.Номенклатура; 
					ОбластьШапка.Параметры.Номенклатура1 = Строка.Содержание;
					ОбластьШапка.Параметры.Кол1 = Строка.Количество;
					ОбластьШапка.Параметры.Стоим1 = Строка.Количество * Строка.Цена;
					ОбластьШапка.Параметры.V1 = " ";//Строка.Объем;
				КонецЕсли;
				Если Номер = 3 Тогда
					ОбластьШапка.Параметры.Ном2 = 3;
					ОбластьШапка.Параметры.Артикул2 = Строка.Артикул;
					//ОбластьШапка.Параметры.Номенклатура2 = Строка.Номенклатура; 
					ОбластьШапка.Параметры.Номенклатура2 = Строка.Содержание;
					ОбластьШапка.Параметры.Кол2 = Строка.Количество;
					ОбластьШапка.Параметры.Стоим2 = Строка.Количество * Строка.Цена;
					ОбластьШапка.Параметры.V2 = " ";//Строка.Объем;
				КонецЕсли;
				Если Номер = 4 Тогда
					ОбластьШапка.Параметры.Ном3 = 4;
					ОбластьШапка.Параметры.Артикул3 = Строка.Артикул;
					//ОбластьШапка.Параметры.Номенклатура3 = Строка.Номенклатура; 
					ОбластьШапка.Параметры.Номенклатура3 = Строка.Содержание;
					ОбластьШапка.Параметры.Кол3 = Строка.Количество;
					ОбластьШапка.Параметры.Стоим3 = Строка.Количество * Строка.Цена;
					ОбластьШапка.Параметры.V3 = " ";//Строка.Объем;
				КонецЕсли;
				Если Номер = 5 Тогда
					ОбластьШапка.Параметры.Ном4 = 5;
					ОбластьШапка.Параметры.Артикул4 = Строка.Артикул;
					//ОбластьШапка.Параметры.Номенклатура4 = Строка.Номенклатура; 
					ОбластьШапка.Параметры.Номенклатура4 = Строка.Содержание;
					ОбластьШапка.Параметры.Кол4 = Строка.Количество;
					ОбластьШапка.Параметры.Стоим4 = Строка.Количество * Строка.Цена;
					ОбластьШапка.Параметры.V4 = Строка.Объем;
				КонецЕсли;
				Если Номер = 6 Тогда
					ОбластьШапка.Параметры.Ном5 = 6;
					ОбластьШапка.Параметры.Артикул5 = Строка.Артикул;
					//ОбластьШапка.Параметры.Номенклатура5 = Строка.Номенклатура;
					ОбластьШапка.Параметры.Номенклатура5 = Строка.Содержание;
					ОбластьШапка.Параметры.Кол5 = Строка.Количество;
					ОбластьШапка.Параметры.Стоим5 = Строка.Количество * Строка.Цена;
					ОбластьШапка.Параметры.V5 = " ";//Строка.Объем;
				КонецЕсли;
				Если Номер = 7 Тогда
					ОбластьШапка.Параметры.Ном6 = 7;
					ОбластьШапка.Параметры.Артикул6 = Строка.Артикул;
					//ОбластьШапка.Параметры.Номенклатура6 = Строка.Номенклатура; 
					ОбластьШапка.Параметры.Номенклатура6 = Строка.Содержание;
					ОбластьШапка.Параметры.Кол6 = Строка.Количество;
					ОбластьШапка.Параметры.Стоим6 = Строка.Количество * Строка.Цена;
					ОбластьШапка.Параметры.V6 = " ";//Строка.Объем;
				КонецЕсли;
				Если Номер = 8 Тогда
					ОбластьШапка.Параметры.Ном7 = 8;
					ОбластьШапка.Параметры.Артикул7 = Строка.Артикул;
					//ОбластьШапка.Параметры.Номенклатура7 = Строка.Номенклатура; 
					ОбластьШапка.Параметры.Номенклатура7 = Строка.Содержание; 
					ОбластьШапка.Параметры.Кол7 = Строка.Количество;
					ОбластьШапка.Параметры.Стоим7 = Строка.Количество * Строка.Цена;
					ОбластьШапка.Параметры.V7 = " ";//Строка.Объем;
				КонецЕсли;
				Если Номер = 9 Тогда
					ОбластьШапка.Параметры.Ном8 = 9;
					ОбластьШапка.Параметры.Артикул8 = Строка.Артикул;
					//ОбластьШапка.Параметры.Номенклатура8 = Строка.Номенклатура;
					ОбластьШапка.Параметры.Номенклатура8 = Строка.Содержание;
					ОбластьШапка.Параметры.Кол8 = Строка.Количество;
					ОбластьШапка.Параметры.Стоим8 = Строка.Количество * Строка.Цена;
					ОбластьШапка.Параметры.V8 = " ";//Строка.Объем;
				КонецЕсли;
				Если Номер = 10 Тогда
					ОбластьШапка.Параметры.Ном9 = 10;
					ОбластьШапка.Параметры.Артикул9 = Строка.Артикул;
					//ОбластьШапка.Параметры.Номенклатура9 = Строка.Номенклатура; 
					ОбластьШапка.Параметры.Номенклатура9 = Строка.Содержание;
					ОбластьШапка.Параметры.Кол9 = Строка.Количество;
					ОбластьШапка.Параметры.Стоим9 = Строка.Количество * Строка.Цена;
					ОбластьШапка.Параметры.V9 = " ";//Строка.Объем;
				КонецЕсли;		 
			КонецЦикла;
			ОбластьШапка.Параметры.СтоимСНдс =  Док.ES_Грузы.Итог("НППлан");
			Если ВыборкаСсылка.ES_ЧекНаОбщуюСумму = Истина Тогда
				ОбластьШапка.Параметры.СтоимДост = ВыборкаСсылка.СтоимостьДоставки;
			Иначе
				ОбластьШапка.Параметры.СтоимДост = "";
			КонецЕсли;
			ОбластьШапка.Параметры.СтоимСДост = Док.ES_Грузы.Итог("НППлан") + ВыборкаСсылка.СтоимостьДоставки;
			
			ТабДок_B2C.Вывести(ОбластьШапка);
			ТабДок_B2C.Вывести(ОбластьШапка);
			ТабДок_B2C.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЦикла;	
	КонецЕсли; 
	
	Возврат ТабДок_B2C;

КонецФункции

Функция ПечатьESНакладнаяB2B(МассивОбъектов, ОбъектыПечати, ИмяМакета, ТабДок_B2B) Экспорт
//Лохоня Ю.А.
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ES_ПланДоставки."+ ИмяМакета);
	Если ТипЗнч(Макет)<> Тип("ТабличныйДокумент") Тогда
		Макет = ПолучитьМакет(ИмяМакета);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА КонтрагентыКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресДоставкиКонтрагета)
		|			ТОГДА КонтрагентыКонтактнаяИнформация.Представление
		|		ИНАЧЕ "" ""
		|	КОНЕЦ КАК Заказчик_ПолныйАдрес,
		|	ВЫБОР
		|		КОГДА КонтрагентыКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресДоставкиКонтрагета)
		|			ТОГДА КонтрагентыКонтактнаяИнформация.Страна
		|		ИНАЧЕ "" ""
		|	КОНЕЦ КАК Заказчик_Страна,
		|	ВЫБОР
		|		КОГДА КонтрагентыКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресДоставкиКонтрагета)
		|			ТОГДА КонтрагентыКонтактнаяИнформация.Регион
		|		ИНАЧЕ "" ""
		|	КОНЕЦ КАК Заказчик_Регион,
		|	ВЫБОР
		|		КОГДА КонтрагентыКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресДоставкиКонтрагета)
		|			ТОГДА КонтрагентыКонтактнаяИнформация.Город
		|		ИНАЧЕ "" ""
		|	КОНЕЦ КАК Заказчик_Город,
		|	КонтрагентыКонтактнаяИнформация.Ссылка,
		|	КонтрагентыКонтактнаяИнформация.Вид
		|ПОМЕСТИТЬ ВТ_КИ_Адрес
		|ИЗ
		|	Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыКонтактнаяИнформация
		|ГДЕ
		|	КонтрагентыКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресДоставкиКонтрагета)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаказПокупателя.Ссылка,
		|	ЗаказПокупателя.Номер,
		|	ЗаказПокупателя.Дата,
		|	ЗаказПокупателя.Договор,
		|	ЗаказПокупателя.Договор.Код КАК ИКН,
		|	ЗаказПокупателя.Контрагент.ES_ВидКонтрагента КАК ВидДоставки,
		|	ЗаказПокупателя.Контрагент,
		|	ЗаказПокупателя.ES_ЗаказчикКонтактноеЛицо КАК ЗаказчикКонтактноеЛицо,
		|	ЗаказПокупателя.ES_ЗаказчикТелефон КАК ЗаказчикТелефон,
		|	ЗаказПокупателя.ES_Получатель КАК Получатель,
		|	ЗаказПокупателя.ES_ПолучательКонтактноеЛицо КАК ПолучательКонтактноеЛицо,
		|	ЗаказПокупателя.ES_ПолучательТелефон КАК ПолучательТелефон,
		|	ЗаказПокупателя.ES_ПолучательРегион КАК ПолучательРегион,
		|	ЗаказПокупателя.ES_Плательщик КАК Плательщик,
		|	ЗаказПокупателя.ES_ВидОплаты КАК ВидОплаты,
		|	ЗаказПокупателя.ES_СтоимостьДоставки КАК СтоимостьДоставки,
		|	ЗаказПокупателя.ES_КоличествоМест КАК КоличествоМест,
		|	ЗаказПокупателя.ES_НППлан КАК НППлан,
		|	ЗаказПокупателя.Ответственный,
		|	ЗаказПокупателя.ES_ДатаДоставки КАК ДатаДоставки,
		|	ЗаказПокупателя.ES_ЗаборАдрес КАК АдресОтправителя,
		|	ЗаказПокупателя.ES_ЗаборОтправитель КАК Отправитель,
		|	ЗаказПокупателя.ES_ЗаборТелефон КАК ТелефонОтправителя,
		|	ЗаказПокупателя.ES_ЗаборКонтактноеЛицо КАК КонтактноеЛицоОтправителя,
		|	ЗаказПокупателя.ES_ЗаборРегион КАК РегионОтправителя,
		|	ЗаказПокупателя.ES_ЗаборСтранаОтправитель КАК СтранаОтправитель,
		|	ЗаказПокупателя.Комментарий КАК Описание,
		|	ЗаказПокупателя.ES_ОбщийВес КАК Вес,
		|	ЗаказПокупателя.ES_НомерНакладной КАК НомерНакладной,
		|	ЗаказПокупателя.ES_ТипДоставки КАК ТипДоставки,
		|	ЗаказПокупателя.ES_ТипГруза КАК ТипГруза,
		|	ЗаказПокупателя.ES_АдресДоставкиСтрана КАК СтранаПолучатель,
		|	ЗаказПокупателя.ES_АдресДоставкиИндекс КАК ИндексПолучатель,
		|	ЗаказПокупателя.ES_АдресДоставки,
		|	ЗаказПокупателя.ES_КоличествоМест,
		|	ЗаказПокупателя.ES_ОбщийВес,
		|	ЗаказПокупателя.ES_ОбщийОбъемныйВес,
		|	ЗаказПокупателя.ES_Объем,
		|	ЗаказПокупателя.Ширина,
		|	ЗаказПокупателя.Длина,
		|	ЗаказПокупателя.Высота,
		|	ЗаказПокупателя.ВремяДоставкиПо,
		|	ЗаказПокупателя.Контрагент.КонтактнаяИнформация.(
		|		Ссылка КАК Поле1,
		|		НомерСтроки КАК Поле2,
		|		Тип КАК Поле3,
		|		Вид КАК Поле4,
		|		Представление КАК Поле5,
		|		ЗначенияПолей КАК Поле6,
		|		Страна КАК Поле7,
		|		Регион КАК Поле8,
		|		Город КАК Поле9,
		|		АдресЭП КАК Поле10,
		|		ДоменноеИмяСервера КАК Поле11,
		|		НомерТелефона КАК Поле12,
		|		НомерТелефонаБезКодов КАК Поле13
		|	) КАК Контрагент1,
		|	ЗаказПокупателя.ES_АдресДоставкиГород,
		|	ЗаказПокупателя.ES_Город1 КАК ГородОтправителя,
		|	ЗаказПокупателя.ES_ВхНакладная,
		|	ЗаказПокупателя.ES_СтоимостьДоставки,
		|	ВТ_КИ_Адрес.Заказчик_ПолныйАдрес,
		|	ВТ_КИ_Адрес.Заказчик_Страна,
		|	ВТ_КИ_Адрес.Заказчик_Регион,
		|	ВТ_КИ_Адрес.Заказчик_Город,
		|	ЗаказПокупателя.ES_ВидДоставки КАК ES_ВидДоставки,
		|   ЗаказПокупателя.ES_ЗаказчикИОтправительОдноЛицо
		|ИЗ
		|	Документ.ЗаказПокупателя КАК ЗаказПокупателя
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КИ_Адрес КАК ВТ_КИ_Адрес
		|			ПО ЗаказПокупателя.Контрагент = ВТ_КИ_Адрес.Ссылка
		|ГДЕ
		|	ЗаказПокупателя.Ссылка В(&МассивОбъектов)
		|	И НЕ ЗаказПокупателя.ПометкаУдаления";	
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаНаЗаказПокупателя = Запрос.Выполнить().Выгрузить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
	
		ВыборкаСсылка = РезультатЗапроса.Выбрать();
		Пока ВыборкаСсылка.Следующий() Цикл
						 	
			ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	
			ВнешняяКомпонента = МенеджерОборудованияСерверПовтИсп.ПодключитьВнешнююКомпонентуПечатиШтрихкода();
			номерШК = ВыборкаСсылка.НомерНакладной;
			ОбластьШапка.Рисунки.Штрих5.Картинка = ES_ПолучитьКартинкуШтрихкода(ВнешняяКомпонента,номерШК , 70, 50);

			//ОбластьШапка.Параметры.НомДог = ВыборкаСсылка.Договор;
			ОбластьШапка.Параметры.ИКН = ВыборкаСсылка.Договор;
			ОбластьШапка.Параметры.ТарифЗаУслуги = ВыборкаСсылка.ES_СтоимостьДоставки;
			//////
			//Отправитель
			Если ВыборкаСсылка.ES_ВидДоставки = Перечисления.ES_ВидыДоставки.ДвериДвери Тогда
				//Заказчик = Отправитель
				Если  ВыборкаСсылка.ES_ЗаказчикИОтправительОдноЛицо Тогда				
					ОбластьШапка.Параметры.Отправитель = "" + ВыборкаСсылка.Контрагент + " ";
					ОбластьШапка.Параметры.Отправитель_Страна = "" + ВыборкаСсылка.Заказчик_Страна + " ";
					ОбластьШапка.Параметры.Отправитель_Область = "" + ВыборкаСсылка.Заказчик_Регион + " ";
					ОбластьШапка.Параметры.Отправитель_Город = "" + ВыборкаСсылка.Заказчик_Город + " ";
					ОбластьШапка.Параметры.Отправитель_Адрес = "" + ВыборкаСсылка.Заказчик_ПолныйАдрес + " ";
					ОбластьШапка.Параметры.Отправитель_Телефон = "" + ВыборкаСсылка.ЗаказчикТелефон + " ";
					ОбластьШапка.Параметры.Отправитель_Конт = "" + ВыборкаСсылка.ЗаказчикКонтактноеЛицо + " ";						
				Иначе 
					ОбластьШапка.Параметры.Отправитель = "" +ВыборкаСсылка.Отправитель + " ";
					ОбластьШапка.Параметры.Отправитель_Страна = "" + ВыборкаСсылка.СтранаОтправитель + " ";
					ОбластьШапка.Параметры.Отправитель_Область = "" + ВыборкаСсылка.РегионОтправителя + " ";
					ОбластьШапка.Параметры.Отправитель_Город = "" + ВыборкаСсылка.ГородОтправителя + " ";
					ОбластьШапка.Параметры.Отправитель_Адрес = "" + ВыборкаСсылка.АдресОтправителя + " ";
					ОбластьШапка.Параметры.Отправитель_Телефон = "" + ВыборкаСсылка.ТелефонОтправителя + " ";
					ОбластьШапка.Параметры.Отправитель_Конт = "" + ВыборкаСсылка.КонтактноеЛицоОтправителя + " ";				
				КонецЕсли;
			Иначе
				ОбластьШапка.Параметры.Отправитель_Конт = "" + ВыборкаСсылка.ЗаказчикКонтактноеЛицо + " ";
				ОбластьШапка.Параметры.Отправитель = "" + ВыборкаСсылка.Контрагент + " ";
				ОбластьШапка.Параметры.Отправитель_Страна = "" + ВыборкаСсылка.Заказчик_Страна + " ";
				ОбластьШапка.Параметры.Отправитель_Область = "" + ВыборкаСсылка.Заказчик_Регион + " ";
				ОбластьШапка.Параметры.Отправитель_Город = "" + ВыборкаСсылка.Заказчик_Город + " ";
				ОбластьШапка.Параметры.Отправитель_Адрес = "" + ВыборкаСсылка.Заказчик_ПолныйАдрес + " ";
				ОбластьШапка.Параметры.Отправитель_Телефон = "" + ВыборкаСсылка.ЗаказчикТелефон + " ";
			КонецЕсли;
			
			//Получатель
			ОбластьШапка.Параметры.Получатель_Конт = "" + ВыборкаСсылка.ПолучательКонтактноеЛицо + " ";
			ОбластьШапка.Параметры.Получатель = "" + ВыборкаСсылка.Получатель + " ";
			ОбластьШапка.Параметры.Получатель_Страна = "" + ВыборкаСсылка.СтранаПолучатель + " ";
			ОбластьШапка.Параметры.Получатель_Область = "" + ВыборкаСсылка.ПолучательРегион + " ";
			ОбластьШапка.Параметры.Получатель_Город = "" + ВыборкаСсылка.ES_АдресДоставкиГород + " ";
			ОбластьШапка.Параметры.Получатель_Адрес = "" + ВыборкаСсылка.ES_АдресДоставки + " ";
			ОбластьШапка.Параметры.Получатель_Телефон =  "" +ВыборкаСсылка.ПолучательТелефон + " ";
			ОбластьШапка.Параметры.Индекс = ВыборкаСсылка.ИндексПолучатель;			
			
			ОбластьШапка.Параметры.ТипВл0 = ВыборкаСсылка.ТипГруза;
			ОбластьШапка.Параметры.НомерНакладной = ВыборкаСсылка.НомерНакладной;
			ОбластьШапка.Параметры.ВхНакладная = ВыборкаСсылка.ES_ВхНакладная;
			ОбластьШапка.Параметры.ВесОб0 = ВыборкаСсылка.ES_ОбщийОбъемныйВес;
			ОбластьШапка.Параметры.Кол0 = ВыборкаСсылка.ES_КоличествоМест;
			ОбластьШапка.Параметры.Вес0 = ВыборкаСсылка.ES_ОбщийВес;
			ОбластьШапка.Параметры.Габ0 = " " + ВыборкаСсылка.Ширина + " х " + ВыборкаСсылка.Длина + " х " + ВыборкаСсылка.Высота + " ";
			ОбластьШапка.Параметры.ВесСум = ВыборкаСсылка.ES_ОбщийВес;
			ОбластьШапка.Параметры.ВесОбСум = ВыборкаСсылка.ES_ОбщийОбъемныйВес;
			ОбластьШапка.Параметры.ОбъемСум = ВыборкаСсылка.ES_Объем;
			
			Док = ВыборкаСсылка.Ссылка.ПолучитьОбъект();
			Номер = 0;
			ОбщееКоличествоТоваров = 0;
			Для Каждого Строка Из Док.ES_Грузы Цикл
				Номер = Номер + 1;
				Если Номер = 1 Тогда
					ОбластьШапка.Параметры.ТипВл0 = Строка.Содержание; 
					ОбластьШапка.Параметры.Кол0 = Строка.Количество;
					ОбщееКоличествоТоваров = ОбщееКоличествоТоваров + Строка.Количество;
					ОбластьШапка.Параметры.Габ0 = Строка.Объем;
					ОбластьШапка.Параметры.Вес0 = Строка.Вес;
					ОбластьШапка.Параметры.ВесОб0 = Строка.ОбъемныйВес;
				КонецЕсли;
				Если Номер = 2 Тогда 
					ОбластьШапка.Параметры.ТипВл1 = Строка.Содержание; 
					ОбластьШапка.Параметры.Кол1 = Строка.Количество;
					ОбщееКоличествоТоваров = ОбщееКоличествоТоваров + Строка.Количество;
					ОбластьШапка.Параметры.Габ1 = Строка.Объем;
					ОбластьШапка.Параметры.Вес1 = Строка.Вес;
					ОбластьШапка.Параметры.ВесОб1 = Строка.ОбъемныйВес;
				КонецЕсли;
				Если Номер = 3 Тогда
					ОбластьШапка.Параметры.ТипВл2 = Строка.Содержание; 
					ОбластьШапка.Параметры.Кол2 = Строка.Количество;
					ОбщееКоличествоТоваров = ОбщееКоличествоТоваров + Строка.Количество;
					ОбластьШапка.Параметры.Габ2 = Строка.Объем;
					ОбластьШапка.Параметры.Вес2 = Строка.Вес;
					ОбластьШапка.Параметры.ВесОб2 = Строка.ОбъемныйВес;
				КонецЕсли;
				Если Номер = 4 Тогда
					ОбластьШапка.Параметры.ТипВл3 = Строка.Содержание; 
					ОбластьШапка.Параметры.Кол3 = Строка.Количество;
					ОбщееКоличествоТоваров = ОбщееКоличествоТоваров + Строка.Количество;
					ОбластьШапка.Параметры.Габ3 = Строка.Объем;
					ОбластьШапка.Параметры.Вес3 = Строка.Вес;
					ОбластьШапка.Параметры.ВесОб3 = Строка.ОбъемныйВес;
				КонецЕсли;
				Если Номер = 5 Тогда
					ОбластьШапка.Параметры.ТипВл4 = Строка.Содержание; 
					ОбластьШапка.Параметры.Кол4 = Строка.Количество;
					ОбщееКоличествоТоваров = ОбщееКоличествоТоваров + Строка.Количество;
					ОбластьШапка.Параметры.Габ4 = Строка.Объем;
					ОбластьШапка.Параметры.Вес4 = Строка.Вес;
					ОбластьШапка.Параметры.ВесОб4 = Строка.ОбъемныйВес;
				КонецЕсли;
				Если Номер = 6 Тогда
					ОбластьШапка.Параметры.ТипВл5 = Строка.Содержание;
					ОбластьШапка.Параметры.Кол5 = Строка.Количество;
					ОбщееКоличествоТоваров = ОбщееКоличествоТоваров + Строка.Количество;
					ОбластьШапка.Параметры.Габ5 = Строка.Объем;					
					ОбластьШапка.Параметры.Вес5 = Строка.Вес;
					ОбластьШапка.Параметры.ВесОб5 = Строка.ОбъемныйВес;
				КонецЕсли;
				Если Номер = 7 Тогда
					ОбластьШапка.Параметры.ТипВл6 = Строка.Содержание; 
					ОбластьШапка.Параметры.Кол6 = Строка.Количество;
					ОбщееКоличествоТоваров = ОбщееКоличествоТоваров + Строка.Количество;
					ОбластьШапка.Параметры.Габ6 = Строка.Объем;
					ОбластьШапка.Параметры.Вес6 = Строка.Вес;
					ОбластьШапка.Параметры.ВесОб6 = Строка.ОбъемныйВес;
				КонецЕсли;
				Если Номер = 8 Тогда
					ОбластьШапка.Параметры.ТипВл7 = Строка.Содержание; 
					ОбластьШапка.Параметры.Кол7 = Строка.Количество;
					ОбщееКоличествоТоваров = ОбщееКоличествоТоваров + Строка.Количество;
					ОбластьШапка.Параметры.Габ7 = Строка.Объем;
					ОбластьШапка.Параметры.Вес7 = Строка.Вес;
					ОбластьШапка.Параметры.ВесОб7 = Строка.ОбъемныйВес;
				КонецЕсли;
				Если Номер = 9 Тогда
					Прервать;
				КонецЕсли;
 
			КонецЦикла;
			ОбластьШапка.Параметры.КоличествоСум = ОбщееКоличествоТоваров;

			ТабДок_B2B.Вывести(ОбластьШапка);
			ТабДок_B2B.Вывести(ОбластьШапка);
			ТабДок_B2B.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЦикла;	
	КонецЕсли; 	
	Возврат ТабДок_B2B;	
КонецФункции

Функция ES_ПолучитьКартинкуШтрихкода(ВнешняяКомпонента, Штрихкод, Ширина, Высота) Экспорт
	//EFSOL
	// Зададим размер картинки
	ВнешняяКомпонента.Ширина =Ширина;
	ВнешняяКомпонента.Высота =Высота;
	
	// Разрешим компоненте самой определять тип кода
	ВнешняяКомпонента.АвтоТип = истина;
	
	// Если код содержит контрольный символ, обязательно указываем
	ВнешняяКомпонента.СодержитКС = СтрДлина(Штрихкод) = 13;
	
	// Если отображать контрольный символ не нужно
	// ВнешняяКомпонента.ВидимостьКС = Ложь;
	
	// Формируем картинку штрихкода
	ВнешняяКомпонента.ЗначениеКода = Штрихкод;
	
	// Если установленная нами ширина меньше минимально допустимой для этого штрихкода
	Если ВнешняяКомпонента.Ширина < ВнешняяКомпонента.МинимальнаяШиринаКода Тогда
		// Скорректируем ширину
		ВнешняяКомпонента.Ширина = ВнешняяКомпонента.МинимальнаяШиринаКода + 10;
	КонецЕсли;
	
	// Сформируем картинку
	ДвоичныеДанныеКартинки = ВнешняяКомпонента.ПолучитьШтрихкод();
	
	// Если картинка сформировалась
	Если ДвоичныеДанныеКартинки <> Неопределено Тогда
		// Формируем из двоичных данных
		Возврат Новый Картинка(ДвоичныеДанныеКартинки);
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция ES_ПолучитьКартинкуШтрихкода_Стикер(ВнешняяКомпонента, Штрихкод, Ширина, Высота) Экспорт
	//Лохоня Ю.А.
	// Зададим размер картинки
	ВнешняяКомпонента.Ширина = Ширина;
	ВнешняяКомпонента.Высота = Высота;
	ВнешняяКомпонента.УголПоворота = 270;
	// Разрешим компоненте самой определять тип кода
	ВнешняяКомпонента.АвтоТип = истина;
	
	// Если код содержит контрольный символ, обязательно указываем
	ВнешняяКомпонента.СодержитКС = СтрДлина(Штрихкод) = 13;
	
	// Если отображать контрольный символ не нужно
	// ВнешняяКомпонента.ВидимостьКС = Ложь;
	
	// Формируем картинку штрихкода
	ВнешняяКомпонента.ЗначениеКода = Штрихкод;
	
	// Если установленная нами высота меньше минимально допустимой для этого штрихкода
	//Если ВнешняяКомпонента.Высота < ВнешняяКомпонента.МинимальнаяШиринаКода Тогда
	//	// Скорректируем 
	//	ВнешняяКомпонента.Высота = ВнешняяКомпонента.МинимальнаяШиринаКода + 10;
	//КонецЕсли;
	
	// Сформируем картинку
	ДвоичныеДанныеКартинки = ВнешняяКомпонента.ПолучитьШтрихкод();
	
	// Если картинка сформировалась
	Если ДвоичныеДанныеКартинки <> Неопределено Тогда
		// Формируем из двоичных данных
		Возврат Новый Картинка(ДвоичныеДанныеКартинки);
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция ES_СформироватьШтрихкод(ШК)   Экспорт
	//EFSOL
	ТекКод = СтрЗаменить(ШК,Символы.НПП,""); 
	Если СтрДлина(ТекКод) < 13 Тогда
		Пока СтрДлина(ТекКод) < 13 Цикл
			ТекКод = "0"+ТекКод;
		КонецЦикла;
	КонецЕсли;
	
	Возврат ТекКод;
	
КонецФункции


Функция ПечатнаяФормаES_НакладнаяНаЗапасы(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ES_ПланДоставки_ES_НакладнаяНаЗапасы";
	
	Макет = ПолучитьМакет("ПФ_MXL_ES_НакладнаяНаЗапасы");
	
	МассивЗаказов = Новый Массив();
	Для каждого Стр из МассивОбъектов[0].Заказы Цикл
		Если ТипЗнч(Стр.ДокументДоставки) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
			МассивЗаказов.Добавить(Стр.ДокументДоставки);
		КонецЕсли;
	КонецЦикла;
	
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказПокупателяES_Грузы.Ссылка,
		|	ЗаказПокупателяES_Грузы.НомерСтроки КАК НомерСтроки,
		|	ЗаказПокупателяES_Грузы.Номенклатура КАК Номенклатура,
		|	ЗаказПокупателяES_Грузы.Количество,
		|	ЗаказПокупателяES_Грузы.ЕдиницаИзмерения,
		|	ЗаказПокупателяES_Грузы.Цена,
		|	ЗаказПокупателяES_Грузы.НППлан КАК Сумма,
		|	0 КАК СуммаНДС
		|ПОМЕСТИТЬ Вт_Грузы
		|ИЗ
		|	Документ.ЗаказПокупателя.ES_Грузы КАК ЗаказПокупателяES_Грузы
		|ГДЕ
		|	ЗаказПокупателяES_Грузы.Ссылка В(&МассивЗаказов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДокЗаказПокупателя.Ссылка КАК Ссылка,
		|	ДокЗаказПокупателя.Номер КАК Номер,
		|	ДокЗаказПокупателя.Дата КАК Дата,
		|	ДокЗаказПокупателя.ВалютаДокумента КАК ВалютаДокумента,
		|	ДокЗаказПокупателя.Организация КАК Организация,
		|	ЕСТЬNULL(Вт_Грузы.НомерСтроки, """") КАК НомерСтроки,
		|	ЕСТЬNULL(Вт_Грузы.Номенклатура, НЕОПРЕДЕЛЕНО) КАК Номенклатура,
		|	ЕСТЬNULL(Вт_Грузы.Количество, 0) КАК Количество,
		|	ЕСТЬNULL(Вт_Грузы.ЕдиницаИзмерения, НЕОПРЕДЕЛЕНО) КАК ЕдиницаИзмерения,
		|	ЕСТЬNULL(Вт_Грузы.Цена, 0) КАК Цена,
		|	ЕСТЬNULL(Вт_Грузы.Сумма, 0) КАК Сумма,
		|	ЕСТЬNULL(Вт_Грузы.СуммаНДС, 0) КАК СуммаНДС
		|ИЗ
		|	Документ.ЗаказПокупателя КАК ДокЗаказПокупателя
		|		ЛЕВОЕ СОЕДИНЕНИЕ Вт_Грузы КАК Вт_Грузы
		|		ПО ДокЗаказПокупателя.Ссылка = Вт_Грузы.Ссылка
		|ГДЕ
		|	ДокЗаказПокупателя.Ссылка В(&МассивЗаказов)
		|ИТОГИ
		|	МАКСИМУМ(Номер),
		|	МАКСИМУМ(Дата),
		|	МАКСИМУМ(ВалютаДокумента),
		|	МАКСИМУМ(Организация),
		|	СУММА(Количество),
		|	СУММА(Сумма),
		|	СУММА(СуммаНДС)
		|ПО
		|	Ссылка";
	
	Запрос.УстановитьПараметр("МассивЗаказов", МассивЗаказов);
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		ПервыйДокумент = Истина;	
		
		ВыборкаСсылка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСсылка.Следующий() Цикл
			
			// Печатаются только те заказы, в которых есть Запасы
			Если ВыборкаСсылка.Количество = 0 Тогда
				Продолжить;
			КонецЕсли; 
			
			Если ПервыйДокумент Тогда
				ПервыйДокумент = Ложь;	
			Иначе
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ТабДокПоЗаказу = Новый ТабличныйДокумент;
			
			// Шапка
			СведенияОбОрганизации = УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(ВыборкаСсылка.Организация, ВыборкаСсылка.Дата, ,);
			НомерДокумента = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ВыборкаСсылка.Номер, Истина, Истина);
			
			ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
			ОбластьШапка.Параметры.ТекстЗаголовка = "Накладная №"
													+ НомерДокумента
													+ " от "
													+ Формат(ВыборкаСсылка.Дата, "ДЛФ=DD");
			ОбластьШапка.Параметры.ПредставлениеПоставщика = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,");
			ТабДокПоЗаказу.Вывести(ОбластьШапка);
			
			КоличествоНоменклатур = 0;
			// Строки таблицы
			ВыборкаДетальныеЗаписи = ВыборкаСсылка.Выбрать();
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Номенклатура) Тогда
					ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицы");
					ОбластьСтрокаТаблицы.Параметры.НомерСтроки 	= ВыборкаДетальныеЗаписи.НомерСтроки;
					ОбластьСтрокаТаблицы.Параметры.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
					ОбластьСтрокаТаблицы.Параметры.Количество 	= ВыборкаДетальныеЗаписи.Количество;
					ОбластьСтрокаТаблицы.Параметры.ЕдИзм 		= ВыборкаДетальныеЗаписи.ЕдиницаИзмерения;
					ОбластьСтрокаТаблицы.Параметры.Цена 		= ВыборкаДетальныеЗаписи.Цена;
					ОбластьСтрокаТаблицы.Параметры.Сумма 		= ВыборкаДетальныеЗаписи.Сумма;
					
					ТабДокПоЗаказу.Вывести(ОбластьСтрокаТаблицы);
					
					КоличествоНоменклатур = КоличествоНоменклатур + 1;
				КонецЕсли; 
				
			КонецЦикла;
			
			// Итого
			ОбластьИтого = Макет.ПолучитьОбласть("Итого");
			ОбластьИтого.Параметры.СуммаИтого 		= ВыборкаСсылка.Сумма;
			ОбластьИтого.Параметры.СуммаНДСИтого 	= ВыборкаСсылка.СуммаНДС;
			ОбластьИтого.Параметры.Итого 			= ВыборкаСсылка.Сумма;
			
			ТабДокПоЗаказу.Вывести(ОбластьИтого);
			
			// Сумма прописью
			СуммаКПрописи = ?(ЗначениеЗаполнено(ВыборкаСсылка.Сумма), ВыборкаСсылка.Сумма, 0);
			ОбластьСуммаПрописью = Макет.ПолучитьОбласть("СуммаПрописью");
			ОбластьСуммаПрописью.Параметры.ИтоговаяСтрока = "Всего наименований "
													+ КоличествоНоменклатур
													+ ", на сумму "
													+ УправлениеНебольшойФирмойСервер.ФорматСумм(СуммаКПрописи, ВыборкаСсылка.ВалютаДокумента);
			ОбластьСуммаПрописью.Параметры.СуммаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаКПрописи, ВыборкаСсылка.ВалютаДокумента);
			
			ТабДокПоЗаказу.Вывести(ОбластьСуммаПрописью);
			
			// Подвал
			ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
			ТабДокПоЗаказу.Вывести(ОбластьПодвал);
			
			ТабличныйДокумент.Вывести(ТабДокПоЗаказу);
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ТабличныйДокумент.Вывести(ТабДокПоЗаказу);
		КонецЦикла;
	
	КонецЕсли;
	
	Возврат ТабличныйДокумент;
		
КонецФункции

Функция ПечатьESНакладнаяНаДоставку(МассивОбъектов, ОбъектыПечати)
	
	МассивЗаказов = Новый Массив();
	Для каждого Стр из МассивОбъектов[0].Заказы Цикл
		Если ТипЗнч(Стр.ДокументДоставки) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
			МассивЗаказов.Добавить(Стр.ДокументДоставки);
		КонецЕсли;
	КонецЦикла;

	Возврат Документы.ЗаказПокупателя.ПечатьESНакладнаяНаДоставку(МассивЗаказов,ОбъектыПечати,"ПФ_MXL_ES_НакладнаяНаДоставку");
		
КонецФункции

Функция ПечатьESНаклейкаЗаказа(МассивОбъектов, ОбъектыПечати)
	
	МассивЗаказов = Новый Массив();
	Для каждого Стр из МассивОбъектов[0].Заказы Цикл
		Если ТипЗнч(Стр.ДокументДоставки) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
			МассивЗаказов.Добавить(Стр.ДокументДоставки);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Документы.ЗаказПокупателя.ПечатьESНаклейкаЗаказа(МассивЗаказов,ОбъектыПечати,"ПФ_MXL_ES_НаклейкаЗаказа");
	
КонецФункции

Функция СформироватьПечатнуюФормуРеестрДоставки(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПланДоставки_РеестрДоставки";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ES_ПланДоставки.ПФ_MXL_РеестрДоставки");
	Если ТипЗнч(Макет)<> Тип("ТабличныйДокумент") Тогда
		Макет = ПолучитьМакет("ПФ_MXL_РеестрДоставки");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ES_ПланДоставкиЗаказы.Ссылка КАК Ссылка,
		|	ES_ПланДоставкиЗаказы.ДокументДоставки КАК ДокументДоставки
		|ПОМЕСТИТЬ Вт_План
		|ИЗ
		|	Документ.ES_ПланДоставки.Заказы КАК ES_ПланДоставкиЗаказы
		|ГДЕ
		|	ES_ПланДоставкиЗаказы.Ссылка В(&ПланыДоставки)
		|	И ТИПЗНАЧЕНИЯ(ES_ПланДоставкиЗаказы.ДокументДоставки) = ТИП(документ.заказпокупателя)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Вт_План.Ссылка КАК ПланДоставки,
		|	Вт_План.ДокументДоставки КАК Заказ,
		|	ЗаказПокупателя.ES_НомерНакладной КАК НомерНакладной,
		|	ЗаказПокупателя.ES_ЗаборДата КАК ЗаборДата,
		|	ЗаказПокупателя.ES_ЗаборОтправитель КАК ЗаборОтправитель,
		|	ЗаказПокупателя.ES_Город1 КАК ЗаборГород,
		|	ЗаказПокупателя.ES_ЗаборАдрес КАК ЗаборАдрес,
		|	ЗаказПокупателя.ES_ЗаборКонтактноеЛицо КАК ЗаборКонтактноеЛицо,
		|	ЗаказПокупателя.ES_ЗаборТелефон КАК ЗаборТелефон,
		|	ЗаказПокупателя.ES_Получатель КАК Получатель,
		|	ЗаказПокупателя.ES_АдресДоставкиГород КАК ПолучательГород,
		|	ЗаказПокупателя.ES_АдресДоставки КАК ПолучательАдресДоставки,
		|	ЗаказПокупателя.ES_ПолучательКонтактноеЛицо КАК ПолучательКонтактноеЛицо,
		|	ЗаказПокупателя.ES_ПолучательТелефон КАК ПолучательТелефон,
		|	ЗаказПокупателя.Комментарий КАК Комментарий,
		|	ЗаказПокупателя.ES_КоличествоМест КАК КоличествоМест,
		|	ЗаказПокупателя.ES_ОбщийВес КАК ОбщийВес,
		|	ЗаказПокупателя.ES_ОбщийОбъемныйВес КАК ОбщийОбъемныйВес,
		|	ЗаказПокупателя.ES_ВхНакладная КАК ВхНакладная,
		|	ЗаказПокупателя.ES_ЗаказчикКонтактноеЛицо КАК ЗаказчикКонтактноеЛицо,
		|	ЗаказПокупателя.Номер КАК Номер,
		|	ЗаказПокупателя.ES_СрочностьДоставки КАК СрочностьДоставки,
		|	ЗаказПокупателя.ES_ОбьявленнаяСтоимость КАК ОбьявленнаяСтоимость,
		|	ЗаказПокупателя.ES_НППлан КАК НППлан,
		|	ЗаказПокупателя.ВалютаДокумента КАК ВалютаДокумента
		|ИЗ
		|	Вт_План КАК Вт_План
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя КАК ЗаказПокупателя
		|		ПО Вт_План.ДокументДоставки = ЗаказПокупателя.Ссылка";
	
	Запрос.УстановитьПараметр("ПланыДоставки", МассивОбъектов);
	
	Данные = Запрос.Выполнить().Выгрузить();
	
	Шапка = Макет.ПолучитьОбласть("Шапка");	
	ТабличныйДокумент.Вывести(Шапка);  
	
	Для Каждого Элемент Из Данные Цикл 
		
		Строка = Макет.ПолучитьОбласть("Строка");
		
		Строка.Параметры.НомерНакладной = Элемент.НомерНакладной;
		Строка.Параметры.ДатаЗабора = Формат(Элемент.ЗаборДата, "ДФ=dd.MM.yyyy");
		Строка.Параметры.Отправитель = Элемент.ЗаборОтправитель;
		Строка.Параметры.ОтправительГород = Элемент.ЗаборГород;
		Строка.Параметры.ОтправительАдрес = Элемент.ЗаборАдрес;
		Строка.Параметры.ОтправительКонтактноеЛицо = Элемент.ЗаборКонтактноеЛицо;
		Строка.Параметры.ОтправительТелефон = Элемент.ЗаборТелефон;
		Строка.Параметры.Получатель = Элемент.Получатель;
		Строка.Параметры.ПолучательГород = Элемент.ПолучательГород;
		Строка.Параметры.ПолучательАдрес = Элемент.ПолучательАдресДоставки;
		Строка.Параметры.ПолучательКонтактноеЛицо = Элемент.ПолучательКонтактноеЛицо;
		Строка.Параметры.СтационарныйТелефон = Элемент.ПолучательТелефон;
		Строка.Параметры.ГрузОписание = Элемент.Комментарий;
		Строка.Параметры.ГрузЧислоМест = Элемент.КоличествоМест;
		Строка.Параметры.ГрузВес = Элемент.ОбщийВес;
		Строка.Параметры.ГрузВесОбъемный = Элемент.ОбщийОбъемныйВес;
		Строка.Параметры.НомерНакладнойКлиента = Элемент.ВхНакладная;
		Строка.Параметры.НомерНакладнойАгента = "";
		Строка.Параметры.Примечание = Элемент.Комментарий;
		Строка.Параметры.КлиентКонтактноеЛицо = Элемент.ЗаказчикКонтактноеЛицо;
		Строка.Параметры.КлиентПодразделение = "";
		Строка.Параметры.КлиентПроект = "";
		Строка.Параметры.ГрузСтраховаяСтоимость = Элемент.ОбьявленнаяСтоимость;
		Строка.Параметры.ГрузСтоимость = Элемент.НППлан;
		Строка.Параметры.НомерЗаказа = Элемент.Номер;
		Строка.Параметры.ОплатаПолучателем =  ?(Элемент.НППлан > 0, "Да", "");
		Строка.Параметры.СуммаДляКлиента = Элемент.НППлан;
		Строка.Параметры.ВалютаСуммыДляКлиента = Элемент.ВалютаДокумента;
		Строка.Параметры.Срочность = Элемент.СрочностьДоставки;
		Строка.Параметры.МобТелОтправителя = Элемент.ЗаборТелефон;
		Строка.Параметры.МобТелПолучателя = Элемент.ПолучательТелефон;
		
		ТабличныйДокумент.Вывести(Строка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции
#КонецОбласти
#КонецЕсли