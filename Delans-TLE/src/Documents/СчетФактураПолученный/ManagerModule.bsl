#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Контрагент)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы = "ФормаОбъекта" Тогда
		
		Если Параметры.Свойство("Ключ")
			И Параметры.Ключ.УдалитьЗапасы.Количество() > 0 Тогда
			
			СтандартнаяОбработка = Ложь;
			ВыбраннаяФорма = "УдалитьФормаДокумента";
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылкаСчетФактураПолученный, СтруктураДополнительныеСвойства) Экспорт

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ЕСТЬNULL(КорректировкаПоступления.ОтражатьВУчете, ИСТИНА) КАК ОтражатьВУчете
	|ПОМЕСТИТЬ Вт_ОтражатьВУчете
	|ИЗ
	|	Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаПоступления КАК КорректировкаПоступления
	|		ПО СчетФактураПолученный.ДокументОснование = КорректировкаПоступления.Ссылка
	|ГДЕ
	|	СчетФактураПолученный.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	СчетФактураПолученный.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ Вт_КорректируемыйСФ
	|ИЗ
	|	Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Вт_ОтражатьВУчете КАК Вт_ОтражатьВУчете
	|		ПО (Вт_ОтражатьВУчете.ОтражатьВУчете)
	|ГДЕ
	|	СчетФактураПолученный.ДокументОснование В
	|			(ВЫБРАТЬ
	|				ВЫРАЗИТЬ(СчетФактураПолученный.ДокументОснование КАК Документ.КорректировкаПоступления).ДокументОснование КАК ДокументОснование
	|			ИЗ
	|				Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|			ГДЕ
	|				СчетФактураПолученный.Ссылка = &Ссылка
	|				И ТИПЗНАЧЕНИЯ(СчетФактураПолученный.ДокументОснование) = ТИП(Документ.КорректировкаПоступления))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	СчетФактураПолученныйЗапасы.Ссылка.Дата КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	МИНИМУМ(СчетФактураПолученныйЗапасы.НомерСтроки) КАК НомерСтроки,
	|	СчетФактураПолученныйЗапасы.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА &ИспользоватьХарактеристики
	|			ТОГДА СчетФактураПолученныйЗапасы.Характеристика
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Характеристика,
	|	ВЫБОР
	|		КОГДА &ИспользоватьПартии
	|			ТОГДА СчетФактураПолученныйЗапасы.Партия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Партия,
	|	СУММА(ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(СчетФактураПолученныйЗапасы.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
	|				ТОГДА СчетФактураПолученныйЗапасы.Количество
	|			ИНАЧЕ СчетФактураПолученныйЗапасы.Количество * СчетФактураПолученныйЗапасы.ЕдиницаИзмерения.Коэффициент
	|		КОНЕЦ) КАК Количество,
	|	СчетФактураПолученныйЗапасы.СтранаПроисхождения КАК СтранаПроисхождения,
	|	СчетФактураПолученныйЗапасы.НомерГТД КАК НомерГТД
	|ИЗ
	|	Документ.СчетФактураПолученный.УдалитьЗапасы КАК СчетФактураПолученныйЗапасы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Вт_ОтражатьВУчете КАК Вт_ОтражатьВУчете
	|		ПО (Вт_ОтражатьВУчете.ОтражатьВУчете)
	|ГДЕ
	|	СчетФактураПолученныйЗапасы.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|	И СчетФактураПолученныйЗапасы.СтранаПроисхождения <> ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)
	|	И СчетФактураПолученныйЗапасы.Ссылка = &Ссылка
	|	И (СчетФактураПолученныйЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСчетФактураПолученный.Поступление)
	|			ИЛИ СчетФактураПолученныйЗапасы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСчетФактураПолученный.Корректировка))
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетФактураПолученныйЗапасы.СтранаПроисхождения,
	|	СчетФактураПолученныйЗапасы.НомерГТД,
	|	СчетФактураПолученныйЗапасы.Номенклатура,
	|	СчетФактураПолученныйЗапасы.Ссылка.Дата,
	|	ВЫБОР
	|		КОГДА &ИспользоватьХарактеристики
	|			ТОГДА СчетФактураПолученныйЗапасы.Характеристика
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ИспользоватьПартии
	|			ТОГДА СчетФактураПолученныйЗапасы.Партия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗапасыВРазрезеГТД.Организация,
	|	ЗапасыВРазрезеГТД.Период,
	|	ЗапасыВРазрезеГТД.ВидДвижения,
	|	ЗапасыВРазрезеГТД.НомерСтроки,
	|	ЗапасыВРазрезеГТД.Номенклатура,
	|	ЗапасыВРазрезеГТД.Характеристика,
	|	ЗапасыВРазрезеГТД.Партия,
	|	-ЗапасыВРазрезеГТД.Количество,
	|	ЗапасыВРазрезеГТД.СтранаПроисхождения,
	|	ЗапасыВРазрезеГТД.НомерГТД
	|ИЗ
	|	РегистрНакопления.ЗапасыВРазрезеГТД КАК ЗапасыВРазрезеГТД
	|ГДЕ
	|	ЗапасыВРазрезеГТД.Регистратор В
	|			(ВЫБРАТЬ
	|				Вт_КорректируемыйСФ.Ссылка
	|			ИЗ
	|				Вт_КорректируемыйСФ КАК Вт_КорректируемыйСФ)
	|	И (ЗапасыВРазрезеГТД.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСчетФактураПолученный.Поступление)
	|			ИЛИ ЗапасыВРазрезеГТД.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСчетФактураПолученный.Корректировка))");
	
	Запрос.УстановитьПараметр("Ссылка"							, ДокументСсылкаСчетФактураПолученный);
	Запрос.УстановитьПараметр("Организация"						, СтруктураДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("МоментВремени"					, СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени);
	Запрос.УстановитьПараметр("ИспользоватьХарактеристики"   	, СтруктураДополнительныеСвойства.УчетнаяПолитика.ИспользоватьХарактеристики);
	Запрос.УстановитьПараметр("ИспользоватьПартии"				, СтруктураДополнительныеСвойства.УчетнаяПолитика.ИспользоватьПартии);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗапасыВРазрезеГТД", МассивРезультатов[2].Выгрузить());
	
КонецПроцедуры // ИнициализироватьДанныеДокумента()

// Выполняет контроль возникновения отрицательных остатков.
//
Процедура ВыполнитьКонтроль(ДокументСсылкаСчетФактураПолученный, ДополнительныеСвойства, Отказ, УдалениеПроведения = Ложь) Экспорт
	
	Если Не УправлениеНебольшойФирмойСервер.ВыполнитьКонтрольОстатков() Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	
	// Если временная таблицы "ДвиженияЗапасыВРазрезеГТДИзменение"
	// содержат записи, необходимо выполнить контроль поступления товаров.
	
	Если СтруктураВременныеТаблицы.ДвиженияЗапасыВРазрезеГТДИзменение Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ДвиженияЗапасыВРазрезеГТДИзменение.НомерСтроки КАК НомерСтроки,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.Организация) КАК ОрганизацияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.НомерГТД) КАК НомерГТДПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.Номенклатура) КАК НоменклатураПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.Характеристика) КАК ХарактеристикаПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.Партия) КАК ПартияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДвиженияЗапасыВРазрезеГТДИзменение.СтранаПроисхождения) КАК СтранаПроисхожденияПредставление,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ЗапасыВРазрезеГТДОстатки.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияПредставление,
		|	ЕСТЬNULL(ДвиженияЗапасыВРазрезеГТДИзменение.КоличествоИзменение, 0) + ЕСТЬNULL(ЗапасыВРазрезеГТДОстатки.КоличествоОстаток, 0) КАК ОстатокЗапасыВРазрезеГТД,
		|	ЕСТЬNULL(ЗапасыВРазрезеГТДОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокЗапасыВРазрезеГТД
		|ИЗ
		|	ДвиженияЗапасыВРазрезеГТДИзменение КАК ДвиженияЗапасыВРазрезеГТДИзменение
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗапасыВРазрезеГТД.Остатки(
		|				&МоментКонтроля,
		|				(Организация, НомерГТД, Номенклатура, Характеристика, Партия, СтранаПроисхождения) В
		|					(ВЫБРАТЬ
		|						ДвиженияЗапасыВРазрезеГТДИзменение.Организация КАК Организация,
		|						ДвиженияЗапасыВРазрезеГТДИзменение.НомерГТД КАК НомерГТД,
		|						ДвиженияЗапасыВРазрезеГТДИзменение.Номенклатура КАК Номенклатура,
		|						ДвиженияЗапасыВРазрезеГТДИзменение.Характеристика КАК Характеристика,
		|						ДвиженияЗапасыВРазрезеГТДИзменение.Партия КАК Партия,
		|						ДвиженияЗапасыВРазрезеГТДИзменение.СтранаПроисхождения КАК СтранаПроисхождения
		|					ИЗ
		|						ДвиженияЗапасыВРазрезеГТДИзменение КАК ДвиженияЗапасыВРазрезеГТДИзменение)) КАК ЗапасыВРазрезеГТДОстатки
		|		ПО ДвиженияЗапасыВРазрезеГТДИзменение.Организация = ЗапасыВРазрезеГТДОстатки.Организация
		|			И ДвиженияЗапасыВРазрезеГТДИзменение.НомерГТД = ЗапасыВРазрезеГТДОстатки.НомерГТД
		|			И ДвиженияЗапасыВРазрезеГТДИзменение.Номенклатура = ЗапасыВРазрезеГТДОстатки.Номенклатура
		|			И ДвиженияЗапасыВРазрезеГТДИзменение.Характеристика = ЗапасыВРазрезеГТДОстатки.Характеристика
		|			И ДвиженияЗапасыВРазрезеГТДИзменение.Партия = ЗапасыВРазрезеГТДОстатки.Партия
		|			И ДвиженияЗапасыВРазрезеГТДИзменение.СтранаПроисхождения = ЗапасыВРазрезеГТДОстатки.СтранаПроисхождения
		|ГДЕ
		|	ЕСТЬNULL(ЗапасыВРазрезеГТДОстатки.КоличествоОстаток, 0) < 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки");
		
		Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("МоментКонтроля", ДополнительныеСвойства.ДляПроведения.МоментКонтроля);
		
		// Отрицательный остаток по товарам в разрезе ГТД.
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
			ДокументОбъектСчетФактураПолученный = ДокументСсылкаСчетФактураПолученный.ПолучитьОбъект();
			ВыборкаИзРезультатаЗапроса = РезультатЗапроса.Выбрать();
			УправлениеНебольшойФирмойСервер.СообщитьОбОшибкахПроведенияПоРегиструЗапасыВРазрезеГТД(ДокументОбъектСчетФактураПолученный, ВыборкаИзРезультатаЗапроса, Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ТребуетсяВводитьСчетФактуруНаАванс(СсылкаНаДокумент) Экспорт
	
	Если ТипЗнч(СсылкаНаДокумент) = Тип("ДокументСсылка.РасходСоСчета") Тогда
		Если СсылкаНаДокумент.ВидОперации = Перечисления.ВидыОперацийРасходСоСчета.Покупателю
			ИЛИ СсылкаНаДокумент.ВидОперации = Перечисления.ВидыОперацийРасходСоСчета.Поставщику Тогда
			Возврат Истина;
		КонецЕсли;
	ИначеЕсли ТипЗнч(СсылкаНаДокумент) = Тип("ДокументСсылка.РасходИзКассы") Тогда
		Если СсылкаНаДокумент.ВидОперации = Перечисления.ВидыОперацийРасходИзКассы.Покупателю
			ИЛИ СсылкаНаДокумент.ВидОперации = Перечисления.ВидыОперацийРасходИзКассы.Поставщику Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти

#Область ИнтерфейсПечати

Функция ДанныеДокументовСчетФактура(МассивОбъектов, ИспользоватьФаксимиле) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("НациональнаяВалюта", Константы.НациональнаяВалюта.Получить());
	Запрос.УстановитьПараметр("ИспользоватьФаксимиле", ИспользоватьФаксимиле);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СчетФактураПолученный.Ссылка КАК Ссылка
	|	,СчетФактураПолученный.ДатаВходящегоДокумента КАК ДатаДокумента
	|	,СчетФактураПолученный.НомерВходящегоДокумента КАК Номер
	|	,Неопределено КАК ЦифровойИндексОбособленногоПодразделения
	|	,Выбор когда СчетФактураПолученный.ВидОперации = Значение(Перечисление.ВидыОперацийСчетФактураПолученный.Поступление)
	|		Тогда Значение(Перечисление.ВидыОперацийСчетФактура.Продажа)
	|		когда СчетФактураПолученный.ВидОперации = Значение(Перечисление.ВидыОперацийСчетФактураПолученный.Аванс)
	|			Тогда Значение(Перечисление.ВидыОперацийСчетФактура.Аванс)
	|		когда СчетФактураПолученный.ВидОперации = Значение(Перечисление.ВидыОперацийСчетФактураПолученный.Корректировка)
	|			Тогда Значение(Перечисление.ВидыОперацийСчетФактура.Корректировка)
	|		когда СчетФактураПолученный.ВидОперации = Значение(Перечисление.ВидыОперацийСчетФактураПолученный.СуммовыеРазницы)
	|			Тогда Значение(Перечисление.ВидыОперацийСчетФактура.СуммовыеРазницы) Конец КАК ВидОперации
	|	,СчетФактураПолученный.Контрагент КАК Поставщик
	|	,СчетФактураПолученный.Контрагент КАК Организация
	|	,СчетФактураПолученный.Контрагент КАК ОбособленноеПодразделениеПоставщика
	|	,Выбор когда СчетФактураПолученный.Контрагент.ВидКонтрагента = Значение(Перечисление.ВидыКонтрагентов.ФизическоеЛицо)
	|		Тогда Истина
	|		Иначе Ложь Конец КАК ЭтоФизическоеЛицо
	|	,Неопределено КАК Префикс
	|	,Неопределено КАК ФаксимилеПечати
	|	,Ложь КАК СуммаВключаетНДС
	|	,Выбор когда &ИспользоватьФаксимиле = Истина
	|		Тогда Значение(Перечисление.ДаНет.Да)
	|		Иначе Значение(Перечисление.ДаНет.Нет) Конец КАК ИспользоватьФаксимиле
	|	,СчетФактураПолученный.Контрагент КАК Грузоотправитель
	|	,СчетФактураПолученный.Организация КАК Плательщик
	|	,СчетФактураПолученный.Организация КАК Покупатель
	|	,СчетФактураПолученный.Организация КАК Контрагент
	|	,СчетФактураПолученный.Организация КАК ОбособленноеПодразделениеПокупателя
	|	,СчетФактураПолученный.Организация КАК Грузополучатель
	|	,Неопределено КАК АдресДоставки
	|	,СчетФактураПолученный.Договор.Представление КАК ПредставлениеДоговора
	|	,СчетФактураПолученный.Договор КАК ОснованиеПечатиСсылка
	|	,Представление(СчетФактураПолученный.Договор) КАК ПредставлениеОснования
	|	,СчетФактураПолученный.ВалютаДокумента КАК Валюта
	|	,СчетФактураПолученный.ВалютаДокумента.НаименованиеПолное КАК ВалютаНаименование
	|	,СчетФактураПолученный.ВалютаДокумента.Код КАК ВалютаКод
	|	,Неопределено КАК ИдентификаторГосКонтракта
	|	,1 КАК СтатусУПД
	|	,Неопределено КАК НомерИсправления
	|	,Неопределено КАК ДатаИсправления
	|	,Ложь КАК ЭтоСводныйСчетФактура
	|	,Ложь КАК РасчетыВУсловныхЕдиницах
	|	,Неопределено КАК ДоверенностьНомер
	|	,Неопределено КАК ДоверенностьВыдана
	|	,Неопределено КАК ДоверенностьДата
	|	,Неопределено КАК ДоверенностьЛицо
	|	,Неопределено КАК ФаксимилеПустая
	|	,Ложь КАК ЭтоКорректировка
	|	,Неопределено КАК ДолжностьРуководителя
	|	,Неопределено КАК РасшифровкаПодписиРуководителя
	|	,Неопределено КАК ФаксимилеРуководителя
	|	,Неопределено КАК ДолжностьГлавногоБухгалтера
	|	,Неопределено КАК РасшифровкаПодписиГлавногоБухгалтера
	|	,Неопределено КАК ФаксимилеГлавногоБухгалтера
	|	,Неопределено КАК ДолжностьКладовщика
	|	,Неопределено КАК РасшифровкаПодписиКладовщика
	|	,Неопределено КАК ФаксимилеКладовщика
	|	,Неопределено КАК РасшифровкаПодписиКонтрагента
	|	,СчетФактураПолученный.Кратность
	|	,СчетФактураПолученный.Курс
	|	,СчетФактураПолученный.ДокументОснование КАК ДокументОснование
	|	,0 КАК Вес
	|	,0 КАК Объем
	|
	//::: Документы оплаты
	|	,Неопределено КАК ПлатежныеДокументы
	|
	//::: Запасы
	|	,СчетФактураПолученный.УдалитьЗапасы.(
	|		НомерСтроки КАК НомерСтроки
	|		,Номенклатура КАК Номенклатура
	|		,Содержание КАК Содержание
	|		,Выбор когда Выразить(СчетФактураПолученный.УдалитьЗапасы.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) = """"
	|			тогда СчетФактураПолученный.УдалитьЗапасы.Номенклатура.Наименование
	|			Иначе ВЫРАЗИТЬ(СчетФактураПолученный.УдалитьЗапасы.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) Конец КАК ПредставлениеНоменклатуры
	|		,Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры
	|		,Номенклатура.Код КАК ЗапасКод
	|		,Номенклатура.Код КАК Код
	|		,Номенклатура.Артикул КАК Артикул
	|		,Номенклатура.ТоварнаяНоменклатураВЭД.Код КАК КодТНВЭД
	|		,Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмеренияПоОКЕИ_Наименование
	|		,Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияПоОКЕИ_Код
	|		,Характеристика КАК Характеристика
	|		,Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|		,Неопределено КАК ВидУпаковки
	|		,Выбор когда СчетФактураПолученный.УдалитьЗапасы.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
	|			тогда СчетФактураПолученный.УдалитьЗапасы.ЕдиницаИзмерения.Коэффициент
	|			Иначе 1 Конец КАК КоэффициентЕдиницыИзмерения
	|		,Количество КАК Количество
	|		,Неопределено КАК КоличествоВОдномМесте
	|		,Неопределено КАК КоличествоМест
	|		,СтавкаНДС КАК СтавкаНДС
	|		,0 КАК МассаБрутто
	|		,Цена КАК Цена
	|		,Сумма КАК Сумма
	|		,СуммаНДС КАК СуммаНДС
	|		,Всего КАК Всего
	|		,СтранаПроисхождения КАК СтранаСсылка
	|		,СтранаПроисхождения.Код КАК СтранаКод
	|		,Представление(СтранаПроисхождения) КАК СтранаПредставление
	|		,Представление(НомерГТД) КАК ПредставлениеГТД
	|	) КАК ТаблицаЗапасы
	|
	//::: Покупатели для сводных документов
	|	,Неопределено КАК ТаблицаПокупателей
	|
	|Из Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|Где СчетФактураПолученный.Ссылка В(&МассивОбъектов)
	|	И (СчетФактураПолученный.Исправление
	|			ИЛИ СчетФактураПолученный.ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСчетФактураПолученный.Корректировка))
	|
	|Упорядочить по Ссылка";
	
	ДанныеДокументов = Запрос.Выполнить().Выгрузить();
	
	Возврат ДанныеДокументов;
	
КонецФункции

Функция ДанныеПолученныхАвансовыхДокументовРегУчет(МассивДокументов, ИспользоватьФаксимиле) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивДокументов);
	Запрос.УстановитьПараметр("НациональнаяВалюта", Константы.НациональнаяВалюта.Получить());
	Запрос.УстановитьПараметр("ИспользоватьФаксимиле", ИспользоватьФаксимиле);
	
	Запрос.Текст =
	"Выбрать разрешенные
	|	СчетФактураПолученный.Ссылка КАК Ссылка
	|	,СчетФактураПолученный.ДатаВходящегоДокумента КАК ДатаДокумента
	|	,СчетФактураПолученный.НомерВходящегоДокумента КАК Номер
	|	,Неопределено КАК ЦифровойИндексОбособленногоПодразделения
	|	,СчетФактураПолученный.ВидОперации КАК ВидОперации
	|	,СчетФактураПолученный.Контрагент КАК Организация
	|	,СчетФактураПолученный.Контрагент КАК ОбособленноеПодразделениеПоставщика
	|	,СчетФактураПолученный.Контрагент КАК Поставщик
	|	,Выбор когда СчетФактураПолученный.Контрагент.ВидКонтрагента = Значение(Перечисление.ВидыКонтрагентов.ФизическоеЛицо)
	|		Тогда Истина
	|		Иначе Ложь Конец КАК ЭтоФизическоеЛицо
	|	,Неопределено КАК Префикс
	|	,Неопределено КАК ФаксимилеПечати
	|	,Выбор когда &ИспользоватьФаксимиле = Истина
	|		Тогда Значение(Перечисление.ДаНет.Да)
	|		Иначе Значение(Перечисление.ДаНет.Нет) Конец КАК ИспользоватьФаксимиле
	|	,СчетФактураПолученный.Контрагент КАК Грузоотправитель
	|	,СчетФактураПолученный.Организация КАК Плательщик
	|	,СчетФактураПолученный.Организация КАК Покупатель
	|	,СчетФактураПолученный.Организация КАК Контрагент
	|	,СчетФактураПолученный.Организация КАК ОбособленноеПодразделениеПокупателя
	|	,СчетФактураПолученный.Организация КАК Грузополучатель
	|	,СчетФактураПолученный.Договор.Представление КАК ПредставлениеДоговора
	|	,СчетФактураПолученный.Договор КАК ОснованиеПечати
	|	,СчетФактураПолученный.Договор.Представление КАК ПредставлениеОснования
	|	,СчетФактураПолученный.ВалютаДокумента КАК Валюта
	|	,СчетФактураПолученный.ВалютаДокумента.НаименованиеПолное КАК ВалютаНаименование
	|	,СчетФактураПолученный.ВалютаДокумента.Код КАК ВалютаКод
	|	,Неопределено КАК ИдентификаторГосКонтракта
	|	,1 КАК СтатусУПД
	|	,СчетФактураПолученный.НомерИсправления КАК НомерИсправления
	|	,СчетФактураПолученный.ДатаИсправления КАК ДатаИсправления
	|	,Ложь КАК ЭтоСводныйСчетФактура
	|	,ЕСТЬNULL(СчетФактураПолученный.Договор.РасчетыВУсловныхЕдиницах, ЛОЖЬ) КАК РасчетыВУсловныхЕдиницах
	|	,Неопределено КАК ДоверенностьНомер
	|	,Неопределено КАК ДоверенностьВыдана
	|	,Неопределено КАК ДоверенностьДата
	|	,Неопределено КАК ДоверенностьЛицо
	|	,Неопределено КАК ФаксимилеПустая
	|	,Неопределено КАК ДолжностьРуководителя
	|	,Неопределено КАК РасшифровкаПодписиРуководителя
	|	,Неопределено КАК ФаксимилеРуководителя
	|	,Неопределено КАК ДолжностьГлавногоБухгалтера
	|	,Неопределено КАК РасшифровкаПодписиГлавногоБухгалтера
	|	,Неопределено КАК ФаксимилеГлавногоБухгалтера
	|	,Неопределено КАК ДолжностьКладовщика
	|	,Неопределено КАК РасшифровкаПодписиКладовщика
	|	,Неопределено КАК ФаксимилеКладовщика
	|	,СчетФактураПолученный.Организация.ПодписьРуководителя.Должность КАК ДолжностьКонтрагента
	|	,СчетФактураПолученный.Организация.ПодписьРуководителя.РасшифровкаПодписи КАК РасшифровкаПодписиКонтрагента
	|	,СчетФактураПолученный.Кратность
	|	,СчетФактураПолученный.Курс
	|	,Истина КАК СуммаВключаетНДС
	|	,0 КАК Вес
	|	,0 КАК Объем
	|
	//::: Документы оплаты 
	|	,Неопределено КАК ПлатежныеДокументы
	|	,1 КАК НомерСтрокиПлатежныеДокументы
	|	,СчетФактураПолученный.ДатаПлатежноРасчетногоДокумента КАК ДатаПлатежноРасчетногоДокумента
	|	,СчетФактураПолученный.НомерПлатежноРасчетногоДокумента КАК НомерПлатежноРасчетногоДокумента
	|	,СчетФактураПолученный.ДатаПлатежноРасчетногоДокумента КАК ДатаПД
	|	,СчетФактураПолученный.НомерПлатежноРасчетногоДокумента КАК НомерПД
	|	
	|
	//::: Документы основания
	|	,Неопределено КАК ДокументыОснования
	|	,ДокументОснование КАК ДокументОснование
	|	,ЛОЖЬ КАК ЭтоРасходПереработка
	|	,Неопределено КАК АдресДоставки
	|
	//::: Доставка
	|	,Неопределено КАК УдалитьНоменклатураДоставки
	|
	//::: Запасы
	|	,СчетФактураПолученный.Авансы.(
	|		Ссылка КАК СчетФактураСсылка
	|		,Содержание КАК Содержание
	|		,Номенклатура КАК НоменклатураСсылка
	|		,Выбор когда(Выразить(Номенклатура.НаименованиеПолное КАК СТРОКА(1000))) = """"
	|			Тогда Номенклатура.Наименование
	|			Иначе Выразить(Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) Конец КАК ПредставлениеНоменклатуры
	|		,ХарактеристикаНоменклатуры КАК Характеристика
	|		,Выбор когда Номенклатура.ТипНоменклатуры = Значение(Перечисление.ТипыНоменклатуры.Запас)
	|			Тогда Номенклатура.ТоварнаяНоменклатураВЭД.Код
	|			Иначе Неопределено Конец КАК КодТНВЭД
	|		,Номенклатура.Код КАК Код
	|		,Номенклатура.Артикул КАК Артикул
	|		,Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры
	|		,Неопределено КАК ЕдиницаИзмерения
	|		,Неопределено КАК ЕдиницаИзмеренияПоОКЕИ_Наименование
	|		,Неопределено КАК ЕдиницаИзмеренияПоОКЕИ_Код
	|		,0 КАК Количество
	|		,1 КАК КоэффициентЕдиницыИзмерения
	|		,0 КАК Цена
	|		,Сумма КАК Сумма
	|		,СтавкаНДС КАК СтавкаНДС
	|		,СуммаНДС КАК СуммаНДС
	|		,Сумма КАК Всего
	|		,ДокументОснование КАК ДокументОснование
	|		,ДатаПлатежноРасчетногоДокумента КАК ДатаПлатежноРасчетногоДокумента
	|		,НомерПлатежноРасчетногоДокумента КАК НомерПлатежноРасчетногоДокумента
	|		,Неопределено КАК НомерСчетаФактурыПродавца
	|		,Ложь КАК ЭтоРазделитель
	|		,Ложь КАК ЭтоНабор
	|		,Неопределено КАК СтранаСсылка
	|		,Неопределено КАК СтранаКод
	|		,Неопределено КАК СтранаПредставление
	|		,Неопределено КАК ПредставлениеГТД
	|	) КАК ТаблицаЗапасы
	|
	|ИЗ
	|	Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|ГДЕ
	|	СчетФактураПолученный.Ссылка В(&МассивОбъектов)
	|	И (СчетФактураПолученный.Исправление
	|			ИЛИ СчетФактураПолученный.ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСчетФактура.Корректировка))
	|
	|Упорядочить по Ссылка";
	
	ДанныеДокументов = Запрос.Выполнить().Выгрузить();
	
	Возврат ДанныеДокументов;
	
КонецФункции

Функция ПечатнаяФормаКорректировочныхСчетовФактур(МассивОбъектов, ОбъектыПечати, ТекстЗапросаПоСчетамФактурам) Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДокумент.ИмяПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_СчетФактураПолученный_КорректировочныйСчетФактура";

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.СчетФактураПолученный.ПФ_MXL_СчетФактураКорректировочный1137");

	ДанныеСчетовФактур = Документы.СчетФактура.ПолучитьДанныеДляПечатиКорректировочныхСчетовФактур(
		МассивОбъектов, ТекстЗапросаПоСчетамФактурам);
	
	ПервыйДокумент = Истина;
	
	Для Каждого ВыборкаСФ ИЗ ДанныеСчетовФактур Цикл

		ТаблицаДокумента = ВыборкаСФ.ТаблицаДокумента;
		Если ТаблицаДокумента = Неопределено Тогда
			Продолжить;
		КонецЕсли;

		Если НЕ ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;

		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		Документы.СчетФактура.ВывестиКорректировочныйСчетФактуруВТабличныйДокумент(ТабДокумент, Макет, ВыборкаСФ);

		// В табличном документе зададим имя области, в которую был выведен объект.
		// Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент,
			НомерСтрокиНачало, ОбъектыПечати, ВыборкаСФ.СчетФактура);

	КонецЦикла;

	Возврат ТабДокумент;

КонецФункции

Функция ТекстЗапросаПечатьКорректировочныхСчетовФактур() Экспорт

	НачалоИспользованияСФ1137 = Константы.НачалоИспользованияСФ1137.Получить();
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СчетФактураПолученный.Ссылка КАК Ссылка,
	|	СчетФактураПолученный.Ссылка КАК СчетФактура,
	|	СчетФактураПолученный.ДатаВходящегоДокумента КАК ДатаДокумента,
	|	СчетФактураПолученный.ДатаВходящегоДокумента КАК Дата,
	|	СчетФактураПолученный.НомерВходящегоДокумента КАК НомерДокумента,
	|	СчетФактураПолученный.НомерВходящегоДокумента КАК Номер,
	|	Неопределено КАК ЦифровойИндексОбособленногоПодразделения,
	|	СчетФактураПолученный.ВидОперации КАК ВидСчетаФактуры,
	|	ВЫБОР
	|		КОГДА СчетФактураПолученный.ДокументОснование.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НеОблагаетсяНДС)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СчетФактураБезНДС,
	|	СчетФактураПолученный.Исправление КАК Исправление,
	|	СчетФактураПолученный.НомерИсправления КАК НомерИсправления,
	|	СчетФактураПолученный.ДатаИсправления КАК ДатаИсправления,
	|	СчетФактураПолученный.УчитыватьИсправлениеИсходногоДокумента КАК УчитыватьИсправлениеИсходногоДокумента,
	|	СчетФактураПолученный.НомерИсходногоДокумента КАК НомерИсходногоДокумента,
	|	СчетФактураПолученный.ДатаИсходногоДокумента КАК ДатаИсходногоДокумента,
	|	СчетФактураПолученный.НомерИсправленияИсходногоДокумента КАК НомерИсправленияИсходногоДокумента,
	|	СчетФактураПолученный.ДатаИсправленияИсходногоДокумента КАК ДатаИсправленияИсходногоДокумента,
	|	СчетФактураПолученный.НомерИсправления КАК НомерИсправленияКорректировочного,
	|	СчетФактураПолученный.ДатаИсправления КАК ДатаИсправленияКорректировочного,
	|	ВЫБОР
	|		КОГДА СчетФактураПолученный.Исправление
	|			ТОГДА СчетФактураПолученный.ДатаИсправления
	|		КОГДА СчетФактураПолученный.ДатаВходящегоДокумента <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА СчетФактураПолученный.ДатаВходящегоДокумента
	|		ИНАЧЕ СчетФактураПолученный.Дата
	|	КОНЕЦ КАК ДатаСведений,
	|	СчетФактураПолученный.Контрагент КАК Контрагент,
	|	ЛОЖЬ КАК ЭтоСчетФактураВыданный,
	|	ИСТИНА КАК ВыводитьСуммуБезНДС,
	|	СчетФактураПолученный.ДокументОснование КАК ДокументОснование,
	|	Неопределено КАК ИдентификаторГосКонтракта,
	|	Неопределено КАК РасшифровкаПодписиРуководителя,
	|	Неопределено КАК РасшифровкаПодписиГлавногоБухгалтера
	|ИЗ
	|	Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|ГДЕ
	|	СчетФактураПолученный.Ссылка В(&МассивОбъектов)
	|	И СчетФактураПолученный.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСчетФактураПолученный.Корректировка)
	|	И СчетФактураПолученный.Дата >= &НачалоИспользованияСФ1137
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	СчетФактура
	|ИТОГИ
	|	МАКСИМУМ(Дата),
	|	МАКСИМУМ(Номер),
	|	МАКСИМУМ(ВидСчетаФактуры),
	|	МАКСИМУМ(СчетФактураБезНДС),
	|	МАКСИМУМ(Исправление),
	|	МАКСИМУМ(НомерИсправления),
	|	МАКСИМУМ(ДатаИсправления),
	|	МАКСИМУМ(ЭтоСчетФактураВыданный),
	|	МАКСИМУМ(ВыводитьСуммуБезНДС)
	|ПО
	|	СчетФактура";
	
	Возврат ТекстЗапроса + УправлениеНебольшойФирмойСервер.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

// Заполняет список команд печати Заказа покупателя
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Обработка.ПечатьСчетФактура.СчетФактураПолученный";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура (полученный)'");;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 26;
	
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли