
&НаСервере
Процедура ЗагрузитьИзФайлаНаСервере(АдресФайлаДанных,Розширение)
	
	мФайл = ПолучитьИзВременногоХранилища(АдресФайлаДанных);
	Имя = ПолучитьИмяВременногоФайла("."+Розширение);
	мФайл.Записать(Имя);
	
	ЗагрузкаЛинукс = Истина;
	
	Если НЕ ЗагрузкаЛинукс Тогда
		Попытка 	
			Excel = новый COMОбъект("Excel.Application");
			Док = Excel.Workbooks.Open(Имя);
		Исключение
			Сообщить("Не удалось открыть прочитать файл");
			Возврат;
		КонецПопытки;
		
		Лист = Док.Worksheets(1);
		//Лист.Unprotect(); 
		КоличествоСтрокЭкселе = Лист.UsedRange.Rows.Count;
		
		ТЗ = ПрочитатьЛистExcel(,Лист,37,1,КоличествоСтрокЭкселе,9);
		Excel = Неопределено;
	Иначе
		ТабДок = Новый ТабличныйДокумент;
		ТабДок.Прочитать(Имя,СпособЧтенияЗначенийТабличногоДокумента.Текст);
		
		КоличествоСтрок = ТабДок.ВысотаТаблицы;
		
		//ТабДок.Показать();
		//мСтруктура.ТабДок = ТабДок;
		
		ТЗ = ПрочитатьТабличныйДокумент(,ТабДок,37,1,КоличествоСтрок,9);
		
	КонецЕсли;
	
	мЗоныТЧ = Объект.ЗоныТЧ;
	мЗоныТЧ.Очистить();
	
	Для Каждого Элем Из ТЗ Цикл
		
		Попытка
			Если ЗагрузкаЛинукс Тогда
				СТ_Направление = Элем.Направление;
				СрокДоставкиЭкспресс = СокрЛП(Элем.СрокиДоставки_Экспресс_);
				СрокДоставкиСтандарт = СокрЛП(Элем.СрокиДоставки_Стандарт_);
				СТ_ЗонаВ2ВСтандарт	 = Элем.ЗонаСтандарт;
				СТ_ЗонаВ2ВЭкспресс	 = Элем.ЗонаЭкспресс;
				СТ_ЗонаВ2ССтандарт	 = Элем.ЗонаСтандартEcom;
				СТ_ЗонаВ2СЭкспресс	 = Элем.ЗонаЭкспрессEcom;			
			Иначе
				СТ_Направление = Элем.Колонка1;
				СрокДоставкиЭкспресс = СокрЛП(Элем.Колонка7);
				СрокДоставкиСтандарт = СокрЛП(Элем.Колонка9);
				СТ_ЗонаВ2ВСтандарт	 = Элем.Колонка3;
				СТ_ЗонаВ2ВЭкспресс	 = Элем.Колонка2;
				СТ_ЗонаВ2ССтандарт	 = Элем.Колонка5;
				СТ_ЗонаВ2СЭкспресс	 = Элем.Колонка4;
				//СТ_ЗонаВ2ВСтандарт	 = Элем.Колонка3;
			КонецЕсли;
		Исключение 
			Сообщить("Неверная структура документа");
			Возврат;
		КонецПопытки;
	   		
		// ищем направление
		Направление = Справочники.ES_Направления.НайтиПоНаименованию(СТ_Направление);
		Если Направление = Справочники.ES_Направления.ПустаяСсылка() Тогда 
			//создаем наравление
			МассивНаправление = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивСлов(СТ_Направление, "+");
			Если МассивНаправление.Количество() = 2 Тогда
				ГородОтправитель = СокрЛП(МассивНаправление[0]);
				ГородПолучатель	 = СокрЛП(МассивНаправление[1]);
				
				//мГородОт = Справочники.ES_Города.НайтиПоНаименованию(ГородОтправитель);
				//Если мГородОт = Справочники.ES_Города.ПустаяСсылка() Тогда
				//	мГородОт = Справочники.ES_Города.СоздатьЭлемент();
				//	мГородОт.Наименование = ГородОтправитель;
				//	мГородОт.Записать();
				//КонецЕсли;
				//
				//мГородПо = Справочники.ES_Города.НайтиПоНаименованию(ГородПолучатель);
				//Если мГородПо = Справочники.ES_Города.ПустаяСсылка() Тогда
				//	мГородПо = Справочники.ES_Города.СоздатьЭлемент();
				//	мГородПо.Наименование = ГородПолучатель;
				//	мГородПо.Записать();
				//КонецЕсли;
				//
				Направление = Справочники.ES_Направления.СоздатьЭлемент();
				Направление.Город1 = ГородОтправитель;
				Направление.Город2 = ГородПолучатель;
				Направление.Наименование = ""+ГородОтправитель+"+"+ГородПолучатель;
				Направление.Записать();
				
			Иначе
				Сообщить("Не верно указано направление - "+Направление+". Шаблон: <ГородОтправитель>+<ГородПолучатель>");
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		
		
		// ЗонаВ2ВСтандарт
		Если НЕ СокрЛП(СТ_ЗонаВ2ВСтандарт) = "нет МРЗ" И НЕ СокрЛП(СТ_ЗонаВ2ВСтандарт) = ""  Тогда
			ЗонаВ2ВСтандарт = Справочники.ES_ЗоныДоставки.НайтиПоНаименованию(СТ_ЗонаВ2ВСтандарт);
			Если Не ЗонаВ2ВСтандарт.Пустая() Тогда
				НоваяСтрока = мЗоныТЧ.Добавить();
				НоваяСтрока.Направление = Направление.Ссылка;
				НоваяСтрока.Зона = ЗонаВ2ВСтандарт;
				НоваяСтрока.Срочность = Перечисления.ES_СрочностьДоставки.Стандартная;
				НоваяСтрока.СрокДоставки = СрокДоставкиСтандарт;
				НоваяСтрока.ВидКонтрагента = Перечисления.ES_ВидКонтрагента.В2В;
			Иначе
				Сообщить("Не найдена зона доставки - "+СТ_ЗонаВ2ВСтандарт);
			КонецЕсли;
		КонецЕсли;
		// ЗонаВ2ВЭкспресс
		Если НЕ СокрЛП(СТ_ЗонаВ2ВЭкспресс) = "нет МРЗ" И НЕ СокрЛП(СТ_ЗонаВ2ВЭкспресс) = ""  Тогда
			ЗонаB2BЭкспресс = Справочники.ES_ЗоныДоставки.НайтиПоНаименованию(СТ_ЗонаВ2ВЭкспресс);
			Если Не ЗонаB2BЭкспресс.Пустая() Тогда
				НоваяСтрока = мЗоныТЧ.Добавить();
				НоваяСтрока.Направление = Направление.Ссылка;
				НоваяСтрока.Зона = ЗонаB2BЭкспресс;
				НоваяСтрока.Срочность = Перечисления.ES_СрочностьДоставки.Сверхсрочная;
				НоваяСтрока.СрокДоставки = СрокДоставкиЭкспресс;
				НоваяСтрока.ВидКонтрагента = Перечисления.ES_ВидКонтрагента.В2В;
			Иначе
				Сообщить("Не найдена зона доставки - "+СТ_ЗонаВ2ВЭкспресс);
			КонецЕсли;
		КонецЕсли;
		// ЗонаВ2ССтандарт
		Если НЕ СокрЛП(СТ_ЗонаВ2ССтандарт) = "нет МРЗ" И НЕ СокрЛП(СТ_ЗонаВ2ССтандарт) = ""  Тогда
			ЗонаВ2ССтандарт = Справочники.ES_ЗоныДоставки.НайтиПоНаименованию(СТ_ЗонаВ2ССтандарт);
			Если Не ЗонаВ2ССтандарт.Пустая() Тогда
				НоваяСтрока = мЗоныТЧ.Добавить();
				НоваяСтрока.Направление = Направление.Ссылка;
				НоваяСтрока.Зона = ЗонаВ2ССтандарт;
				НоваяСтрока.Срочность = Перечисления.ES_СрочностьДоставки.Стандартная;
				НоваяСтрока.СрокДоставки = СрокДоставкиСтандарт;
				НоваяСтрока.ВидКонтрагента = Перечисления.ES_ВидКонтрагента.В2С;
			Иначе
				Сообщить("Не найдена зона доставки - "+СТ_ЗонаВ2ССтандарт);
			КонецЕсли;
		КонецЕсли;
		// ЗонаВ2СЭкспресс
		Если НЕ СокрЛП(СТ_ЗонаВ2СЭкспресс) = "нет МРЗ" И НЕ СокрЛП(СТ_ЗонаВ2СЭкспресс) = ""  Тогда
			ЗонаВ2СЭкспресс = Справочники.ES_ЗоныДоставки.НайтиПоНаименованию(СТ_ЗонаВ2СЭкспресс);
			Если Не ЗонаВ2СЭкспресс.Пустая() Тогда
				НоваяСтрока = мЗоныТЧ.Добавить();
				НоваяСтрока.Направление = Направление.Ссылка;
				НоваяСтрока.Зона = ЗонаВ2СЭкспресс;
				НоваяСтрока.Срочность = Перечисления.ES_СрочностьДоставки.Сверхсрочная;
				НоваяСтрока.СрокДоставки = СрокДоставкиЭкспресс;
				НоваяСтрока.ВидКонтрагента = Перечисления.ES_ВидКонтрагента.В2С;
			Иначе
				Сообщить("Не найдена зона доставки - "+СТ_ЗонаВ2СЭкспресс);
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайла(Команда)
	
	ПутьКФайлу = "";
	АдресФайлаДанных= "";
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.Фильтр = "(*.xls;*xlsx;*xlsb)| *.xls;*xlsx;*xlsb"; 
	Если ДиалогВыбораФайла.Выбрать() Тогда
		ПутьКФайлу = ДиалогВыбораФайла.ВыбранныеФайлы[0];
		Розширение = Прав(ПутьКФайлу,СтрДлина(ПутьКФайлу)-Найти(ПутьКФайлу,"."));
		АдресФайлаДанных = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ПутьКФайлу));
		//Мы помещаем объект формы в переменную,
		//так как должны передать её в процедуру на сервере,
		//где нельзя изменять объект формы, зато можно править переменную содержащую его
		ЗагрузитьИзФайлаНаСервере(АдресФайлаДанных,Розширение);		
	КонецЕсли;

КонецПроцедуры

Функция ПрочитатьЛистExcel(ТЗ = Неопределено, ЛистЭксель = Неопределено, НомерПервойСтроки = 1, НомерПервойКолонки = 1, ВсегоСтрок = 0, ВсегоКолонок = 0) Экспорт
	
	Если ВсегоСтрок = 0 Тогда
		ВсегоСтрок = ЛистЭксель.Cells.SpecialCells(11).Row;
	КонецЕсли;
	Если ВсегоКолонок = 0 Тогда
		ВсегоКолонок = ЛистЭксель.Cells.SpecialCells(11).Column;
	КонецЕсли;
	Если ТЗ = Неопределено Тогда
		ТЗ =  Новый ТаблицаЗначений;
		Для Счетчик = 1 По ВсегоКолонок Цикл
			ТЗ.Колонки.Добавить("Колонка"+Счетчик, Новый ОписаниеТипов("Строка"));
		КонецЦикла;
	КонецЕсли;
	Для Счетчик = НомерПервойСтроки По ВсегоСтрок Цикл
		НоваяСтрока = ТЗ.Добавить();
	КонецЦикла;
	
	Область = ЛистЭксель.Range(ЛистЭксель.Cells(НомерПервойСтроки,НомерПервойКолонки), ЛистЭксель.Cells(ВсегоСтрок,ВсегоКолонок));
	Данные = Область.Value.Выгрузить();
	
	Для Счетчик = 0 По ВсегоКолонок-1 Цикл
		ТЗ.ЗагрузитьКолонку(Данные[Счетчик], Счетчик);
	КонецЦикла;
	ЛистЭксель = Неопределено;
	Возврат ТЗ;
КонецФункции

Функция ПрочитатьТабличныйДокумент(ТЗ = Неопределено, ТабДок = Неопределено, НомерПервойСтроки = 1, НомерПервойКолонки = 1, ВсегоСтрок = 0, ВсегоКолонок = 0) Экспорт
	
	//Если ВсегоСтрок = 0 Тогда
	//	ВсегоСтрок = ЛистЭксель.Cells.SpecialCells(11).Row;
	//КонецЕсли;
	//Если ВсегоКолонок = 0 Тогда
	//	ВсегоКолонок = ЛистЭксель.Cells.SpecialCells(11).Column;
	//КонецЕсли;
	//Если ТЗ = Неопределено Тогда
	//	ТЗ =  Новый ТаблицаЗначений;
	//	Для Счетчик = 1 По ВсегоКолонок Цикл
	//		ТЗ.Колонки.Добавить("Колонка"+Счетчик, Новый ОписаниеТипов("Строка"));
	//	КонецЦикла;
	//КонецЕсли;
	//Для Счетчик = НомерПервойСтроки По ВсегоСтрок Цикл
	//	НоваяСтрока = ТЗ.Добавить();
	//КонецЦикла;
	Построитель = Новый ПостроительЗапроса;
	
	//Область = ТабДок.Область("R"+НомерПервойСтроки+"C"+НомерПервойКолонки+":R"+ВсегоСтрок+"C"+ВсегоКолонок);
	Область = ТабДок.Область(НомерПервойСтроки,НомерПервойКолонки,ВсегоСтрок,ВсегоКолонок);
	Построитель.ИсточникДанных = Новый ОписаниеИсточникаДанных(Область);
    Построитель.Выполнить();
    ТЗ = Построитель.Результат.Выгрузить();
	Возврат ТЗ;
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//ЭР Несторук С.И. 10.04.2019 9:32:27 {
	ES_БиллингКлиент.ПроверитьДоступностьСервисаDelans(Отказ);
	//}ЭР Несторук С.И.
КонецПроцедуры
