#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыЗаполненияДокумента

// Процедура заполняет табличную часть по спецификации.
//
Процедура ЗаполнитьТаблицуПоСпецификации(БазоваяСпецификация, ПоСпецификации, ПоЕдиницаИзмерения, ПоКоличество, ПоДоляСтоимости = Неопределено, ТаблицаСостав)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	МАКСИМУМ(СпецификацииСостав.НомерСтроки) КАК СпецификацииСоставНомерСтроки,
	|	СпецификацииСостав.Номенклатура КАК Номенклатура,
	|	СпецификацииСостав.ТипСтрокиСостава КАК ТипСтрокиСостава,
	|	ВЫБОР
	|		КОГДА &ИспользоватьХарактеристики
	|			ТОГДА СпецификацииСостав.Характеристика
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Характеристика,
	|	СпецификацииСостав.Спецификация КАК Спецификация,
	|	СпецификацииСостав.ДоляСтоимости КАК ДоляСтоимости,
	|	СпецификацииСостав.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СУММА(СпецификацииСостав.Количество / СпецификацииСостав.КоличествоПродукции * &Коэффициент * &Количество) КАК Количество
	|ИЗ
	|	Справочник.Спецификации.Состав КАК СпецификацииСостав
	|ГДЕ
	|	СпецификацииСостав.Ссылка = &Спецификация
	|	И СпецификацииСостав.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас)
	|
	|СГРУППИРОВАТЬ ПО
	|	СпецификацииСостав.Номенклатура,
	|	ВЫБОР
	|		КОГДА &ИспользоватьХарактеристики
	|			ТОГДА СпецификацииСостав.Характеристика
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ,
	|	СпецификацииСостав.Спецификация,
	|	СпецификацииСостав.ЕдиницаИзмерения,
	|	СпецификацииСостав.ТипСтрокиСостава,
	|	СпецификацииСостав.ДоляСтоимости
	|
	|УПОРЯДОЧИТЬ ПО
	|	СпецификацииСоставНомерСтроки");
	
	Запрос.УстановитьПараметр("ИспользоватьХарактеристики", Константы.ФункциональнаяОпцияИспользоватьХарактеристики.Получить());
	
	Запрос.УстановитьПараметр("Спецификация", ПоСпецификации);
	Запрос.УстановитьПараметр("Количество", ПоКоличество);
	
	Если ТипЗнч(ПоЕдиницаИзмерения) = Тип("СправочникСсылка.ЕдиницыИзмерения")
		И ЗначениеЗаполнено(ПоЕдиницаИзмерения) Тогда
		ПоКоэффициент = ПоЕдиницаИзмерения.Коэффициент;
	Иначе
		ПоКоэффициент = 1;
	КонецЕсли;
	Запрос.УстановитьПараметр("Коэффициент", ПоКоэффициент);
	
	ТаблицаСостава = Запрос.Выполнить().Выгрузить();
	ИтогДоляСтоимости = ТаблицаСостава.Итог("ДоляСтоимости");
	Для каждого СтрокаСостава Из ТаблицаСостава Цикл
		
		Если СтрокаСостава.ТипСтрокиСостава = Перечисления.ТипыСтрокСоставаСпецификации.Узел Тогда
			
			ДоляУзла = ?(ПоДоляСтоимости<>Неопределено И ИтогДоляСтоимости<>0, ПоДоляСтоимости*СтрокаСостава.ДоляСтоимости/ИтогДоляСтоимости, СтрокаСостава.ДоляСтоимости);
			ЗаполнитьТаблицуПоСпецификации(БазоваяСпецификация, СтрокаСостава.Спецификация, СтрокаСостава.ЕдиницаИзмерения, СтрокаСостава.Количество, ДоляУзла, ТаблицаСостав);
			
		Иначе
			
			НоваяСтрока = ТаблицаСостав.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаСостава);
			НоваяСтрока.БазоваяСпецификация = БазоваяСпецификация;
			Если ПоДоляСтоимости<>Неопределено И ИтогДоляСтоимости<>0 Тогда
				НоваяСтрока.ДоляСтоимости = ПоДоляСтоимости*НоваяСтрока.ДоляСтоимости/ИтогДоляСтоимости;
			КонецЕсли; 
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьТаблицуПоСпецификации()

Процедура ЗаполнитьТаблицуСостава(ИмяДокумента, МассивДокументов, ТаблицаСостав)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|	Документ.РучноеРаспределение КАК РучноеРаспределение,
	|	Документ.Продукция.(
	|		НомерСтроки КАК НомерСтроки,
	|		Номенклатура КАК Номенклатура,
	|		Характеристика КАК Характеристика,
	|		Партия КАК Партия,
	|		Количество КАК Количество,
	|		Резерв КАК Резерв,
	|		ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		Номенклатура.ЕдиницаИзмерения КАК БазоваяЕдиница,
	|		ВЫБОР
	|			КОГДА Документ.Продукция.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
	|				ТОГДА Документ.Продукция.ЕдиницаИзмерения.Коэффициент
	|			ИНАЧЕ 1
	|		КОНЕЦ КАК Коэффициент,
	|		Спецификация КАК Спецификация,
	|		КлючСвязи КАК КлючСвязи,
	|		СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|		ЗаказПокупателя КАК ЗаказПокупателя
	|	) КАК Продукция,
	|	Документ.Запасы.(
	|		НомерСтроки КАК НомерСтроки,
	|		Этап КАК Этап,
	|		Номенклатура КАК Номенклатура,
	|		Характеристика КАК Характеристика,
	|		Партия КАК Партия,
	|		Количество КАК Количество,
	|		Резерв КАК Резерв,
	|		ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		Спецификация КАК Спецификация,
	|		ВЫБОР
	|			КОГДА Документ.Запасы.ДоляСтоимости = 0
	|				ТОГДА 1
	|			ИНАЧЕ Документ.Запасы.ДоляСтоимости
	|		КОНЕЦ КАК ДоляСтоимости,
	|		КлючСвязи КАК КлючСвязи,
	|		СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|		ЗаказПокупателя КАК ЗаказПокупателя
	|	) КАК Запасы,
	|	Документ.РаспределениеЗапасов.(
	|		НомерСтроки КАК НомерСтроки,
	|		Количество КАК Количество,
	|		КлючСвязиПродукция КАК КлючСвязиПродукция,
	|		Этап КАК Этап,
	|		Номенклатура КАК Номенклатура,
	|		Характеристика КАК Характеристика,
	|		Партия КАК Партия,
	|		ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		Спецификация КАК Спецификация,
	|		СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|		ЗаказПокупателя КАК ЗаказПокупателя
	|	) КАК РаспределениеЗапасов
	|ИЗ
	|	Документ.СборкаЗапасов КАК Документ
	|ГДЕ
	|	Документ.Ссылка В(&МассивДокументов)";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "Документ.СборкаЗапасов", "Документ." + ИмяДокумента);
	Если ИмяДокумента="ЗаказНаПроизводство" Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Документ.ЗаказНаПроизводство КАК ЗаказНаПроизводство", "Документ.Ссылка КАК ЗаказНаПроизводство");
	КонецЕсли; 
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ТаблицаПродукция = Выборка.Продукция.Выгрузить();
		ТаблицаЗапасы = Выборка.Запасы.Выгрузить();
		Если ТаблицаЗапасы.Количество()=0 Тогда
			Для каждого СтрПродукция Из ТаблицаПродукция Цикл
				ЗаполнитьТаблицуПоСпецификации(СтрПродукция.Спецификация, СтрПродукция.Спецификация, СтрПродукция.БазоваяЕдиница, 1, , ТаблицаСостав);
			КонецЦикла;
			Продолжить;
		ИначеЕсли ТипЗнч(Выборка.Ссылка)=Тип("ДокументСсылка.СборкаЗапасов") ИЛИ Выборка.РучноеРаспределение Тогда
			ТаблицаРаспределениеЗапасов = Выборка.РаспределениеЗапасов.Выгрузить();
		Иначе
			ТаблицаРаспределениеЗапасов = Выборка.РаспределениеЗапасов.Выгрузить().СкопироватьКолонки();
			ПроизводствоСервер.РаспределитьМатериалы(ТаблицаПродукция, ТаблицаЗапасы, ТаблицаРаспределениеЗапасов, , Выборка.ЗаказНаПроизводство);
		КонецЕсли;
		ОбъединитьЗапасыИРаспределение(ТаблицаЗапасы, ТаблицаРаспределениеЗапасов);
		Для каждого СтрПродукция Из ТаблицаПродукция Цикл
			СтруктураОтбора = Новый Структура;
			СтруктураОтбора.Вставить("КлючСвязиПродукция", СтрПродукция.КлючСвязи);
			СтрокиРаспределение = ТаблицаРаспределениеЗапасов.НайтиСтроки(СтруктураОтбора);
			Для каждого СтрокаРаспеределение Из СтрокиРаспределение Цикл
				НоваяСтрока = ТаблицаСостав.Добавить();
				НоваяСтрока.БазоваяСпецификация = СтрПродукция.Спецификация;
				НоваяСтрока.Номенклатура = СтрокаРаспеределение.Номенклатура;
				НоваяСтрока.Характеристика = СтрокаРаспеределение.Характеристика;
				НоваяСтрока.Количество = ?(СтрПродукция.Количество=0 ИЛИ СтрПродукция.Коэффициент=0, 0, СтрокаРаспеределение.Количество / СтрПродукция.Количество / СтрПродукция.Коэффициент);
				НоваяСтрока.ДоляСтоимости = СтрокаРаспеределение.ДоляСтоимости;
			КонецЦикла; 
		КонецЦикла;
	КонецЦикла; 
	
КонецПроцедуры

Процедура ОбъединитьЗапасыИРаспределение(ТаблицаЗапасы, ТаблицаРаспределениеЗапасов)
	
	ТаблицаЗапасы.Свернуть("Номенклатура, Характеристика, Партия, ЕдиницаИзмерения, Спецификация, СтруктурнаяЕдиница, ЗаказПокупателя", "ДоляСтоимости, Количество");
	ТаблицаРаспределениеЗапасов.Колонки.Добавить("ДоляСтоимости", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2, ДопустимыйЗнак.Неотрицательный)));
	ТаблицаРаспределениеЗапасов.Колонки.Добавить("Распределено", Новый ОписаниеТипов("Булево"));
	
	Для каждого СтрокаЗапасы Из ТаблицаЗапасы Цикл
		СтруктураОтбора = Новый Структура("Номенклатура, Характеристика, Партия, Спецификация, ЕдиницаИзмерения, СтруктурнаяЕдиница, ЗаказПокупателя");
		ЗаполнитьЗначенияСвойств(СтруктураОтбора, СтрокаЗапасы);
		СтруктураОтбора.Вставить("Распределено", Ложь);
		СтрокиРаспределение = ТаблицаРаспределениеЗапасов.НайтиСтроки(СтруктураОтбора);
		КоличествоРаспределенить = СтрокаЗапасы.Количество;
		ДоляСтоимостиРаспределенить = СтрокаЗапасы.ДоляСтоимости;
		Для каждого СтрокаРаспределение Из СтрокиРаспределение Цикл
			Если КоличествоРаспределенить=СтрокаРаспределение.Количество Тогда
				СтрокаРаспределение.ДоляСтоимости = ДоляСтоимостиРаспределенить;
				СтрокаРаспределение.Распределено = Истина;
				Прервать;
			ИначеЕсли КоличествоРаспределенить>СтрокаРаспределение.Количество Тогда
				Если КоличествоРаспределенить<>0 Тогда
					СтрокаРаспределение.ДоляСтоимости = ДоляСтоимостиРаспределенить * СтрокаРаспределение.Количество / КоличествоРаспределенить;
				КонецЕсли; 
				СтрокаРаспределение.Распределено = Истина;
				КоличествоРаспределенить = КоличествоРаспределенить-СтрокаРаспределение.Количество;
				ДоляСтоимостиРаспределенить = ДоляСтоимостиРаспределенить-СтрокаРаспределение.ДоляСтоимости;
			ИначеЕсли КоличествоРаспределенить<СтрокаРаспределение.Количество Тогда
				НоваяСтрока = ТаблицаРаспределениеЗапасов.Вставить(ТаблицаРаспределениеЗапасов.Индекс(СтрокаРаспределение));
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаРаспределение);
				НоваяСтрока.Количество = КоличествоРаспределенить;
				НоваяСтрока.ДоляСтоимости = ДоляСтоимостиРаспределенить;
				НоваяСтрока.Распределено = Истина;
				СтрокаРаспределение.Количество = СтрокаРаспределение.Количество-НоваяСтрока.Количество;
				Прервать;
			КонецЕсли; 
		КонецЦикла; 
	КонецЦикла; 
	
	Если ТаблицаРаспределениеЗапасов.Колонки.Найти("НомерСтроки")<>Неопределено Тогда
		ТаблицаРаспределениеЗапасов.Сортировать("НомерСтроки");
	КонецЕсли; 
	
КонецПроцедуры

Процедура ЗаполнитьСоставБригадыПоЗаказуНаПроизводство(МассивЗаказов, СоответствиеКлючейСвязи)
	
	СоставБригады.Очистить();
	
	Бригады = Новый Массив;
	Для каждого СтрокаТабличнойЧасти Из Операции Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.Исполнитель) ИЛИ ТипЗнч(СтрокаТабличнойЧасти.Исполнитель)<>Тип("СправочникСсылка.Бригады") Тогда
			Продолжить;
		КонецЕсли;
		Если Бригады.Найти(СтрокаТабличнойЧасти.Исполнитель)<>Неопределено Тогда
			Продолжить;
		КонецЕсли;
		Бригады.Добавить(СтрокаТабличнойЧасти.Исполнитель);
	КонецЦикла; 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивЗаказов", МассивЗаказов);
	Запрос.УстановитьПараметр("ПоложениеИсполнителя", ПоложениеИсполнителя);
	Запрос.УстановитьПараметр("Бригады", Бригады);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаказНаПроизводствоСоставБригады.Ссылка КАК Ссылка,
	|	ЗаказНаПроизводствоСоставБригады.Сотрудник КАК Сотрудник,
	|	ЗаказНаПроизводствоСоставБригады.КТУ КАК КТУ,
	|	ЗаказНаПроизводствоСоставБригады.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ЗаказНаПроизводствоСоставБригады.КлючСвязи КАК КлючСвязи
	|ИЗ
	|	Документ.ЗаказНаПроизводство.СоставБригады КАК ЗаказНаПроизводствоСоставБригады
	|ГДЕ
	|	ЗаказНаПроизводствоСоставБригады.Ссылка В(&МассивЗаказов)
	|	И ЗаказНаПроизводствоСоставБригады.Ссылка.ПоложениеИсполнителя = ЗНАЧЕНИЕ(Перечисление.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти)
	|	И &ПоложениеИсполнителя = ЗНАЧЕНИЕ(Перечисление.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти)
	|	И ЗаказНаПроизводствоСоставБригады.КлючСвязи <> 0
	|	И ЗаказНаПроизводствоСоставБригады.Ссылка.ЗапланированыОперации
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаказНаПроизводствоСоставБригады.Ссылка,
	|	ЗаказНаПроизводствоСоставБригады.Сотрудник,
	|	ЗаказНаПроизводствоСоставБригады.КТУ,
	|	ЗаказНаПроизводствоСоставБригады.СтруктурнаяЕдиница,
	|	ЗаказНаПроизводствоОперации.КлючСвязи
	|ИЗ
	|	Документ.ЗаказНаПроизводство.Операции КАК ЗаказНаПроизводствоОперации
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство.СоставБригады КАК ЗаказНаПроизводствоСоставБригады
	|		ПО ЗаказНаПроизводствоОперации.Ссылка = ЗаказНаПроизводствоСоставБригады.Ссылка
	|ГДЕ
	|	ЗаказНаПроизводствоОперации.Ссылка В(&МассивЗаказов)
	|	И ЗаказНаПроизводствоОперации.Ссылка.ПоложениеИсполнителя <> ЗНАЧЕНИЕ(Перечисление.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти)
	|	И &ПоложениеИсполнителя = ЗНАЧЕНИЕ(Перечисление.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти)
	|	И ЗаказНаПроизводствоОперации.Ссылка.Исполнитель ССЫЛКА Справочник.Бригады
	|	И ЗаказНаПроизводствоОперации.КлючСвязи <> 0
	|	И ЗаказНаПроизводствоОперации.Ссылка.ЗапланированыОперации
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаказНаПроизводствоСоставБригады.Ссылка,
	|	ЗаказНаПроизводствоСоставБригады.Сотрудник,
	|	ЗаказНаПроизводствоСоставБригады.КТУ,
	|	ЗаказНаПроизводствоСоставБригады.СтруктурнаяЕдиница,
	|	0
	|ИЗ
	|	Документ.ЗаказНаПроизводство.СоставБригады КАК ЗаказНаПроизводствоСоставБригады
	|ГДЕ
	|	ЗаказНаПроизводствоСоставБригады.Ссылка В(&МассивЗаказов)
	|	И ЗаказНаПроизводствоСоставБригады.Ссылка.ПоложениеИсполнителя <> ЗНАЧЕНИЕ(Перечисление.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти)
	|	И &ПоложениеИсполнителя <> ЗНАЧЕНИЕ(Перечисление.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти)
	|	И ЗаказНаПроизводствоСоставБригады.Ссылка.Исполнитель ССЫЛКА Справочник.Бригады
	|	И ЗаказНаПроизводствоСоставБригады.КлючСвязи = 0
	|	И ЗаказНаПроизводствоСоставБригады.Ссылка.ЗапланированыОперации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БригадыСостав.Ссылка КАК Ссылка,
	|	1 КАК КТУ,
	|	БригадыСостав.Сотрудник КАК Сотрудник,
	|	ЕстьNull(СотрудникиСрезПоследних.СтруктурнаяЕдиница, &СтруктурнаяЕдиница) КАК СтруктурнаяЕдиница
	|ИЗ
	|	Справочник.Бригады.Состав КАК БригадыСостав
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Сотрудники.СрезПоследних КАК СотрудникиСрезПоследних
	|		ПО БригадыСостав.Сотрудник = СотрудникиСрезПоследних.Сотрудник
	|			И (СотрудникиСрезПоследних.Организация = &Организация)
	|ГДЕ
	|	БригадыСостав.Ссылка В(&Бригады)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	БригадыСостав.НомерСтроки";
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаСостава = Результат[0].Выгрузить();
	ТаблицаСтандартногоСостава = Результат[1].Выгрузить();
	
	// Состав шапки
	Для каждого СтрокаТабличнойЧасти Из ТаблицаСостава Цикл
		Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.КлючСвязи) Тогда
			Продолжить;
		КонецЕсли;
		НоваяСтрока = СоставБригады.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТабличнойЧасти);
	КонецЦикла; 
	
	// Состав ТЧ
	Для каждого СтрокаТабличнойЧасти Из Операции Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.КлючСвязи)
			ИЛИ НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.Исполнитель)
			ИЛИ ТипЗнч(СтрокаТабличнойЧасти.Исполнитель)<>Тип("СправочникСсылка.Бригады") Тогда
			Продолжить;
		КонецЕсли;
		Если СоответствиеКлючейСвязи.Получить(СтрокаТабличнойЧасти.ЗаказНаПроизводство)=Неопределено Тогда
			СоответствиеКлючейСвязи.Вставить(СтрокаТабличнойЧасти.ЗаказНаПроизводство, Новый Соответствие)
		КонецЕсли; 
		СтарыйКлючСвязи = СоответствиеКлючейСвязи.Получить(СтрокаТабличнойЧасти.ЗаказНаПроизводство).Получить(СтрокаТабличнойЧасти.КлючСвязи);
		Если НЕ ЗначениеЗаполнено(СтарыйКлючСвязи) Тогда
			СтрокиСостава = Новый Массив;
		Иначе
			СтруктураОтбора = Новый Структура;
			СтруктураОтбора.Вставить("КлючСвязи", СтарыйКлючСвязи);
			СтруктураОтбора.Вставить("Ссылка", СтрокаТабличнойЧасти.ЗаказНаПроизводство);
			СтрокиСостава = ТаблицаСостава.НайтиСтроки(СтруктураОтбора);
		КонецЕсли;
		Если СтрокиСостава.Количество()=0 Тогда
			СтруктураОтбора = Новый Структура;
			СтруктураОтбора.Вставить("Ссылка", СтрокаТабличнойЧасти.Исполнитель);
			СтрокиСостава = ТаблицаСтандартногоСостава.НайтиСтроки(СтруктураОтбора);
		КонецЕсли; 
		Для каждого СтрокаСостава Из СтрокиСостава Цикл
			НоваяСтрока = СоставБригады.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаСостава);
			НоваяСтрока.КлючСвязи = СтрокаТабличнойЧасти.КлючСвязи;
			Если НЕ ЗначениеЗаполнено(НоваяСтрока.СтруктурнаяЕдиница) Тогда
				НоваяСтрока.СтруктурнаяЕдиница = СтрокаТабличнойЧасти.СтруктурнаяЕдиница;
			КонецЕсли; 
		КонецЦикла; 
	КонецЦикла;  
	
КонецПроцедуры

Процедура ЗаполнитьОперации(ВыборкаДанных, ТаблицаОстатков, ЗаполнятьФактическоеКоличество = Ложь, СоответствиеКлючейСвязи = Неопределено)
	
	СохранятьКлючСвязи = (ВыборкаДанных.Владелец().Колонки.Найти("КлючСвязи")<>Неопределено);
	Если СохранятьКлючСвязи ИЛИ ТипЗнч(СоответствиеКлючейСвязи)<>Тип("Соответствие") Тогда
		СоответствиеКлючейСвязи = Новый Соответствие;
	КонецЕсли;
	
	ЕстьОснование = (ТаблицаОстатков.Колонки.Найти("Основание")<>Неопределено);
	ЕстьЭтап = (ТаблицаОстатков.Колонки.Найти("Этап")<>Неопределено);
	
	Операции.Очистить();
	КлючСвязи = 0;
	Если ТаблицаОстатков.Количество() > 0 И ВыборкаДанных.Количество() > 0 Тогда
		
		ТаблицаОбщихОстатков = ТаблицаОстатков.Скопировать();
		ТаблицаОбщихОстатков.Свернуть("Номенклатура, Характеристика", "Остаток");
		ТаблицаОбщихОстатков.Индексы.Добавить("Номенклатура,Характеристика");
		ТаблицаОстатков.Индексы.Добавить("Номенклатура,Характеристика,Операция");
		
		Пока ВыборкаДанных.Следующий() Цикл
			
			СтруктураДляПоиска = Новый Структура;
			СтруктураДляПоиска.Вставить("Номенклатура", ВыборкаДанных.Номенклатура);
			СтруктураДляПоиска.Вставить("Характеристика", ВыборкаДанных.Характеристика);
			
			МассивОбщихОстатков = ТаблицаОбщихОстатков.НайтиСтроки(СтруктураДляПоиска);
			Если МассивОбщихОстатков.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
			ОбщийОстаток = МассивОбщихОстатков[0].Остаток;
			
			СтруктураДляПоиска.Вставить("Операция", ВыборкаДанных.Операция);
			Если ЕстьЭтап Тогда
				СтруктураДляПоиска.Вставить("Этап", ВыборкаДанных.Этап);
			КонецЕсли; 
			Если ЕстьОснование Тогда
				СтруктураДляПоиска.Вставить("Основание", ВыборкаДанных.Основание);
			КонецЕсли; 
			
			МассивОстатков = ТаблицаОстатков.НайтиСтроки(СтруктураДляПоиска);
			Остаток = ?(МассивОстатков.Количество()=0, 0, МассивОстатков[0].Остаток);
			
			КоличествоКСписанию = ВыборкаДанных.КоличествоПлан * ВыборкаДанных.Коэффициент;
			МожноСписать = Мин(ОбщийОстаток, Остаток);
			Если НЕ ЗначениеЗаполнено(ВыборкаДанных.Спецификация) Тогда
				// Строки с незаполненной спецификацией не контролируются
				МожноСписать = КоличествоКСписанию;
			КонецЕсли; 
			Списать = Мин(МожноСписать, КоличествоКСписанию);
			Если Списать <= 0 Тогда
				Продолжить;
			КонецЕсли; 
			
			КлючСвязи = КлючСвязи+1;
			НоваяСтрока = Операции.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДанных);
			Если НЕ Константы.ФункциональнаяОпцияРезервированиеЗапасов.Получить() Тогда
				НоваяСтрока.ЗаказПокупателя = Документы.ЗаказПокупателя.ПустаяСсылка();
			КонецЕсли; 
			НоваяСтрока.КлючСвязи = КлючСвязи;
			Если СохранятьКлючСвязи И ЗначениеЗаполнено(ВыборкаДанных.КлючСвязи) Тогда
				Если ЕстьОснование Тогда
					Если СоответствиеКлючейСвязи.Получить(ВыборкаДанных.Основание)=Неопределено Тогда
						СоответствиеКлючейСвязи.Вставить(ВыборкаДанных.Основание, Новый Соответствие)
					КонецЕсли; 
					СоответствиеКлючейСвязи.Получить(ВыборкаДанных.Основание).Вставить(КлючСвязи, ВыборкаДанных.КлючСвязи);
				Иначе
					СоответствиеКлючейСвязи.Вставить(КлючСвязи, ВыборкаДанных.КлючСвязи);
				КонецЕсли; 
			КонецЕсли; 
			
			НоваяСтрока.КоличествоПлан = Списать / ВыборкаДанных.Коэффициент;
			Если ЗаполнятьФактическоеКоличество Тогда
				НоваяСтрока.КоличествоФакт = НоваяСтрока.КоличествоПлан;
				НоваяСтрока.Нормочасы = НоваяСтрока.НормаВремени * НоваяСтрока.КоличествоФакт;
				Если НЕ ВыборкаДанных.ФиксированнаяСтоимость Тогда
					НоваяСтрока.Стоимость = НоваяСтрока.Расценка * НоваяСтрока.НормаВремени * НоваяСтрока.КоличествоФакт;
				Иначе
					НоваяСтрока.Стоимость = НоваяСтрока.Расценка * НоваяСтрока.КоличествоФакт;
				КонецЕсли; 
			КонецЕсли; 
			
			МассивОбщихОстатков[0].Остаток = МассивОбщихОстатков[0].Остаток - Списать;
			Если МассивОбщихОстатков[0].Остаток <= 0 Тогда
				ТаблицаОбщихОстатков.Удалить(МассивОбщихОстатков[0]);
			КонецЕсли;
			Если МассивОстатков.Количество()>0 Тогда
				МассивОстатков[0].Остаток = МассивОстатков[0].Остаток - Списать;
				Если МассивОстатков[0].Остаток <= 0 Тогда
					ТаблицаОстатков.Удалить(МассивОстатков[0]);
				КонецЕсли;
			КонецЕсли; 
				
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры
 
// Обработчик заполнения документа на основании структуры.
//
// Параметры:
//  ДанныеЗаполнения - Структура.
//
Процедура ЗаполнитьПоСтруктуре(ДанныеЗаполнения) Экспорт
	
	Если ДанныеЗаполнения.Свойство("Операции") Тогда
		Для каждого СтрокаОперации Из ДанныеЗаполнения.Операции Цикл
			НоваяСтрока = Операции.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОперации);
		КонецЦикла;
	ИначеЕсли ДанныеЗаполнения.Свойство("МассивЗаказовНаПроизводство") Тогда
		ЗаполнитьПоЗаказуНаПроизводство(ДанныеЗаполнения);
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик заполнения на основании документа ЗаказПокупателя.
//
// Параметры:
//  ДокументСсылкаЗаказПокупателя - ДокументСсылка.ЗаказПокупателя.
//
Процедура ЗаполнитьПоЗаказуПокупателя(ДокументСсылкаЗаказПокупателя) Экспорт
	
	Если ДокументСсылкаЗаказПокупателя.ВидОперации = Перечисления.ВидыОперацийЗаказПокупателя.ЗаказНаПродажу 
		ИЛИ ДокументСсылкаЗаказПокупателя.ВидОперации = Перечисления.ВидыОперацийЗаказПокупателя.ЗаказНаПереработку Тогда
		ЗаполнитьПоЗаказуНаПродажуПереработку(ДокументСсылкаЗаказПокупателя);
	ИначеЕсли ДокументСсылкаЗаказПокупателя.ВидОперации = Перечисления.ВидыОперацийЗаказПокупателя.ЗаказНаряд Тогда
		ЗаполнитьПоЗаказНаряду(ДокументСсылкаЗаказПокупателя);
	КонецЕсли;
	
	ДокументОснование = ДокументСсылкаЗаказПокупателя;
	
КонецПроцедуры // ЗаполнитьПоЗаказуПокупателя()

Процедура ЗаполнитьПоЗаказуНаПродажуПереработку(ДокументСсылкаЗаказПокупателя)
	
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылкаЗаказПокупателя,
			Новый Структура("Организация, ВидОперации, СтруктурнаяЕдиницаПродажи, ДатаОтгрузки, ОжидаетсяВыборВариантаКП"));
	
	Документы.ЗаказПокупателя.ПроверитьВозможностьВводаНаОснованииЗаказаПокупателя(
		ДокументСсылкаЗаказПокупателя, Новый Структура("ОжидаетсяВыборВариантаКП", ЗначенияРеквизитов.ОжидаетсяВыборВариантаКП));
		
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗначенияРеквизитов);
	СтруктурнаяЕдиница = ЗначенияРеквизитов.СтруктурнаяЕдиницаПродажи;
	ВалютаДокумента = Справочники.ВидыЦен.Учетная.ВалютаЦены;
	ДатаЗакрытия = ЗначенияРеквизитов.ДатаОтгрузки;
	
	Период = ?(ЗначениеЗаполнено(ЗначенияРеквизитов.ДатаОтгрузки), ЗначенияРеквизитов.ДатаОтгрузки, ТекущаяДатаСеанса());
	
	Запрос = Новый Запрос;
	
	Документы.ЗаказПокупателя.ДобавитьТаблицуЗапасыВМенеджерВременныхТаблиц(ДокументСсылкаЗаказПокупателя, Запрос.МенеджерВременныхТаблиц, Ложь);
	
	ПроизводствоСервер.РазузловатьОперации(Запрос, ДокументСсылкаЗаказПокупателя, "Запасы");
	
	Запрос.УстановитьПараметр("ТаблицаПорядковОкругления", УправлениеНебольшойФирмойСервер.ТаблицаПорядковОкругления());
	Запрос.УстановитьПараметр("ДокументОснование", ДокументСсылкаЗаказПокупателя);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаПорядковОкругления.Порядок КАК Порядок,
	|	ТаблицаПорядковОкругления.Значение КАК Значение
	|ПОМЕСТИТЬ ТаблицаПорядковОкругления
	|ИЗ
	|	&ТаблицаПорядковОкругления КАК ТаблицаПорядковОкругления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗаказПокупателяЗапасы.НомерСтроки КАК НомерСтроки,
	|	ЗаказПокупателяЗапасы.Ссылка КАК ЗаказПокупателя,
	|	ЗаказПокупателяЗапасы.Номенклатура КАК Номенклатура,
	|	ЗаказПокупателяЗапасы.Характеристика КАК Характеристика,
	|	ЗаказПокупателяЗапасы.Партия КАК Партия,
	|	ЗаказПокупателяЗапасы.Количество - ЗаказПокупателяЗапасы.Резерв КАК Количество,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ЗаказПокупателяЗапасы.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
	|			ТОГДА 1
	|		ИНАЧЕ ЗаказПокупателяЗапасы.ЕдиницаИзмерения.Коэффициент
	|	КОНЕЦ КАК Коэффициент,
	|	ЗаказПокупателяЗапасы.Спецификация КАК Спецификация,
	|	ТаблицаОпераций.Операция КАК Операция,
	|	ТаблицаОпераций.Этап КАК Этап,
	|	ВЫБОР
	|		КОГДА ТаблицаОпераций.Операция ССЫЛКА Справочник.Номенклатура
	|			ТОГДА ТаблицаОпераций.Операция.ЕдиницаИзмерения
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ТаблицаОпераций.Операция ССЫЛКА Справочник.Номенклатура
	|				И ТаблицаОпераций.Операция <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			ТОГДА ТаблицаОпераций.Операция.ФиксированнаяСтоимость
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ФиксированнаяСтоимость,
	|	ЕСТЬNULL(ТаблицаОпераций.НормаВремени, 0) * ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ЗаказПокупателяЗапасы.ЕдиницаИзмерения) = ТИП(Справочник.ЕдиницыИзмерения)
	|				И ЗаказПокупателяЗапасы.ЕдиницаИзмерения <> ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ЗаказПокупателяЗапасы.ЕдиницаИзмерения.Коэффициент
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК НормаВремени,
	|	ТаблицаОпераций.Уровень КАК Уровень,
	|	ТаблицаОпераций.Порядок КАК Порядок,
	|	ТаблицаОпераций.НомерСтроки КАК НомерСтрокиОперации
	|ПОМЕСТИТЬ Операции
	|ИЗ
	|	ВТЗаказПокупателяЗапасы КАК ЗаказПокупателяЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОпераций КАК ТаблицаОпераций
	|		ПО ЗаказПокупателяЗапасы.Спецификация = ТаблицаОпераций.Спецификация
	|ГДЕ
	|	(ЗаказПокупателяЗапасы.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			ИЛИ ЗаказПокупателяЗапасы.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас)
	|				И (ЗаказПокупателяЗапасы.Спецификация <> ЗНАЧЕНИЕ(Справочник.Спецификации.ПустаяСсылка)
	|					ИЛИ ЗаказПокупателяЗапасы.Номенклатура.СпособПополнения = ЗНАЧЕНИЕ(Перечисление.СпособыПополненияЗапасов.Производство)))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Операции.Период КАК Период,
	|	Операции.НомерСтроки КАК НомерСтроки,
	|	Операции.ЗаказПокупателя КАК ЗаказПокупателя,
	|	Операции.Номенклатура КАК Номенклатура,
	|	Операции.Характеристика КАК Характеристика,
	|	Операции.Партия КАК Партия,
	|	Операции.Количество КАК КоличествоПлан,
	|	Операции.Коэффициент КАК Коэффициент,
	|	Операции.Спецификация КАК Спецификация,
	|	Операции.Операция КАК Операция,
	|	Операции.Этап КАК Этап,
	|	Операции.ФиксированнаяСтоимость КАК ФиксированнаяСтоимость,
	|	Операции.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Операции.НормаВремени КАК НормаВремени,
	|	(ВЫРАЗИТЬ(ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1), 0) / ЕСТЬNULL(ТаблицаПорядковОкругления.Значение, 0.01) КАК ЧИСЛО(15, 0))) * ЕСТЬNULL(ТаблицаПорядковОкругления.Значение, 0.01) КАК Расценка
	|ИЗ
	|	Операции КАК Операции
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&Период, ВидЦен = ЗНАЧЕНИЕ(Справочник.ВидыЦен.Учетная)) КАК ЦеныНоменклатурыСрезПоследних
	|			ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПорядковОкругления КАК ТаблицаПорядковОкругления
	|			ПО ЦеныНоменклатурыСрезПоследних.ВидЦен.ПорядокОкругления = ТаблицаПорядковОкругления.Порядок
	|		ПО Операции.Операция = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	Операции.НомерСтроки,
	|	Операции.Уровень,
	|	Операции.Порядок,
	|	Операции.НомерСтрокиОперации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказыОстатки.Номенклатура КАК Номенклатура,
	|	ЗаказыОстатки.Характеристика КАК Характеристика,
	|	ЗаказыОстатки.Операция КАК Операция,
	|	ЗаказыОстатки.Этап КАК Этап,
	|	СУММА(ЗаказыОстатки.Остаток) КАК Остаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		Операции.Номенклатура КАК Номенклатура,
	|		Операции.Характеристика КАК Характеристика,
	|		Операции.Операция КАК Операция,
	|		Операции.Этап КАК Этап,
	|		Операции.Количество * Операции.Коэффициент КАК Остаток
	|	ИЗ
	|		Операции КАК Операции
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СдельныеНаряды.Номенклатура,
	|		СдельныеНаряды.Характеристика,
	|		СдельныеНаряды.Операция,
	|		СдельныеНаряды.Этап,
	|		-СдельныеНаряды.КоличествоФактОборот
	|	ИЗ
	|		РегистрНакопления.СдельныеНаряды.Обороты(, , Авто, ЗаказПокупателя = &ДокументОснование) КАК СдельныеНаряды
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияДокументаСдельныеНаряды.Номенклатура,
	|		ДвиженияДокументаСдельныеНаряды.Характеристика,
	|		ДвиженияДокументаСдельныеНаряды.Операция,
	|		ДвиженияДокументаСдельныеНаряды.Этап,
	|		ДвиженияДокументаСдельныеНаряды.КоличествоФакт
	|	ИЗ
	|		РегистрНакопления.СдельныеНаряды КАК ДвиженияДокументаСдельныеНаряды
	|	ГДЕ
	|		ДвиженияДокументаСдельныеНаряды.Регистратор = &Ссылка
	|		И ДвиженияДокументаСдельныеНаряды.ЗаказПокупателя = &ДокументОснование) КАК ЗаказыОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказыОстатки.Номенклатура,
	|	ЗаказыОстатки.Характеристика,
	|	ЗаказыОстатки.Операция,
	|	ЗаказыОстатки.Этап";
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ТаблицаОстатков = МассивРезультатов[3].Выгрузить();
	Выборка = МассивРезультатов[2].Выбрать();
	
	ЗаполнитьОперации(Выборка, ТаблицаОстатков);
	
КонецПроцедуры
 
Процедура ЗаполнитьПоЗаказНаряду(ДокументСсылкаЗаказПокупателя)
	
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылкаЗаказПокупателя,
			Новый Структура("Организация, ВидОперации, СтруктурнаяЕдиницаПродажи, Старт, Финиш, ДатаОтгрузки, ОжидаетсяВыборВариантаКП"));
	
	Документы.ЗаказПокупателя.ПроверитьВозможностьВводаНаОснованииЗаказаПокупателя(
		ДокументСсылкаЗаказПокупателя, Новый Структура("ОжидаетсяВыборВариантаКП", ЗначенияРеквизитов.ОжидаетсяВыборВариантаКП));
	
	Организация = ЗначенияРеквизитов.Организация;
	СтруктурнаяЕдиница = ЗначенияРеквизитов.СтруктурнаяЕдиницаПродажи;
	ВалютаДокумента = Справочники.ВидыЦен.Учетная.ВалютаЦены;
	
	ДатаЗакрытия = ЗначенияРеквизитов.Финиш;
	Период = ?(ЗначениеЗаполнено(ЗначенияРеквизитов.Старт), ЗначенияРеквизитов.Старт, ТекущаяДатаСеанса());
	
	Запрос = Новый Запрос;
	ПроизводствоСервер.РазузловатьОперации(Запрос, ДокументСсылкаЗаказПокупателя, "Работы");
	
	Запрос.УстановитьПараметр("ТаблицаПорядковОкругления", УправлениеНебольшойФирмойСервер.ТаблицаПорядковОкругления());
	Запрос.УстановитьПараметр("ДокументОснование", ДокументСсылкаЗаказПокупателя);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаПорядковОкругления.Порядок КАК Порядок,
	|	ТаблицаПорядковОкругления.Значение КАК Значение
	|ПОМЕСТИТЬ ТаблицаПорядковОкругления
	|ИЗ
	|	&ТаблицаПорядковОкругления КАК ТаблицаПорядковОкругления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗаказПокупателяРаботы.НомерСтроки КАК НомерСтроки,
	|	ЗаказПокупателяРаботы.Ссылка КАК ЗаказПокупателя,
	|	ЗаказПокупателяРаботы.Номенклатура КАК Номенклатура,
	|	ЗаказПокупателяРаботы.Характеристика КАК Характеристика,
	|	ЗаказПокупателяРаботы.Количество * ЗаказПокупателяРаботы.Кратность * ЗаказПокупателяРаботы.Коэффициент КАК Количество,
	|	1 КАК Коэффициент,
	|	ЗаказПокупателяРаботы.Спецификация КАК Спецификация,
	|	ТаблицаОпераций.Операция КАК Операция,
	|	ТаблицаОпераций.Этап КАК Этап,
	|	ВЫБОР
	|		КОГДА ТаблицаОпераций.Операция ССЫЛКА Справочник.Номенклатура
	|			ТОГДА ТаблицаОпераций.Операция.ЕдиницаИзмерения
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ТаблицаОпераций.Операция ССЫЛКА Справочник.Номенклатура
	|				И ТаблицаОпераций.Операция <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			ТОГДА ТаблицаОпераций.Операция.ФиксированнаяСтоимость
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ФиксированнаяСтоимость,
	|	ЕСТЬNULL(ТаблицаОпераций.НормаВремени, 0) КАК НормаВремени,
	|	ТаблицаОпераций.Уровень КАК Уровень,
	|	ТаблицаОпераций.Порядок КАК Порядок,
	|	ТаблицаОпераций.НомерСтроки КАК НомерСтрокиОперации
	|ПОМЕСТИТЬ Операции
	|ИЗ
	|	Документ.ЗаказПокупателя.Работы КАК ЗаказПокупателяРаботы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОпераций КАК ТаблицаОпераций
	|		ПО ЗаказПокупателяРаботы.Спецификация = ТаблицаОпераций.Спецификация
	|ГДЕ
	|	ЗаказПокупателяРаботы.Ссылка = &ДокументОснование
	|	И ЗаказПокупателяРаботы.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Операции.Период КАК Период,
	|	Операции.НомерСтроки КАК НомерСтроки,
	|	Операции.ЗаказПокупателя КАК ЗаказПокупателя,
	|	Операции.Номенклатура КАК Номенклатура,
	|	Операции.Характеристика КАК Характеристика,
	|	Операции.Количество КАК КоличествоПлан,
	|	Операции.Коэффициент КАК Коэффициент,
	|	Операции.Спецификация КАК Спецификация,
	|	Операции.Операция КАК Операция,
	|	Операции.Этап КАК Этап,
	|	Операции.ФиксированнаяСтоимость КАК ФиксированнаяСтоимость,
	|	Операции.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Операции.НормаВремени КАК НормаВремени,
	|	(ВЫРАЗИТЬ(ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1), 0) / ЕСТЬNULL(ТаблицаПорядковОкругления.Значение, 0.01) КАК ЧИСЛО(15, 0))) * ЕСТЬNULL(ТаблицаПорядковОкругления.Значение, 0.01) КАК Расценка
	|ИЗ
	|	Операции КАК Операции
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&Период, ВидЦен = ЗНАЧЕНИЕ(Справочник.ВидыЦен.Учетная)) КАК ЦеныНоменклатурыСрезПоследних
	|			ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПорядковОкругления КАК ТаблицаПорядковОкругления
	|			ПО ЦеныНоменклатурыСрезПоследних.ВидЦен.ПорядокОкругления = ТаблицаПорядковОкругления.Порядок
	|		ПО Операции.Операция = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	Операции.НомерСтроки,
	|	Операции.Уровень,
	|	Операции.Порядок,
	|	Операции.НомерСтрокиОперации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказыОстатки.Номенклатура КАК Номенклатура,
	|	ЗаказыОстатки.Характеристика КАК Характеристика,
	|	ЗаказыОстатки.Операция КАК Операция,
	|	ЗаказыОстатки.Этап КАК Этап,
	|	СУММА(ЗаказыОстатки.Остаток) КАК Остаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		Операции.Номенклатура КАК Номенклатура,
	|		Операции.Характеристика КАК Характеристика,
	|		Операции.Операция КАК Операция,
	|		Операции.Этап КАК Этап,
	|		Операции.Количество * Операции.Коэффициент КАК Остаток
	|	ИЗ
	|		Операции КАК Операции
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СдельныеНаряды.Номенклатура,
	|		СдельныеНаряды.Характеристика,
	|		СдельныеНаряды.Операция,
	|		СдельныеНаряды.Этап,
	|		-ВЫБОР
	|			КОГДА СдельныеНаряды.КоличествоФактОборот = 0
	|				ТОГДА СдельныеНаряды.КоличествоПланОборот
	|			ИНАЧЕ СдельныеНаряды.КоличествоФактОборот
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.СдельныеНаряды.Обороты(, , Авто, ЗаказПокупателя = &ДокументОснование) КАК СдельныеНаряды
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияДокументаСдельныеНаряды.Номенклатура,
	|		ДвиженияДокументаСдельныеНаряды.Характеристика,
	|		ДвиженияДокументаСдельныеНаряды.Операция,
	|		ДвиженияДокументаСдельныеНаряды.Этап,
	|		ВЫБОР
	|			КОГДА ДвиженияДокументаСдельныеНаряды.КоличествоФакт = 0
	|				ТОГДА ДвиженияДокументаСдельныеНаряды.КоличествоПлан
	|			ИНАЧЕ ДвиженияДокументаСдельныеНаряды.КоличествоФакт
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.СдельныеНаряды КАК ДвиженияДокументаСдельныеНаряды
	|	ГДЕ
	|		ДвиженияДокументаСдельныеНаряды.Регистратор = &Ссылка
	|		И ДвиженияДокументаСдельныеНаряды.ЗаказПокупателя = &ДокументОснование) КАК ЗаказыОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказыОстатки.Номенклатура,
	|	ЗаказыОстатки.Характеристика,
	|	ЗаказыОстатки.Операция,
	|	ЗаказыОстатки.Этап";
		
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ТаблицаОстатков = МассивРезультатов[3].Выгрузить();
	Выборка = МассивРезультатов[2].Выбрать();
	
	ЗаполнитьОперации(Выборка, ТаблицаОстатков);
	
КонецПроцедуры
 
// Обработчик заполнения на основании документа ЗаказНаПроизводство.
//
// Параметры:
//  ДокументСсылкаЗаказНаПроизводство - ДокументСсылка.ЗаказНаПроизводство.
//
Процедура ЗаполнитьПоЗаказуНаПроизводство(ДокументСсылкаЗаказНаПроизводство) Экспорт
	
	// Основание и настройка документа.
	Если ТипЗнч(ДокументСсылкаЗаказНаПроизводство) = Тип("Структура") И ДокументСсылкаЗаказНаПроизводство.Свойство("МассивЗаказовНаПроизводство") Тогда
		МассивЗаказов = ДокументСсылкаЗаказНаПроизводство.МассивЗаказовНаПроизводство;
		ПоложениеЗаказаНаПроизводство = Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти;
		ПоложениеИсполнителя = Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти;
		ПоложениеСтруктурнойЕдиницы = Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти;
	Иначе
		МассивЗаказов = Новый Массив;
		МассивЗаказов.Добавить(ДокументСсылкаЗаказНаПроизводство);
		ПоложениеЗаказаНаПроизводство = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеНастройки("ПоложениеЗаказаНаПроизводствоВДокументахОтгрузки");
		Если НЕ ЗначениеЗаполнено(ПоложениеЗаказаНаПроизводство) Тогда
			ПоложениеЗаказаНаПроизводство = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке;
		КонецЕсли;
		Если ПоложениеЗаказаНаПроизводство = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке Тогда
			ЗаказНаПроизводство = ДокументСсылкаЗаказНаПроизводство;
		КонецЕсли;
	КонецЕсли;
	Если МассивЗаказов.Количество()=0 Тогда
		Возврат;
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивЗаказов", МассивЗаказов);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЗаказНаПроизводство.ВидОперации КАК ВидОперации,
	|	ЗаказНаПроизводство.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы КАК ТипСтруктурнойЕдиницы
	|ИЗ
	|	Документ.ЗаказНаПроизводство КАК ЗаказНаПроизводство
	|ГДЕ
	|	ЗаказНаПроизводство.Ссылка В(&МассивЗаказов)";
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Если Выборка.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Склад Тогда
		ВызватьИсключение НСтр("ru = 'Сдельный наряд не может быть введен на основании заказа на производство по складу!'");
	КонецЕсли;
	
	Если Выборка.ВидОперации = Перечисления.ВидыОперацийЗаказНаПроизводство.Сборка Тогда
		ЗаполнитьПоЗаказуНаПроизводствоСборка(МассивЗаказов);
	ИначеЕсли Выборка.ВидОперации = Перечисления.ВидыОперацийЗаказНаПроизводство.Разборка Тогда
		ЗаполнитьПоЗаказуНаПроизводствоРазборка(МассивЗаказов);
	КонецЕсли;
	
	Если МассивЗаказов.Количество()=1 Тогда
		ДокументОснование = МассивЗаказов[0];
	КонецЕсли; 
	
КонецПроцедуры

Процедура ЗаполнитьПоЗаказуНаПроизводствоСборка(МассивЗаказов)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивЗаказов", МассивЗаказов);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЗаказНаПроизводство.Организация КАК Организация,
	|	ЗаказНаПроизводство.СтруктурнаяЕдиницаОпераций КАК СтруктурнаяЕдиница,
	|	ЗаказНаПроизводство.Исполнитель КАК Исполнитель,
	|	ЗаказНаПроизводство.ЗапланированыОперации КАК ЗапланированыОперации,
	|	МАКСИМУМ(ЗаказНаПроизводство.Финиш) КАК Финиш,
	|	ЗаказНаПроизводство.ПоложениеИсполнителя КАК ПоложениеИсполнителя,
	|	ЗаказНаПроизводство.ПоложениеСтруктурнойЕдиницыОпераций КАК ПоложениеСтруктурнойЕдиницы
	|ИЗ
	|	Документ.ЗаказНаПроизводство КАК ЗаказНаПроизводство
	|ГДЕ
	|	ЗаказНаПроизводство.Ссылка В(&МассивЗаказов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказНаПроизводство.Организация,
	|	ЗаказНаПроизводство.СтруктурнаяЕдиницаОпераций,
	|	ЗаказНаПроизводство.Исполнитель,
	|	ЗаказНаПроизводство.ЗапланированыОперации,
	|	ЗаказНаПроизводство.ПоложениеИсполнителя,
	|	ЗаказНаПроизводство.ПоложениеСтруктурнойЕдиницыОпераций";
	ВыборкаШапка = Запрос.Выполнить().Выбрать();
	ВыборкаШапка.Следующий();
	Период = ?(ЗначениеЗаполнено(ВыборкаШапка.Финиш), ВыборкаШапка.Финиш, ТекущаяДатаСеанса());
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыборкаШапка, "Организация" + ?(МассивЗаказов.Количество()=1, ", СтруктурнаяЕдиница, Исполнитель, ПоложениеИсполнителя, ПоложениеСтруктурнойЕдиницы", ""));
	
	ВалютаДокумента = Справочники.ВидыЦен.Учетная.ВалютаЦены;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаПорядковОкругления", УправлениеНебольшойФирмойСервер.ТаблицаПорядковОкругления());
	Запрос.УстановитьПараметр("МассивЗаказов", МассивЗаказов);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", Период);
	
	Если ВыборкаШапка.ЗапланированыОперации Тогда
		
		Закрыт = Истина;
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗаказНаПроизводствоОперации.Ссылка КАК ЗаказНаПроизводство,
		|	ЗаказНаПроизводствоОперации.Ссылка.Организация КАК Организация,
		|	ЗаказНаПроизводствоОперации.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|	ЗаказНаПроизводствоОперации.Ссылка.Финиш КАК ДатаЗакрытия,
		|	&Период КАК Период,
		|	ЗаказНаПроизводствоОперации.ЗаказПокупателя КАК ЗаказПокупателя,
		|	ЗаказНаПроизводствоОперации.НомерСтроки КАК НомерСтроки,
		|	ЗаказНаПроизводствоПродукция.Номенклатура КАК Номенклатура,
		|	ЗаказНаПроизводствоПродукция.Характеристика КАК Характеристика,
		|	ЗаказНаПроизводствоОперации.КоличествоПлан КАК Количество,
		|	ЗаказНаПроизводствоПродукция.Спецификация КАК Спецификация,
		|	ЗаказНаПроизводствоПродукция.Партия КАК Партия,
		|	ЗаказНаПроизводствоОперации.Операция КАК Операция,
		|	ЗаказНаПроизводствоОперации.Этап КАК Этап,
		|	ЗаказНаПроизводствоПродукция.ПодразделениеЗавершающегоЭтапа КАК ПодразделениеЗавершающегоЭтапа,
		|	ЗаказНаПроизводствоОперации.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ВЫБОР
		|		КОГДА ЗаказНаПроизводствоОперации.Операция ССЫЛКА Справочник.Номенклатура
		|				И ЗаказНаПроизводствоОперации.Операция <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|			ТОГДА ЗаказНаПроизводствоОперации.Операция.ФиксированнаяСтоимость
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ФиксированнаяСтоимость,
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(ЗаказНаПроизводствоОперации.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
		|			ТОГДА 1
		|		ИНАЧЕ ЗаказНаПроизводствоОперации.ЕдиницаИзмерения.Коэффициент
		|	КОНЕЦ КАК Коэффициент,
		|	ЗаказНаПроизводствоОперации.НормаВремени КАК НормаВремени,
		|	ЗаказНаПроизводствоОперации.КлючСвязи КАК КлючСвязи,
		|	ЗаказНаПроизводствоОперации.Исполнитель КАК Исполнитель,
		|	0 КАК Уровень,
		|	0 КАК Порядок,
		|	ЗаказНаПроизводствоОперации.НомерСтроки КАК НомерСтрокиОперации
		|ПОМЕСТИТЬ Операции
		|ИЗ
		|	Документ.ЗаказНаПроизводство.Операции КАК ЗаказНаПроизводствоОперации
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство.Продукция КАК ЗаказНаПроизводствоПродукция
		|		ПО ЗаказНаПроизводствоОперации.КлючСвязиПродукция = ЗаказНаПроизводствоПродукция.КлючСвязи
		|			И ЗаказНаПроизводствоОперации.Ссылка = ЗаказНаПроизводствоПродукция.Ссылка
		|ГДЕ
		|	ЗаказНаПроизводствоОперации.Ссылка В(&МассивЗаказов)";
		
	Иначе
		
		ПроизводствоСервер.РазузловатьОперации(Запрос, МассивЗаказов, "Продукция");
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗаказНаПроизводствоПродукция.Ссылка КАК ЗаказНаПроизводство,
		|	ЗаказНаПроизводствоПродукция.Ссылка.Организация КАК Организация,
		|	ЗаказНаПроизводствоПродукция.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|	ЗаказНаПроизводствоПродукция.Ссылка.Финиш КАК ДатаЗакрытия,
		|	&Период КАК Период,
		|	ЗаказНаПроизводствоПродукция.ЗаказПокупателя КАК ЗаказПокупателя,
		|	ЗаказНаПроизводствоПродукция.НомерСтроки КАК НомерСтроки,
		|	ЗаказНаПроизводствоПродукция.Номенклатура КАК Номенклатура,
		|	ЗаказНаПроизводствоПродукция.Характеристика КАК Характеристика,
		|	ЗаказНаПроизводствоПродукция.Количество КАК Количество,
		|	ЗаказНаПроизводствоПродукция.Спецификация КАК Спецификация,
		|	ЗаказНаПроизводствоПродукция.Партия КАК Партия,
		|	ТаблицаОпераций.Операция КАК Операция,
		|	ТаблицаОпераций.Этап КАК Этап,
		|	ЗаказНаПроизводствоПродукция.ПодразделениеЗавершающегоЭтапа КАК ПодразделениеЗавершающегоЭтапа,
		|	ВЫБОР
		|		КОГДА ТаблицаОпераций.Операция ССЫЛКА Справочник.Номенклатура
		|			ТОГДА ТаблицаОпераций.Операция.ЕдиницаИзмерения
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)
		|	КОНЕЦ КАК ЕдиницаИзмерения,
		|	ВЫБОР
		|		КОГДА ТаблицаОпераций.Операция ССЫЛКА Справочник.Номенклатура
		|				И ТаблицаОпераций.Операция <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|			ТОГДА ТаблицаОпераций.Операция.ФиксированнаяСтоимость
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ФиксированнаяСтоимость,
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(ЗаказНаПроизводствоПродукция.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
		|			ТОГДА 1
		|		ИНАЧЕ ЗаказНаПроизводствоПродукция.ЕдиницаИзмерения.Коэффициент
		|	КОНЕЦ КАК Коэффициент,
		|	ЕСТЬNULL(ТаблицаОпераций.НормаВремени, 0) * ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(ЗаказНаПроизводствоПродукция.ЕдиницаИзмерения) = ТИП(Справочник.ЕдиницыИзмерения)
		|				И ЗаказНаПроизводствоПродукция.ЕдиницаИзмерения <> ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка)
		|			ТОГДА ЗаказНаПроизводствоПродукция.ЕдиницаИзмерения.Коэффициент
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК НормаВремени,
		|	0 КАК КлючСвязи,
		|	ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка) КАК Исполнитель,
		|	ТаблицаОпераций.Уровень КАК Уровень,
		|	ТаблицаОпераций.Порядок КАК Порядок,
		|	ТаблицаОпераций.НомерСтроки КАК НомерСтрокиОперации
		|ПОМЕСТИТЬ Операции
		|ИЗ
		|	Документ.ЗаказНаПроизводство.Продукция КАК ЗаказНаПроизводствоПродукция
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОпераций КАК ТаблицаОпераций
		|		ПО ЗаказНаПроизводствоПродукция.Спецификация = ТаблицаОпераций.Спецификация
		|ГДЕ
		|	ЗаказНаПроизводствоПродукция.Ссылка В(&МассивЗаказов)
		|	И ЗаказНаПроизводствоПродукция.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))";
		
	КонецЕсли;
	
	Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаПорядковОкругления.Порядок КАК Порядок,
	|	ТаблицаПорядковОкругления.Значение КАК Значение
	|ПОМЕСТИТЬ ТаблицаПорядковОкругления
	|ИЗ
	|	&ТаблицаПорядковОкругления КАК ТаблицаПорядковОкругления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Операции.ЗаказНаПроизводство КАК Основание,
	|	Операции.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|	Операции.Организация КАК Организация,
	|	Операции.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	Операции.Исполнитель КАК Исполнитель,
	|	Операции.ДатаЗакрытия КАК ДатаЗакрытия,
	|	Операции.Период КАК Период,
	|	Операции.ЗаказПокупателя КАК ЗаказПокупателя,
	|	Операции.НомерСтроки КАК НомерСтроки,
	|	Операции.КлючСвязи КАК КлючСвязи,
	|	Операции.Номенклатура КАК Номенклатура,
	|	Операции.Характеристика КАК Характеристика,
	|	Операции.Количество КАК КоличествоПлан,
	|	Операции.Спецификация КАК Спецификация,
	|	Операции.Партия КАК Партия,
	|	Операции.Операция КАК Операция,
	|	Операции.Этап КАК Этап,
	|	Операции.ПодразделениеЗавершающегоЭтапа КАК ПодразделениеЗавершающегоЭтапа,
	|	Операции.ФиксированнаяСтоимость КАК ФиксированнаяСтоимость,
	|	Операции.Коэффициент КАК Коэффициент,
	|	Операции.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Операции.НормаВремени КАК НормаВремени,
	|	(ВЫРАЗИТЬ(ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1), 0) / ЕСТЬNULL(ТаблицаПорядковОкругления.Значение, 0.01) КАК ЧИСЛО(15, 0))) * ЕСТЬNULL(ТаблицаПорядковОкругления.Значение, 0.01) КАК Расценка
	|ИЗ
	|	Операции КАК Операции
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&Период, ВидЦен = ЗНАЧЕНИЕ(Справочник.ВидыЦен.Учетная)) КАК ЦеныНоменклатурыСрезПоследних
	|			ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПорядковОкругления КАК ТаблицаПорядковОкругления
	|			ПО ЦеныНоменклатурыСрезПоследних.ВидЦен.ПорядокОкругления = ТаблицаПорядковОкругления.Порядок
	|		ПО Операции.Операция = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	Операции.ЗаказНаПроизводство,
	|	Операции.НомерСтроки,
	|	Операции.Уровень,
	|	Операции.Порядок,
	|	Операции.НомерСтрокиОперации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказыОстатки.ЗаказНаПроизводство КАК Основание,
	|	ЗаказыОстатки.Номенклатура КАК Номенклатура,
	|	ЗаказыОстатки.Характеристика КАК Характеристика,
	|	ЗаказыОстатки.Операция КАК Операция,
	|	ЗаказыОстатки.Этап КАК Этап,
	|	СУММА(ЗаказыОстатки.КоличествоОстаток) КАК Остаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		Операции.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|		Операции.Номенклатура КАК Номенклатура,
	|		Операции.Характеристика КАК Характеристика,
	|		Операции.Операция КАК Операция,
	|		Операции.Этап КАК Этап,
	|		Операции.Количество * Операции.Коэффициент КАК КоличествоОстаток
	|	ИЗ
	|		Операции КАК Операции
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СдельныеНаряды.ДокументПроизводства,
	|		СдельныеНаряды.Номенклатура,
	|		СдельныеНаряды.Характеристика,
	|		СдельныеНаряды.Операция,
	|		СдельныеНаряды.Этап,
	|		-СдельныеНаряды.КоличествоФактОборот
	|	ИЗ
	|		РегистрНакопления.СдельныеНаряды.Обороты(, , Авто, ДокументПроизводства В(&МассивЗаказов)) КАК СдельныеНаряды
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияДокументаСдельныеНаряды.ДокументПроизводства,
	|		ДвиженияДокументаСдельныеНаряды.Номенклатура,
	|		ДвиженияДокументаСдельныеНаряды.Характеристика,
	|		ДвиженияДокументаСдельныеНаряды.Операция,
	|		ДвиженияДокументаСдельныеНаряды.Этап,
	|		ДвиженияДокументаСдельныеНаряды.КоличествоФакт
	|	ИЗ
	|		РегистрНакопления.СдельныеНаряды КАК ДвиженияДокументаСдельныеНаряды
	|	ГДЕ
	|		ДвиженияДокументаСдельныеНаряды.Регистратор = &Ссылка
	|		И ДвиженияДокументаСдельныеНаряды.ДокументПроизводства В(&МассивЗаказов)) КАК ЗаказыОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказыОстатки.ЗаказНаПроизводство,
	|	ЗаказыОстатки.Номенклатура,
	|	ЗаказыОстатки.Характеристика,
	|	ЗаказыОстатки.Операция,
	|	ЗаказыОстатки.Этап";
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ТаблицаОстатков = МассивРезультатов[2].Выгрузить();
	Выборка = МассивРезультатов[1].Выбрать();
	
	СоответствиеКлючейСвязи = Новый Соответствие;
	ЗаполнитьОперации(Выборка, ТаблицаОстатков, Закрыт, СоответствиеКлючейСвязи);
	
	ЗаполнитьСоставБригадыПоЗаказуНаПроизводство(МассивЗаказов, СоответствиеКлючейСвязи);
	
	ДатаЗакрытия = '0001-01-01';
	Если Закрыт Тогда
		Для каждого СтрокаТабличнойЧасти Из Операции Цикл
			ДатаЗакрытия = Макс(ДатаЗакрытия, СтрокаТабличнойЧасти.Период);
		КонецЦикла; 
	КонецЕсли; 
	
КонецПроцедуры

Процедура ЗаполнитьПоЗаказуНаПроизводствоРазборка(МассивЗаказов)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивЗаказов", МассивЗаказов);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЗаказНаПроизводство.Организация КАК Организация,
	|	ЗаказНаПроизводство.СтруктурнаяЕдиницаОпераций КАК СтруктурнаяЕдиница,
	|	ЗаказНаПроизводство.Исполнитель КАК Исполнитель,
	|	ЗаказНаПроизводство.ЗапланированыОперации КАК ЗапланированыОперации,
	|	МАКСИМУМ(ЗаказНаПроизводство.Финиш) КАК Финиш,
	|	ЗаказНаПроизводство.ПоложениеИсполнителя КАК ПоложениеИсполнителя,
	|	ЗаказНаПроизводство.ПоложениеСтруктурнойЕдиницыОпераций КАК ПоложениеСтруктурнойЕдиницы
	|ИЗ
	|	Документ.ЗаказНаПроизводство КАК ЗаказНаПроизводство
	|ГДЕ
	|	ЗаказНаПроизводство.Ссылка В(&МассивЗаказов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказНаПроизводство.Организация,
	|	ЗаказНаПроизводство.СтруктурнаяЕдиницаОпераций,
	|	ЗаказНаПроизводство.Исполнитель,
	|	ЗаказНаПроизводство.ЗапланированыОперации,
	|	ЗаказНаПроизводство.ПоложениеИсполнителя,
	|	ЗаказНаПроизводство.ПоложениеСтруктурнойЕдиницыОпераций";
	ВыборкаШапка = Запрос.Выполнить().Выбрать();
	ВыборкаШапка.Следующий();
	Период = ?(ЗначениеЗаполнено(ВыборкаШапка.Финиш), ВыборкаШапка.Финиш, ТекущаяДатаСеанса());
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыборкаШапка, "Организация" + ?(МассивЗаказов.Количество()=1, ", СтруктурнаяЕдиница, Исполнитель, ПоложениеИсполнителя, ПоложениеСтруктурнойЕдиницы", ""));
	
	ВалютаДокумента = Справочники.ВидыЦен.Учетная.ВалютаЦены;
	
	ТаблицаСостав = ПустаяТаблицаСостава();
	
	ЗаполнитьТаблицуСостава("ЗаказНаПроизводство", МассивЗаказов, ТаблицаСостав);
	
	ТекСпецификация = Неопределено;
	НомерСтроки = 0;
	ТаблицаСостав.Сортировать("БазоваяСпецификация");
	Для каждого СтрокаСостава Из ТаблицаСостав Цикл
		Если СтрокаСостава.БазоваяСпецификация<>ТекСпецификация Тогда
			НомерСтроки = 0;
			ТекСпецификация = СтрокаСостава.БазоваяСпецификация;
		КонецЕсли;
		НомерСтроки = НомерСтроки+1;
		СтрокаСостава.НомерСтроки = НомерСтроки;
	КонецЦикла; 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаСостав", ТаблицаСостав);
	Запрос.УстановитьПараметр("МассивДокументов", МассивЗаказов);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", Период);
	
	Если ВыборкаШапка.ЗапланированыОперации Тогда
		
		Закрыт = Истина;
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗаказНаПроизводствоОперации.Ссылка КАК ЗаказНаПроизводство,
		|	ЗаказНаПроизводствоОперации.Ссылка.Организация КАК Организация,
		|	ЗаказНаПроизводствоОперации.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|	ЗаказНаПроизводствоОперации.Ссылка.Финиш КАК ДатаЗакрытия,
		|	&Период КАК Период,
		|	ЗаказНаПроизводствоОперации.ЗаказПокупателя КАК ЗаказПокупателя,
		|	ЗаказНаПроизводствоОперации.НомерСтроки КАК НомерСтроки,
		|	ЗаказНаПроизводствоПродукция.Номенклатура КАК Номенклатура,
		|	ЗаказНаПроизводствоПродукция.Характеристика КАК Характеристика,
		|	ЗаказНаПроизводствоОперации.КоличествоПлан КАК Количество,
		|	ЗаказНаПроизводствоПродукция.Спецификация КАК Спецификация,
		|	ЗаказНаПроизводствоПродукция.Партия КАК Партия,
		|	ЗаказНаПроизводствоОперации.Операция КАК Операция,
		|	ЗаказНаПроизводствоОперации.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ВЫБОР
		|		КОГДА ЗаказНаПроизводствоОперации.Операция ССЫЛКА Справочник.Номенклатура
		|				И ЗаказНаПроизводствоОперации.Операция <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|			ТОГДА ЗаказНаПроизводствоОперации.Операция.ФиксированнаяСтоимость
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ФиксированнаяСтоимость,
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(ЗаказНаПроизводствоОперации.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
		|			ТОГДА 1
		|		ИНАЧЕ ЗаказНаПроизводствоОперации.ЕдиницаИзмерения.Коэффициент
		|	КОНЕЦ КАК Коэффициент,
		|	ЗаказНаПроизводствоОперации.НормаВремени КАК НормаВремени,
		|	ЗаказНаПроизводствоОперации.КлючСвязи КАК КлючСвязи,
		|	ЗаказНаПроизводствоОперации.Исполнитель КАК Исполнитель,
		|	ЗаказНаПроизводствоОперации.НомерСтроки КАК НомерСтрокиОперации
		|ПОМЕСТИТЬ Операции
		|ИЗ
		|	Документ.ЗаказНаПроизводство.Операции КАК ЗаказНаПроизводствоОперации
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство.Продукция КАК ЗаказНаПроизводствоПродукция
		|		ПО ЗаказНаПроизводствоОперации.КлючСвязиПродукция = ЗаказНаПроизводствоПродукция.КлючСвязи
		|			И ЗаказНаПроизводствоОперации.Ссылка = ЗаказНаПроизводствоПродукция.Ссылка
		|ГДЕ
		|	ЗаказНаПроизводствоОперации.Ссылка В(&МассивДокументов)";
		
	Иначе
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказНаПроизводствоПродукция.Ссылка КАК ЗаказНаПроизводство,
		|	ЗаказНаПроизводствоПродукция.Ссылка.Организация КАК Организация,
		|	ЗаказНаПроизводствоПродукция.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|	ЗаказНаПроизводствоПродукция.Ссылка.Финиш КАК ДатаЗакрытия,
		|	&Период КАК Период,
		|	ЗаказНаПроизводствоПродукция.Ссылка.ЗаказПокупателя КАК ЗаказПокупателя,
		|	ЗаказНаПроизводствоПродукция.НомерСтроки КАК НомерСтроки,
		|	ЗаказНаПроизводствоПродукция.Номенклатура КАК Номенклатура,
		|	ЗаказНаПроизводствоПродукция.Характеристика КАК Характеристика,
		|	1 КАК Коэффициент,
		|	ЗаказНаПроизводствоПродукция.Количество * ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(ЗаказНаПроизводствоПродукция.ЕдиницаИзмерения) = ТИП(Справочник.ЕдиницыИзмерения)
		|				И ЗаказНаПроизводствоПродукция.ЕдиницаИзмерения <> ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка)
		|			ТОГДА ЗаказНаПроизводствоПродукция.ЕдиницаИзмерения.Коэффициент
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК Количество,
		|	ЗаказНаПроизводствоПродукция.Спецификация КАК Спецификация,
		|	ЗаказНаПроизводствоПродукция.Партия КАК Партия,
		|	СпецификацииОперации.Операция КАК Операция,
		|	ВЫБОР
		|		КОГДА СпецификацииОперации.Операция ССЫЛКА Справочник.Номенклатура
		|				И СпецификацииОперации.Операция <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|			ТОГДА СпецификацииОперации.Операция.ФиксированнаяСтоимость
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ФиксированнаяСтоимость,
		|	СпецификацииОперации.Операция.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ЕСТЬNULL(СпецификацииОперации.НормаВремени, 0) / ЕСТЬNULL(СпецификацииОперации.КоличествоПродукции, 1) КАК НормаВремени,
		|	0 КАК КлючСвязи,
		|	ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка) КАК Исполнитель,
		|	СпецификацииОперации.НомерСтроки КАК НомерСтрокиОперации
		|ПОМЕСТИТЬ Операции
		|ИЗ
		|	Документ.ЗаказНаПроизводство.Продукция КАК ЗаказНаПроизводствоПродукция
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Спецификации.Операции КАК СпецификацииОперации
		|		ПО ЗаказНаПроизводствоПродукция.Спецификация = СпецификацииОперации.Ссылка
		|ГДЕ
		|	ЗаказНаПроизводствоПродукция.Ссылка В(&МассивДокументов)
		|	И ЗаказНаПроизводствоПродукция.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))";
		
	КонецЕсли;
	
	Запрос.Выполнить();
	
	Выборка = ПолучитьВыборкуОперацииРазборка(Запрос);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаказыОстатки.ЗаказНаПроизводство КАК Основание,
	|	ЗаказыОстатки.Номенклатура КАК Номенклатура,
	|	ЗаказыОстатки.Характеристика КАК Характеристика,
	|	ЗаказыОстатки.Операция КАК Операция,
	|	СУММА(ЗаказыОстатки.КоличествоОстаток) КАК Остаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОперацииИСостав.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|		ОперацииИСостав.Номенклатура КАК Номенклатура,
	|		ОперацииИСостав.Характеристика КАК Характеристика,
	|		ОперацииИСостав.Операция КАК Операция,
	|		ОперацииИСостав.Количество * ОперацииИСостав.Коэффициент КАК КоличествоОстаток
	|	ИЗ
	|		ОперацииИСостав КАК ОперацииИСостав
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СдельныеНаряды.ДокументПроизводства,
	|		СдельныеНаряды.Номенклатура,
	|		СдельныеНаряды.Характеристика,
	|		СдельныеНаряды.Операция,
	|		-СдельныеНаряды.КоличествоФактОборот
	|	ИЗ
	|		РегистрНакопления.СдельныеНаряды.Обороты(, , Авто, ДокументПроизводства В (&МассивДокументов)) КАК СдельныеНаряды
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияДокументаСдельныеНаряды.ДокументПроизводства,
	|		ДвиженияДокументаСдельныеНаряды.Номенклатура,
	|		ДвиженияДокументаСдельныеНаряды.Характеристика,
	|		ДвиженияДокументаСдельныеНаряды.Операция,
	|		ДвиженияДокументаСдельныеНаряды.КоличествоФакт
	|	ИЗ
	|		РегистрНакопления.СдельныеНаряды КАК ДвиженияДокументаСдельныеНаряды
	|	ГДЕ
	|		ДвиженияДокументаСдельныеНаряды.Регистратор = &Ссылка
	|		И ДвиженияДокументаСдельныеНаряды.ДокументПроизводства В(&МассивДокументов)) КАК ЗаказыОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказыОстатки.ЗаказНаПроизводство,
	|	ЗаказыОстатки.Номенклатура,
	|	ЗаказыОстатки.Характеристика,
	|	ЗаказыОстатки.Операция";
	ТаблицаОстатков = Запрос.Выполнить().Выгрузить();
	
	СоответствиеКлючейСвязи = Новый Соответствие;
	ЗаполнитьОперации(Выборка, ТаблицаОстатков, Закрыт, СоответствиеКлючейСвязи);
	
	ЗаполнитьСоставБригадыПоЗаказуНаПроизводство(МассивЗаказов, СоответствиеКлючейСвязи);
	
	ДатаЗакрытия = '0001-01-01';
	Если Закрыт Тогда
		Для каждого СтрокаТабличнойЧасти Из Операции Цикл
			ДатаЗакрытия = Макс(ДатаЗакрытия, СтрокаТабличнойЧасти.Период);
		КонецЦикла; 
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик заполнения на основании документа СборкаЗапасов.
//
// Параметры:
//  ДокументСсылкаСборкаЗапасов - ДокументСсылка.СборкаЗапасов.
//
Процедура ЗаполнитьПоСборкеЗапасов(ДокументСсылкаСборкаЗапасов) Экспорт
	
	Если ДокументСсылкаСборкаЗапасов.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Склад Тогда
		ВызватьИсключение НСтр("ru = 'Сдельный наряд не может быть введен на основании производства по складу!'");
	КонецЕсли;
	
	Если ДокументСсылкаСборкаЗапасов.ВидОперации = Перечисления.ВидыОперацийСборкаЗапасов.Сборка Тогда
		ЗаполнитьПоСборкеЗапасовСборка(ДокументСсылкаСборкаЗапасов);
	ИначеЕсли ДокументСсылкаСборкаЗапасов.ВидОперации = Перечисления.ВидыОперацийСборкаЗапасов.Разборка Тогда
		ЗаполнитьПоСборкеЗапасовРазборка(ДокументСсылкаСборкаЗапасов);
	КонецЕсли;
	
	ДокументОснование = ДокументСсылкаСборкаЗапасов;
	Закрыт = Истина;
	
	Если ПоложениеИсполнителя=Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
		// Заполненение состава бригады по умолчанию
		Для каждого СтрокаТабличнойЧасти Из Операции Цикл
			Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.КлючСвязи) Тогда
				УправлениеНебольшойФирмойКлиентСервер.ЗаполнитьКлючСвязи(Операции, СтрокаТабличнойЧасти, "КлючСвязи");
			КонецЕсли; 
			Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.Исполнитель) И ТипЗнч(СтрокаТабличнойЧасти.Исполнитель)=Тип("СправочникСсылка.Бригады") Тогда
				УправлениеНебольшойФирмойКлиентСервер.УдалитьСтрокиПоКлючуСвязи(СоставБригады, СтрокаТабличнойЧасти);
				ТаблицаСостава = Справочники.Бригады.СоставБригады(СтрокаТабличнойЧасти.Исполнитель, Организация, Дата);
				Для каждого СтрокаСостава Из ТаблицаСостава Цикл
					НоваяСтрока = СоставБригады.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаСостава);
					НоваяСтрока.КТУ = 1;
					Если ПоложениеСтруктурнойЕдиницы=Перечисления.ПоложениеРеквизитаНаФорме.ВШапке Тогда
						НоваяСтрока.СтруктурнаяЕдиница = СтруктурнаяЕдиница;
					КонецЕсли;
					НоваяСтрока.КлючСвязи = СтрокаТабличнойЧасти.КлючСвязи;
				КонецЦикла; 
			КонецЕсли; 
		КонецЦикла; 
	КонецЕсли; 
	
КонецПроцедуры

Процедура ЗаполнитьПоСборкеЗапасовСборка(ДокументСсылкаСборкаЗапасов)
	
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылкаСборкаЗапасов,
			"Организация, СтруктурнаяЕдиница, ЗаказНаПроизводство, Дата, ЗаказНаПроизводство.ЗапланированыОперации, ЗаказНаПроизводство.ПоложениеИсполнителя, ЗаказНаПроизводство.Исполнитель");
			
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗначенияРеквизитов);
	ДатаЗакрытия = Дата;
	ПоложениеЗаказаНаПроизводство = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке;
	Период = ?(ЗначениеЗаполнено(ЗначенияРеквизитов.Дата), ЗначенияРеквизитов.Дата, ТекущаяДатаСеанса());
	Если ЗначениеЗаполнено(ЗначенияРеквизитов.ЗаказНаПроизводство) Тогда
		ПоложениеИсполнителя = ЗначенияРеквизитов.ЗаказНаПроизводствоПоложениеИсполнителя;
		Исполнитель = ЗначенияРеквизитов.ЗаказНаПроизводствоИсполнитель;
		Если ПоложениеИсполнителя=Перечисления.ПоложениеРеквизитаНаФорме.ВШапке 
			И ЗначениеЗаполнено(Исполнитель)
			И ТипЗнч(Исполнитель)=Тип("СправочникСсылка.Бригады") Тогда
			СоставБригады.Загрузить(ЗначенияРеквизитов.ЗаказНаПроизводство.СоставБригады.Выгрузить());
		КонецЕсли; 
	КонецЕсли; 
	
	ВалютаДокумента = Справочники.ВидыЦен.Учетная.ВалютаЦены;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Если НЕ ЗначениеЗаполнено(ЗначенияРеквизитов.ЗаказНаПроизводство) ИЛИ ЗначенияРеквизитов.ЗаказНаПроизводствоЗапланированыОперации<>Истина Тогда
		ПроизводствоСервер.РазузловатьОперации(Запрос, ДокументСсылкаСборкаЗапасов, "Продукция");
	Иначе
		ДобавитьТаблицуОперацийПоЗаказуНаПроизводство(Запрос, ЗначенияРеквизитов.ЗаказНаПроизводство);
	КонецЕсли; 
	
	Запрос.УстановитьПараметр("ТаблицаПорядковОкругления", УправлениеНебольшойФирмойСервер.ТаблицаПорядковОкругления());
	Запрос.УстановитьПараметр("ДокументОснование", ДокументСсылкаСборкаЗапасов);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("ЗаказНаПроизводство", ЗначенияРеквизитов.ЗаказНаПроизводство);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаПорядковОкругления.Порядок КАК Порядок,
	|	ТаблицаПорядковОкругления.Значение КАК Значение
	|ПОМЕСТИТЬ ТаблицаПорядковОкругления
	|ИЗ
	|	&ТаблицаПорядковОкругления КАК ТаблицаПорядковОкругления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СборкаЗапасовПродукция.Ссылка.Организация КАК Организация,
	|	СборкаЗапасовПродукция.Ссылка.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВЫБОР
	|		КОГДА СборкаЗапасовПродукция.Ссылка.ЗаказНаПроизводство = ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)
	|			ТОГДА СборкаЗапасовПродукция.Ссылка.Дата
	|		ИНАЧЕ СборкаЗапасовПродукция.Ссылка.ЗаказНаПроизводство.Финиш
	|	КОНЕЦ КАК ДатаЗакрытия,
	|	&Период КАК Период,
	|	СборкаЗапасовПродукция.ЗаказПокупателя КАК ЗаказПокупателя,
	|	СборкаЗапасовПродукция.НомерСтроки КАК НомерСтроки,
	|	СборкаЗапасовПродукция.Номенклатура КАК Номенклатура,
	|	СборкаЗапасовПродукция.Характеристика КАК Характеристика,
	|	СборкаЗапасовПродукция.Количество КАК Количество,
	|	СборкаЗапасовПродукция.Спецификация КАК Спецификация,
	|	ТаблицаОпераций.Операция КАК Операция,
	|	ВЫБОР
	|		КОГДА СборкаЗапасовПродукция.Ссылка.ЗаказНаПроизводство = ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)
	|				И СборкаЗапасовПродукция.ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка)
	|		ИНАЧЕ ТаблицаОпераций.Этап
	|	КОНЕЦ КАК Этап,
	|	ВЫБОР
	|		КОГДА ТаблицаОпераций.Операция ССЫЛКА Справочник.Номенклатура
	|				И ТаблицаОпераций.Операция <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			ТОГДА ТаблицаОпераций.Операция.ЕдиницаИзмерения
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ТаблицаОпераций.Операция ССЫЛКА Справочник.Номенклатура
	|				И ТаблицаОпераций.Операция <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			ТОГДА ТаблицаОпераций.Операция.ФиксированнаяСтоимость
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ФиксированнаяСтоимость,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(СборкаЗапасовПродукция.ЕдиницаИзмерения) = ТИП(Справочник.КлассификаторЕдиницИзмерения)
	|			ТОГДА 1
	|		ИНАЧЕ СборкаЗапасовПродукция.ЕдиницаИзмерения.Коэффициент
	|	КОНЕЦ КАК Коэффициент,
	|	ЕСТЬNULL(ТаблицаОпераций.НормаВремени, 0) * ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(СборкаЗапасовПродукция.ЕдиницаИзмерения) = ТИП(Справочник.ЕдиницыИзмерения)
	|				И СборкаЗапасовПродукция.ЕдиницаИзмерения <> ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА СборкаЗапасовПродукция.ЕдиницаИзмерения.Коэффициент
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК НормаВремени,
	|	ТаблицаОпераций.Уровень КАК Уровень,
	|	ТаблицаОпераций.Порядок КАК Порядок,
	|	ТаблицаОпераций.НомерСтроки КАК НомерСтрокиОперации,
	|	ТаблицаОпераций.Исполнитель КАК Исполнитель
	|ПОМЕСТИТЬ Операции
	|ИЗ
	|	Документ.СборкаЗапасов.Продукция КАК СборкаЗапасовПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОпераций КАК ТаблицаОпераций
	|		ПО СборкаЗапасовПродукция.Спецификация = ТаблицаОпераций.Спецификация
	|ГДЕ
	|	СборкаЗапасовПродукция.Ссылка = &ДокументОснование
	|	И СборкаЗапасовПродукция.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Операции.Организация КАК Организация,
	|	Операции.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	Операции.ДатаЗакрытия КАК ДатаЗакрытия,
	|	Операции.Период КАК Период,
	|	Операции.ЗаказПокупателя КАК ЗаказПокупателя,
	|	Операции.НомерСтроки КАК НомерСтроки,
	|	Операции.Номенклатура КАК Номенклатура,
	|	Операции.Характеристика КАК Характеристика,
	|	Операции.Количество КАК КоличествоПлан,
	|	Операции.Спецификация КАК Спецификация,
	|	Операции.Операция КАК Операция,
	|	Операции.Этап КАК Этап,
	|	Операции.Исполнитель КАК Исполнитель,
	|	Операции.ФиксированнаяСтоимость КАК ФиксированнаяСтоимость,
	|	Операции.Коэффициент КАК Коэффициент,
	|	Операции.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Операции.НормаВремени КАК НормаВремени,
	|	(ВЫРАЗИТЬ(ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1), 0) / ЕСТЬNULL(ТаблицаПорядковОкругления.Значение, 0.01) КАК ЧИСЛО(15, 0))) * ЕСТЬNULL(ТаблицаПорядковОкругления.Значение, 0.01) КАК Расценка
	|ИЗ
	|	Операции КАК Операции
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&Период, ВидЦен = ЗНАЧЕНИЕ(Справочник.ВидыЦен.Учетная)) КАК ЦеныНоменклатурыСрезПоследних
	|			ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПорядковОкругления КАК ТаблицаПорядковОкругления
	|			ПО ЦеныНоменклатурыСрезПоследних.ВидЦен.ПорядокОкругления = ТаблицаПорядковОкругления.Порядок
	|		ПО Операции.Операция = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	Операции.НомерСтроки,
	|	Операции.Уровень,
	|	Операции.Порядок,
	|	Операции.НомерСтрокиОперации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказыОстатки.Номенклатура КАК Номенклатура,
	|	ЗаказыОстатки.Характеристика КАК Характеристика,
	|	ЗаказыОстатки.Операция КАК Операция,
	|	ЗаказыОстатки.Этап КАК Этап,
	|	СУММА(ЗаказыОстатки.КоличествоОстаток) КАК Остаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		Операции.Номенклатура КАК Номенклатура,
	|		Операции.Характеристика КАК Характеристика,
	|		Операции.Операция КАК Операция,
	|		Операции.Этап КАК Этап,
	|		Операции.Количество * Операции.Коэффициент КАК КоличествоОстаток
	|	ИЗ
	|		Операции КАК Операции
	|	ГДЕ
	|		&ЗаказНаПроизводство = ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Продукция.Номенклатура,
	|		Продукция.Характеристика,
	|		Операции.Операция,
	|		Операции.Этап,
	|		Операции.КоличествоПлан
	|	ИЗ
	|		Документ.ЗаказНаПроизводство.Операции КАК Операции
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство.Продукция КАК Продукция
	|			ПО Операции.Ссылка = Продукция.Ссылка
	|				И Операции.КлючСвязиПродукция = Продукция.КлючСвязи
	|	ГДЕ
	|		Операции.Ссылка = &ЗаказНаПроизводство
	|		И Операции.Ссылка.ЗапланированыОперации
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Продукция.Номенклатура,
	|		Продукция.Характеристика,
	|		Операции.Операция,
	|		Операции.Этап,
	|		Продукция.Количество
	|	ИЗ
	|		Документ.ЗаказНаПроизводство.Продукция КАК Продукция
	|			ЛЕВОЕ СОЕДИНЕНИЕ Операции КАК Операции
	|			ПО Продукция.Спецификация = Операции.Спецификация
	|	ГДЕ
	|		Продукция.Ссылка = &ЗаказНаПроизводство
	|		И НЕ Продукция.Ссылка.ЗапланированыОперации
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СдельныеНаряды.Номенклатура,
	|		СдельныеНаряды.Характеристика,
	|		СдельныеНаряды.Операция,
	|		СдельныеНаряды.Этап,
	|		-СдельныеНаряды.КоличествоФактОборот
	|	ИЗ
	|		РегистрНакопления.СдельныеНаряды.Обороты(
	|				,
	|				,
	|				Авто,
	|				ДокументПроизводства = ВЫБОР
	|					КОГДА &ЗаказНаПроизводство = ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)
	|						ТОГДА &ДокументОснование
	|					ИНАЧЕ &ЗаказНаПроизводство
	|				КОНЕЦ) КАК СдельныеНаряды
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияДокументаСдельныеНаряды.Номенклатура,
	|		ДвиженияДокументаСдельныеНаряды.Характеристика,
	|		ДвиженияДокументаСдельныеНаряды.Операция,
	|		ДвиженияДокументаСдельныеНаряды.Этап,
	|		ДвиженияДокументаСдельныеНаряды.КоличествоФакт
	|	ИЗ
	|		РегистрНакопления.СдельныеНаряды КАК ДвиженияДокументаСдельныеНаряды
	|	ГДЕ
	|		ДвиженияДокументаСдельныеНаряды.Регистратор = &Ссылка
	|		И ДвиженияДокументаСдельныеНаряды.ДокументПроизводства = ВЫБОР
	|				КОГДА &ЗаказНаПроизводство = ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)
	|					ТОГДА &ДокументОснование
	|				ИНАЧЕ &ЗаказНаПроизводство
	|			КОНЕЦ) КАК ЗаказыОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказыОстатки.Номенклатура,
	|	ЗаказыОстатки.Характеристика,
	|	ЗаказыОстатки.Операция,
	|	ЗаказыОстатки.Этап";
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ТаблицаОстатков = МассивРезультатов[3].Выгрузить();
	Выборка = МассивРезультатов[2].Выбрать();
	
	ЗаполнитьОперации(Выборка, ТаблицаОстатков, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПоСборкеЗапасовРазборка(ДокументСсылкаСборкаЗапасов)
	
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылкаСборкаЗапасов,
			"Организация, СтруктурнаяЕдиница, ЗаказНаПроизводство, Дата, ЗаказНаПроизводство.ЗапланированыОперации, ЗаказНаПроизводство.ПоложениеИсполнителя, ЗаказНаПроизводство.Исполнитель");
			
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗначенияРеквизитов);
	ДатаЗакрытия = Дата;
	ПоложениеЗаказаНаПроизводство = Перечисления.ПоложениеРеквизитаНаФорме.ВШапке;
	Период = ?(ЗначениеЗаполнено(ЗначенияРеквизитов.Дата), ЗначенияРеквизитов.Дата, ТекущаяДатаСеанса());
	Если ЗначениеЗаполнено(ЗначенияРеквизитов.ЗаказНаПроизводство) Тогда
		ПоложениеИсполнителя = ЗначенияРеквизитов.ЗаказНаПроизводствоПоложениеИсполнителя;
		Исполнитель = ЗначенияРеквизитов.ЗаказНаПроизводствоИсполнитель;
		Если ПоложениеИсполнителя=Перечисления.ПоложениеРеквизитаНаФорме.ВШапке
			И ЗначениеЗаполнено(Исполнитель)
			И ТипЗнч(Исполнитель)=Тип("СправочникСсылка.Бригады") Тогда
			СоставБригады.Загрузить(ЗначенияРеквизитов.ЗаказНаПроизводство.СоставБригады.Выгрузить());
		КонецЕсли; 
	КонецЕсли; 
	
	ВалютаДокумента = Справочники.ВидыЦен.Учетная.ВалютаЦены;
	
	ТаблицаСостав = ПустаяТаблицаСостава();
	МассивДокументов = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ДокументСсылкаСборкаЗапасов);
	
	ЗаполнитьТаблицуСостава("СборкаЗапасов", МассивДокументов, ТаблицаСостав);
	
	ТекСпецификация = Неопределено;
	НомерСтроки = 0;
	ТаблицаСостав.Сортировать("БазоваяСпецификация");
	Для каждого СтрокаСостава Из ТаблицаСостав Цикл
		Если СтрокаСостава.БазоваяСпецификация<>ТекСпецификация Тогда
			НомерСтроки = 0;
			ТекСпецификация = СтрокаСостава.БазоваяСпецификация;
		КонецЕсли;
		НомерСтроки = НомерСтроки+1;
		СтрокаСостава.НомерСтроки = НомерСтроки;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Если НЕ ЗначениеЗаполнено(ЗначенияРеквизитов.ЗаказНаПроизводство) ИЛИ ЗначенияРеквизитов.ЗаказНаПроизводствоЗапланированыОперации<>Истина Тогда
		ПроизводствоСервер.РазузловатьОперации(Запрос, ДокументСсылкаСборкаЗапасов, "Продукция");
	Иначе
		ДобавитьТаблицуОперацийПоЗаказуНаПроизводство(Запрос, ЗначенияРеквизитов.ЗаказНаПроизводство);
	КонецЕсли; 
	
	Запрос.УстановитьПараметр("ТаблицаСостав", ТаблицаСостав);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументСсылкаСборкаЗапасов);
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СборкаЗапасовПродукция.Ссылка КАК ЗаказНаПроизводство,
	|	СборкаЗапасовПродукция.Ссылка.Организация КАК Организация,
	|	СборкаЗапасовПродукция.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	СборкаЗапасовПродукция.Ссылка.Дата КАК ДатаЗакрытия,
	|	&Период КАК Период,
	|	СборкаЗапасовПродукция.Ссылка.ЗаказПокупателя КАК ЗаказПокупателя,
	|	СборкаЗапасовПродукция.НомерСтроки КАК НомерСтроки,
	|	СборкаЗапасовПродукция.Номенклатура КАК Номенклатура,
	|	СборкаЗапасовПродукция.Характеристика КАК Характеристика,
	|	1 КАК Коэффициент,
	|	СборкаЗапасовПродукция.Количество * ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(СборкаЗапасовПродукция.ЕдиницаИзмерения) = ТИП(Справочник.ЕдиницыИзмерения)
	|				И СборкаЗапасовПродукция.ЕдиницаИзмерения <> ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА СборкаЗапасовПродукция.ЕдиницаИзмерения.Коэффициент
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Количество,
	|	СборкаЗапасовПродукция.Спецификация КАК Спецификация,
	|	СборкаЗапасовПродукция.Партия КАК Партия,
	|	Операции.Операция КАК Операция,
	|	ВЫБОР
	|		КОГДА Операции.Операция ССЫЛКА Справочник.Номенклатура
	|				И Операции.Операция <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			ТОГДА Операции.Операция.ФиксированнаяСтоимость
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ФиксированнаяСтоимость,
	|	Операции.Операция.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ЕСТЬNULL(Операции.НормаВремени, 0) КАК НормаВремени,
	|	0 КАК КлючСвязи,
	|	Операции.НомерСтроки КАК НомерСтрокиОперации,
	|	Операции.Исполнитель КАК Исполнитель
	|ПОМЕСТИТЬ Операции
	|ИЗ
	|	Документ.СборкаЗапасов.Продукция КАК СборкаЗапасовПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОпераций КАК Операции
	|		ПО СборкаЗапасовПродукция.Спецификация = Операции.Спецификация
	|ГДЕ
	|	СборкаЗапасовПродукция.Ссылка В(&МассивДокументов)";
	Запрос.Выполнить();
	
	Выборка = ПолучитьВыборкуОПерацииРазборка(Запрос);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаказыОстатки.Номенклатура КАК Номенклатура,
	|	ЗаказыОстатки.Характеристика КАК Характеристика,
	|	ЗаказыОстатки.Операция КАК Операция,
	|	СУММА(ЗаказыОстатки.КоличествоОстаток) КАК Остаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОперацииИСостав.Номенклатура КАК Номенклатура,
	|		ОперацииИСостав.Характеристика КАК Характеристика,
	|		ОперацииИСостав.Операция КАК Операция,
	|		ОперацииИСостав.Количество * ОперацииИСостав.Коэффициент КАК КоличествоОстаток
	|	ИЗ
	|		ОперацииИСостав КАК ОперацииИСостав
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СдельныеНаряды.Номенклатура,
	|		СдельныеНаряды.Характеристика,
	|		СдельныеНаряды.Операция,
	|		-СдельныеНаряды.КоличествоФактОборот
	|	ИЗ
	|		РегистрНакопления.СдельныеНаряды.Обороты(
	|				,
	|				,
	|				Авто,
	|				ДокументПроизводства = ВЫБОР
	|					КОГДА ВЫРАЗИТЬ(&ДокументОснование КАК Документ.СборкаЗапасов).ЗаказНаПроизводство = ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)
	|						ТОГДА &ДокументОснование
	|					ИНАЧЕ ВЫРАЗИТЬ(&ДокументОснование КАК Документ.СборкаЗапасов).ЗаказНаПроизводство
	|				КОНЕЦ) КАК СдельныеНаряды
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияДокументаСдельныеНаряды.Номенклатура,
	|		ДвиженияДокументаСдельныеНаряды.Характеристика,
	|		ДвиженияДокументаСдельныеНаряды.Операция,
	|		ДвиженияДокументаСдельныеНаряды.КоличествоФакт
	|	ИЗ
	|		РегистрНакопления.СдельныеНаряды КАК ДвиженияДокументаСдельныеНаряды
	|	ГДЕ
	|		ДвиженияДокументаСдельныеНаряды.Регистратор = &Ссылка
	|		И ДвиженияДокументаСдельныеНаряды.ДокументПроизводства = ВЫБОР
	|				КОГДА ВЫРАЗИТЬ(&ДокументОснование КАК Документ.СборкаЗапасов).ЗаказНаПроизводство = ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)
	|					ТОГДА &ДокументОснование
	|				ИНАЧЕ ВЫРАЗИТЬ(&ДокументОснование КАК Документ.СборкаЗапасов).ЗаказНаПроизводство
	|			КОНЕЦ) КАК ЗаказыОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказыОстатки.Номенклатура,
	|	ЗаказыОстатки.Характеристика,
	|	ЗаказыОстатки.Операция";
	ТаблицаОстатков = Запрос.Выполнить().Выгрузить();
	
	ЗаполнитьОперации(Выборка, ТаблицаОстатков, Истина);
	
КонецПроцедуры

Функция ПолучитьВыборкуОПерацииРазборка(Запрос)
	
	Запрос.УстановитьПараметр("ТаблицаПорядковОкругления", УправлениеНебольшойФирмойСервер.ТаблицаПорядковОкругления());
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаПорядковОкругления.Порядок КАК Порядок,
	|	ТаблицаПорядковОкругления.Значение КАК Значение
	|ПОМЕСТИТЬ ТаблицаПорядковОкругления
	|ИЗ
	|	&ТаблицаПорядковОкругления КАК ТаблицаПорядковОкругления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСостав.БазоваяСпецификация КАК БазоваяСпецификация,
	|	ТаблицаСостав.НомерСтроки КАК НомерСтроки,
	|	ТаблицаСостав.Номенклатура КАК Номенклатура,
	|	ТаблицаСостав.Характеристика КАК Характеристика,
	|	ТаблицаСостав.Спецификация КАК Спецификация,
	|	ТаблицаСостав.Количество КАК Количество,
	|	ТаблицаСостав.ДоляСтоимости КАК ДоляСтоимости
	|ПОМЕСТИТЬ ТаблицаСостав
	|ИЗ
	|	&ТаблицаСостав КАК ТаблицаСостав
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСостав.БазоваяСпецификация КАК Спецификация,
	|	СУММА(ТаблицаСостав.ДоляСтоимости) КАК ДоляСтоимости
	|ПОМЕСТИТЬ ИтогиСпецификации
	|ИЗ
	|	ТаблицаСостав КАК ТаблицаСостав
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСостав.БазоваяСпецификация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Операции.ЗаказНаПроизводство КАК Основание,
	|	Операции.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|	Операции.Период КАК Период,
	|	Операции.Организация КАК Организация,
	|	Операции.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	Операции.Исполнитель КАК Исполнитель,
	|	Операции.ДатаЗакрытия КАК ДатаЗакрытия,
	|	Операции.КлючСвязи КАК КлючСвязи,
	|	Операции.ЗаказПокупателя КАК ЗаказПокупателя,
	|	Операции.НомерСтроки КАК НомерСтроки,
	|	Операции.НомерСтрокиОперации КАК НомерСтрокиОперации,
	|	ЕСТЬNULL(ТаблицаСостав.НомерСтроки, 1) КАК НомерСтрокиСостава,
	|	ЕСТЬNULL(ТаблицаСостав.Номенклатура, Операции.Номенклатура) КАК Номенклатура,
	|	ЕСТЬNULL(ТаблицаСостав.Характеристика, Операции.Характеристика) КАК Характеристика,
	|	Операции.Коэффициент КАК Коэффициент,
	|	Операции.Количество * ЕСТЬNULL(ТаблицаСостав.Количество, 1) КАК Количество,
	|	Операции.Спецификация КАК Спецификация,
	|	Операции.Партия КАК Партия,
	|	Операции.Операция КАК Операция,
	|	Операции.ФиксированнаяСтоимость КАК ФиксированнаяСтоимость,
	|	Операции.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ЕСТЬNULL(ТаблицаСостав.Количество, 1) = 0
	|				ТОГДА 0
	|			ИНАЧЕ Операции.НормаВремени / ЕСТЬNULL(ТаблицаСостав.Количество, 1) * ЕСТЬNULL(ВЫБОР
	|						КОГДА ИтогиСпецификации.ДоляСтоимости = 0
	|							ТОГДА 1
	|						ИНАЧЕ ТаблицаСостав.ДоляСтоимости / ИтогиСпецификации.ДоляСтоимости
	|					КОНЕЦ, 1)
	|		КОНЕЦ КАК ЧИСЛО(15, 3)) КАК НормаВремени
	|ПОМЕСТИТЬ ОперацииИСостав
	|ИЗ
	|	Операции КАК Операции
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСостав КАК ТаблицаСостав
	|			ЛЕВОЕ СОЕДИНЕНИЕ ИтогиСпецификации КАК ИтогиСпецификации
	|			ПО ТаблицаСостав.БазоваяСпецификация = ИтогиСпецификации.Спецификация
	|		ПО Операции.Спецификация = ТаблицаСостав.БазоваяСпецификация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИтогиНормы.Спецификация КАК Спецификация,
	|	(ИтогиНормы.НормаВремени - ЕСТЬNULL(ВложенныйЗапрос.НормаВремени, 0)) / ЕСТЬNULL(СтрокаСМинимальнымКоличеством.Количество, 1) КАК НормаВремени,
	|	ЕСТЬNULL(СтрокаСМинимальнымКоличеством.НомерСтроки, 1) КАК НомерСтроки
	|ПОМЕСТИТЬ РасхождениеНормы
	|ИЗ
	|	(ВЫБРАТЬ
	|		Операции.Спецификация КАК Спецификация,
	|		СУММА(Операции.НормаВремени) КАК НормаВремени
	|	ИЗ
	|		Операции КАК Операции
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Операции.Спецификация) КАК ИтогиНормы
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ОперацииИСостав.Спецификация КАК Спецификация,
	|			СУММА(ВЫРАЗИТЬ(ОперацииИСостав.НормаВремени * ОперацииИСостав.Количество КАК ЧИСЛО(15, 3))) КАК НормаВремени,
	|			МАКСИМУМ(ОперацииИСостав.НомерСтрокиСостава) КАК НомерСтроки
	|		ИЗ
	|			ОперацииИСостав КАК ОперацииИСостав
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ОперацииИСостав.Спецификация) КАК ВложенныйЗапрос
	|		ПО ИтогиНормы.Спецификация = ВложенныйЗапрос.Спецификация,
	|	(ВЫБРАТЬ
	|		МинимальноеКоличество.Количество КАК Количество,
	|		МАКСИМУМ(ТаблицаСостав.НомерСтроки) КАК НомерСтроки
	|	ИЗ
	|		(ВЫБРАТЬ
	|			МИНИМУМ(ТаблицаСостав.Количество) КАК Количество
	|		ИЗ
	|			ТаблицаСостав КАК ТаблицаСостав
	|		ГДЕ
	|			ТаблицаСостав.Количество <> 0) КАК МинимальноеКоличество
	|			ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСостав КАК ТаблицаСостав
	|			ПО МинимальноеКоличество.Количество = ТаблицаСостав.Количество
	|	
	|	СГРУППИРОВАТЬ ПО
	|		МинимальноеКоличество.Количество) КАК СтрокаСМинимальнымКоличеством
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОперацииИСостав.Основание КАК Основание,
	|	ОперацииИСостав.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|	ОперацииИСостав.Период КАК Период,
	|	ОперацииИСостав.Организация КАК Организация,
	|	ОперацииИСостав.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ОперацииИСостав.Исполнитель КАК Исполнитель,
	|	ОперацииИСостав.ДатаЗакрытия КАК ДатаЗакрытия,
	|	ОперацииИСостав.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ОперацииИСостав.Номенклатура КАК Номенклатура,
	|	ОперацииИСостав.Характеристика КАК Характеристика,
	|	ОперацииИСостав.Коэффициент КАК Коэффициент,
	|	ОперацииИСостав.Количество КАК КоличествоПлан,
	|	ОперацииИСостав.Спецификация КАК Спецификация,
	|	ОперацииИСостав.Партия КАК Партия,
	|	ОперацииИСостав.Операция КАК Операция,
	|	ОперацииИСостав.ФиксированнаяСтоимость КАК ФиксированнаяСтоимость,
	|	ОперацииИСостав.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ОперацииИСостав.НормаВремени + ЕСТЬNULL(РасхождениеНормы.НормаВремени, 0) КАК НормаВремени,
	|	(ВЫРАЗИТЬ(ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1), 0) / ЕСТЬNULL(ТаблицаПорядковОкругления.Значение, 0.01) КАК ЧИСЛО(15, 0))) * ЕСТЬNULL(ТаблицаПорядковОкругления.Значение, 0.01) КАК Расценка
	|ИЗ
	|	ОперацииИСостав КАК ОперацииИСостав
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&Период, ВидЦен = ЗНАЧЕНИЕ(Справочник.ВидыЦен.Учетная)) КАК ЦеныНоменклатурыСрезПоследних
	|			ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПорядковОкругления КАК ТаблицаПорядковОкругления
	|			ПО ЦеныНоменклатурыСрезПоследних.ВидЦен.ПорядокОкругления = ТаблицаПорядковОкругления.Порядок
	|		ПО ОперацииИСостав.Операция = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РасхождениеНормы КАК РасхождениеНормы
	|		ПО ОперацииИСостав.Спецификация = РасхождениеНормы.Спецификация
	|			И ОперацииИСостав.НомерСтрокиСостава = РасхождениеНормы.НомерСтроки
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОперацииИСостав.ЗаказНаПроизводство,
	|	ОперацииИСостав.НомерСтроки,
	|	ОперацииИСостав.НомерСтрокиОперации";
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

// В обработчике события ОбработкаЗаполнения документа выполняется
// - заполнение документа по инвентаризации запасов на складе.
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ПоложениеИсполнителя=Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
		СоставБригады.Очистить();
	КонецЕсли; 
	
	ВалютаДокумента = Справочники.ВидыЦен.Учетная.ВалютаЦены;
	
	СтратегияЗаполнения = Новый Соответствие;
	СтратегияЗаполнения[Тип("Структура")] = "ЗаполнитьПоСтруктуре";
	СтратегияЗаполнения[Тип("ДокументСсылка.ЗаказПокупателя")] = "ЗаполнитьПоЗаказуПокупателя";
	СтратегияЗаполнения[Тип("ДокументСсылка.ЗаказНаПроизводство")] = "ЗаполнитьПоЗаказуНаПроизводство";
	СтратегияЗаполнения[Тип("ДокументСсылка.СборкаЗапасов")] = "ЗаполнитьПоСборкеЗапасов";
	
	Если Константы.ФункциональнаяОпцияРезервированиеЗапасов.Получить() Тогда
		ИсключаяСвойства = "";
	Иначе
		ИсключаяСвойства = "ЗаказПокупателя";
	КонецЕсли;
	
	ЗаполнениеОбъектовУНФ.ЗаполнитьДокумент(ЭтотОбъект, ДанныеЗаполнения, СтратегияЗаполнения, ИсключаяСвойства);
	
КонецПроцедуры // ОбработкаЗаполнения()

// Процедура - обработчик события ОбработкаПроверкиЗаполнения объекта.
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ОбменДанными.Загрузка Тогда
	
		Возврат;
		
	КонецЕсли;
	
	Если Закрыт Тогда
		
		ПроверяемыеРеквизиты.Добавить("ДатаЗакрытия");
	
	КонецЕсли;
		
	Если ПоложениеИсполнителя = Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
		ПроверяемыеРеквизиты.Добавить("Операции.Исполнитель");
	Иначе
		ПроверяемыеРеквизиты.Добавить("Исполнитель");
	КонецЕсли;
		
	Если ПоложениеСтруктурнойЕдиницы = Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
		ПроверяемыеРеквизиты.Добавить("СоставБригады.СтруктурнаяЕдиница");
	Иначе
		ПроверяемыеРеквизиты.Добавить("СтруктурнаяЕдиница");
	КонецЕсли;
	
	НоменклатураВДокументахСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект, Отказ, Истина);
	
	// Проверка заполнения состава
	Если ПоложениеИсполнителя = Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("СоставБригады", СоставБригады.Выгрузить());
		Запрос.УстановитьПараметр("Операции", Операции.Выгрузить());
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Операции.НомерСтроки КАК НомерСтроки,
		|	Операции.КлючСвязи КАК КлючСвязи
		|ПОМЕСТИТЬ Операции
		|ИЗ
		|	&Операции КАК Операции
		|ГДЕ
		|	Операции.Исполнитель ССЫЛКА Справочник.Бригады
		|	И Операции.КлючСвязи <> 0
		|	И Операции.Исполнитель <> ЗНАЧЕНИЕ(Справочник.Бригады.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СоставБригады.Сотрудник КАК Сотрудник,
		|	СоставБригады.КлючСвязи КАК КлючСвязи
		|ПОМЕСТИТЬ СоставБригады
		|ИЗ
		|	&СоставБригады КАК СоставБригады
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Операции.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	Операции КАК Операции
		|		ЛЕВОЕ СОЕДИНЕНИЕ СоставБригады КАК СоставБригады
		|		ПО Операции.КлючСвязи = СоставБригады.КлючСвязи
		|ГДЕ
		|	СоставБригады.Сотрудник ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	Операции.НомерСтроки";
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Не заполнен состав бригады в строке %1'"), Выборка.НомерСтроки);
			УправлениеНебольшойФирмойСервер.СообщитьОбОшибке(ЭтотОбъект, ТекстСообщения, "Операции", Выборка.НомерСтроки, "Исполнитель", Отказ);
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(Исполнитель)=Тип("СправочникСсылка.Бригады") И СоставБригады.Количество()=0 Тогда
		
		ТекстСообщения = НСтр("ru = 'Не заполнен состав бригады'");
		УправлениеНебольшойФирмойСервер.СообщитьОбОшибке(ЭтотОбъект, ТекстСообщения, , , "СоставБригады", Отказ);
		
	КонецЕсли; 
		
КонецПроцедуры

// Процедура - обработчик события ПередЗаписью объекта.
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ПоложениеЗаказаНаПроизводство=Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
		ЗаказНаПроизводство = ЗаказНаПроизводствоШапки();
	Иначе
		Для каждого СтрокаТабличнойЧасти Из Операции Цикл
			СтрокаТабличнойЧасти.ЗаказНаПроизводство = ЗаказНаПроизводство;
		КонецЦикла; 
	КонецЕсли;
	
	Если ПоложениеСтруктурнойЕдиницы=Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
		СтруктурнаяЕдиница = СтруктурнаяЕдиницаШапки();
	Иначе
		Для каждого СтрокаТабличнойЧасти Из Операции Цикл
			СтрокаТабличнойЧасти.СтруктурнаяЕдиница = СтруктурнаяЕдиница;
		КонецЦикла; 
		Для каждого СтрокаТабличнойЧасти Из СоставБригады Цикл
			СтрокаТабличнойЧасти.СтруктурнаяЕдиница = СтруктурнаяЕдиница;
		КонецЦикла; 
	КонецЕсли; 
	
	СуммаДокумента = Операции.Итог("Стоимость");
	
	ОбновитьПредставления();
	
КонецПроцедуры // ПередЗаписью()

// Процедура - обработчик события ОбработкаЗаполнения объекта.
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	// Этапы производства
	ПроверитьЗаполнениеЭтаповПроизводства(Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли; 

	// Дополнительная проверка на заполненность структурной единицы в ТЧ Операции, где это необходимо
	Если ПоложениеСтруктурнойЕдиницы = Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
		Для каждого СтрокаТабличнойЧасти Из Операции Цикл
			Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.Исполнитель) И ТипЗнч(СтрокаТабличнойЧасти.Исполнитель)=Тип("СправочникСсылка.Сотрудники") И НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.СтруктурнаяЕдиница) Тогда
				ОбщегоНазначения.СообщитьПользователю(
				НСтр("ru = 'Не заполнена колонка ""Подразделение""'"),,
				СтрШаблон("Объект.Операции[%1].СтруктурнаяЕдиница", Операции.Индекс(СтрокаТабличнойЧасти)),,
				Отказ);
			КонецЕсли; 
		КонецЦикла; 
	КонецЕсли;
	Если Отказ Тогда
		Возврат;
	КонецЕсли; 
	
	// Инициализация дополнительных свойств для проведения документа
	УправлениеНебольшойФирмойСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Инициализация данных документа
	Документы.СдельныйНаряд.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	УправлениеНебольшойФирмойСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение в разделах учета
	УправлениеНебольшойФирмойСервер.ОтразитьНачисленияИУдержания(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьРасчетыСПерсоналом(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьЗапасы(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьСдельныеНаряды(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьУправленческий(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьЗаказыНаПроизводство(ДополнительныеСвойства, Движения, Отказ);
	УправлениеНебольшойФирмойСервер.ОтразитьЭтапыПроизводства(ДополнительныеСвойства, Движения, Отказ);

	// Запись наборов записей
	УправлениеНебольшойФирмойСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	// Контроль
	Документы.СдельныйНаряд.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ);
	
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
	
КонецПроцедуры // ОбработкаПроведения()

// Процедура - обработчик события ОбработкаУдаленияПроведения объекта.
//
Процедура ОбработкаУдаленияПроведения(Отказ)

	// Этапы производства
	ПроверитьЗаполнениеЭтаповПроизводства(Отказ, Истина);
	Если Отказ Тогда
		Возврат;
	КонецЕсли; 

	// Инициализация дополнительных свойств для проведения документа
	УправлениеНебольшойФирмойСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	УправлениеНебольшойФирмойСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	УправлениеНебольшойФирмойСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
КонецПроцедуры // ОбработкаУдаленияПроведения()

#КонецОбласти

#Область ПрограммныйИнтерфейс

Процедура ОбновитьПредставления() Экспорт
	
	Если ПоложениеИсполнителя=Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
		ИсполнительПредставление = "";
		Для каждого СтрокаТабличнойЧасти Из Операции Цикл
			ТекИсполнитель = СокрЛП(Строка(СтрокаТабличнойЧасти.Исполнитель));
			Если ПустаяСтрока(ТекИсполнитель) Тогда
				Продолжить;
			КонецЕсли;
			Если Найти(ИсполнительПредставление, ТекИсполнитель+Символы.ПС)>0 Тогда
				Продолжить;
			КонецЕсли; 
			ИсполнительПредставление = ИсполнительПредставление+ТекИсполнитель+Символы.ПС;
		КонецЦикла;
		ИсполнительПредставление = СокрЛП(ИсполнительПредставление);
	Иначе
		ИсполнительПредставление = Строка(Исполнитель);
	КонецЕсли; 
	
	Если ПоложениеСтруктурнойЕдиницы=Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
		СтруктурнаяЕдиницаПредставление = "";
		Для каждого СтрокаТабличнойЧасти Из Операции Цикл
			Если ПоложениеИсполнителя=Перечисления.ПоложениеРеквизитаНаФорме.ВШапке И ТипЗнч(Исполнитель)=Тип("СправочникСсылка.Бригады") Тогда
				Прервать;
			КонецЕсли;
			Если ТипЗнч(СтрокаТабличнойЧасти.Исполнитель)=Тип("СправочникСсылка.Бригады") Тогда
				Продолжить;
			КонецЕсли; 
			ТекСтруктурнаяЕдиница = СокрЛП(Строка(СтрокаТабличнойЧасти.СтруктурнаяЕдиница));
			Если ПустаяСтрока(ТекСтруктурнаяЕдиница) Тогда
				Продолжить;
			КонецЕсли;
			Если Найти(СтруктурнаяЕдиницаПредставление, ТекСтруктурнаяЕдиница+Символы.ПС)>0 Тогда
				Продолжить;
			КонецЕсли; 
			СтруктурнаяЕдиницаПредставление = СтруктурнаяЕдиницаПредставление+ТекСтруктурнаяЕдиница+Символы.ПС;
		КонецЦикла;
		Для каждого СтрокаТабличнойЧасти Из СоставБригады Цикл
			ТекСтруктурнаяЕдиница = СокрЛП(Строка(СтрокаТабличнойЧасти.СтруктурнаяЕдиница));
			Если ПустаяСтрока(ТекСтруктурнаяЕдиница) Тогда
				Продолжить;
			КонецЕсли;
			Если Найти(СтруктурнаяЕдиницаПредставление, ТекСтруктурнаяЕдиница+Символы.ПС)>0 Тогда
				Продолжить;
			КонецЕсли; 
			СтруктурнаяЕдиницаПредставление = СтруктурнаяЕдиницаПредставление+ТекСтруктурнаяЕдиница+Символы.ПС;
		КонецЦикла;
		СтруктурнаяЕдиницаПредставление = СокрЛП(СтруктурнаяЕдиницаПредставление);
	Иначе
		СтруктурнаяЕдиницаПредставление = Строка(СтруктурнаяЕдиница);
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

Функция ЗаказНаПроизводствоШапки()
	
	ТекЗаказНаПроизводство = ЗаказНаПроизводство;
	
	Если Операции.Количество()=0 Тогда
		Возврат ТекЗаказНаПроизводство;
	КонецЕсли; 
	
	ТекЗаказНаПроизводство = Операции[0].ЗаказНаПроизводство;
	
	Если Операции.Количество()=1 Тогда
		Возврат ТекЗаказНаПроизводство;
	КонецЕсли; 
	
	ТаблицаЗаказы = Операции.Выгрузить(, "ЗаказНаПроизводство");
	ТаблицаЗаказы.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	Для Каждого ТекСтрока Из ТаблицаЗаказы Цикл
		ТекСтрока.Количество = 1;
	КонецЦикла;
	ТаблицаЗаказы.Свернуть("ЗаказНаПроизводство", "Количество");
	
	Если ТаблицаЗаказы.Количество() < 2 Тогда
		Возврат ТекЗаказНаПроизводство;
	КонецЕсли;
	
	ТаблицаЗаказы.Сортировать("Количество Убыв");
	
	Если ТаблицаЗаказы[0].Количество = ТаблицаЗаказы[1].Количество Тогда
		Возврат ТекЗаказНаПроизводство;
	КонецЕсли;
	
	ТекЗаказНаПроизводство = ТаблицаЗаказы[0].ЗаказНаПроизводство;
	
	Возврат ТекЗаказНаПроизводство;
	
КонецФункции

Функция СтруктурнаяЕдиницаШапки()
	
	ТекСтруктурнаяЕдиница = СтруктурнаяЕдиница;
	
	Если Операции.Количество()=0 Тогда
		Возврат ТекСтруктурнаяЕдиница;
	КонецЕсли; 
	
	ТекСтруктурнаяЕдиница = Операции[0].СтруктурнаяЕдиница;
	
	Если Операции.Количество()=1 Тогда
		Возврат ТекСтруктурнаяЕдиница;
	КонецЕсли; 
	
	ТаблицаСтруктурныеЕдиницы = Операции.Выгрузить(, "СтруктурнаяЕдиница");
	ТаблицаСтруктурныеЕдиницы.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	ТаблицаСтруктурныеЕдиницы.ЗаполнитьЗначения(1, "Количество");
	ТаблицаСтруктурныеЕдиницы.Свернуть("СтруктурнаяЕдиница", "Количество");
	
	Если ТаблицаСтруктурныеЕдиницы.Количество() < 2 Тогда
		Возврат ТекСтруктурнаяЕдиница;
	КонецЕсли;
	
	ТаблицаСтруктурныеЕдиницы.Сортировать("Количество Убыв");
	
	Если ТаблицаСтруктурныеЕдиницы[0].Количество = ТаблицаСтруктурныеЕдиницы[1].Количество Тогда
		Возврат ТекСтруктурнаяЕдиница;
	КонецЕсли;
	
	ТекСтруктурнаяЕдиница = ТаблицаСтруктурныеЕдиницы[0].СтруктурнаяЕдиница;
	
	Возврат ТекСтруктурнаяЕдиница;
	
КонецФункции

Функция ПустаяТаблицаСостава()
	
	ТаблицаСостав = Новый ТаблицаЗначений;
	
	ТаблицаСостав.Колонки.Добавить("БазоваяСпецификация", Новый ОписаниеТипов("СправочникСсылка.Спецификации"));
	ТаблицаСостав.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число"));
	ТаблицаСостав.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаСостав.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	ТаблицаСостав.Колонки.Добавить("Спецификация", Новый ОписаниеТипов("СправочникСсылка.Спецификации"));
	ТаблицаСостав.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	ТаблицаСостав.Колонки.Добавить("ДоляСтоимости", Новый ОписаниеТипов("Число"));
	
	Возврат ТаблицаСостав;
	
КонецФункции

Процедура ПроверитьЗаполнениеЭтаповПроизводства(Отказ, ОтменаПроведения = Ложь)
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьЭтапыПроизводства") Тогда
		Возврат;
	КонецЕсли;
	
	// Формирование таблицы продукции, использующей этапы производства
	ИменаКолонок = "НомерСтроки, Номенклатура, Характеристика, Партия, Спецификация, ЗаказПокупателя, ЗаказНаПроизводство, Этап, ПодразделениеЗавершающегоЭтапа, КоличествоФакт";
	Если ОтменаПроведения Тогда
		ТаблицаПродукции = Операции.ВыгрузитьКолонки(ИменаКолонок);
	Иначе
		ТаблицаПродукции = Операции.Выгрузить(, ИменаКолонок);
	КонецЕсли; 
	ТаблицаПродукции.Колонки.Добавить("ИмяТЧ", Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(100)));
	ТаблицаПродукции.ЗаполнитьЗначения("Операции", "ИмяТЧ");
	ТаблицаПродукции.Колонки.КоличествоФакт.Имя = "Количество";
	Если ПоложениеЗаказаНаПроизводство<>Перечисления.ПоложениеРеквизитаНаФорме.ВТабличнойЧасти Тогда
		ТаблицаПродукции.ЗаполнитьЗначения(ЗаказНаПроизводство, "ЗаказНаПроизводство");
	КонецЕсли;
	МассивСпецификаций = Новый Массив;
	Для каждого СтрокаТабличнойЧасти Из ТаблицаПродукции Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.Спецификация) Тогда
			Продолжить;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.ЗаказНаПроизводство) И НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.ЗаказПокупателя) Тогда
			Продолжить;
		КонецЕсли; 
		Если МассивСпецификаций.Найти(СтрокаТабличнойЧасти.Спецификация)=Неопределено Тогда
			МассивСпецификаций.Добавить(СтрокаТабличнойЧасти.Спецификация);
		КонецЕсли; 
	КонецЦикла; 
	МассивСпецификаций = ПроизводствоСервер.СпецификацииСПоэтапнымПроизводством(МассивСпецификаций);
	ПроверяемаяПродукция = ТаблицаПродукции.СкопироватьКолонки();
	Для каждого СтрокаПродукция Из ТаблицаПродукции Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаПродукция.Спецификация) ИЛИ МассивСпецификаций.Найти(СтрокаПродукция.Спецификация)=Неопределено Тогда
			Продолжить;
		КонецЕсли;
		Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.ЗаказНаПроизводство) 
			И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТабличнойЧасти.ЗаказНаПроизводство, "ВидОперации")=Перечисления.ВидыОперацийЗаказНаПроизводство.Разборка Тогда
			// Разборка не может выполняться поэтапно
			Продолжить;
		КонецЕсли; 
		ЗаполнитьЗначенияСвойств(ПроверяемаяПродукция.Добавить(), СтрокаПродукция);
		Если НЕ ЗначениеЗаполнено(СтрокаПродукция.Этап) Тогда
			УправлениеНебольшойФирмойСервер.СообщитьОбОшибке(
			ЭтотОбъект,
			СтрШаблон(НСтр("ru = 'Не заполнен этап производства в строке %1 списка ""Операции""'"), СтрокаПродукция.НомерСтроки),
			"Операции",
			СтрокаПродукция.НомерСтроки,
			"Этап",
			Отказ);
		КонецЕсли; 
	КонецЦикла;
	
	Если ПолучитьФункциональнуюОпцию("ВыполнениеЭтаповРазнымиПодразделениями") Тогда
		Для каждого СтрокаПродукция Из ПроверяемаяПродукция Цикл
			Если НЕ ЗначениеЗаполнено(СтрокаПродукция.ПодразделениеЗавершающегоЭтапа) Тогда
				УправлениеНебольшойФирмойСервер.СообщитьОбОшибке(
				ЭтотОбъект,
				СтрШаблон(НСтр("ru = 'Не заполнена колонка ""Завершающее подразделение""  в строке %1 списка ""Продукция""'"), СтрокаПродукция.НомерСтроки),
				"Продукция",
				СтрокаПродукция.НомерСтроки,
				"ПодразделениеЗавершающегоЭтапа",
				Отказ);
			КонецЕсли; 
		КонецЦикла; 
	КонецЕсли; 
	
	// Проверка уникальности завершающего подразделения
	ПроизводствоСервер.ПроверкаПоэтапногоПроизводства(ЭтотОбъект, ПроверяемаяПродукция, Отказ);
	
КонецПроцедуры

Процедура ДобавитьТаблицуОперацийПоЗаказуНаПроизводство(Запрос, ЗаказНаПроизводство)
	
	Запрос.УстановитьПараметр("ЗаказНаПроизводство", ЗаказНаПроизводство);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	1 КАК Уровень,
	|	1 КАК Порядок,
	|	Операции.НомерСтроки КАК НомерСтроки,
	|	Операции.Этап КАК Этап,
	|	Продукция.Спецификация КАК Спецификация,
	|	НЕОПРЕДЕЛЕНО КАК ВложеннаяСпецификация,
	|	ЛОЖЬ КАК ЭтоУзел,
	|	Операции.Операция КАК Операция,
	|	Операции.НормаВремени КАК НормаВремени,
	|	Операции.Исполнитель КАК Исполнитель
	|ПОМЕСТИТЬ ТаблицаОпераций
	|ИЗ
	|	Документ.ЗаказНаПроизводство.Операции КАК Операции
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Продукция.Спецификация КАК Спецификация,
	|			МИНИМУМ(Продукция.КлючСвязи) КАК КлючСвязи
	|		ИЗ
	|			Документ.ЗаказНаПроизводство.Продукция КАК Продукция
	|		ГДЕ
	|			Продукция.Ссылка = &ЗаказНаПроизводство
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Продукция.Спецификация) КАК Продукция
	|		ПО Операции.КлючСвязиПродукция = Продукция.КлючСвязи
	|ГДЕ
	|	Операции.Ссылка = &ЗаказНаПроизводство
	|	И НЕ Продукция.КлючСвязи ЕСТЬ NULL";
	Запрос.Выполнить();
	
КонецПроцедуры
 
#КонецОбласти 

#КонецЕсли