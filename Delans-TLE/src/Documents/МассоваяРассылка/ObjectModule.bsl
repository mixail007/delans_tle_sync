#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если СпособОтправки = Перечисления.ВидыКаналовСвязи.SMS Тогда
		ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("УчетнаяЗапись"));
	ИначеЕсли СпособОтправки = Перечисления.ВидыКаналовСвязи.Email Тогда
		ПроверитьЗаполненияЭлектронныхАдресов(Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	СтратегияЗаполнения = Новый Соответствие;
	СтратегияЗаполнения[Тип("ДокументСсылка.НачислениеСписаниеБонусныхБаллов")] = "ЗаполнитьПоНачислениюСписаниюБонусов";
	
	ЗаполнениеОбъектовУНФ.ЗаполнитьДокумент(ЭтотОбъект, ДанныеЗаполнения, СтратегияЗаполнения);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ПометкаУдаления Тогда
		ОбнулитьКоличествоПопытокВОчередиРассылки();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыЗаполненияДокументов

Процедура ЗаполнитьПоНачислениюСписаниюБонусов(НачислениеСписаниеСсылка) Экспорт
	
	СпособОтправки = Перечисления.ВидыКаналовСвязи.SMS;
	
	Контрагенты = Новый Массив;
	ТипыКИ = Новый СписокЗначений;
	ТипыКИ.Добавить(Перечисления.ТипыКонтактнойИнформации.Телефон);
	
	Для Каждого СтрокаНачисления Из НачислениеСписаниеСсылка.НачисленияБонусов Цикл
		Если ЗначениеЗаполнено(СтрокаНачисления.БонуснаяКарта.ВладелецКарты) Тогда
			Контрагенты.Добавить(СтрокаНачисления.БонуснаяКарта.ВладелецКарты);
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КонтрагентыКонтактнаяИнформация.Ссылка КАК Ссылка,
	|	КонтрагентыКонтактнаяИнформация.Вид КАК Вид,
	|	КонтрагентыКонтактнаяИнформация.Представление КАК Представление,
	|	ВЫБОР
	|		КОГДА КонтрагентыКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)
	|			ТОГДА 0
	|		КОГДА КонтрагентыКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)
	|			ТОГДА 3
	|		КОГДА КонтрагентыКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес)
	|			ТОГДА 0
	|	КОНЕЦ КАК ИндексКартинки,
	|	КонтрагентыКонтактнаяИнформация.Вид.РеквизитДопУпорядочивания КАК Порядок
	|ПОМЕСТИТЬ втКИКонтрагентов
	|ИЗ
	|	Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыКонтактнаяИнформация
	|ГДЕ
	|	КонтрагентыКонтактнаяИнформация.Ссылка В ИЕРАРХИИ(&Контрагенты)
	|	И КонтрагентыКонтактнаяИнформация.Тип В(&ТипыКИ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Контрагенты.Ссылка КАК Контрагент,
	|	Контрагенты.Представление КАК КонтрагентПредставление,
	|	Контрагенты.КонтактноеЛицо КАК ОсновноеКонтактноеЛицо,
	|	ЕСТЬNULL(втКИКонтрагентов.Вид, НЕОПРЕДЕЛЕНО) КАК ВидКИ,
	|	ЕСТЬNULL(втКИКонтрагентов.Представление, """""""") КАК ЗначениеКИ,
	|	втКИКонтрагентов.ИндексКартинки КАК ИндексКартинки,
	|	Контрагенты.ДатаСоздания КАК ДатаСоздания
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКИКонтрагентов КАК втКИКонтрагентов
	|		ПО Контрагенты.Ссылка = втКИКонтрагентов.Ссылка
	|ГДЕ
	|	Контрагенты.Ссылка В ИЕРАРХИИ(&Контрагенты)
	|	И Контрагенты.ЭтоГруппа = ЛОЖЬ
	|
	|УПОРЯДОЧИТЬ ПО
	|	КонтрагентПредставление,
	|	втКИКонтрагентов.Порядок";
	Запрос.УстановитьПараметр("Контрагенты", Контрагенты);
	Запрос.УстановитьПараметр("ТипыКИ", ТипыКИ);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Получатели.Добавить();
		НоваяСтрока.Контакт = Выборка.Контрагент;
		НоваяСтрока.КакСвязаться = Выборка.ЗначениеКИ;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьЗаполненияЭлектронныхАдресов(Отказ)
	
	Для Индекс = 0 По Получатели.Количество() - 1 Цикл
		
		Если ОбщегоНазначенияКлиентСервер.АдресЭлектроннойПочтыСоответствуетТребованиям(
			Получатели[Индекс].КакСвязаться,
			Истина) Тогда
			Продолжить;
		КонецЕсли;
		
		ТекстСообщенияПользователю = СтрШаблон(
		НСтр("ru = 'Некорректный адрес электронной почты ""%1""'"),
		Получатели[Индекс].КакСвязаться);
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщенияПользователю,,
		СтрШаблон("Объект.Получатели[%1].КакСвязаться", Формат(Индекс, "ЧН=; ЧГ=")),,
		Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбнулитьКоличествоПопытокВОчередиРассылки()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Для Каждого ТекСтрокаПолучатели Из Получатели Цикл
		
		РегистрыСведений.ОчередьРассылок.Зарегистрировать(
		Ссылка,
		ТекСтрокаПолучатели.КакСвязаться,
		СпособОтправки,
		ИнтервалМеждуПопытками,
		0);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли