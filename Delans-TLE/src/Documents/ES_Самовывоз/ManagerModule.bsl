#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

// Переопределяет стандартное представление ссылки.
//
Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Поля.Добавить("Ссылка");
	Поля.Добавить("Дата");
	Поля.Добавить("Номер");
	Поля.Добавить("Проведен");
	Поля.Добавить("ПометкаУдаления");
	
КонецПроцедуры

// Переопределяет стандартное представление ссылки.
//
Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	Если Данные.Номер = Null Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Если Данные.Проведен Тогда
		Состояние = "";
	Иначе
		Если Данные.ПометкаУдаления Тогда
			Состояние = НСтр("ru='(удален)'");
		ИначеЕсли Данные.Свойство("Проведен") И НЕ Данные.Проведен Тогда
			Состояние = НСтр("ru='(не проведен)'");
		КонецЕсли;
	КонецЕсли;
	
	ЗаголовокПредставление = НСтр("ru='Выдача'");
	
	Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='%1 %2 от %3 %4'"),
		ЗаголовокПредставление,
		?(Данные.Свойство("Номер"), ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Данные.Номер, Истина, Истина), ""),
		Формат(Данные.Дата, "ДЛФ=D"),
		Состояние);
	
КонецПроцедуры

#КонецОбласти

#Область ИнтерфейсПечати

// Функция проверяет, проведен документ или нет, и вызывает процедуру печати
// документа.
//
Функция ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, ИмяМакета)
	
	Если ИмяМакета = "ПФ_MXL_НакладнаяНаЗапасы" Тогда
		Возврат ПечатнаяФормаНакладнаяНаЗапасы(МассивОбъектов, ОбъектыПечати, ИмяМакета);
	КонецЕсли;
	
КонецФункции // ПечатнаяФорма()

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_НакладнаяНаЗапасы") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПФ_MXL_НакладнаяНаЗапасы", "Накладная на запасы", ПечатнаяФорма(МассивОбъектов, ОбъектыПечати,"ПФ_MXL_НакладнаяНаЗапасы"));
	КонецЕсли;
	
	// параметры отправки печатных форм по электронной почте
	УправлениеНебольшойФирмойСервер.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, МассивОбъектов, КоллекцияПечатныхФорм);
	
КонецПроцедуры

// Заполняет список команд печати Выдачи
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	//ЭР Несторук С.И. 16.03.2017 11:59:10 {
	//Временно скрываем эту печ. форму
	//// Накладная на запасы
	//КомандаПечати = КомандыПечати.Добавить();
	//КомандаПечати.Идентификатор = "ПФ_MXL_НакладнаяНаЗапасы";
	//КомандаПечати.Представление = НСтр("ru = 'Накладная на запасы'");
	//КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	//КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	//КомандаПечати.МестоРазмещения = "ГруппаВажныеКомандыВыдачи";
	//КомандаПечати.Порядок = 5;
	//}ЭР Несторук С.И.
	
КонецПроцедуры

Функция ПечатнаяФормаНакладнаяНаЗапасы(МассивОбъектов, ОбъектыПечати, ИмяМакета)
	
	МассивЗаказов = ПолучитьМассивЗаказовДляПечати(МассивОбъектов);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Самовывоз_НакладнаяНаЗапасы";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ES_Самовывоз."+ИмяМакета);
	Если ТипЗнч(Макет) <> Тип("ТабличныйДокумент") Тогда
		Макет = ПолучитьМакет(ИмяМакета);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказПокупателяES_Грузы.Ссылка,
		|	ЗаказПокупателяES_Грузы.НомерСтроки КАК НомерСтроки,
		|	ЗаказПокупателяES_Грузы.Номенклатура КАК Номенклатура,
		|	ЗаказПокупателяES_Грузы.Характеристика,
		|	ЗаказПокупателяES_Грузы.Количество,
		|	ЗаказПокупателяES_Грузы.ЕдиницаИзмерения,
		|	ЗаказПокупателяES_Грузы.Цена,
		|	ЗаказПокупателяES_Грузы.НППлан КАК Сумма,
		|	0 КАК СуммаНДС
		|ПОМЕСТИТЬ Вт_Грузы
		|ИЗ
		|	Документ.ЗаказПокупателя.ES_Грузы КАК ЗаказПокупателяES_Грузы
		|ГДЕ
		|	ЗаказПокупателяES_Грузы.Ссылка В(&МассивЗаказов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДокЗаказПокупателя.Ссылка КАК Ссылка,
		|	ДокЗаказПокупателя.Номер КАК Номер,
		|	ДокЗаказПокупателя.Дата КАК Дата,
		|	ДокЗаказПокупателя.ВалютаДокумента КАК ВалютаДокумента,
		|	ДокЗаказПокупателя.Организация КАК Организация,
		|	ЕСТЬNULL(Вт_Грузы.НомерСтроки, """") КАК НомерСтроки,
		|	ЕСТЬNULL(Вт_Грузы.Номенклатура, НЕОПРЕДЕЛЕНО) КАК Номенклатура,
		|	ЕСТЬNULL(Вт_Грузы.Характеристика, НЕОПРЕДЕЛЕНО) КАК Характеристика,
		|	ЕСТЬNULL(Вт_Грузы.Количество, 0) КАК Количество,
		|	ЕСТЬNULL(Вт_Грузы.ЕдиницаИзмерения, НЕОПРЕДЕЛЕНО) КАК ЕдиницаИзмерения,
		|	ЕСТЬNULL(Вт_Грузы.Цена, 0) КАК Цена,
		|	ЕСТЬNULL(Вт_Грузы.Сумма, 0) КАК Сумма,
		|	ЕСТЬNULL(Вт_Грузы.СуммаНДС, 0) КАК СуммаНДС
		|ПОМЕСТИТЬ ВТ_Заказ
		|ИЗ
		|	Документ.ЗаказПокупателя КАК ДокЗаказПокупателя
		|		ЛЕВОЕ СОЕДИНЕНИЕ Вт_Грузы КАК Вт_Грузы
		|		ПО ДокЗаказПокупателя.Ссылка = Вт_Грузы.Ссылка
		|ГДЕ
		|	ДокЗаказПокупателя.Ссылка В(&МассивЗаказов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ES_ВыдачиГрузы.ДокументДоставки КАК ДокументДоставки,
		|	ES_ВыдачиГрузы.Номенклатура,
		|	ES_ВыдачиГрузы.Характеристика,
		|	ES_ВыдачиГрузы.КоличествоФакт КАК Количество,
		|	ES_ВыдачиГрузы.Цена,
		|	ES_ВыдачиГрузы.НПФакт КАК Сумма,
		|	ВТ_Заказ.Номер КАК Номер,
		|	ВТ_Заказ.Дата КАК Дата,
		|	ВТ_Заказ.ВалютаДокумента КАК ВалютаДокумента,
		|	ВТ_Заказ.Организация КАК Организация,
		|	ВТ_Заказ.НомерСтроки,
		|	ВТ_Заказ.ЕдиницаИзмерения,
		|	ВТ_Заказ.СуммаНДС КАК СуммаНДС
		|ИЗ
		|	Документ.ES_Самовывоз.Грузы КАК ES_ВыдачиГрузы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Заказ КАК ВТ_Заказ
		|		ПО ES_ВыдачиГрузы.ДокументДоставки = ВТ_Заказ.Ссылка
		|			И ES_ВыдачиГрузы.Номенклатура = ВТ_Заказ.Номенклатура
		|			И ES_ВыдачиГрузы.Характеристика = ВТ_Заказ.Характеристика
		|ГДЕ
		|	ES_ВыдачиГрузы.Ссылка В(&МассивОбъектов)
		|ИТОГИ
		|	СУММА(Количество),
		|	СУММА(Сумма),
		|	МАКСИМУМ(Номер),
		|	МАКСИМУМ(Дата),
		|	МАКСИМУМ(ВалютаДокумента),
		|	МАКСИМУМ(Организация),
		|	СУММА(СуммаНДС)
		|ПО
		|	ДокументДоставки";
	
	Запрос.УстановитьПараметр("МассивЗаказов", МассивЗаказов);
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		ПервыйДокумент = Истина;	
		
		ВыборкаСсылка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСсылка.Следующий() Цикл
			
			// Печатаются только те заказы, в которых есть Запасы
			Если ВыборкаСсылка.Количество = 0 Тогда
				Продолжить;
			КонецЕсли; 
			
			Если ПервыйДокумент Тогда
				ПервыйДокумент = Ложь;	
			Иначе
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ТабДокПоЗаказу = Новый ТабличныйДокумент;
			
			// Шапка
			СведенияОбОрганизации = УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(ВыборкаСсылка.Организация, ВыборкаСсылка.Дата, ,);
			НомерДокумента = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ВыборкаСсылка.Номер, Истина, Истина);
			
			ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
			ОбластьШапка.Параметры.ТекстЗаголовка = "Накладная №"
													+ НомерДокумента
													+ " от "
													+ Формат(ВыборкаСсылка.Дата, "ДЛФ=DD");
			ОбластьШапка.Параметры.ПредставлениеПоставщика = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,");
			ТабДокПоЗаказу.Вывести(ОбластьШапка);
			
			КоличествоНоменклатур = 0;
			// Строки таблицы
			ВыборкаДетальныеЗаписи = ВыборкаСсылка.Выбрать();
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Номенклатура) Тогда
					ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицы");
					ОбластьСтрокаТаблицы.Параметры.НомерСтроки 	= ВыборкаДетальныеЗаписи.НомерСтроки;
					ОбластьСтрокаТаблицы.Параметры.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
					ОбластьСтрокаТаблицы.Параметры.Количество 	= ВыборкаДетальныеЗаписи.Количество;
					ОбластьСтрокаТаблицы.Параметры.ЕдИзм 		= ВыборкаДетальныеЗаписи.ЕдиницаИзмерения;
					ОбластьСтрокаТаблицы.Параметры.Цена 		= ВыборкаДетальныеЗаписи.Цена;
					ОбластьСтрокаТаблицы.Параметры.Сумма 		= ВыборкаДетальныеЗаписи.Сумма;
					
					ТабДокПоЗаказу.Вывести(ОбластьСтрокаТаблицы);
					
					КоличествоНоменклатур = КоличествоНоменклатур + 1;
				КонецЕсли; 
				
			КонецЦикла;
			
			// Итого
			ОбластьИтого = Макет.ПолучитьОбласть("Итого");
			ОбластьИтого.Параметры.СуммаИтого 		= ВыборкаСсылка.Сумма;
			ОбластьИтого.Параметры.СуммаНДСИтого 	= ВыборкаСсылка.СуммаНДС;
			ОбластьИтого.Параметры.Итого 			= ВыборкаСсылка.Сумма;
			
			ТабДокПоЗаказу.Вывести(ОбластьИтого);
			
			// Сумма прописью
			СуммаКПрописи = ?(ЗначениеЗаполнено(ВыборкаСсылка.Сумма), ВыборкаСсылка.Сумма, 0);
			ОбластьСуммаПрописью = Макет.ПолучитьОбласть("СуммаПрописью");
			ОбластьСуммаПрописью.Параметры.ИтоговаяСтрока = "Всего наименований "
													+ КоличествоНоменклатур
													+ ", на сумму "
													+ УправлениеНебольшойФирмойСервер.ФорматСумм(СуммаКПрописи, ВыборкаСсылка.ВалютаДокумента);
			ОбластьСуммаПрописью.Параметры.СуммаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаКПрописи, ВыборкаСсылка.ВалютаДокумента);
			
			ТабДокПоЗаказу.Вывести(ОбластьСуммаПрописью);
			
			// Подвал
			ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
			ТабДокПоЗаказу.Вывести(ОбластьПодвал);
			
			ТабличныйДокумент.Вывести(ТабДокПоЗаказу);
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ТабличныйДокумент.Вывести(ТабДокПоЗаказу);
		КонецЦикла;
	
	КонецЕсли;
	
	Возврат ТабличныйДокумент;
		
КонецФункции

Функция ПолучитьМассивЗаказовДляПечати(МассивВыдач)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ES_Самовывоз.Заказ
		|ИЗ
		|	Документ.ES_Самовывоз КАК ES_Самовывоз
		|ГДЕ
		|	ES_Самовывоз.Ссылка В(&МассивВыдач)";
	
	Запрос.УстановитьПараметр("МассивВыдач", МассивВыдач);
	
	МассивЗаказов = Новый Массив;
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			МассивЗаказов.Добавить(ВыборкаДетальныеЗаписи.Заказ);
		КонецЦикла;
	КонецЕсли; 

	Возврат МассивЗаказов;
	
КонецФункции

#КонецОбласти

#КонецЕсли