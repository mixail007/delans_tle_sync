
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура - обработчик нажатия на кнопку ОтборДень.
//
&НаКлиенте
Процедура ОтборДень(Команда)
	
	НастройкаПериода = Элементы.Список.Период;
	НастройкаПериода.Вариант = ВариантСтандартногоПериода.Сегодня;
	
	Элементы.Список.Обновить();
	
КонецПроцедуры // ОтборДень()

// Процедура - обработчик нажатия на кнопку ОтборНеделя.
//
&НаКлиенте
Процедура ОтборНеделя(Команда)
	
	НастройкаПериода = Элементы.Список.Период;
	НастройкаПериода.Вариант = ВариантСтандартногоПериода.ЭтаНеделя;
	
	Элементы.Список.Обновить();
	
КонецПроцедуры // ОтборНеделя()

// Процедура - обработчик нажатия на кнопку ОтборМесяц.
//
&НаКлиенте
Процедура ОтборМесяц(Команда)
	
	НастройкаПериода = Элементы.Список.Период;
	НастройкаПериода.Вариант = ВариантСтандартногоПериода.ЭтотМесяц;
	
	Элементы.Список.Обновить();
	
КонецПроцедуры // ОтборМесяц()

// Процедура - обработчик нажатия на кнопку ОтборОчистить.
//
&НаКлиенте
Процедура ОтборОчистить(Команда)
	
	НастройкаПериода = Элементы.Список.Период;
	НастройкаПериода.Вариант = ВариантСтандартногоПериода.ПроизвольныйПериод;
	НастройкаПериода.ДатаНачала = '00010101';
	НастройкаПериода.ДатаОкончания = '00010101';
	
	Элементы.Список.Обновить();
	
КонецПроцедуры // ОтборОчистить()


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//ЭР Несторук С.И. 26.10.2017 13:56:19 {
	УстновитьОтборДинамическогоСписка();
	//}ЭР Несторук С.И.
	
КонецПроцедуры

&НаСервере
Процедура УстновитьОтборДинамическогоСписка()
	
	Если РольДоступна("ES_Кладовщик") Тогда
		
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("ВидЗабора");
		ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.Использование    = Истина;
		ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		ЭлементОтбора.ПравоеЗначение   = Перечисления.ES_ВидыЗабора.Реестр;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//ЭР Несторук С.И. 10.04.2019 9:32:27 {
	ES_БиллингКлиент.ПроверитьДоступностьСервисаDelans(Отказ);
	//}ЭР Несторук С.И.
КонецПроцедуры

//Efsol Рыбадка Н.А. 04.06.2019+
&НаКлиенте
Процедура ОтправитьВТелеграм(Команда)
	ПолучитьОтветОтТелеграм();
КонецПроцедуры

&НаСервере
Процедура ПолучитьОтветОтТелеграм()
	СообщитьТекст = "Сборы грузов отправлены";
	ES_ТелеграмAPI.ОтправитьВТелеграм(СообщитьТекст, ОтправитьВТелеграмНаСервере());	
КонецПроцедуры

&НаСервере
Функция ОтправитьВТелеграмНаСервере()
	
	РеквизитФормыСбор = ES_ОбщегоНазначения.ПолучитьСтартовуюНастройку(Перечисления.ES_ВидыСтартовыхНастроек.ШаблонСообщенияДляСбора);
	
	Если Не ЗначениеЗаполнено(РеквизитФормыСбор) Тогда
		
		Сообщить("Заполните в стартовых настройках значения для шаблонов сообщений");
		Возврат неопределено;
	Иначе
		
	МасивСообщений = Новый Массив;
	
	//Запрос = Новый Запрос;
	//Запрос.Текст =
	//"ВЫБРАТЬ
	//|	ШаблоныСообщений.ТекстШаблонаSMS КАК ТекстШаблонаSMS
	//|ИЗ
	//|	Справочник.ШаблоныСообщений КАК ШаблоныСообщений
	//|ГДЕ
	//|	ШаблоныСообщений.Наименование = &Наименование";
	//
	//Запрос.УстановитьПараметр("Наименование", РеквизитФормыСбор);
	//
	//ВыборкаШаблСоПланов = Запрос.Выполнить().Выбрать();
	//
	//Пока ВыборкаШаблСоПланов.Следующий() Цикл
	////СтруктураДляШабл = Новый Структура;
	////СтруктураДляШабл.Вставить("ШаблонДляСообщения", ВыборкаШаблСоПланов.ТекстШаблонаSMS);
	//ТексШаблонаДляПланаДост = ВыборкаШаблСоПланов.ТекстШаблонаSMS;
	//КонецЦикла;

	ТексШаблонаДляПланаДост = РеквизитФормыСбор.ТекстШаблонаSMS;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ES_ЗаборГруза.ВидЗабора КАК ВидЗабора,
	|	ES_ЗаборГруза.Дата КАК Дата,
	|	ES_ЗаборГруза.Номер КАК Номер,
	|	ES_ЗаборГруза.КонтактноеЛицо КАК КонтактноеЛицо,
	|	ES_ЗаборГруза.Ответственный КАК Ответственный,
	|	ES_ЗаборГруза.СуммаДокумента КАК СуммаДокумента,
	|	ES_ЗаборГруза.Курьер КАК Курьер,
	|	ES_ЗаборГруза.ДатаЗабора КАК ДатаЗабора,
	|	ES_ЗаборГруза.Заказчик КАК Заказчик,
	|	ES_ЗаборГруза.Организация КАК Организация,
	|	ES_ЗаборГруза.Ссылка КАК Ссылка,
	|	ES_ЗаборГруза.ОбщийВес КАК ОбщийВес,
	|	ES_ЗаборГруза.ОбщийОбъем КАК ОбщийОбъем,
	|	ES_ЗаборГруза.ОбщийОбъемныйВес КАК ОбщийОбъемныйВес,
	|	ES_ЗаборГруза.ВремяЗабораС КАК ВремяЗабораС,
	|	ES_ЗаборГруза.ВремяЗабораПо КАК ВремяЗабораПо,
	|	ES_ЗаборГруза.Срочность КАК Срочность,
	|	ES_ЗаборГруза.Адрес КАК Адрес,
	|	ES_ЗаборГруза.Отправитель КАК Отправитель
	|ИЗ
	|	Документ.ES_ЗаборГруза КАК ES_ЗаборГруза";
	ВыборкаОрганизация = Запрос.Выполнить().Выбрать();
	Префикс = "ЗаказПокупателя.";
	
	
	Пока ВыборкаОрганизация.Следующий() Цикл
		
		Для каждого СтрокаСписка из Элементы.Список.ВыделенныеСтроки Цикл
			//Пока ВыборкаОрганизация.Следующий() Цикл
				//Для каждого ЭлемВыборки из ВыборкаОрганизация Цикл
				Если  СтрокаСписка.Номер = ВыборкаОрганизация.Номер Тогда
					//ДокументЗаказ = ВыборкаОрганизация.ПолучательАдрес;
					//Для кол = 0 по ДокументЗаказ Цикл	
					//Пока  ВыборкаОрганизация.Следующий() Цикл
					
					СтруктураДляБота = Новый Структура;
					////////////////////////////////////////
					СтруктураДляБота.Вставить("Номер", ВыборкаОрганизация.Номер);
					СтруктураДляБота.Вставить("Дата", Формат (ВыборкаОрганизация.ДатаЗабора, "ДФ=dd.MM.yyyy"));
					СтруктураДляБота.Вставить("СуммаДокумента", ВыборкаОрганизация.СуммаДокумента);
					///////////////////////////////////////////
					
					СтруктураДляБота.Вставить("ES_АдресДоставки", ВыборкаОрганизация.Адрес);
					СтруктураДляБота.Вставить("ВариантЗавершения", "Нет");
					СтруктураДляБота.Вставить("ES_ОбщийВес", ВыборкаОрганизация.ОбщийВес);
					СтруктураДляБота.Вставить("ВидРабот", ВыборкаОрганизация.ВидЗабора);
					СтруктураДляБота.Вставить("ES_ВремяДоставкиПо", Формат(ВыборкаОрганизация.ВремяЗабораПо, "ДЛФ=T"));
					СтруктураДляБота.Вставить("ES_ВремяДоставкиС", Формат(ВыборкаОрганизация.ВремяЗабораС, "ДЛФ=T"));
					СтруктураДляБота.Вставить("ES_ВхНакладная", ВыборкаОрганизация.Ссылка);
					СтруктураДляБота.Вставить("ES_ДатаДоставки", Формат(ВыборкаОрганизация.ДатаЗабора, "ДФ=dd.MM.yyyy"));
					СтруктураДляБота.Вставить("ДатаОтгрузки", " "); 
					СтруктураДляБота.Вставить("ES_ЗаказчикКонтактноеЛицо", ВыборкаОрганизация.Заказчик);
					СтруктураДляБота.Вставить("ES_ПолучательКонтактноеЛицо", ВыборкаОрганизация.КонтактноеЛицо);
					СтруктураДляБота.Вставить("КонтактноеЛицоДолжность", " ");
					СтруктураДляБота.Вставить("КонтактноеЛицоНаименование", " ");
					СтруктураДляБота.Вставить("ES_Курьер", ВыборкаОрганизация.Курьер);
					СтруктураДляБота.Вставить("ES_НомерНакладной", ВыборкаОрганизация.Номер);
					СтруктураДляБота.Вставить("ES_НППлан", " ");
					СтруктураДляБота.Вставить("ES_Объем", ВыборкаОрганизация.ОбщийОбъем);
					СтруктураДляБота.Вставить("ES_ОбщийОбъемныйВес", ВыборкаОрганизация.ОбщийОбъемныйВес);
					СтруктураДляБота.Вставить("Контрагент", ВыборкаОрганизация.Заказчик);
					СтруктураДляБота.Вставить("ES_Получатель", " ");
					СтруктураДляБота.Вставить("ES_СрочностьДоставки", ВыборкаОрганизация.Срочность);
					СтруктураДляБота.Вставить("ВнешняяСсылкаНаОбъект", ВыборкаОрганизация.Ссылка);
					СтруктураДляБота.Вставить("Обращение", "Уважаемый(ая)");
					СтруктураДляБота.Вставить("Ответственный", ВыборкаОрганизация.Ответственный);
					СтруктураДляБота.Вставить("Покупатель", " ");
					СтруктураДляБота.Вставить("ПричинаОтмены", " ");
					СтруктураДляБота.Вставить("СостояниеЗаказа", " ");
					СтруктураДляБота.Вставить("СписокНоменклатуры", " ");
					СтруктураДляБота.Вставить("СписокРесурсов", " ");
					СтруктураДляБота.Вставить("Старт", " ");
					СтруктураДляБота.Вставить("СтатусЗаказа", " ");
					//СтруктураДляБота.Вставить("СуммаДокумента", ВыборкаОрганизация.СуммаДокумента);
					СтруктураДляБота.Вставить("Финиш", " ");
					
					
					//ВыборкаЗаказ = ВыборкаОрганизация.Выбрать();
					МассивРеквизитов = Новый Массив;
					МассивРеквизитов.Добавить(ВыборкаОрганизация);
					
					
					
					//Создание структуры для масивов с сообщениями
					
					//функция Формирует текст сообщения
					Сообщение = Строка(ВыборкаОрганизация.Ссылка.УникальныйИдентификатор()) + Символы.ПС +Символы.ПС + ШаблоныСообщенийСлужебный.ВставитьПараметрыВСтрокуСогласноТаблицеПараметров(ТексШаблонаДляПланаДост, СтруктураДляБота, Префикс);
					//Сообщение = "Заказ №" + ВыборкаЗаказ.Номер + Символы.ПС +
					//"Дата доставки: " + ВыборкаЗаказ.Дата + Символы.ПС +
					//"Адрес: " + ВыборкаЗаказ.ПолучательАдрес + Символы.ПС +
					//"Стоимость: " + ВыборкаЗаказ.СтоимостьДоставки;
					//МассивРеквизитов.Добавить(ВыборкаОрганизация);
					//Сообщить(Сообщение);
					МасивСообщений.Добавить(Сообщение);
				КонецЕсли;
				//КонецЦикла;
			КонецЦикла;	
		КонецЦикла;
	КонецЕсли;
		
		Возврат МасивСообщений;

	
	КонецФункции

//Efsol Рыбалка Н.А.-