#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

Процедура ЗаполнитьДаннымиЗаказаНаДоставку(ТекЗаказ) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ES_ГрузыВЗаказахСрезПоследних.НомерСтроки КАК НомерСтроки,
		|	ES_ГрузыВЗаказахСрезПоследних.ДокументДоставки,
		|	ES_ГрузыВЗаказахСрезПоследних.КлючСтроки,
		|	ES_ГрузыВЗаказахСрезПоследних.ТипГруза,
		|	ES_ГрузыВЗаказахСрезПоследних.Вес,
		|	ES_ГрузыВЗаказахСрезПоследних.ОбъемныйВес,
		|	ES_ГрузыВЗаказахСрезПоследних.Высота,
		|	ES_ГрузыВЗаказахСрезПоследних.Длина,
		|	ES_ГрузыВЗаказахСрезПоследних.Ширина,
		|	ES_ГрузыВЗаказахСрезПоследних.НППлан,
		|	ES_ГрузыВЗаказахСрезПоследних.Страховка,
		|	ES_ГрузыВЗаказахСрезПоследних.ОписаниеГруза
		|ИЗ
		|	РегистрСведений.ES_ГрузыВЗаказах.СрезПоследних(, ДокументДоставки = &Заказ) КАК ES_ГрузыВЗаказахСрезПоследних
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ES_НоменклатураВЗаказахСрезПоследних.НомерСтроки КАК НомерСтроки,
		|	ES_НоменклатураВЗаказахСрезПоследних.ДокументДоставки,
		|	ES_НоменклатураВЗаказахСрезПоследних.Номенклатура,
		|	ES_НоменклатураВЗаказахСрезПоследних.ТипНоменклатурыЗапас,
		|	ES_НоменклатураВЗаказахСрезПоследних.Характеристика,
		|	ES_НоменклатураВЗаказахСрезПоследних.Партия,
		|	ES_НоменклатураВЗаказахСрезПоследних.ЕдиницаИзмерения,
		|	ES_НоменклатураВЗаказахСрезПоследних.Количество,
		|	ES_НоменклатураВЗаказахСрезПоследних.НППлан,
		|	ES_НоменклатураВЗаказахСрезПоследних.Содержание,
		|	ES_НоменклатураВЗаказахСрезПоследних.Цена,
		|	ES_НоменклатураВЗаказахСрезПоследних.ПроцентСкидкиНаценки
		|ИЗ
		|	РегистрСведений.ES_НоменклатураВЗаказах.СрезПоследних(, ДокументДоставки = &Заказ) КАК ES_НоменклатураВЗаказахСрезПоследних
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ES_ИзменяемыеРеквизитыЗаказовСрезПоследних.Заказ,
		|	ES_ИзменяемыеРеквизитыЗаказовСрезПоследних.Значение КАК Курьер,
		|	NULL КАК Комментарий
		|ПОМЕСТИТЬ ВТ_ИзмРеквизитыЗаказа
		|ИЗ
		|	РегистрСведений.ES_ИзменяемыеРеквизитыЗаказов.СрезПоследних(
		|			,
		|			Заказ = &Заказ
		|				И РеквизитЗаказа = ЗНАЧЕНИЕ(Перечисление.ES_ИзменяемыеРеквизитыЗаказа.Курьер)) КАК ES_ИзменяемыеРеквизитыЗаказовСрезПоследних
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ES_ИзменяемыеРеквизитыЗаказовСрезПоследних.Заказ,
		|	NULL,
		|	ES_ИзменяемыеРеквизитыЗаказовСрезПоследних.Значение
		|ИЗ
		|	РегистрСведений.ES_ИзменяемыеРеквизитыЗаказов.СрезПоследних(
		|			,
		|			Заказ = &Заказ
		|				И РеквизитЗаказа = ЗНАЧЕНИЕ(Перечисление.ES_ИзменяемыеРеквизитыЗаказа.Комментарий)) КАК ES_ИзменяемыеРеквизитыЗаказовСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ИзмРеквизитыЗаказа.Заказ,
		|	МАКСИМУМ(ВТ_ИзмРеквизитыЗаказа.Курьер) КАК Курьер,
		|	МАКСИМУМ(ВТ_ИзмРеквизитыЗаказа.Комментарий) КАК Комментарий
		|ПОМЕСТИТЬ ВТ_ГрупИзмРеквизитыЗаказа
		|ИЗ
		|	ВТ_ИзмРеквизитыЗаказа КАК ВТ_ИзмРеквизитыЗаказа
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ИзмРеквизитыЗаказа.Заказ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ES_ДанныеПоЗаказамСрезПоследних.Заказ,
		|	ES_ДанныеПоЗаказамСрезПоследних.Заказчик КАК Заказчик,
		|	ES_ДанныеПоЗаказамСрезПоследних.ЗаборОтправитель КАК Отправитель,
		|	ES_ДанныеПоЗаказамСрезПоследних.ЗаборКонтактноеЛицо КАК КонтактноеЛицо,
		|	ES_ДанныеПоЗаказамСрезПоследних.ЗаборРегион КАК Регион,
		|	ES_ДанныеПоЗаказамСрезПоследних.ЗаборТелефон КАК Телефон,
		|	ES_ДанныеПоЗаказамСрезПоследних.ЗаборАдрес КАК Адрес,
		|	ES_ДанныеПоЗаказамСрезПоследних.ЗаборАдресДолгота КАК АдресДолгота,
		|	ES_ДанныеПоЗаказамСрезПоследних.ЗаборАдресШирота КАК АдресШирота,
		|	ES_ДанныеПоЗаказамСрезПоследних.ВидЗабора,
		|	ES_ДанныеПоЗаказамСрезПоследних.НомерНакладной,
		|	ES_ДанныеПоЗаказамСрезПоследних.КоличествоМест,
		|	ES_ДанныеПоЗаказамСрезПоследних.ЗаборДата КАК ЗаборДата,
		|	ES_ДанныеПоЗаказамСрезПоследних.ЗаборВремяС КАК ВремяС,
		|	ES_ДанныеПоЗаказамСрезПоследних.ЗаборВремяПо КАК ВремяПо,
		|	ES_ДанныеПоЗаказамСрезПоследних.ОбщийВес,
		|	ES_ДанныеПоЗаказамСрезПоследних.ОбщийОбъемныйВес,
		|	ES_ДанныеПоЗаказамСрезПоследних.ПредставлениеГрузов,
		|	ЕСТЬNULL(ВТ_ГрупИзмРеквизитыЗаказа.Курьер, ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)) КАК Курьер,
		|	ЕСТЬNULL(ВТ_ГрупИзмРеквизитыЗаказа.Комментарий, """") КАК Комментарий
		|ИЗ
		|	РегистрСведений.ES_ДанныеПоЗаказам.СрезПоследних(, Заказ = &Заказ) КАК ES_ДанныеПоЗаказамСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ГрупИзмРеквизитыЗаказа КАК ВТ_ГрупИзмРеквизитыЗаказа
		|		ПО ES_ДанныеПоЗаказамСрезПоследних.Заказ = ВТ_ГрупИзмРеквизитыЗаказа.Заказ";
	
	Запрос.УстановитьПараметр("Заказ", ТекЗаказ);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	// Заполнение реквизитов документа
	РезДанныеЗаказа = МассивРезультатов[4];
	Если НЕ РезДанныеЗаказа.Пустой() Тогда
		ВыборкаДанныеЗаказа = РезДанныеЗаказа.Выбрать();
		Пока ВыборкаДанныеЗаказа.Следующий() Цикл
			Адрес 				= ВыборкаДанныеЗаказа.Адрес;
			АдресДолгота 		= ВыборкаДанныеЗаказа.АдресДолгота;
			АдресШирота 		= ВыборкаДанныеЗаказа.АдресШирота;
			ВидЗабора 			= ?(ЗначениеЗаполнено(ВыборкаДанныеЗаказа.ВидЗабора), ВыборкаДанныеЗаказа.ВидЗабора, Перечисления.ES_ВидыЗабора.НаСклад);
			ВремяЗабораС 		= ВыборкаДанныеЗаказа.ВремяС;
			ВремяЗабораПо 		= ВыборкаДанныеЗаказа.ВремяПо;
			ДатаЗабора 			= ВыборкаДанныеЗаказа.ЗаборДата;
			Заказчик 			= ВыборкаДанныеЗаказа.Заказчик;
			КоличествоМест 		= ВыборкаДанныеЗаказа.КоличествоМест;
			Комментарий 		= ВыборкаДанныеЗаказа.Комментарий;
			КонтактноеЛицо 		= ВыборкаДанныеЗаказа.КонтактноеЛицо;
			Курьер 				= ВыборкаДанныеЗаказа.Курьер;
			НомерНакладной 		= ВыборкаДанныеЗаказа.НомерНакладной;
			ОбщийВес 			= ВыборкаДанныеЗаказа.ОбщийВес;
			ОбщийОбъемныйВес 	= ВыборкаДанныеЗаказа.ОбщийОбъемныйВес;
			Отправитель 		= ВыборкаДанныеЗаказа.Отправитель;
			ПредставлениеГрузов = ВыборкаДанныеЗаказа.ПредставлениеГрузов;
			Регион 				= ВыборкаДанныеЗаказа.Регион;
			Телефон 			= ВыборкаДанныеЗаказа.Телефон;
		КонецЦикла; 
	КонецЕсли; 
	
	// Заполнение табличных частей документа
	Если ПредставлениеГрузов = Перечисления.ES_ПредставлениеГрузов.Места Тогда
		// Заполнение Грузами
		РезГрузыВЗаказе = МассивРезультатов[0];
		Если НЕ РезГрузыВЗаказе.Пустой() Тогда
			ВыборкаГрузы = РезГрузыВЗаказе.Выбрать();
			Пока ВыборкаГрузы.Следующий() Цикл
				НовСтрСписокГрузов = СписокГрузов.Добавить();
				НовСтрСписокГрузов.КлючСтроки 		= ВыборкаГрузы.КлючСтроки;
				НовСтрСписокГрузов.Вес 				= ВыборкаГрузы.Вес;
				НовСтрСписокГрузов.Высота 			= ВыборкаГрузы.Высота;
				НовСтрСписокГрузов.Длина 			= ВыборкаГрузы.Длина;
				НовСтрСписокГрузов.Ширина 			= ВыборкаГрузы.Ширина;
				НовСтрСписокГрузов.НППлан 			= ВыборкаГрузы.НППлан;
				НовСтрСписокГрузов.ОбъемныйВес 		= ВыборкаГрузы.ОбъемныйВес;
				НовСтрСписокГрузов.ОписаниеГруза 	= ВыборкаГрузы.ОписаниеГруза;
				НовСтрСписокГрузов.Страховка 		= ВыборкаГрузы.Страховка;
				НовСтрСписокГрузов.ТипГруза 		= ВыборкаГрузы.ТипГруза;
			КонецЦикла; 
		КонецЕсли; 
		
	ИначеЕсли ПредставлениеГрузов = Перечисления.ES_ПредставлениеГрузов.Запасы Тогда 	
		// Заполнение Номенклатурой
		РезНомВЗаказе = МассивРезультатов[1];
		Если НЕ РезНомВЗаказе.Пустой() Тогда
			ВыборкаГрузы = РезНомВЗаказе.Выбрать();
			Пока ВыборкаГрузы.Следующий() Цикл
				НовСтрГрузы = Грузы.Добавить();
				НовСтрГрузы.Номенклатура 			= ВыборкаГрузы.Номенклатура;
				НовСтрГрузы.ТипНоменклатурыЗапас 	= ВыборкаГрузы.ТипНоменклатурыЗапас;
				НовСтрГрузы.Характеристика 			= ВыборкаГрузы.Характеристика;
				НовСтрГрузы.Партия 					= ВыборкаГрузы.Партия;
				НовСтрГрузы.Количество 				= ВыборкаГрузы.Количество;
				НовСтрГрузы.ЕдиницаИзмерения 		= ВыборкаГрузы.ЕдиницаИзмерения;
				НовСтрГрузы.НППлан 					= ВыборкаГрузы.НППлан;
				НовСтрГрузы.Содержание 				= ВыборкаГрузы.Содержание;
				НовСтрГрузы.Цена 					= ВыборкаГрузы.Цена;
				НовСтрГрузы.ПроцентСкидкиНаценки 	= ВыборкаГрузы.ПроцентСкидкиНаценки;
			КонецЦикла; 
		КонецЕсли; 
	КонецЕсли; 

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ДанныеЗаполнения = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	// Создать на основании можно только из документа "Заказ на доставку"
	Если ДанныеЗаполнения.ВидОперации <> Перечисления.ВидыОперацийЗаказПокупателя.ES_ЗаказНаДоставку Тогда
		ВызватьИсключение НСтр("ru = 'Забор грузов можно ввести только на основании заказа на доставку!'");
	КонецЕсли;
	
	// Создать на основании можно только для документа в статусе Требует забор
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ES_СтатусыЗаказовСрезПоследних.СтатусЗаказа КАК Статус
		|ИЗ
		|	РегистрСведений.ES_СтатусыЗаказов.СрезПоследних(, Заказ = &Заказ) КАК ES_СтатусыЗаказовСрезПоследних";
	
	Запрос.УстановитьПараметр("Заказ", ДанныеЗаполнения);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ВыборкаДетальныеЗаписи.Следующий();
	Если НЕ ВыборкаДетальныеЗаписи.Статус = Перечисления.ES_СтатусыЗаказов.ТребуетсяЗабор
	   //И НЕ ВыборкаДетальныеЗаписи.Статус = Неопределено
	Тогда
		ВызватьИсключение НСтр("ru = 'Забор грузов можно ввести только на основании заказа в статусе ""Требуется забор""!'");
	КонецЕсли; 
	
	// Заполнение реквизитов
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		
		// Заполнение шапки
		ДокументОснование = ДанныеЗаполнения;
		ЗаполнитьДаннымиЗаказаНаДоставку(ДанныеЗаполнения);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если ПометкаУдаления ИЛИ РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		
		// Нельзя пометить на удаление и отменить проведение документа, если он проходит по другим документам
		МассивСсылок = Новый Массив;
		МассивСсылок.Добавить(Ссылка);
		
		УстановитьПривилегированныйРежим(Истина);
		ТабНайденныхСсылок = НайтиПоСсылкам(МассивСсылок);
		УстановитьПривилегированныйРежим(Ложь);
		
		Для каждого Строка Из ТабНайденныхСсылок Цикл
			Если Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(Строка.Данные)) Тогда
				//ЭР Несторук С.И. 13.10.2017 14:44:41 {
				//Смотрим ссылаются ли на документ проведенные документы, а не помеченные на удаление
				//Если НЕ Строка.Данные.ПометкаУдаления и НЕ Ссылка = Строка.Данные Тогда
				Если Строка.Данные.Проведен и НЕ Ссылка = Строка.Данные Тогда
					//}ЭР Несторук С.И.
					Сообщить("На документ ссылается " + Строка.Данные);
					Отказ = Истина;
					Возврат;
				КонецЕсли; 
			КонецЕсли; 
		КонецЦикла; 
		
	КонецЕсли; 

	Если НЕ ВидЗабора = Перечисления.ES_ВидыЗабора.Выезд Тогда
		Назначение.Очистить();
	КонецЕсли; 
	
	Если ВидЗабора = Перечисления.ES_ВидыЗабора.Выезд
		ИЛИ ВидЗабора = Перечисления.ES_ВидыЗабора.Реестр Тогда
			Если НЕ ЗначениеЗаполнено(Ссылка) И НЕ ЗначениеЗаполнено(НомерНакладной) Тогда 
			УстановитьНовыйНомер();  
			НомерНакладной = Номер;
		КонецЕсли;
	КонецЕсли;        
	
	// Удаление пустых строк в ТЧ СписокГрузов, Грузы, Назначение
	ПустыеСтрокиСписокГрузов = СписокГрузов.НайтиСтроки(Новый Структура("КлючСтроки", Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000")));
	Для каждого Стр Из ПустыеСтрокиСписокГрузов Цикл
		СписокГрузов.Удалить(Стр);
	КонецЦикла; 
	ПустыеСтрокиГрузы = Грузы.НайтиСтроки(Новый Структура("Номенклатура", Справочники.Номенклатура.ПустаяСсылка()));
	Для каждого Стр Из ПустыеСтрокиГрузы Цикл
		Грузы.Удалить(Стр);
	КонецЦикла;
	ПустыеСтрокиНазначение = Назначение.НайтиСтроки(Новый Структура("Документ", Документы.ЗаказПокупателя.ПустаяСсылка()));
	Для каждого Стр Из ПустыеСтрокиНазначение Цикл
		Назначение.Удалить(Стр);
	КонецЦикла;
	
	//ОбщийВес 			= СписокГрузов.Итог("Вес");
	//ОбщийОбъемныйВес 	= СписокГрузов.Итог("ОбъемныйВес");
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если НЕ ВидЗабора = Перечисления.ES_ВидыЗабора.Выезд И НЕ ВидЗабора = Перечисления.ES_ВидыЗабора.Реестр Тогда
		ПроверяемыеРеквизиты.Добавить("ДокументОснование");
	КонецЕсли; 
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	// РС статусов
	ДвиженияВРегистрыСтатусов();
	
	// РС ES_СведенияОЗаборах
	ДвиженияВРССведенияОЗаборах();
	
	// РС ES_ДанныеПоЗаборам
	ДвиженияВРСДанныеПоЗаборам();
	
	// РС ES_ГрузыВЗаказах
	ДвиженияВРСГрузыВЗаказах();
	
	// РС ES_НоменклатураВЗаказах
	ДвиженияВРСНоменклатураВЗаказах();
	
		
	// РС ES_ES_ГрупповойЗаборЗаказов
	ДвиженияВРСГрупповойЗаборЗаказов();
	
	//Сережко А.С. При проведении создает заказ покупателя
	
	ЗаказПокупателя = СозданиеДокументаЗаказПокупателя();    	

	
	// РС ES_ИзменяемыеРеквизитыЗаборов
	ДвиженияВРСИзменяемыеРеквизитыЗаборов(ЗаказПокупателя);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура ДвиженияВРегистрыСтатусов()
	
	// Определение статусов для записи в регистры
	СтатусЗаказа = Перечисления.ES_СтатусыЗаказов.ПустаяСсылка();
	СтатусЗабора = Перечисления.ES_СтатусыЗаборов.ПустаяСсылка();
	
	Если ВидЗабора = Перечисления.ES_ВидыЗабора.ПоПути Тогда
		
		СтатусЗаказа = Перечисления.ES_СтатусыЗаказов.Комплектуется;
		СтатусЗабора = Перечисления.ES_СтатусыЗаборов.Комплектуется;
		
	ИначеЕсли ВидЗабора = Перечисления.ES_ВидыЗабора.НаСклад Тогда 
		
		СтатусЗаказа = Перечисления.ES_СтатусыЗаказов.ОжидаетГруз;
		СтатусЗабора = Перечисления.ES_СтатусыЗаборов.ВРаботе;
		
	ИначеЕсли ВидЗабора = Перечисления.ES_ВидыЗабора.Выезд Тогда 
		
		СтатусЗабора = Перечисления.ES_СтатусыЗаборов.ВРаботе;
		//ЭР Несторук С.И. 16.02.2017 10:25:45 {
	ИначеЕсли ВидЗабора = Перечисления.ES_ВидыЗабора.ПодЗаказ Тогда 
		СтатусЗаказа = Перечисления.ES_СтатусыЗаказов.ОжидаетГруз;
		СтатусЗабора = Перечисления.ES_СтатусыЗаборов.ВРаботе;
		//ЭР Несторук С.И. 16.02.2017 10:25:45 }
	
	КонецЕсли;
	
	Если ВидЗабора = Перечисления.ES_ВидыЗабора.Реестр Тогда
		СтатусЗабора = Перечисления.ES_СтатусыЗаборов.Выполнен;
		СтатусЗаказа = Перечисления.ES_СтатусыЗаказов.ПустаяСсылка();
	КонецЕсли;
	
	//EFSOL_Шаповал Олег Анатольевич 18 августа 2017 г. 13:33:38 +
	Если Отменен Тогда
		СтатусЗабора = Перечисления.ES_СтатусыЗаборов.Отменен;
	КонецЕсли;
	//EFSOL Шаповал О.А. -

	Если ЗначениеЗаполнено(СтатусЗаказа) Тогда
		// регистр ES_СтатусыЗаказов
		Движение = Движения.ES_СтатусыЗаказов.Добавить();
		Движение.Период 					= Дата;
		Движение.Заказ 						= ДокументОснование;
		Движение.СтатусЗаказа 				= СтатусЗаказа;
		Движение.Ответственный 				= Ответственный;
	КонецЕсли; 

	Если ЗначениеЗаполнено(СтатусЗабора) Тогда
		// регистр ES_СтатусыЗаборов
		Движение = Движения.ES_СтатусыЗаборов.Добавить();
		Движение.Период 					= Дата;
		Движение.Забор 						= Ссылка;
		Движение.Заказ 						= ДокументОснование;
		Движение.СтатусЗабора 				= СтатусЗабора;
		Движение.Ответственный 				= Ответственный;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ДвиженияВРССведенияОЗаборах()
	
	ТабСведенияОЗаборах 		= ES_ФормированиеДвиженийПоРегистрамДоставки.СоздатьТаблицуСведенийОЗаборах();
				
	НоваяСтрока = ТабСведенияОЗаборах.Добавить();
	НоваяСтрока.Движения 		= Движения.ES_СведенияОЗаборах;
	НоваяСтрока.Период 			= Дата;
	НоваяСтрока.Регистратор 	= Ссылка;
	НоваяСтрока.ОснованиеЗабора = ?(ЗначениеЗаполнено(ДокументОснование), ДокументОснование, Ссылка);
	НоваяСтрока.Забор 			= Ссылка;
				
	ES_ФормированиеДвиженийПоРегистрамДоставки.СделатьЗаписьВРССведенияОЗаборах(ТабСведенияОЗаборах, Дата);
		
КонецПроцедуры

Процедура ДвиженияВРСДанныеПоЗаборам()
		
	Движения.ES_ДанныеПоЗаборам.Записывать = Истина;
	Движение = Движения.ES_ДанныеПоЗаборам.Добавить();

	Движение.Период 				= Дата;
	Движение.Регистратор 			= Ссылка;
	Движение.Забор 					= Ссылка;
	Движение.НомерДокумента 		= Номер;
	Движение.ДатаДокумента 			= Дата;
	Движение.Адрес 					= Адрес;
	Движение.АдресДолгота 			= АдресДолгота;
	Движение.АдресШирота 			= АдресШирота;
	Движение.ВидЗабора 				= ВидЗабора;
	Движение.ВремяЗабораС 			= ВремяЗабораС;
	Движение.ВремяЗабораПо 			= ВремяЗабораПо;
	Движение.ДатаЗабора 			= ДатаЗабора;
	Движение.ДокументОснование 		= ДокументОснование;
	Движение.Заказчик 				= Заказчик;
	Движение.КоличествоМест 		= КоличествоМест;
	Движение.КонтактноеЛицо 		= КонтактноеЛицо;
	Движение.НомерНакладной 		= НомерНакладной;
	Движение.ОбщийВес 				= ОбщийВес;
	Движение.ОбщийОбъем				= ОбщийОбъем;
	Движение.ОбщийОбъемныйВес 		= ОбщийОбъемныйВес;
	Движение.Отправитель 			= Отправитель;
	Движение.Подтвержден 			= Подтвержден;
	Движение.ДанныеПодтверждения 	= ДанныеПодтверждения;
	Движение.ПредставлениеГрузов 	= ПредставлениеГрузов;
	Движение.Регион 				= Регион;
	Движение.Телефон 				= Телефон;
	Движение.Комментарий			= Комментарий;
	
	//ЭР Несторук С.И. 24.01.2017 14:02:57 {
	Движение.Склад					= Склад;
	//ЭР Несторук С.И. 24.01.2017 14:02:57 }
КонецПроцедуры

Процедура ДвиженияВРСГрузыВЗаказах()
	
	Если СписокГрузов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Движения.ES_ГрузыВЗаказах.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ES_ЗаборГрузаСписокГрузов.Ссылка.ДокументОснование = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
		|			ТОГДА ES_ЗаборГрузаСписокГрузов.Ссылка
		|		ИНАЧЕ ES_ЗаборГрузаСписокГрузов.Ссылка.ДокументОснование
		|	КОНЕЦ КАК ДокументДоставки,
		|	ES_ЗаборГрузаСписокГрузов.НомерСтроки КАК НомерСтроки,
		|	ES_ЗаборГрузаСписокГрузов.КлючСтроки КАК КлючСтроки,
		|	ES_ЗаборГрузаСписокГрузов.Вес,
		|	ES_ЗаборГрузаСписокГрузов.Высота,
		|	ES_ЗаборГрузаСписокГрузов.Длина,
		|	ES_ЗаборГрузаСписокГрузов.Ширина,
		|	ES_ЗаборГрузаСписокГрузов.НППлан,
		|	ES_ЗаборГрузаСписокГрузов.ОбъемныйВес,
		|	ES_ЗаборГрузаСписокГрузов.ОписаниеГруза,
		|	ES_ЗаборГрузаСписокГрузов.Страховка,
		|	ES_ЗаборГрузаСписокГрузов.ТипГруза
		|ИЗ
		|	Документ.ES_ЗаборГруза.СписокГрузов КАК ES_ЗаборГрузаСписокГрузов
		|ГДЕ
		|	ES_ЗаборГрузаСписокГрузов.Ссылка = &Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			Движение = Движения.ES_ГрузыВЗаказах.Добавить();
			Движение.Период 			= Дата;
			Движение.Регистратор 		= Ссылка;
			Движение.ДокументДоставки 	= Выборка.ДокументДоставки;
			Движение.КлючСтроки 		= Выборка.КлючСтроки;
			Движение.ТипГруза 			= Выборка.ТипГруза;
			Движение.Вес 				= Выборка.Вес;
			Движение.ОбъемныйВес 		= Выборка.ОбъемныйВес;
			Движение.Высота 			= Выборка.Высота;
			Движение.Длина 				= Выборка.Длина;
			Движение.Ширина 			= Выборка.Ширина;
			Движение.НППлан 			= Выборка.НППлан;
			Движение.Страховка 			= Выборка.Страховка;
			Движение.ОписаниеГруза 		= Выборка.ОписаниеГруза;
			
		КонецЦикла;
	
	КонецЕсли; 
		
КонецПроцедуры

Процедура ДвиженияВРСНоменклатураВЗаказах()
	
	Если Грузы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Движения.ES_НоменклатураВЗаказах.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ES_ЗаборГрузаГрузы.Ссылка.ДокументОснование = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
		|			ТОГДА ES_ЗаборГрузаГрузы.Ссылка
		|		ИНАЧЕ ES_ЗаборГрузаГрузы.Ссылка.ДокументОснование
		|	КОНЕЦ КАК ДокументДоставки,
		//|	ES_ЗаборГрузаГрузы.НомерСтроки КАК НомерСтроки,
		|	ES_ЗаборГрузаГрузы.Номенклатура КАК Номенклатура,
		|	ES_ЗаборГрузаГрузы.ТипНоменклатурыЗапас КАК ТипНоменклатурыЗапас,
		|	ES_ЗаборГрузаГрузы.Характеристика КАК Характеристика,
		|	ES_ЗаборГрузаГрузы.Партия КАК Партия,
		|	СУММА(ES_ЗаборГрузаГрузы.Количество) КАК Количество,
		|	ES_ЗаборГрузаГрузы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	СУММА(ES_ЗаборГрузаГрузы.НППлан) КАК НППлан,
		|	ES_ЗаборГрузаГрузы.Содержание КАК Содержание,
		|	СУММА(ES_ЗаборГрузаГрузы.Цена) КАК Цена,
		|	СУММА(ES_ЗаборГрузаГрузы.ПроцентСкидкиНаценки) КАК ПроцентСкидкиНаценки,
		|	ES_ЗаборГрузаГрузы.Артикул КАК Артикул,
		|	ES_ЗаборГрузаГрузы.Штрихкод КАК Штрихкод
		|ИЗ
		|	Документ.ES_ЗаборГруза.Грузы КАК ES_ЗаборГрузаГрузы
		|ГДЕ
		|	ES_ЗаборГрузаГрузы.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ES_ЗаборГрузаГрузы.Номенклатура,
		|	ES_ЗаборГрузаГрузы.ТипНоменклатурыЗапас,
		|	ES_ЗаборГрузаГрузы.Характеристика,
		|	ES_ЗаборГрузаГрузы.Партия,
		|	ES_ЗаборГрузаГрузы.ЕдиницаИзмерения,
		|	ES_ЗаборГрузаГрузы.Содержание,
		|	ES_ЗаборГрузаГрузы.Артикул,
		|	ES_ЗаборГрузаГрузы.Штрихкод,
		//|	ES_ЗаборГрузаГрузы.НомерСтроки,
		|	ВЫБОР
		|		КОГДА ES_ЗаборГрузаГрузы.Ссылка.ДокументОснование = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
		|			ТОГДА ES_ЗаборГрузаГрузы.Ссылка
		|		ИНАЧЕ ES_ЗаборГрузаГрузы.Ссылка.ДокументОснование
		|	КОНЕЦ
		|";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			Движение = Движения.ES_НоменклатураВЗаказах.Добавить();
			Движение.Период 				= Дата;
			Движение.Регистратор 			= Ссылка;
			Движение.ДокументДоставки 		= Выборка.ДокументДоставки;
			Движение.Номенклатура 			= Выборка.Номенклатура;
			Движение.ТипНоменклатурыЗапас 	= Выборка.ТипНоменклатурыЗапас;
			Движение.Характеристика 		= Выборка.Характеристика;
			Движение.Партия 				= Выборка.Партия;
			Движение.ЕдиницаИзмерения 		= Выборка.ЕдиницаИзмерения;
			Движение.Количество 			= Выборка.Количество;
			Движение.НППлан 				= Выборка.НППлан;
			Движение.Содержание 			= Выборка.Содержание;
			Движение.Цена 					= Выборка.Цена;
			Движение.ПроцентСкидкиНаценки 	= Выборка.ПроцентСкидкиНаценки;
			Движение.Артикул				= Выборка.Артикул;
			Движение.Штрихкод				= Выборка.Штрихкод;
			
		КонецЦикла;
	
	КонецЕсли; 
		
КонецПроцедуры

Процедура ДвиженияВРСИзменяемыеРеквизитыЗаборов(ЗаказПокупателя = Неопределено)
	
	ТабИзменяемыеРеквизиты = ES_ФормированиеДвиженийПоРегистрамДоставки.СоздатьТабДляИзменяемыхРеквизитовЗаборов();
	ДобавитьЗаписиВТабИзменяемыеРеквизиты(ТабИзменяемыеРеквизиты,ЗаказПокупателя);
	Если ТабИзменяемыеРеквизиты.Количество() > 0 Тогда
		ES_ФормированиеДвиженийПоРегистрамДоставки.СделатьЗаписьВРегистрСведенийИзменяемыеРеквизитыЗабора(ТабИзменяемыеРеквизиты, Ссылка);
	КонецЕсли; 
		
КонецПроцедуры

Процедура ДобавитьЗаписиВТабИзменяемыеРеквизиты(ТабИзменяемыеРеквизиты,ЗаказПокупателя = Неопределено)

	//// Курьер
	//Если ЗначениеЗаполнено(Курьер) Тогда
	//	НоваяСтрока = ТабИзменяемыеРеквизиты.Добавить();
	//	НоваяСтрока.Движения 		= Движения.ES_ИзменяемыеРеквизитыЗаборов;
	//	НоваяСтрока.Период 			= Дата;
	//	НоваяСтрока.Регистратор 	= Ссылка;
	//	НоваяСтрока.Забор 			= Ссылка;
	//	НоваяСтрока.РеквизитЗабора 	= Перечисления.ES_ИзменяемыеРеквизитыЗабора.Курьер;
	//	НоваяСтрока.Значение 		= Курьер;
	//КонецЕсли; 
	
	// Комментарий
	Если ЗначениеЗаполнено(Комментарий) Тогда
		НоваяСтрока = ТабИзменяемыеРеквизиты.Добавить();
		НоваяСтрока.Движения 		= Движения.ES_ИзменяемыеРеквизитыЗаборов;
		НоваяСтрока.Период 			= Дата;
		НоваяСтрока.Регистратор 	= Ссылка;
		НоваяСтрока.Забор 			= Ссылка;
		НоваяСтрока.РеквизитЗабора 	= Перечисления.ES_ИзменяемыеРеквизитыЗабора.Комментарий;
		НоваяСтрока.Значение 		= Комментарий;
	КонецЕсли; 
	
	// Комментарий
	Если ЗначениеЗаполнено(ЗаказПокупателя) Тогда
		Если ЗаказПокупателя.Проведен Тогда
			
			НоваяСтрока = ТабИзменяемыеРеквизиты.Добавить();
			НоваяСтрока.Движения 		= Движения.ES_ИзменяемыеРеквизитыЗаборов;
			НоваяСтрока.Период 			= Дата;
			НоваяСтрока.Регистратор 	= Ссылка;
			НоваяСтрока.Забор 			= Ссылка;
			НоваяСтрока.РеквизитЗабора 	= Перечисления.ES_ИзменяемыеРеквизитыЗабора.АктивныйЗаказ;
			НоваяСтрока.Значение 		= ЗаказПокупателя;
		КонецЕсли; 
	КонецЕсли; 

КонецПроцедуры

Процедура ДвиженияВРСГрупповойЗаборЗаказов()
	
	Если Назначение.Количество() = 0 Тогда
		Возврат;
	КонецЕсли; 
	
	Движения.ES_ГрупповойЗаборЗаказов.Записывать = Истина;
	
	Для каждого НазначениеЗаказ Из Назначение Цикл
		Движение = Движения.ES_ГрупповойЗаборЗаказов.Добавить();
		Движение.Период = Дата;
		Движение.Заказ 	= НазначениеЗаказ.Документ;
		Движение.Забор 	= Ссылка;
	КонецЦикла; 
	
КонецПроцедуры

Функция СозданиеДокументаЗаказПокупателя()
	
	//Форма=ЭтотОбъект.ПолучитьФорму("ФормаДокумента");
	
	
	Запрос = Новый Запрос;     
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаказПокупателя.Ссылка
	|ИЗ
	|	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	|ГДЕ
	|	ЗаказПокупателя.ДокументОснование = &ДокументОснование";
	
	Запрос.УстановитьПараметр("ДокументОснование", Ссылка);
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	Если ЗначениеЗаполнено(ES_Стоимость) Тогда
		Если РезультатЗапроса.Количество() > 0 Тогда
			НовыйДокумент = РезультатЗапроса[0].Ссылка.ПолучитьОбъект(); 			 
		Иначе  			
			НовыйДокумент = Документы.ЗаказПокупателя.СоздатьДокумент();
		КонецЕсли;
		НовыйДокумент.Дата = ТекущаяДата();
		НовыйДокумент.ВидОперации = Перечисления.ВидыОперацийЗаказПокупателя.ЗаказНаПродажу;
		НовыйДокумент.ДатаОтгрузки =  ТекущаяДата();
		НовыйДокумент.СостояниеЗаказа = Справочники.СостоянияЗаказовПокупателей.НайтиПоНаименованию("В работе");
		НовыйДокумент.ВидЗаказа = Справочники.ВидыЗаказовПокупателей.Основной;
		НовыйДокумент.Контрагент = Заказчик;
		ДоговорПоУмолчанию = ПолучитьОсновнойДоговор(НовыйДокумент.Контрагент);
		Если ЗначениеЗаполнено(Ссылка.ES_Договор) Тогда
			НовыйДокумент.Договор = Ссылка.ES_Договор;
		Иначе
			НовыйДокумент.Договор = ДоговорПоУмолчанию;
		КонецЕсли; 
		НовыйДокумент.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДС;
		НовыйДокумент.Комментарий = "Документ сформирован автоматически на соновании сбора груза - "+Ссылка;
		НовыйДокумент.Организация = ES_ОбщегоНазначения.ПолучитьСтартовуюНастройку(Перечисления.ES_ВидыСтартовыхНастроек.Организация); 			
		
		НовыйДокумент.ВидСкидкиНаценки =НовыйДокумент.Договор.ВидСкидкиНаценки;
		НовыйДокумент.ВидЦен = НовыйДокумент.Договор.ВидЦен;
		НовыйДокумент.СуммаВключаетНДС = ?(ЗначениеЗаполнено(НовыйДокумент.Договор.ВидЦен), НовыйДокумент.Договор.ВидЦен.ЦенаВключаетНДС, Неопределено);
		НовыйДокумент.ДокументОснование = Ссылка;
		НовыйДокумент.ДатаОтгрузки = ТекущаяДата();
		
		ES_ОбщегоНазначения.ЗаполнитьДокДаннымиКонтрагента(НовыйДокумент);
		
		НовыйДокумент.Запасы.Очистить();
		НоваяСтрока = НовыйДокумент.Запасы.Добавить();
		НоваяСтрока.Номенклатура = ES_ОбщегоНазначения.ПолучитьСтартовуюНастройку(Перечисления.ES_ВидыСтартовыхНастроек.УслугаСбора);
		НоваяСтрока.ЕдиницаИзмерения = НоваяСтрока.Номенклатура.ЕдиницаИзмерения;
		НоваяСтрока.Количество = 1;
		НоваяСтрока.Цена = ES_Стоимость;
		НоваяСтрока.Сумма = ES_Стоимость;
		НоваяСтрока.ПроцентАвтоматическойСкидки = 0;
		НоваяСтрока.ПроцентСкидкиНаценки =0;
		НоваяСтрока.СтавкаНДС = НоваяСтрока.Номенклатура.СтавкаНДС;
		РассчитатьСуммуНДС(НоваяСтрока,НовыйДокумент);
		НоваяСтрока.Всего = НоваяСтрока.Сумма + ?(НовыйДокумент.СуммаВключаетНДС, 0, НоваяСтрока.СуммаНДС);
		НовыйДокумент.СуммаДокумента = НоваяСтрока.Всего;
		НоваяСтрока.ДатаОтгрузки = ТекущаяДата();			
		
		Попытка
			Если НовыйДокумент.Ссылка.Пустая() Тогда
				ЭтоНовый = Истина;
			Иначе
				ЭтоНовый = Ложь;
			КонецЕсли;
			НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение); 				
			
			Если ЭтоНовый Тогда
				Сообщить("Создан новый документ "+НовыйДокумент.Ссылка);
			Иначе
				Сообщить("Перезаписан документ "+НовыйДокумент.Ссылка);
			КонецЕсли;
			
		Исключение
			НовыйДокумент.Записать(РежимЗаписиДокумента.Запись);
			Сообщить("Документ не проведен"+НовыйДокумент.Ссылка);
		КонецПопытки; 
		
		Возврат НовыйДокумент.Ссылка;
		//КонецЕсли
	Иначе
		Если РезультатЗапроса.Количество() > 0 Тогда
			НовыйДокумент = РезультатЗапроса[0].Ссылка.ПолучитьОбъект(); 			 
			НовыйДокумент.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		КонецЕсли;
	КонецЕсли;   
КонецФункции

Процедура РассчитатьСуммуНДС(СтрокаТабличнойЧасти,мОбъект)
	
	СтавкаНДС = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеСтавкиНДС(СтрокаТабличнойЧасти.СтавкаНДС);
	
	Если мОбъект.СуммаВключаетНДС Тогда
		СтрокаТабличнойЧасти.СуммаНДС = СтрокаТабличнойЧасти.Сумма - СтрокаТабличнойЧасти.Сумма / ((СтавкаНДС + 100) / 100);
	Иначе
		СтрокаТабличнойЧасти.СуммаНДС = СтрокаТабличнойЧасти.Сумма * СтавкаНДС / 100;
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьОсновнойДоговор(Контрагент)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	ОсновныеДоговорыКонтрагента.Договор КАК Договор
		|ИЗ
		|	РегистрСведений.ОсновныеДоговорыКонтрагента КАК ОсновныеДоговорыКонтрагента
		|ГДЕ
		|	ОсновныеДоговорыКонтрагента.Контрагент = &Контрагент";
	
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Договор;
	КонецЦикла;	 
	
	Возврат Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
	
КонецФункции


#КонецЕсли
Процедура ПриЗаписи(Отказ)
	
	//Если ВидЗабора = Перечисления.ES_ВидыЗабора.Выезд
	//	ИЛИ ВидЗабора = Перечисления.ES_ВидыЗабора.Реестр Тогда
	//		Если НЕ ЗначениеЗаполнено(Ссылка) И НЕ ЗначениеЗаполнено(НомерНакладной) Тогда 
	//		УстановитьНовыйНомер();  
	//		НомерНакладной = Номер;
	//	КонецЕсли;
	//КонецЕсли;
	// 	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
// активный заказ
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ES_ИзменяемыеРеквизитыЗаборовАктивыныйЗаказ.Значение КАК АктивныйЗаказ
	               |ИЗ
	               |	РегистрСведений.ES_ИзменяемыеРеквизитыЗаборов.СрезПоследних(
	               |			,
	               |			Забор = &Забор
	               |				И РеквизитЗабора = ЗНАЧЕНИЕ(Перечисление.ES_ИзменяемыеРеквизитыЗабора.АктивныйЗаказ)) КАК ES_ИзменяемыеРеквизитыЗаборовАктивыныйЗаказ";
	Запрос.УстановитьПараметр("Забор", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		АктивныйЗаказ = ВыборкаДетальныеЗаписи.АктивныйЗаказ;
		мОбъект = АктивныйЗаказ.ПолучитьОбъект();
		мОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	КонецЕсли;
	
	
КонецПроцедуры

 
