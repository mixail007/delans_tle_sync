
Процедура ОбработкаПроведения(Отказ, Режим)

	Если ВидОперации = Перечисления.ES_ВидыОперацийПриемки.Заказы ИЛИ
		ВидОперации = Перечисления.ES_ВидыОперацийПриемки.Курьер Тогда
		Поставка = Ложь;
		Если ЗначениеЗаполнено(ДокументОснование) И ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ES_Приемка") Тогда
			Поставка = Истина;	
		КонецЕсли;
		Если Поставка Тогда
			
			// регистр ES_Приемка Расход
			Движения.ES_Поставка.Записывать = Истина;
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ES_ПриемкаЗаказы.Заказ
			|ПОМЕСТИТЬ ВТ_Заказы
			|ИЗ
			|	Документ.ES_Приемка.Заказы КАК ES_ПриемкаЗаказы
			|ГДЕ
			|	ES_ПриемкаЗаказы.Ссылка = &Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ВТ_Заказы.Заказ,
			|	ЕСТЬNULL(ES_ПоставкаОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток
			|ИЗ
			|	ВТ_Заказы КАК ВТ_Заказы
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ES_Поставка.Остатки(
			|				&Дата,
			|				Заказ В
			|					(ВЫБРАТЬ
			|						ВТ_Заказы.Заказ
			|					ИЗ
			|						ВТ_Заказы КАК ВТ_Заказы)) КАК ES_ПоставкаОстатки
			|		ПО ВТ_Заказы.Заказ = ES_ПоставкаОстатки.Заказ";
			
			
			
			Запрос.УстановитьПараметр("Дата", КонецДня(ТекущаяДата()));
			Запрос.УстановитьПараметр("Ссылка", Ссылка);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			Выборка = РезультатЗапроса.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				
				Если Выборка.КоличествоОстаток <=0 Тогда
					Сообщить("По документу " + Выборка.Заказ + " не выполнена поставка или же он уже принят");
					Отказ = Истина;
				Иначе 
					Движение = Движения.ES_Поставка.Добавить();
					Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
					Движение.Период = Дата;
					Движение.Заказ = Выборка.Заказ;
					Движение.Количество = 1;
					
					//Если Выборка.Некондиция = Ложь Тогда
					//	Движение = Движения.ES_Заказы.Добавить();
					//	Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
					//	Движение.Период = Дата;
					//	Движение.Заказ = Выборка.Заказ;
					//	Движение.Количество = 1;
					//КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
		КонецЕсли;
		
		Движения.ES_ЗаказыНаСкладе.Записывать = Истина;
		Движения.ES_ЗаказыВПути.Записывать = Истина;         
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ES_ПриемкаЗаказы.Заказ КАК Заказ,
		|	ES_ПриемкаЗаказы.Проверен КАК Проверен,
		|	ES_ПриемкаЗаказы.СвязанныйДокумент КАК СвязанныйДокумент
		|ПОМЕСТИТЬ ВТ_Заказы
		|ИЗ
		|	Документ.ES_Приемка.Заказы КАК ES_ПриемкаЗаказы
		|ГДЕ
		|	ES_ПриемкаЗаказы.Ссылка = &Ссылка
		|	И ES_ПриемкаЗаказы.Заказ ССЫЛКА Документ.ЗаказПокупателя
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Заказы.Заказ КАК Заказ,
		|	ES_ЗаказыНаСкладеОстатки.Склад КАК Склад,
		|	ЕСТЬNULL(ES_ЗаказыНаСкладеОстатки.Курьер, ЗНАЧЕНИЕ(Справочник.Сотрудники.ПУстаяСсылка)) КАК Курьер,
		|	ЕСТЬNULL(ES_ЗаказыНаСкладеОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
		|	ВТ_Заказы.Проверен КАК Проверен,
		|	ES_ДанныеПоЗаказамСрезПоследних.ВидДоставки КАК ВидДоставки,
		|	ES_ЗаказыВПутиОстатки.СкладОтправитель КАК СкладОтправитель,
		|	ES_ЗаказыВПутиОстатки.СкладПолучатель КАК СкладПолучатель,
		|	ЕСТЬNULL(ES_ЗаказыВПутиОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокВПути,
		|	ES_СтатусыЗаказовСрезПоследних.СтатусЗаказа КАК СтатусЗаказа,
		|	ВТ_Заказы.СвязанныйДокумент КАК СвязанныйДокумент
		|ИЗ
		|	ВТ_Заказы КАК ВТ_Заказы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ES_ЗаказыНаСкладе.Остатки(
		|				&МоментВремени,
		|				Заказ В
		|					(ВЫБРАТЬ
		|						ВТ_Заказы.Заказ
		|					ИЗ
		|						ВТ_Заказы КАК ВТ_Заказы)) КАК ES_ЗаказыНаСкладеОстатки
		|		ПО ВТ_Заказы.Заказ = ES_ЗаказыНаСкладеОстатки.Заказ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ES_ДанныеПоЗаказам.СрезПоследних(
		|				,
		|				Заказ В
		|					(ВЫБРАТЬ
		|						ВТ_Заказы.Заказ
		|					ИЗ
		|						ВТ_Заказы КАК ВТ_Заказы)) КАК ES_ДанныеПоЗаказамСрезПоследних
		|		ПО ВТ_Заказы.Заказ = ES_ДанныеПоЗаказамСрезПоследних.Заказ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ES_ЗаказыВПути.Остатки(
		|				&МоментВремени,
		|				Заказ В
		|						(ВЫБРАТЬ
		|							ВТ_Заказы.Заказ
		|						ИЗ
		|							ВТ_Заказы КАК ВТ_Заказы)
		|					И СкладПолучатель = &Склад) КАК ES_ЗаказыВПутиОстатки
		|		ПО ВТ_Заказы.Заказ = ES_ЗаказыВПутиОстатки.Заказ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ES_СтатусыЗаказов.СрезПоследних(
		|				,
		|				Заказ В
		|					(ВЫБРАТЬ
		|						ВТ_Заказы.Заказ КАК Заказ
		|					ИЗ
		|						ВТ_Заказы КАК ВТ_Заказы)) КАК ES_СтатусыЗаказовСрезПоследних
		|		ПО ВТ_Заказы.Заказ = ES_СтатусыЗаказовСрезПоследних.Заказ";
		
		Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("Склад", Склад);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			//ЭР Несторук С.И. 25.10.2017 13:40:41 {
			КонтрольОстатков = Истина;
			Если Выборка.ВидДоставки = Перечисления.ES_ВидыДоставки.ДвериДвери  Тогда
				НайтиСтроки = Заказы.НайтиСтроки(Новый Структура("Заказ", Выборка.СвязанныйДокумент));
				Если НайтиСтроки.Количество() > 0 Тогда
					КонтрольОстатков = Ложь;
				КонецЕсли;
			КонецЕсли;
			//}ЭР Несторук С.И.
			
			Если Выборка.ВидДоставки = Перечисления.ES_ВидыДоставки.СкладСклад и ЗначениеЗаполнено(Склад.ES_Партнер) Тогда
				Отказ = Истина;
				Сообщить(НСтр("ru='"+Выборка.Заказ + " не может быть принят на партнерский склад. Причина - вид доставки: "+ Перечисления.ES_ВидыДоставки.СкладСклад+"'"));
			КонецЕсли;
			
			Если СозданНаОсновании = Истина И Выборка.Проверен <> Истина Тогда
				//Отказ = Истина;
				//Сообщить( НСтр("ru = '" + Выборка.Заказ +" не был проверен'"));
				
				Продолжить;
			КонецЕсли;
			Если КонтрольОстатков Тогда
				Если Выборка.КоличествоОстаток > 0 Тогда
					Если ЗначениеЗаполнено(Выборка.Курьер) Тогда
						Движение = Движения.ES_ЗаказыНаСкладе.ДобавитьРасход();
						Движение.Период = Дата;
						Движение.Склад = Склад;
						Движение.Заказ = Выборка.Заказ;
						Движение.Количество	= Выборка.КоличествоОстаток;
						Движение.Курьер = Выборка.Курьер;
						
						Движение = Движения.ES_ЗаказыНаСкладе.ДобавитьПриход();
						Движение.Период = Дата;
						Движение.Склад = Склад;
						Движение.Заказ = Выборка.Заказ;
						Движение.Количество	= 1;
						
					Иначе				
						Отказ = Истина;
						Сообщить( НСтр("ru = 'Заказ " + Выборка.Заказ +" уже оприходован на склад " + Выборка.Склад +"'"));
					КонецЕсли;
				Иначе
					Если Выборка.КоличествоОстатокВПути > 0 Тогда
						ДвижениеВПути = Движения.ES_ЗаказыВПути.ДобавитьРасход();
						ДвижениеВПути.Период = Дата;
						ДвижениеВПути.Заказ = Выборка.Заказ;
						ДвижениеВПути.СкладПолучатель = Выборка.СкладПолучатель;
						ДвижениеВПути.СкладОтправитель = Выборка.СкладОтправитель;
						ДвижениеВПути.Количество = Выборка.КоличествоОстатокВПути;
					КонецЕсли;
					
					Движение = Движения.ES_ЗаказыНаСкладе.ДобавитьПриход();
					Движение.Период = Дата;
					Движение.Склад = Склад;
					Движение.Заказ = Выборка.Заказ;
					Движение.Количество	= 1;
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		
		
		ДобавитьЗаписьРССведенияОЗаказах();
		
		
		//ЭР Несторук С.И. 14.03.2017 15:02:10 {
		//Теперь приемка не меняет статус заказа на доставку
		ДобавитьЗаписьВРССтатусыЗаказов(Отказ);
		//}ЭР Несторук С.И.
		
		ДобавитьЗаписиВИзменяемыеРеквизитыЗаказов(ПолучитьФункциональнуюОпцию("УчетПоЯчейкам"));
		
		
		Если НЕ Отказ Тогда
			СменитьГабаритыВЗаказах();
		КонецЕсли;
		
	//ЭР Несторук С.И. 14.09.2017 22:31:20 {
	
	ИначеЕсли ВидОперации = Перечисления.ES_ВидыОперацийПриемки.НаложенныеПлатежи Тогда
		//думаю нужен какой-то контроль
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ES_ПриемкаПлатежи.Заказ,
		|	ES_ПриемкаПлатежи.Принято КАК Принято,
		|	ES_ПриемкаПлатежи.Ссылка.Партнер
		|ПОМЕСТИТЬ ВТ_Заказы
		|ИЗ
		|	Документ.ES_Приемка.Платежи КАК ES_ПриемкаПлатежи
		|ГДЕ
		|	ES_ПриемкаПлатежи.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Заказы.Заказ,
		|	ВТ_Заказы.Принято,
		|	ЕСТЬNULL(ES_НаложенныеПлатежиПартнеровОбороты.ПринятоОборот, 0) КАК ПринятоОборот
		|ИЗ
		|	ВТ_Заказы КАК ВТ_Заказы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ES_НаложенныеПлатежиПартнеров.Обороты(
		|				,
		|				,
		|				,
		|				Заказ В
		|					(ВЫБРАТЬ
		|						ВТ_Заказы.Заказ
		|					ИЗ
		|						ВТ_Заказы КАК ВТ_Заказы)) КАК ES_НаложенныеПлатежиПартнеровОбороты
		|		ПО ВТ_Заказы.Заказ = ES_НаложенныеПлатежиПартнеровОбороты.Заказ
		|			И ВТ_Заказы.Партнер = ES_НаложенныеПлатежиПартнеровОбороты.Партнер";
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			Если Выборка.ПринятоОборот > 0 Тогда
				Сообщить(НСтр("ru='"+Выборка.Заказ+ " уже принято НП на сумму "+Выборка.ПринятоОборот+"'"));
				Отказ=Истина;
				Продолжить;
			КонецЕсли;
			
			Если Выборка.Принято > 0  Тогда
				ES_ОбщегоНазначения.СформироватьДвижения_ES_НаложенныеПлатежиПартнеров(Движения,Дата,Ссылка,Партнер,Выборка.Заказ,0,0,0,0,Выборка.Принято);
			КонецЕсли;
			
		КонецЦикла;
		
		
	КонецЕсли;
	//}ЭР Несторук С.И.
	
	//////( ЭР Мажаренко С.А 22.09.2017
	//Если РольДоступна("ES_Партнёр") И ЗначениеЗаполнено(Склад.ES_Партнер) Тогда	
	//	//	ДвиженияЗаписать();
	//
	//	Если НЕ Отказ Тогда
	//		Массивзаказов = Заказы.ВыгрузитьКолонки("Заказ");
	//		Если Массивзаказов.Количество() = 0 Тогда
	//			
	//		КонецЕсли;
	//		
	//		Запрос = Новый Запрос;
	//		Запрос.Текст = 
	//		"ВЫБРАТЬ
	//		|	ES_ПланДоставки.Ссылка
	//		|ИЗ
	//		|	Документ.ES_ПланДоставки КАК ES_ПланДоставки
	//		|ГДЕ
	//		|	ES_ПланДоставки.ДокументОснование = &Ссылка
	//		|	И НЕ ES_ПланДоставки.ПометкаУдаления";
	//		
	//		Запрос.УстановитьПараметр("Ссылка", Ссылка);
	//		
	//		РезультатЗапроса = Запрос.Выполнить();
	//		
	//		Создаем = Истина;
	//		Если НЕ РезультатЗапроса.Пустой() Тогда
	//			Создаем = Ложь;
	//		КонецЕсли;
	//		
	//		Если Создаем тогда
	//			
	//			ПланДоставки = Документы.ES_ПланДоставки.СоздатьДокумент();
	//			
	//			
	//			
	//		КонецЕсли;
	//		
	//		
	//	КонецЕсли;
	//	
	//КонецЕсли;
	////) ЭР Мажаренко С.А 22.09.2017
		
КонецПроцедуры

Процедура ДобавитьЗаписьВРССтатусыЗаказов(Отказ)
	
	//Если в приемку попадает заказ из перемещения (т.е. в статусе МеждуСкладами), то заказу устанавливается тот статус, с которым он попал в перемещение
	//Остальное пока закомментированно
	ТекстЗапроса = "";
	МассивЗаказов = Новый Массив;
	Запрос = Новый Запрос;
	Движения.ES_СтатусыЗаказов.Записывать = Истина;
	Для каждого Стр Из Заказы Цикл
		ТекстЗапроса = ТекстЗапроса+ Символы.ПС + 
		"ВЫБРАТЬ
		|	ES_СтатусыЗаказовСрезПоследних.Заказ,
		|	ES_СтатусыЗаказовСрезПоследних.СтатусЗаказа,
		|	&Дата"+Стр.НомерСтроки+" КАК ДатаПроведения,
		|  &Некондиция"+ Стр.НомерСтроки+" КАК Некондиция,
		|	isnull(&СтатусЗаказаДоПеремещения" + Стр.НомерСтроки+ ", ЗНАЧЕНИЕ (Перечисление.ES_СтатусыЗаказов.ПустаяСсылка)) КАК СтатусЗаказаДоПеремещения
		|ИЗ
		|	РегистрСведений.ES_СтатусыЗаказов.СрезПоследних(&Дата"+Стр.НомерСтроки+", Заказ = &Заказ"+Стр.НомерСтроки+") КАК ES_СтатусыЗаказовСрезПоследних;
		|///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////";
		Запрос.УстановитьПараметр("Дата"+Стр.НомерСтроки,Стр.ДатаВремяДобавленияЗаказа);
		Запрос.УстановитьПараметр("Некондиция"+ Стр.НомерСтроки, Стр.Некондиция);
		Запрос.УстановитьПараметр("Заказ"+Стр.НомерСтроки,Стр.Заказ);
		Запрос.УстановитьПараметр("СтатусЗаказаДоПеремещения"+Стр.НомерСтроки, Стр.СтатусЗаказа);
	КонецЦикла;
	Запрос.Текст = ТекстЗапроса;
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	
	Для й = 0 По МассивРезультатов.Количество()-1 Цикл
		
		Выборка = МассивРезультатов[й].Выбрать();
		Выборка.Следующий();
		Если ВидОперации = Перечисления.ES_ВидыОперацийПриемки.Заказы 
			ИЛИ ВидОперации = Перечисления.ES_ВидыОперацийПриемки.Курьер Тогда
			//Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ES_ПеремещениеЗаказов")
			//	И ЗначениеЗаполнено(ДокументОснование) Тогда
				//Если Выборка.СтатусЗаказаДоПеремещения = Перечисления.ES_СтатусыЗаказов.Подготовлен Тогда
				//	СтатусЗаказаДляПроведения = Перечисления.ES_СтатусыЗаказов.ПодготовленПринят;
				//Иначе
				Если Выборка.СтатусЗаказа = Перечисления.ES_СтатусыЗаказов.МеждуСкладами Тогда	
				СтатусЗаказаДляПроведения = Выборка.СтатусЗаказаДоПеремещения;
				Движение = Движения.ES_СтатусыЗаказов.Добавить();
				Движение.Период						= Выборка.ДатаПроведения;
				Движение.Заказ 						= Выборка.Заказ;
				Движение.СтатусЗаказа 				= СтатусЗаказаДляПроведения;
				Движение.Ответственный 				= Ответственный;

				КонецЕсли;
			
			//Иначе
			//	
			//	Если Выборка.Некондиция = Истина Тогда
			//		СтатусЗаказаДляПроведения = Перечисления.ES_СтатусыЗаказов.Некондиция;
			//	ИначеЕсли  Выборка.СтатусЗаказа = Перечисления.ES_СтатусыЗаказов.Подготовлен 
			//		ИЛИ Выборка.СтатусЗаказа = Перечисления.ES_СтатусыЗаказов.ОжидаетГруз Тогда
			//		СтатусЗаказаДляПроведения = Перечисления.ES_СтатусыЗаказов.ПодготовленПринят
			//	ИначеЕсли Выборка.СтатусЗаказа = Перечисления.ES_СтатусыЗаказов.Назначен Тогда
			//		СтатусЗаказаДляПроведения = Перечисления.ES_СтатусыЗаказов.НазначенПринят
			//	ИначеЕсли Выборка.СтатусЗаказа = Перечисления.ES_СтатусыЗаказов.МеждуСкладами Тогда
			//		СтатусЗаказаДляПроведения = Перечисления.ES_СтатусыЗаказов.ПодготовленПринят
			//	Иначе
			//		Отказ = Истина;
			//		Сообщить("" + Выборка.Заказ + ", статус: " + Выборка.СтатусЗаказа + ". Приемку провести нельзя");
			//		Продолжить;
			//	КонецЕсли;
				
			//КонецЕсли;
			
		ИначеЕсли ВидОперации = Перечисления.ES_ВидыОперацийПриемки.Заказы Тогда
		//	
		//	Если Выборка.Некондиция = Истина Тогда
		//		СтатусЗаказаДляПроведения = Перечисления.ES_СтатусыЗаказов.Некондиция;
		//	ИначеЕсли  Выборка.СтатусЗаказа = Перечисления.ES_СтатусыЗаказов.НеДоставлен ИЛИ 
		//		Выборка.СтатусЗаказа = Перечисления.ES_СтатусыЗаказов.Отказ ИЛИ
		//		Выборка.СтатусЗаказа = Перечисления.ES_СтатусыЗаказов.ЧастичноДоставлен ИЛИ
		//		Выборка.СтатусЗаказа = Перечисления.ES_СтатусыЗаказов.ЧастичноДоставленРассчитать Тогда
		//		СтатусЗаказаДляПроведения = Выборка.СтатусЗаказа;
		//	ИначеЕсли Выборка.СтатусЗаказа = Перечисления.ES_СтатусыЗаказов.Подготовлен Тогда
		//		СтатусЗаказаДляПроведения = Перечисления.ES_СтатусыЗаказов.ПодготовленПринят;
		//	Иначе
		//		Отказ = Истина;
		//		Сообщить("" + Выборка.Заказ + ", статус: " + Выборка.СтатусЗаказа + ". Приемку провести нельзя");
		//		Продолжить;
		//	КонецЕсли;
		КонецЕсли;	
		//Движение = Движения.ES_СтатусыЗаказов.Добавить();
		//Движение.Период						= Выборка.ДатаПроведения;
		//Движение.Заказ 						= Выборка.Заказ;
		//Движение.СтатусЗаказа 				= СтатусЗаказаДляПроведения;
		//Движение.Ответственный 				= Ответственный;
		//
		
	КонецЦикла;
		
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	//Нужно доработать
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	ES_ПриемкаЗаказы.Заказ
	//	|ПОМЕСТИТЬ ВТ_Заказы
	//	|ИЗ
	//	|	Документ.ES_Приемка.Заказы КАК ES_ПриемкаЗаказы
	//	|ГДЕ
	//	|	ES_ПриемкаЗаказы.Ссылка = &Ссылка
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	ВТ_Заказы.Заказ,
	//	|	ES_СведенияОЗаказахСрезПоследних.Регистратор
	//	|ИЗ
	//	|	ВТ_Заказы КАК ВТ_Заказы
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ES_СведенияОЗаказах.СрезПоследних(
	//	|				,
	//	|				Заказ В
	//	|					(ВЫБРАТЬ
	//	|						ВТ_Заказы.Заказ
	//	|					ИЗ
	//	|						ВТ_Заказы КАК ВТ_Заказы)) КАК ES_СведенияОЗаказахСрезПоследних
	//	|		ПО ВТ_Заказы.Заказ = ES_СведенияОЗаказахСрезПоследних.Заказ";
	//
	//Запрос.УстановитьПараметр("Ссылка", Ссылка);
	//
	//РезультатЗапроса = Запрос.Выполнить();
	//
	//Выборка = РезультатЗапроса.Выбрать();
	//
	//Пока Выборка.Следующий() Цикл
	//	Если ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ЗаказПокупателя") ИЛИ
	//		ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ES_Приемка")Тогда
	//		Продолжить;
	//	Иначе
	//		Сообщить("" + Выборка.Заказ + " присутсвует в документе "+ Выборка.Регистратор);
	//		Отказ = Истина;
	//		
	//	КонецЕсли;
	//КонецЦикла;
	     
	
КонецПроцедуры

Процедура ДобавитьЗаписьРССведенияОЗаказах()

	ТабСведенияОЗаказе 			= ES_ФормированиеДвиженийПоРегистрамДоставки.СоздатьТаблицуСведенийОЗаказах();
	
	Для каждого Стр ИЗ Заказы Цикл
		Если ТипЗнч(Стр.Заказ) = Тип("ДокументСсылка.ES_ЗаборГруза") Тогда
			Продолжить;
		КонецЕсли;
		
		// РС ES_СведенияОЗаказах - заполнение таблицы
		НоваяСтрока = ТабСведенияОЗаказе.Добавить();
		НоваяСтрока.Движения 		= Движения.ES_СведенияОЗаказах;
		НоваяСтрока.Период 			= Дата;
		НоваяСтрока.Регистратор 	= Ссылка;
		НоваяСтрока.Заказ 			= Стр.Заказ;
		НоваяСтрока.Приемка 		= Ссылка;
		
	КонецЦикла;
	
	// РС ES_СведенияОЗаказах
	ES_ФормированиеДвиженийПоРегистрамДоставки.СделатьЗаписьВРССведенияОЗаказах(ТабСведенияОЗаказе, Дата);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ДокументОснование = ДанныеЗаполнения;
	
	Склад = ES_ОбщегоНазначения.ПолучитьСтартовуюНастройку(Перечисления.ES_ВидыСтартовыхНастроек.Склад);

	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ES_Поставка") Тогда
		
		МассивЗаказов = Новый Массив;
		Для каждого Стр из ДанныеЗаполнения.Заказы Цикл
			МассивЗаказов.Добавить(Стр.Заказ);
		КонецЦикла;
		
		ЗаполнитьТЧЗаказы(МассивЗаказов,ДанныеЗаполнения);
		
		Комментарий = ДанныеЗаполнения.Комментарий;
		Ответственный = ДанныеЗаполнения.Ответственный;
		ДокументОснование = ДанныеЗаполнения;
		ES_ЗагруженССайта = ДанныеЗаполнения.ES_ЗагруженССайта;
		СозданНаОсновании = Истина;
		ВидОперации = Перечисления.ES_ВидыОперацийПриемки.Заказы; 
	КонецЕсли;

	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ES_ПеремещениеЗаказов") Тогда
		Ответственный = ДанныеЗаполнения.Ответственный;
		СозданНаОсновании = Истина;
		Если ДанныеЗаполнения.ВидОперации = Перечисления.ES_ВидыОперацийПеремещение.Заказы Тогда
			Если НЕ ДанныеЗаполнения.Подтвержден Тогда
				ВызватьИсключение НСтр("ru = 'Создать ""Приемку"" можно только на основании утвержденного Перемещения!'");
			КонецЕсли;
			
			УчетПоЯчейкам = ПолучитьФункциональнуюОпцию("УчетПоЯчейкам");
			
			Если УчетПоЯчейкам Тогда
				СтартНастройки = ES_ОбщегоНазначения.ПолучитьВсеСтартовыеНастройки();
				ЯчейкаОсновная 	= СтартНастройки.ОсновнаяЯчейка;
				ЯчейкаПроблема 	= СтартНастройки.ЯчейкаПроблема;
				ЯчейкаКВыдаче  	= СтартНастройки.ЯчейкаКВыдаче;
			КонецЕсли;
			
			
			ВидОперации = Перечисления.ES_ВидыОперацийПриемки.Заказы;
			Склад = ДанныеЗаполнения.СкладПолучатель;
			
			Для каждого Стр ИЗ ДанныеЗаполнения.Заказы Цикл
				НоваяСтрокаЗаказы = Заказы.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаЗаказы,Стр);
				
				//ЭР Несторук С.И. 30.10.2017 16:09:42 {
				Если УчетПоЯчейкам И ТипЗнч(Стр.Заказ) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
					
					Если Стр.Заказ.ES_Проблема Тогда
						НоваяСтрокаЗаказы.Ячейка = ЯчейкаПроблема;
					ИначеЕсли КонецДня(Стр.Заказ.ES_ДатаДоставки) = КонецДня(ТекущаяДата() + 24*60*60) Тогда
						НоваяСтрокаЗаказы.Ячейка = ЯчейкаКВыдаче;
					Иначе 
						НоваяСтрокаЗаказы.Ячейка = ЯчейкаОсновная;			
					КонецЕсли;
					
				КонецЕсли;
				//}ЭР Несторук С.И.
				
				НоваяСтрокаЗаказы.ДатаВремяДобавленияЗаказа	= ТекущаяДатаСеанса();
				НоваяСтрокаЗаказы.ДокументОснование = ДанныеЗаполнения;
			КонецЦикла;
			
			Для каждого Стр ИЗ ДанныеЗаполнения.Грузы Цикл
				НоваяСтрокаГрузы = Грузы.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаГрузы,Стр);
			КонецЦикла;
		ИначеЕсли ДанныеЗаполнения.ВидОперации = Перечисления.ES_ВидыОперацийПеремещение.НаложенныеПлатежи Тогда 
			ВидОперации = Перечисления.ES_ВидыОперацийПриемки.НаложенныеПлатежи;
			ВидОплаты   = ДанныеЗаполнения.ВидОплаты;
			Партнер = ДанныеЗаполнения.Партнер;
			Касса = ES_ОбщегоНазначения.ПолучитьСтартовуюНастройку(Перечисления.ES_ВидыСтартовыхНастроек.КассаНаложенныхПлатежей);
			Счет  = ES_ОбщегоНазначения.ПолучитьСтартовуюНастройку(Перечисления.ES_ВидыСтартовыхНастроек.ДопКассаНП);
						
			Для каждого Стр Из ДанныеЗаполнения.Платежи Цикл
				НоваяСтрокаПлатежи = Платежи.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаПлатежи,Стр);
				НоваяСтрокаПлатежи.Принято = Стр.КОтправке;
			КонецЦикла;
			СуммаДокумента = Платежи.Итог("Принято");
		КонецЕсли;
		
		
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ES_ОтчетОДоставке") Тогда
		
			
		Если НЕ ЗначениеЗаполнено(ДанныеЗаполнения.Склад) Тогда
			ВызватьИсключение НСтр("ru='Поле ""Склад"" не заполнено'");	
		КонецЕсли;
		СозданНаОсновании = Истина;
		Склад = ДанныеЗаполнения.Склад;
		ВидОперации = Перечисления.ES_ВидыОперацийПриемки.Курьер;
		ДокументОснование = ДанныеЗаполнения;
						
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ES_ЗаборГруза") Тогда
				
		Если НЕ ДанныеЗаполнения.ВидЗабора = Перечисления.ES_ВидыЗабора.Реестр Тогда
			ВызватьИсключение НСтр("ru='Приемку можно создать только на основании документа с видом ""Реестр""'");	
		КонецЕсли;
		СозданНаОсновании = Истина;
		//Склад = ДанныеЗаполнения.Склад;
		ВидОперации = Перечисления.ES_ВидыОперацийПриемки.Заказы;
		ДокументОснование = ДанныеЗаполнения;
				
		МассивЗаказов = ДанныеЗаполнения.Заказы.ВыгрузитьКолонку("Заказ");
		Документы.ES_Приемка.ЗаполнитьДокументЗаказами(ЭтотОбъект,МассивЗаказов, ДанныеЗаполнения);
	КонецЕсли;
	
	
	// Ефсол Сережко А.С. 23.01.18 +
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		СозданНаОсновании = Истина;
		
		
			Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ES_ДанныеПоЗаказамСрезПоследних.Заказ КАК Заказ,
		|	ES_ДанныеПоЗаказамСрезПоследних.Заказчик КАК Заказчик,
		|	ES_ДанныеПоЗаказамСрезПоследних.ВхНакладная КАК ВхНакладная,
		|	ES_ДанныеПоЗаказамСрезПоследних.НомерНакладной КАК НомерНакладной,
		|	ES_ДанныеПоЗаказамСрезПоследних.ВидДоставки КАК ВидДоставки,
		|	ES_ДанныеПоЗаказамСрезПоследних.АдресДоставки КАК АдресДоставки,
		|	ES_ДанныеПоЗаказамСрезПоследних.ЗаборАдрес КАК ЗаборАдрес,
		|	ES_ДанныеПоЗаказамСрезПоследних.ОбщийВес КАК ОбщийВес,
		|	ES_ДанныеПоЗаказамСрезПоследних.ОбщийОбъем КАК ОбщийОбъем,
		|	ES_ДанныеПоЗаказамСрезПоследних.ОбщийОбъемныйВес КАК ОбщийОбъемныйВес,
		|	ES_ДанныеПоЗаказамСрезПоследних.Заказ.Длина КАК ЗаказДлина,
		|	ES_ДанныеПоЗаказамСрезПоследних.Заказ.Высота КАК ЗаказВысота,
		|	ES_ДанныеПоЗаказамСрезПоследних.Заказ.Ширина КАК ЗаказШирина,
		|	ES_ДанныеПоЗаказамСрезПоследних.Заказ.ES_ДатаДоставки КАК ЗаказES_ДатаДоставки,
		|	ES_ДанныеПоЗаказамСрезПоследних.Заказ.ES_КоличествоМест КАК ЗаказES_КоличествоМест,
		|	ES_ДанныеПоЗаказамСрезПоследних.Проблема КАК Проблема,
		|	ES_ДанныеПоЗаказамСрезПоследних.Заказ.ES_Курьер КАК ЗаказES_Курьер,
		|	ES_ДанныеПоЗаказамСрезПоследних.Заказ.Комментарий КАК ЗаказКомментарий
		|ПОМЕСТИТЬ ВТ_Заказ
		|ИЗ
		|	РегистрСведений.ES_ДанныеПоЗаказам.СрезПоследних(
		|			,
		|			Заказ В (&МассивЗаказов)
		|				И ВидДоставки <> ЗНАЧЕНИЕ(Перечисление.ES_ВидыДоставки.ДвериДвери)) КАК ES_ДанныеПоЗаказамСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ES_НоменклатураВЗаказахСрезПоследних.ДокументДоставки КАК ДокументДоставки,
		|	ES_НоменклатураВЗаказахСрезПоследних.Номенклатура КАК Номенклатура,
		|	ES_НоменклатураВЗаказахСрезПоследних.Характеристика КАК Характеристика,
		|	ES_НоменклатураВЗаказахСрезПоследних.Партия КАК Партия,
		|	ES_НоменклатураВЗаказахСрезПоследних.ТипНоменклатурыЗапас КАК ТипНоменклатурыЗапас,
		|	ES_НоменклатураВЗаказахСрезПоследних.Количество КАК Количество,
		|	ES_НоменклатураВЗаказахСрезПоследних.НППлан КАК НППлан,
		|	ES_НоменклатураВЗаказахСрезПоследних.Содержание КАК Содержание,
		|	ES_НоменклатураВЗаказахСрезПоследних.Цена КАК Цена,
		|	ES_НоменклатураВЗаказахСрезПоследних.ПроцентСкидкиНаценки КАК ПроцентСкидкиНаценки,
		|	ES_НоменклатураВЗаказахСрезПоследних.Вес КАК Вес,
		|	ES_НоменклатураВЗаказахСрезПоследних.Объем КАК Объем,
		|	ES_НоменклатураВЗаказахСрезПоследних.ОбъемныйВес КАК ОбъемныйВес,
		|	ES_НоменклатураВЗаказахСрезПоследних.ОбьявленнаяСтоимость КАК ОбьявленнаяСтоимость,
		|	ES_НоменклатураВЗаказахСрезПоследних.Опасность КАК Опасность,
		|	ES_НоменклатураВЗаказахСрезПоследних.НомерСтроки КАК НомерСтроки,
		|	ES_НоменклатураВЗаказахСрезПоследних.Артикул КАК Артикул,
		|	ES_НоменклатураВЗаказахСрезПоследних.Штрихкод КАК Штрихкод
		|ПОМЕСТИТЬ ВТ_Товары
		|ИЗ
		|	РегистрСведений.ES_НоменклатураВЗаказах.СрезПоследних(
		|			,
		|			ДокументДоставки В
		|				(ВЫБРАТЬ
		|					ВТ_Заказ.Заказ
		|				ИЗ
		|					ВТ_Заказ КАК ВТ_Заказ)) КАК ES_НоменклатураВЗаказахСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ES_ИзменяемыеРеквизитыЗаказовСрезПоследних.Значение, ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)) КАК Курьер,
		|	ЕСТЬNULL(ES_ИзменяемыеРеквизитыЗаказовСрезПоследних.Регистратор, ЗНАЧЕНИЕ(Документ.ES_ПланДоставки.ПустаяСсылка)) КАК ПланДоставки,
		|	ВТ_Заказ.Заказ КАК Заказ,
		|	ES_СтатусыЗаказовСрезПоследних.СтатусЗаказа КАК СтатусЗаказа,
		|	ВТ_Заказ.Заказчик КАК Заказчик,
		|	ВТ_Заказ.ВхНакладная КАК ВхНакладная,
		|	ВТ_Заказ.НомерНакладной КАК НомерНакладной,
		|	ВТ_Товары.ДокументДоставки КАК ДокументДоставки,
		|	ВТ_Товары.Номенклатура КАК Номенклатура,
		|	ВТ_Товары.Характеристика КАК Характеристика,
		|	ВТ_Товары.Партия КАК Партия,
		|	ВТ_Товары.ТипНоменклатурыЗапас КАК ТипНоменклатурыЗапас,
		|	ВТ_Товары.Количество КАК Количество,
		|	ВТ_Товары.НППлан КАК НППлан,
		|	ВТ_Товары.Цена КАК Цена,
		|	ВТ_Товары.ПроцентСкидкиНаценки КАК ПроцентСкидкиНаценки,
		|	ВТ_Товары.Вес КАК Вес,
		|	ВТ_Товары.Объем КАК Объем,
		|	ВТ_Товары.ОбъемныйВес КАК ОбъемныйВес,
		|	ВТ_Товары.ОбьявленнаяСтоимость КАК ОбьявленнаяСтоимость,
		|	ВТ_Товары.Опасность КАК Опасность,
		|	ВТ_Товары.НомерСтроки КАК НомерСтроки,
		|	ВТ_Товары.Содержание КАК Содержание,
		|	ВТ_Товары.Артикул КАК Артикул,
		|	ВТ_Товары.Штрихкод КАК Штрихкод,
		|	ВТ_Заказ.ВидДоставки КАК ВидДоставки,
		|	ВТ_Заказ.АдресДоставки КАК АдресДоставки,
		|	ВТ_Заказ.ОбщийВес КАК ОбщийВес,
		|	ВТ_Заказ.ОбщийОбъем КАК ОбщийОбъем,
		|	ВТ_Заказ.ОбщийОбъемныйВес КАК ОбщийОбъемныйВес,
		|	ВТ_Заказ.ЗаказДлина КАК Длина,
		|	ВТ_Заказ.ЗаказВысота КАК Высота,
		|	ВТ_Заказ.ЗаказШирина КАК Ширина,
		|	ВТ_Заказ.ЗаказES_ДатаДоставки КАК ДатаДоставки,
		|	ВТ_Заказ.ЗаказES_КоличествоМест КАК Мест,
		|	ВТ_Заказ.ЗаказКомментарий КАК ЗаказКомментарий
		|ИЗ
		|	ВТ_Заказ КАК ВТ_Заказ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ES_ИзменяемыеРеквизитыЗаказов.СрезПоследних(
		|				,
		|				Регистратор ССЫЛКА Документ.ES_ПланДоставки
		|					И РеквизитЗаказа = ЗНАЧЕНИЕ(Перечисление.ES_ИзменяемыеРеквизитыЗаказа.Курьер)
		|					И Заказ В
		|						(ВЫБРАТЬ
		|							ВТ_Заказ.Заказ
		|						ИЗ
		|							ВТ_Заказ КАК ВТ_Заказ)) КАК ES_ИзменяемыеРеквизитыЗаказовСрезПоследних
		|		ПО ВТ_Заказ.Заказ = ES_ИзменяемыеРеквизитыЗаказовСрезПоследних.Заказ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ES_СтатусыЗаказов.СрезПоследних(
		|				,
		|				Заказ В
		|					(ВЫБРАТЬ
		|						ВТ_Заказ.Заказ
		|					ИЗ
		|						ВТ_Заказ КАК ВТ_Заказ)) КАК ES_СтатусыЗаказовСрезПоследних
		|		ПО ВТ_Заказ.Заказ = ES_СтатусыЗаказовСрезПоследних.Заказ
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Товары КАК ВТ_Товары
		|		ПО ВТ_Заказ.Заказ = ВТ_Товары.ДокументДоставки
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|ИТОГИ
		|	МАКСИМУМ(Курьер),
		|	МАКСИМУМ(ПланДоставки),
		|	МАКСИМУМ(СтатусЗаказа),
		|	МАКСИМУМ(Заказчик),
		|	МАКСИМУМ(ВхНакладная),
		|	МАКСИМУМ(НомерНакладной),
		|	МАКСИМУМ(ВидДоставки),
		|	МАКСИМУМ(АдресДоставки),
		|	МАКСИМУМ(ОбщийВес),
		|	МАКСИМУМ(ОбщийОбъем),
		|	МАКСИМУМ(ОбщийОбъемныйВес),
		|	МАКСИМУМ(Длина),
		|	МАКСИМУМ(Высота),
		|	МАКСИМУМ(Ширина),
		|	МАКСИМУМ(ДатаДоставки),
		|	МАКСИМУМ(Мест)
		|ПО
		|	Заказ";
	
	Запрос.УстановитьПараметр("МассивЗаказов", ДанныеЗаполнения);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаЗаказ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаЗаказ.Следующий() Цикл
		НоваяСтрокаЗаказы = Заказы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаЗаказы,ВыборкаЗаказ);
		НоваяСтрокаЗаказы.ДатаВремяДобавленияЗаказа = ТекущаяДатаСеанса();
				
		Выборка = ВыборкаЗаказ.Выбрать();
	
		Пока Выборка.Следующий() Цикл
			Если ЗначениеЗаполнено(Выборка.Номенклатура) Тогда
			НоваяСтрокаГрузы = Грузы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаГрузы,Выборка);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;

		
		
	КонецЕсли;
	// - 	
	   
КонецПроцедуры

Процедура ПоменятьВидДоставкиЗаказа (Заказ)
	
	мЗаказ = Заказ.ПолучитьОбъект();
	мЗаказ.ES_ВидДоставки = Перечисления.ES_ВидыДоставки.СкладДвери;
	Попытка
		мЗаказ.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		мЗаказ.Записать();
	КонецПопытки;
		
КонецПроцедуры

Процедура ДобавитьЗаписиВИзменяемыеРеквизитыЗаказов(ВключеныЯчейки = Ложь)
	
	ТабИзменяемыеРеквизитыЗаказа = ES_ФормированиеДвиженийПоРегистрамДоставки.СоздатьТабДляИзменяемыхРеквизитов();
	
	Для каждого Стр Из Заказы Цикл
		
		Если ТипЗнч(Стр.Заказ) = Тип("ДокументСсылка.ES_ЗаборГруза") Тогда
			Продолжить;
		КонецЕсли;
		
		Если ВключеныЯчейки Тогда
			Если ЗначениеЗаполнено(Склад.ES_Партнер) Тогда
				НоваяСтрока = ТабИзменяемыеРеквизитыЗаказа.Добавить();
				НоваяСтрока.Движения 		= Движения.ES_ИзменяемыеРеквизитыЗаказов;
				НоваяСтрока.Период 			= Дата;
				НоваяСтрока.Регистратор 	= Ссылка;
				НоваяСтрока.Заказ 			= Стр.Заказ;
				НоваяСтрока.РеквизитЗаказа 	= Перечисления.ES_ИзменяемыеРеквизитыЗаказа.Ячейка;
				НоваяСтрока.Значение 		= Справочники.Ячейки.ПустаяСсылка();

			ИначеЕсли ЗначениеЗаполнено(Стр.Ячейка) Тогда
				НоваяСтрока = ТабИзменяемыеРеквизитыЗаказа.Добавить();
				НоваяСтрока.Движения 		= Движения.ES_ИзменяемыеРеквизитыЗаказов;
				НоваяСтрока.Период 			= Дата;
				НоваяСтрока.Регистратор 	= Ссылка;
				НоваяСтрока.Заказ 			= Стр.Заказ;
				НоваяСтрока.РеквизитЗаказа 	= Перечисления.ES_ИзменяемыеРеквизитыЗаказа.Ячейка;
				НоваяСтрока.Значение 		= Стр.Ячейка;
							
			КонецЕсли;
		КонецЕсли;
		
		//ЭР Несторук С.И. 16.09.2017 10:45:04 {
		НоваяСтрока = ТабИзменяемыеРеквизитыЗаказа.Добавить();
		НоваяСтрока.Движения 		= Движения.ES_ИзменяемыеРеквизитыЗаказов;
		НоваяСтрока.Период 			= Дата;
		НоваяСтрока.Регистратор 	= Ссылка;
		НоваяСтрока.Заказ 			= Стр.Заказ;
		НоваяСтрока.РеквизитЗаказа 	= Перечисления.ES_ИзменяемыеРеквизитыЗаказа.Поврежден;
		НоваяСтрока.Значение 		= Стр.Некондиция;
		//}ЭР Несторук С.И.

		КонецЦикла;
	
	// РС ES_ИзменяемыеРеквизитыЗаказа
	Если ТабИзменяемыеРеквизитыЗаказа.Количество() > 0 Тогда
		ES_ФормированиеДвиженийПоРегистрамДоставки.СделатьЗаписьВРегистрСведенийИзменяемыеРеквизитыЗаказа(ТабИзменяемыеРеквизитыЗаказа, Ссылка);
	КонецЕсли; 
	
КонецПроцедуры

Процедура ЗаполнитьТЧЗаказы(МассивЗаказов, Знач мДокументОснование = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ES_ДанныеПоЗаказам.Заказ,
	|	ES_ДанныеПоЗаказам.ВхНакладная,
	|	ES_ДанныеПоЗаказам.НомерНакладной,
	|	ES_ДанныеПоЗаказам.Заказчик,
	|	ES_ДанныеПоЗаказам.ВидДоставки,
	|	ES_ДанныеПоЗаказам.АдресДоставки,
	|	ES_ДанныеПоЗаказам.ОбщийВес,
	|	ES_ДанныеПоЗаказам.ОбщийОбъем,
	|	ES_ДанныеПоЗаказам.ОбщийОбъемныйВес,
	|	ES_ДанныеПоЗаказам.Манифест,
	|	ES_ДанныеПоЗаказам.Комментарий
	|ПОМЕСТИТЬ ВТ_Заказ
	|ИЗ
	|	РегистрСведений.ES_ДанныеПоЗаказам КАК ES_ДанныеПоЗаказам
	|ГДЕ
	|	ES_ДанныеПоЗаказам.Заказ В(&Заказы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ES_ИзменяемыеРеквизитыЗаказовСрезПоследних.Значение, ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)) КАК Курьер,
	|	ЕСТЬNULL(ES_ИзменяемыеРеквизитыЗаказовСрезПоследних.Регистратор, ЗНАЧЕНИЕ(Документ.ES_ПланДоставки.ПустаяСсылка)) КАК ПланДоставки,
	|	ВТ_Заказ.Заказ КАК Заказ,
	|	ВТ_Заказ.ВхНакладная КАК ВхНакладная,
	|	ВТ_Заказ.НомерНакладной КАК НомерНакладной,
	|	ВТ_Заказ.Заказчик КАК Заказчик,
	|	ES_НоменклатураВЗаказахСрезПоследних.ДокументДоставки КАК ДокументДоставки,
	|	ES_НоменклатураВЗаказахСрезПоследних.НомерСтроки КАК НомерСтрокиВЗаказе,
	|	ES_НоменклатураВЗаказахСрезПоследних.Номенклатура,
	|	ES_НоменклатураВЗаказахСрезПоследних.Характеристика,
	|	ES_НоменклатураВЗаказахСрезПоследних.Количество,
	|	ES_НоменклатураВЗаказахСрезПоследних.НППлан,
	|	ES_НоменклатураВЗаказахСрезПоследних.Содержание,
	|	ES_НоменклатураВЗаказахСрезПоследних.Цена,
	|	ES_НоменклатураВЗаказахСрезПоследних.ПроцентСкидкиНаценки,
	|	ES_НоменклатураВЗаказахСрезПоследних.Вес,
	|	ES_НоменклатураВЗаказахСрезПоследних.Объем,
	|	ES_НоменклатураВЗаказахСрезПоследних.ОбъемныйВес,
	|	ES_НоменклатураВЗаказахСрезПоследних.ОбьявленнаяСтоимость,
	|	ES_НоменклатураВЗаказахСрезПоследних.Опасность,
	|	ES_НоменклатураВЗаказахСрезПоследних.Артикул,
	|	ES_НоменклатураВЗаказахСрезПоследних.Штрихкод,
	|	ВТ_Заказ.ВидДоставки КАК ВидДоставки,
	|	ВТ_Заказ.АдресДоставки КАК АдресДоставки,
	|	ВТ_Заказ.ОбщийВес КАК ОбщийВес,
	|	ВТ_Заказ.ОбщийОбъем КАК ОбщийОбъем,
	|	ВТ_Заказ.ОбщийОбъемныйВес КАК ОбщийОбъемныйВес,
	|	ВТ_Заказ.Манифест КАК Манифест,
	|	ВТ_Заказ.Комментарий КАК Комментарий
	|ИЗ
	|	ВТ_Заказ КАК ВТ_Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ES_ИзменяемыеРеквизитыЗаказов.СрезПоследних(
	|				,
	|				Регистратор ССЫЛКА Документ.ES_ПланДоставки
	|					И РеквизитЗаказа = ЗНАЧЕНИЕ(Перечисление.ES_ИзменяемыеРеквизитыЗаказа.Курьер)
	|					И Заказ В
	|						(ВЫБРАТЬ
	|							ВТ_Заказ.Заказ
	|						ИЗ
	|							ВТ_Заказ КАК ВТ_Заказ)) КАК ES_ИзменяемыеРеквизитыЗаказовСрезПоследних
	|		ПО ВТ_Заказ.Заказ = ES_ИзменяемыеРеквизитыЗаказовСрезПоследних.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ES_НоменклатураВЗаказах.СрезПоследних(
	|				,
	|				ДокументДоставки В
	|					(ВЫБРАТЬ
	|						ВТ_Заказ.Заказ
	|					ИЗ
	|						ВТ_Заказ КАК ВТ_Заказ)) КАК ES_НоменклатураВЗаказахСрезПоследних
	|		ПО ВТ_Заказ.Заказ = ES_НоменклатураВЗаказахСрезПоследних.ДокументДоставки
	|ИТОГИ
	|	МАКСИМУМ(Курьер),
	|	МАКСИМУМ(ПланДоставки),
	|	МАКСИМУМ(ВхНакладная),
	|	МАКСИМУМ(НомерНакладной),
	|	МАКСИМУМ(Заказчик),
	|	МАКСИМУМ(ВидДоставки),
	|	МАКСИМУМ(АдресДоставки),
	|	МАКСИМУМ(ОбщийВес),
	|	МАКСИМУМ(ОбщийОбъем),
	|	МАКСИМУМ(ОбщийОбъемныйВес),
	|	МАКСИМУМ(Манифест),
	|	МАКСИМУМ(Комментарий)
	|ПО
	|	ДокументДоставки";
	
	
	
	Запрос.УстановитьПараметр("Заказы", МассивЗаказов); 	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаЗаказ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаЗаказ.Следующий() Цикл
		
		НоваяСтрока = Заказы.Добавить();
		НоваяСтрока.Заказчик					= ВыборкаЗаказ.Заказчик;
		НоваяСтрока.ВхНакладная					= ВыборкаЗаказ.ВхНакладная;
		НоваяСтрока.НомерНакладной				= ВыборкаЗаказ.НомерНакладной;
		НоваяСтрока.Заказ 						= ВыборкаЗаказ.ДокументДоставки;
		НоваяСтрока.ПланДоставки 				= ВыборкаЗаказ.ПланДоставки;
		НоваяСтрока.Курьер						= ВыборкаЗаказ.Курьер;
		НоваяСтрока.ВидДоставки					= ВыборкаЗаказ.ВидДоставки;
		НоваяСтрока.АдресДоставки				= ВыборкаЗаказ.АдресДоставки;
		НоваяСтрока.ОбщийВес					= ВыборкаЗаказ.ОбщийВес;
		НоваяСтрока.ОбщийОбъем					= ВыборкаЗаказ.ОбщийОбъем;
		НоваяСтрока.ОбщийОбъемныйВес			= ВыборкаЗаказ.ОбщийОбъемныйВес;
		НоваяСтрока.Реестр						= ВыборкаЗаказ.Манифест;
		НоваяСтрока.Комментарий					= ВыборкаЗаказ.Комментарий;
		НоваяСтрока.ДатаВремяДобавленияЗаказа 	= ТекущаяДатаСеанса();
		
		Если ЗначениеЗаполнено(мДокументОснование) Тогда
			НоваяСтрока.ДокументОснование 		= мДокументОснование;
		КонецЕсли;
			
		Выборка = ВыборкаЗаказ.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			Если НЕ ЗначениеЗаполнено(Выборка.Номенклатура) Тогда
				Продолжить;	
			КонецЕсли;
			
			СтрокаГрузы =Грузы.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаГрузы, Выборка);
			
		КонецЦикла;
		
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СменитьГабаритыВЗаказах()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ES_ПриемкаЗаказы.Заказ КАК Заказ,
		|	ЕСТЬNULL(ES_ПриемкаЗаказы.Длина, 0) КАК ПриемкаДлина,
		|	ЕСТЬNULL(ES_ПриемкаЗаказы.Высота, 0) КАК ПриемкаВысота,
		|	ЕСТЬNULL(ES_ПриемкаЗаказы.Ширина, 0) КАК ПриемкаШирина,
		|	ЕСТЬNULL(ES_ПриемкаЗаказы.ОбщийВес, 0) КАК ПриемкаОбщийВес
		|ПОМЕСТИТЬ ВТ_ЗаказыИзПриемки
		|ИЗ
		|	Документ.ES_Приемка.Заказы КАК ES_ПриемкаЗаказы
		|ГДЕ
		|	ES_ПриемкаЗаказы.Ссылка = &Ссылка
		|	И ES_ПриемкаЗаказы.Заказ ССЫЛКА Документ.ЗаказПокупателя
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаказПокупателя.Ссылка КАК Ссылка,
		|	ЕСТЬNULL(ЗаказПокупателя.Длина, 0) КАК Длина,
		|	ЕСТЬNULL(ЗаказПокупателя.Ширина, 0) КАК Ширина,
		|	ЕСТЬNULL(ЗаказПокупателя.ES_ОбщийВес, 0) КАК ОбщийВес,
		|	ЕСТЬNULL(ЗаказПокупателя.Высота, 0) КАК Высота
		|ПОМЕСТИТЬ ВТ_Заказы
		|ИЗ
		|	Документ.ЗаказПокупателя КАК ЗаказПокупателя
		|ГДЕ
		|	ЗаказПокупателя.Ссылка В
		|			(ВЫБРАТЬ
		|				ВТ_ЗаказыИзПриемки.Заказ
		|			ИЗ
		|				ВТ_ЗаказыИзПриемки КАК ВТ_ЗаказыИзПриемки)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ЗаказыИзПриемки.Заказ КАК Заказ,
		|	ВТ_ЗаказыИзПриемки.ПриемкаДлина КАК Длина,
		|	ВТ_ЗаказыИзПриемки.ПриемкаВысота КАК Высота,
		|	ВТ_ЗаказыИзПриемки.ПриемкаШирина КАК Ширина,
		|	ВТ_ЗаказыИзПриемки.ПриемкаОбщийВес КАК ES_ОбщийВес,
		|	ЕСТЬNULL(ВТ_Заказы.Длина, 0) КАК ЗаказДлина,
		|	ЕСТЬNULL(ВТ_Заказы.Ширина, 0) КАК ЗаказШирина,
		|	ЕСТЬNULL(ВТ_Заказы.ОбщийВес, 0) КАК ЗаказОбщийВес,
		|	ЕСТЬNULL(ВТ_Заказы.Высота, 0) КАК ЗаказВысота
		|ИЗ
		|	ВТ_ЗаказыИзПриемки КАК ВТ_ЗаказыИзПриемки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
		|		ПО ВТ_ЗаказыИзПриемки.Заказ = ВТ_Заказы.Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Длина <> Выборка.ЗаказДлина
			ИЛИ Выборка.Высота <> Выборка.ЗаказШирина
			ИЛИ Выборка.Ширина <> Выборка.ЗаказВысота
			ИЛИ Выборка.ES_ОбщийВес <> Выборка.ЗаказОбщийВес  Тогда

		мОбъект = Выборка.Заказ.ПолучитьОбъект();
		ЗаполнитьЗначенияСвойств(мОбъект, Выборка);
		ЭР_ОбновитьСтоимостьДоставкиНаСервере(мОбъект);
		
		
		
		Попытка
			
			мОбъект.Записать(РежимЗаписиДокумента.Проведение);	
			
		Исключение
			Сообщить("Не удалось изменить рекеквизиты заказа " + Выборка.Заказ); 
		КонецПопытки;
		КонецЕсли;
	КонецЦикла;
	
	
	
	
КонецПроцедуры

Процедура ЭР_ОбновитьСтоимостьДоставкиНаСервере(ОбъектЗаказ)
	//EFSOL_Шаповал Олег Анатольевич 16 марта 2017 г. 17:58:26 +
	
	Если НЕ Константы.ES_ИспользоватьТарифныйКалькулятор.Получить() Тогда
		Возврат;
	КонецЕсли;
	
	мОбъект = ОбъектЗаказ;
	
			
	СтартНастройки = ES_ОбщегоНазначения.ПолучитьВсеСтартовыеНастройки();
	
	//ЭР Несторук С.И. 04.04.2017 15:25:41 {
	Если мОбъект.ES_ВидДоставки = Перечисления.ES_ВидыДоставки.Самовывоз Тогда
		мУслуга = СтартНастройки.УслугаСамовывоза;
	Иначе
		мУслуга = СтартНастройки.УслугаДоставки;
	КонецЕсли;
	//}ЭР Несторук С.И.
	
	Если мУслуга.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	МассивСтрок = мОбъект.Запасы.НайтиСтроки(Новый Структура("Номенклатура",мУслуга));
	
	Если МассивСтрок.Количество() > 0 Тогда
		СтрокаДоставки = МассивСтрок[0];
	Иначе		
		СтрокаДоставки = мОбъект.Запасы.Добавить();
		СтрокаДоставки.Количество = 1;
		СтрокаДоставки.ЕдиницаИзмерения = мУслуга.ЕдиницаИзмерения;
		СтрокаДоставки.СтавкаНДС = мУслуга.СтавкаНДС;
		СтрокаДоставки.Номенклатура = мУслуга;
	КонецЕсли;
	
	СтрокаДоставки.Количество = 1;
	СтруктураВозврата = ES_ОбщегоНазначенияКлиентСервер.ЭР_ОбновитьСтоимостьДоставки(мОбъект.Дата, мОбъект.Договор, мОбъект.ES_ЗонаДоставки, Макс(мОбъект.ES_ОбщийВес,мОбъект.ES_ОбщийОбъемныйВес),  мОбъект.ES_СрочностьДоставки,  мОбъект.ES_ВидДоставки,мОбъект.Контрагент.ES_ВидКонтрагента);
	СтрокаДоставки.Цена = СтруктураВозврата.Цена;
	СтрокаДоставки.СуммаНДС = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеСтавкиНДС(СтрокаДоставки.СтавкаНДС)*СтруктураВозврата.Цена/100;
	СтрокаДоставки.Сумма = СтруктураВозврата.Цена;
	//СтрокаДоставки.Всего = СтруктураВозврата.Цена;
	СтрокаДоставки.Всего = СтруктураВозврата.Цена + ?(мОбъект.СуммаВключаетНДС, 0, СтрокаДоставки.СуммаНДС);
	СтрокаДоставки.ДатаОтгрузки = ТекущаяДата();
	
	//Объект.ES_СрокДоставки = 0;
	
	//EFSOL Шаповал О.А. -	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ВидОперации = Перечисления.ES_ВидыОперацийПриемки.НаложенныеПлатежи Тогда
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Склад");
	ИначеЕсли ВидОперации = Перечисления.ES_ВидыОперацийПриемки.Заказы ИЛИ ВидОперации = Перечисления.ES_ВидыОперацийПриемки.Курьер Тогда
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "Партнер");
		УправлениеНебольшойФирмойСервер.УдалитьПроверяемыйРеквизит(ПроверяемыеРеквизиты, "ВидОплаты");
	КонецЕсли;

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка = Истина Тогда
		Возврат;
	КонецЕсли;
	
	Если ПометкаУдаления ИЛИ РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		
		// Нельзя пометить на удаление и отменить проведение документа, если он проходит по другим документам
		МассивСсылок = Новый Массив;
		МассивСсылок.Добавить(Ссылка);
		
		УстановитьПривилегированныйРежим(Истина);
		ТабНайденныхСсылок = НайтиПоСсылкам(МассивСсылок);
		УстановитьПривилегированныйРежим(Ложь);
		
		Для каждого Строка Из ТабНайденныхСсылок Цикл
			Если Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(Строка.Данные)) Тогда
				//ЭР Несторук С.И. 13.10.2017 14:44:41 {
				//Смотрим ссылаются ли на документ проведенные документы, а не помеченные на удаление
				//Если НЕ Строка.Данные.ПометкаУдаления и НЕ Ссылка = Строка.Данные Тогда
				Если Строка.Данные.Проведен и НЕ Ссылка = Строка.Данные Тогда
					//}ЭР Несторук С.И.
					Сообщить("На документ ссылается " + Строка.Данные);
					Отказ = Истина;
					Возврат;
				КонецЕсли; 
			КонецЕсли; 
		КонецЦикла; 
		
	КонецЕсли; 

КонецПроцедуры


