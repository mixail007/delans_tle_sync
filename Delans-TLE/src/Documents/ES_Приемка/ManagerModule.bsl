
// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ТОРГ2") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПФ_MXL_ТОРГ2", "ТОРГ2", СформироватьПечатнуюФормуТОРГ2(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
	//Лохоня Ю.А.
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "ПФ_MXL_ES_АктОРасхождении");
	Если ПечатнаяФорма <> Неопределено Тогда
		
		ПечатнаяФорма.ТабличныйДокумент = ПечатнаяФормаES_АктОРасхождении(МассивОбъектов, ОбъектыПечати, "ПФ_MXL_ES_АктОРасхождении");
		ПечатнаяФорма.ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ES_Приемка_ПФ_MXL_ES_АктОРасхождении";
		ПечатнаяФорма.ПолныйПутьКМакету = "Документ.ES_Приемка.ПФ_MXL_ES_АктОРасхождении";
		ПечатнаяФорма.СинонимМакета = НСтр("ru ='Акт о расхождении'");
		
	КонецЕсли;
	
КонецПроцедуры

// Заполняет список команд печати Заказа покупателя
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// ТОРГ2
	//КомандаПечати = КомандыПечати.Добавить();
	//КомандаПечати.Идентификатор = "ПФ_MXL_ТОРГ2";
	//КомандаПечати.Представление = НСтр("ru = 'ТОРГ2'");
	//КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	//КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	//КомандаПечати.МестоРазмещения = "ГруппаВажныеКомандыВыдачи";
	//КомандаПечати.Порядок = 5;
	
	//Лохоня Ю.А.
	// Акт о расхождении
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПФ_MXL_ES_АктОРасхождении";
	КомандаПечати.Представление = НСтр("ru = 'Акт о расхождении'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.МестоРазмещения = "ГруппаВажныеКомандыВыдачи";
	КомандаПечати.Порядок = 10;
	
КонецПроцедуры

Функция ПечатнаяФормаES_АктОРасхождении(МассивОбъектов, ОбъектыПечати, ИмяМакета)
	//Лохоня Ю.А.
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.КоличествоСтраниц();
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ES_Приемка_ПФ_MXL_ES_АктОРасхождении";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ES_Приемка."+ ИмяМакета);
	Если ТипЗнч(Макет)<> Тип("ТабличныйДокумент") Тогда
		Макет = ПолучитьМакет(ИмяМакета);
	КонецЕсли;	
	
	ТабДок = Новый ТабличныйДокумент;

	////////////////////////////////
	//Если НЕ РезультатЗапроса.Пустой() Тогда
		
		ПервыйДокумент = Истина;	
		
		Для Каждого МассивОбъект Из МассивОбъектов Цикл
		//ВыборкаСсылка = РезультатЗапроса.Выбрать();
		//Пока ВыборкаСсылка.Следующий() Цикл
			Если Не ПервыйДокумент Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			ПервыйДокумент = Ложь;		
			
			// Шапка
			//СведенияОбОрганизации = УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(ВыборкаСсылка.Организация, ВыборкаСсылка.Дата, ,);
			НомерДокумента = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(МассивОбъект.Номер, Истина, Истина);
			
			ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
			ОбластьШапка.Параметры.ТекстЗаголовка = "Акт расхождений №"
			+ НомерДокумента
			+ " от "
			+ Формат(МассивОбъект.Дата, "ДЛФ=DD");
			Если ТипЗнч(МассивОбъект.Ссылка.ДокументОснование) = ТИП("ДокументСсылка.ES_ЗаборГруза") Тогда
				ОбластьШапка.Параметры.РеестрНомер = МассивОбъект.Ссылка.ДокументОснование.ES_НомерРеестра;
			Иначе
				ОбластьШапка.Параметры.РеестрНомер = "";
			КонецЕсли;
			Если ТипЗнч(МассивОбъект.Ссылка.ДокументОснование) = ТИП("ДокументСсылка.ES_ЗаборГруза") Тогда
				ОбластьШапка.Параметры.ДатаРеестра = Формат(МассивОбъект.Ссылка.ДокументОснование.Дата, "ДЛФ=Д");
			Иначе
				ОбластьШапка.Параметры.ДатаРеестра = "";
			КонецЕсли;
			//ОбластьШапка.Параметры.ПредставлениеПоставщика = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,");
			ТабДок.Вывести(ОбластьШапка);
			
			ДатаДок = МассивОбъект.Дата;
			Комментарий = МассивОбъект.Ссылка.Комментарий;
			//ВыборкаСсылка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл			
			Док = МассивОбъект.Ссылка.ПолучитьОбъект();
			НомерСтр = 0;
			ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицы");
			Для Каждого Строка Из Док.Заказы Цикл
				
				//ЭР Несторук С.И. 31.10.2017 15:14:26 {
				Если Типзнч(Строка.Заказ) = Тип("ДокументСсылка.ES_ЗаборГруза") Тогда
					Продолжить;
				КонецЕсли;
				Если Строка.Заказ.ES_ВидДоставки = Перечисления.ES_ВидыДоставки.ДвериДвери 
					И (Строка.СтатусЗаказа = Перечисления.ES_СтатусыЗаказов.ОжидаетГруз ИЛИ  
					Строка.СтатусЗаказа = Перечисления.ES_СтатусыЗаказов.ОжидаетГрузНазначен) Тогда
					Продолжить;					
				КонецЕсли;
				//}ЭР Несторук С.И.
				
				//ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицы");	
				ОбластьСтрокаТаблицы.Параметры.Накладная 	= "Заказ на доставку " + "
				|" + Строка.НомерНакладной;
				Если Строка.Проверен = Истина Тогда
					ОбластьСтрокаТаблицы.Параметры.НедостачаИзлишек	= " ";
				Иначе 
					ОбластьСтрокаТаблицы.Параметры.НедостачаИзлишек	= "Недостача";
				КонецЕсли;
				//Если  ЗначениеЗаполнено(МассивОбъект.ДокументОснование) И НЕ ЗначениеЗаполнено(Строка.ДокументОснование) Тогда
				//	ОбластьСтрокаТаблицы.Параметры.НедостачаИзлишек	= "Излишек";
				//КонецЕсли;
				Если  Строка.Излишек = Истина Тогда
					ОбластьСтрокаТаблицы.Параметры.НедостачаИзлишек	= "Излишек";
				КонецЕсли;
				
				ОбластьСтрокаТаблицы.Параметры.Статус 		= Строка.СтатусЗаказа;
				ОбластьСтрокаТаблицы.Параметры.ДатаЗаказа 	= Формат(Строка.Заказ.Дата, "ДЛФ=Д");
				ОбластьСтрокаТаблицы.Параметры.ВхНакладная	= Строка.ВхНакладная;
				ОбластьСтрокаТаблицы.Параметры.АдресДоставки= Строка.АдресДоставки;
				ОбластьСтрокаТаблицы.Параметры.Вес	 		= Строка.ОбщийВес;
				ОбластьСтрокаТаблицы.Параметры.ДатаПриемки	= Формат(ДатаДок, "ДЛФ=Д");
				ОбластьСтрокаТаблицы.Параметры.НомерРеестра	= Строка.Реестр;
				ОбластьСтрокаТаблицы.Параметры.Комментарии	= Строка.Примечание;
				
				Если ОбластьСтрокаТаблицы.Параметры.НедостачаИзлишек	= " " Тогда
					НомерСтр = НомерСтр;
				Иначе 	НомерСтр = НомерСтр + 1;
				КонецЕсли;
				ОбластьСтрокаТаблицы.Параметры.НомерСтроки	= НомерСтр;
				
				//Если ОбластьСтрокаТаблицы.Параметры.НедостачаИзлишек	= " " Тогда
				//	ОбластьСтрокаТаблицы.Очистить();
				//КонецЕсли;
				Если Не ОбластьСтрокаТаблицы.Параметры.НедостачаИзлишек	= " " Тогда
					ТабДок.Вывести(ОбластьСтрокаТаблицы);
				КонецЕсли;
				//ТабДок.Вывести(ОбластьСтрокаТаблицы);
			КонецЦикла;
				
			ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
			ОбластьПодвал.Параметры.Приемщик = МассивОбъект.Ссылка.Ответственный;
			ОбластьПодвал.Параметры.Руководитель  = " ";
			ТабДок.Вывести(ОбластьПодвал);		
		КонецЦикла;
	//КонецЕсли;

	ТабличныйДокумент.Вывести(ТабДок);

	Возврат ТабличныйДокумент;	
	
КонецФункции


Функция СформироватьПечатнуюФормуТОРГ2(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.РазмерКолонтитулаСверху = 0;
	ТабличныйДокумент.РазмерКолонтитулаСнизу = 0;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ТОРГ2";

	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ES_Приемка.Ссылка КАК ДокПриемка,
		|	ES_Приемка.Номер КАК НомерПриемки,
		|	ES_Приемка.Дата КАК ДатаПриемки,
		|	ES_Приемка.ДокументОснование,
		|	ES_Приемка.ВходящийДокумент
		|ПОМЕСТИТЬ ВТ_Приемка
		|ИЗ
		|	Документ.ES_Приемка КАК ES_Приемка
		|ГДЕ
		|	ES_Приемка.Ссылка В(&МассивОбъектов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ES_ПриемкаЗаказы.Заказ,
		|	ES_ПриемкаЗаказы.Некондиция,
		|	ES_ПриемкаЗаказы.НомерСтроки,
		|	ES_ПриемкаЗаказы.Ссылка
		|ПОМЕСТИТЬ ВТ_ЗаказыВПриемке
		|ИЗ
		|	Документ.ES_Приемка.Заказы КАК ES_ПриемкаЗаказы
		|ГДЕ
		|	ES_ПриемкаЗаказы.Ссылка В
		|			(ВЫБРАТЬ
		|				ВТ_Приемка.ДокПриемка
		|			ИЗ
		|				ВТ_Приемка КАК ВТ_Приемка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ES_ПоставкаЗаказы.Заказ,
		|	ES_ПоставкаЗаказы.Заказчик,
		|	1 КАК КоличествоПлан,
		|	ES_ПоставкаЗаказы.Ссылка
		|ПОМЕСТИТЬ ВТ_ЗаказыВПоставке
		|ИЗ
		|	Документ.ES_Поставка.Заказы КАК ES_ПоставкаЗаказы
		|ГДЕ
		|	ES_ПоставкаЗаказы.Ссылка В
		|			(ВЫБРАТЬ
		|				ВТ_Приемка.ДокументОснование
		|			ИЗ
		|				ВТ_Приемка КАК ВТ_Приемка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Приемка.ДокПриемка,
		|	ВТ_Приемка.НомерПриемки,
		|	ВТ_Приемка.ДатаПриемки,
		|	ВТ_Приемка.ДокументОснование,
		|	ВТ_ЗаказыВПоставке.Заказ,
		|	ВТ_ЗаказыВПоставке.Заказчик,
		|	ВТ_ЗаказыВПоставке.КоличествоПлан,
		|	ВТ_Приемка.ВходящийДокумент
		|ПОМЕСТИТЬ ВТ_Приемка_Поставка
		|ИЗ
		|	ВТ_Приемка КАК ВТ_Приемка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗаказыВПоставке КАК ВТ_ЗаказыВПоставке
		|		ПО ВТ_Приемка.ДокументОснование = ВТ_ЗаказыВПоставке.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Приемка_Поставка.ДокПриемка КАК ДокПриемка,
		|	ВТ_Приемка_Поставка.НомерПриемки КАК НомерПриемки,
		|	ВТ_Приемка_Поставка.ДатаПриемки КАК ДатаПриемки,
		|	ВТ_Приемка_Поставка.ДокументОснование КАК ДокументОснование,
		|	ВТ_Приемка_Поставка.Заказ КАК ЗаказВПоставке,
		|	ВТ_Приемка_Поставка.Заказчик КАК Заказчик,
		|	ЕСТЬNULL(ВТ_Приемка_Поставка.КоличествоПлан, 0) КАК КоличествоПлан,
		|	ЕСТЬNULL(ВТ_ЗаказыВПриемке.Заказ, 0) КАК ЗаказВПриемке,
		|	ЕСТЬNULL(ВТ_ЗаказыВПриемке.Некондиция, НЕОПРЕДЕЛЕНО) КАК Некондиция,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ВТ_ЗаказыВПриемке.Заказ, 0) = 0
		|			ТОГДА 0
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК КоличествоФакт,
		|	ES_ДанныеПоЗаказамСрезПоследних.НомерНакладной,
		|	ES_ДанныеПоЗаказамСрезПоследних.ВхНакладная,
		|	ЕСТЬNULL(ES_ДанныеПоЗаказамСрезПоследних.ОбьявленнаяСтоимость, 0) КАК ОбьявленнаяСтоимость,
		|	ВТ_Приемка_Поставка.ВходящийДокумент КАК ВходящийДокумент
		|ИЗ
		|	ВТ_Приемка_Поставка КАК ВТ_Приемка_Поставка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗаказыВПриемке КАК ВТ_ЗаказыВПриемке
		|		ПО ВТ_Приемка_Поставка.ДокПриемка = ВТ_ЗаказыВПриемке.Ссылка
		|			И ВТ_Приемка_Поставка.Заказ = ВТ_ЗаказыВПриемке.Заказ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ES_ДанныеПоЗаказам.СрезПоследних(
		|				,
		|				Заказ В
		|					(ВЫБРАТЬ
		|						ВТ_ЗаказыВПоставке.Заказ
		|					ИЗ
		|						ВТ_ЗаказыВПоставке КАК ВТ_ЗаказыВПоставке)) КАК ES_ДанныеПоЗаказамСрезПоследних
		|		ПО ВТ_Приемка_Поставка.Заказ = ES_ДанныеПоЗаказамСрезПоследних.Заказ
		|ИТОГИ
		|	МАКСИМУМ(НомерПриемки),
		|	МАКСИМУМ(ДатаПриемки),
		|	МАКСИМУМ(ДокументОснование),
		|	МАКСИМУМ(Заказчик),
		|	МАКСИМУМ(ВходящийДокумент)
		|ПО
		|	ДокПриемка";
		
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);

	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда 
		Организация = ES_ОбщегоНазначения.ПолучитьСтартовуюНастройку(Перечисления.ES_ВидыСтартовыхНастроек.Организация);
		АдресОсновногоСклада = ПолучитьФактическийАдресОсновногоСклада(); 
		ВыборкаПриемка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		ПервыйДокумент = Истина;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;

		Макет = ПолучитьМакет("ПФ_MXL_ТОРГ2");
		КС = Новый КвалификаторыСтроки(20);
		КЧ = Новый КвалификаторыЧисла(12,2);
		Пока ВыборкаПриемка.Следующий() Цикл
			
			Если НЕ ЗначениеЗаполнено(ВыборкаПриемка.ДокументОснование) Тогда
				Сообщить("Приемка создана не на основании поставки, печать данного документа невозможна");
				Продолжить;
			КонецЕсли;
			
			
			ТаблицаЗаказов = Новый ТаблицаЗначений;
			ТаблицаЗаказов.Колонки.Добавить("ВхНакладная",Новый ОписаниеТипов(КС));
			ТаблицаЗаказов.Колонки.Добавить("НомерНакладной",Новый ОписаниеТипов(КС));
			ТаблицаЗаказов.Колонки.Добавить("КоличествоПлан",Новый ОписаниеТипов(КЧ));
			ТаблицаЗаказов.Колонки.Добавить("КоличествоФакт",Новый ОписаниеТипов(КЧ));
			ТаблицаЗаказов.Колонки.Добавить("Некондиция",	Новый ОписаниеТипов(КЧ));
			ТаблицаЗаказов.Колонки.Добавить("ОбьявленнаяСтоимость",	Новый ОписаниеТипов(КЧ));
			
			Если ПервыйДокумент Тогда
				ПервыйДокумент = Ложь;
			Иначе	
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			
			СведенияОбОрганизации 	= УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(Организация,ВыборкаПриемка.ДатаПриемки);
			СведенияОЗаказчике		= УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(ВыборкаПриемка.Заказчик, ВыборкаПриемка.ДатаПриемки);
			
			ОбластьШапкаПервойСтраници = Макет.ПолучитьОбласть("ШапкаПервойСтраницы");
			ОбластьШапкаПервойСтраници.Параметры.НомерДокумента = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ВыборкаПриемка.НомерПриемки,Истина,Истина);
			ОбластьШапкаПервойСтраници.Параметры.ДатаДокумента = Формат(ВыборкаПриемка.ДатаПриемки, "ДФ=dd.MM.yyyy");
			ОбластьШапкаПервойСтраници.Параметры.ПредставлениеОрганизации	 = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
			ОбластьШапкаПервойСтраници.Параметры.Грузоотправитель = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОЗаказчике, "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
			ОбластьШапкаПервойСтраници.Параметры.Поставщик = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОЗаказчике, "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
			ОбластьШапкаПервойСтраници.Параметры.ОрганизацияПоОКПО	=  СведенияОбОрганизации.КодПоОКПО;
			ОбластьШапкаПервойСтраници.Параметры.ОснованиеДляСоставленияАкта	=  "приказ, распоряжение";
			ОбластьШапкаПервойСтраници.Параметры.МестоПриемкиТовара	=  АдресОсновногоСклада;
			ОбластьШапкаПервойСтраници.Параметры.ПереченьСопроводительныхДокументов	=  ВыборкаПриемка.ВходящийДокумент;
			ОбластьШапкаПервойСтраници.Параметры.ВызваемыйПредставительПартнера	=  "грузоотправителя, поставщика, производителя";
			ОбластьШапкаПервойСтраници.Параметры.ВидДокументаОВызовеПредставителяПартнера = "телеграмма, факс, телефонограмма, радиограмма";
			
			ТабличныйДокумент.Вывести(ОбластьШапкаПервойСтраници);
			
			ОбластьТаблицаПриемкиТоваровШапка = Макет.ПолучитьОбласть("ТаблицаПриемкиТоваровШапка");
			ТабличныйДокумент.Вывести(ОбластьТаблицаПриемкиТоваровШапка);
			ОбластьТаблицаПриемкиТоваровСтрока = Макет.ПолучитьОбласть("ТаблицаПриемкиТоваровСтрока");
			ТабличныйДокумент.Вывести(ОбластьТаблицаПриемкиТоваровСтрока);
			ОбластьТаблицаПриемкиТоваровПодвал = Макет.ПолучитьОбласть("ТаблицаПриемкиТоваровПодвал");
			ТабличныйДокумент.Вывести(ОбластьТаблицаПриемкиТоваровПодвал);
			
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
			ОбластьШапкаВторойСтраницы = Макет.ПолучитьОбласть("ШапкаВторойСтраницы");
			ТабличныйДокумент.Вывести(ОбластьШапкаВторойСтраницы);
			ОбластьСостояниеТранспортаПоДокументам = Макет.ПолучитьОбласть("СостояниеТранспортаПоДокументам");
			ТабличныйДокумент.Вывести(ОбластьСостояниеТранспортаПоДокументам);
			
			Область = Макет.ПолучитьОбласть("ТаблицаТоваровПоДокументамШапка");
			ТабличныйДокумент.Вывести(Область);
			Область = Макет.ПолучитьОбласть("ТаблицаТоваровПоДокументамСтрока");
			ТабличныйДокумент.Вывести(Область);
			Область = Макет.ПолучитьОбласть("ТаблицаТоваровПоДокументамПодвал");
			ТабличныйДокумент.Вывести(Область);
			Область = Макет.ПолучитьОбласть("СостояниеТранспортаПоФакту");
			ТабличныйДокумент.Вывести(Область);
			Область = Макет.ПолучитьОбласть("ТаблицаИтогов");
			ТабличныйДокумент.Вывести(Область);
			
			Область = Макет.ПолучитьОбласть("ТаблицаТоваров1Шапка");
			ТабличныйДокумент.Вывести(Область);
			
			ВыборкаЗаказы = ВыборкаПриемка.Выбрать();
			
			Пока ВыборкаЗаказы.Следующий() Цикл
				НоваяСтрока = ТаблицаЗаказов.Добавить();
				НоваяСтрока.ВхНакладная = ВыборкаЗаказы.ВхНакладная;
				НоваяСтрока.НомерНакладной = ВыборкаЗаказы.НомерНакладной;
				НоваяСтрока.КоличествоПлан = ВыборкаЗаказы.КоличествоПлан;
				НоваяСтрока.КоличествоФакт = ВыборкаЗаказы.КоличествоФакт;
				НоваяСтрока.ОбьявленнаяСтоимость = ВыборкаЗаказы.ОбьявленнаяСтоимость;
				Если НЕ ВыборкаЗаказы.КоличествоФакт = 0 Тогда
					НоваяСтрока.Некондиция = ?(ВыборкаЗаказы.Некондиция, 1,0);
				КонецЕсли;
				
				Область = Макет.ПолучитьОбласть("ТаблицаТоваров1Строка");
				Область.Параметры.НомерМеста = ВыборкаЗаказы.ВхНакладная;
				Область.Параметры.ЕдиницаИзмерения = "шт";
				Область.Параметры.КоличествоПоДокументам = ВыборкаЗаказы.КоличествоПлан;				
				Область.Параметры.ЦенаПоДокументам = ВыборкаЗаказы.ОбьявленнаяСтоимость;
				Область.Параметры.СуммаПоДокументам = ВыборкаЗаказы.ОбьявленнаяСтоимость*ВыборкаЗаказы.КоличествоПлан;
				ТабличныйДокумент.Вывести(Область)	
				
			КонецЦикла;
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
			Область = Макет.ПолучитьОбласть("ТаблицаТоваров1Подвал");
			ТабличныйДокумент.Вывести(Область);
			
			Область = Макет.ПолучитьОбласть("ШапкаТретьейСтраницы");
			ТабличныйДокумент.Вывести(Область);
			
			Область = Макет.ПолучитьОбласть("УсловияХраненияТовараДоВскрытия");
			ТабличныйДокумент.Вывести(Область);
			
			Область = Макет.ПолучитьОбласть("ТемператураПриРазгрузке");
			ТабличныйДокумент.Вывести(Область);
			
			Область = Макет.ПолучитьОбласть("СостояниеТарыИУпаковки");
			ТабличныйДокумент.Вывести(Область);
			
			Область = Макет.ПолучитьОбласть("СодержаниеНаружнойМаркировки");
			ТабличныйДокумент.Вывести(Область);
			
			Область = Макет.ПолучитьОбласть("ДатаВскрытияТары");
			ТабличныйДокумент.Вывести(Область);
			
			Область = Макет.ПолучитьОбласть("ОрганизацияВзвесившаяИОпломбировавшаяТовар");
			ТабличныйДокумент.Вывести(Область);
			
			Область = Макет.ПолучитьОбласть("ПорядокОтбораТовараДляВыборочнойПроверки");
			ТабличныйДокумент.Вывести(Область);
			Область = Макет.ПолучитьОбласть("ТаблицаТоваров2Шапка");
			ТабличныйДокумент.Вывести(Область);
			Для каждого Строка Из ТаблицаЗаказов Цикл
				Область = Макет.ПолучитьОбласть("ТаблицаТоваров2Строка");
				Область.Параметры.КоличествоПоФакту = Строка.КоличествоФакт;
				Область.Параметры.КоличествоБрак	= Строка.Некондиция;
				Область.Параметры.КоличествоНедостача	= Строка.КоличествоПлан - Строка.КоличествоФакт;
				ТабличныйДокумент.Вывести(Область);
			КонецЦикла;
			Область = Макет.ПолучитьОбласть("ТаблицаТоваров2Подвал");
			ТабличныйДокумент.Вывести(Область);
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
			Область = Макет.ПолучитьОбласть("ШапкаЧетвертойСтраницы");
			ТабличныйДокумент.Вывести(Область);
			Область = Макет.ПолучитьОбласть("СпособОпределенияКоличества");
			ТабличныйДокумент.Вывести(Область);
			Область = Макет.ПолучитьОбласть("МестоОпределенияКоличества");
			ТабличныйДокумент.Вывести(Область);
			Область = Макет.ПолучитьОбласть("СведенияОбИсправностиВесоизмерительныхПриборов");
			ТабличныйДокумент.Вывести(Область);
			Область = Макет.ПолучитьОбласть("ПрочиеДанные");
			ТабличныйДокумент.Вывести(Область);
			Область = Макет.ПолучитьОбласть("ПодробноеОписаниеДефектов");
			ТабличныйДокумент.Вывести(Область);
			Для Каждого Строка Из ТаблицаЗаказов Цикл
				Если Строка.КоличествоФакт = 0 Тогда
					Область = Макет.ПолучитьОбласть("ОписаниеДефектовСтрока");
					Область.Параметры.ВидДефекта = "Недостача";
					Область.Параметры.Количество = "1 шт";
					Область.Параметры.ВхНакладная = Строка.ВхНакладная;
					ТабличныйДокумент.Вывести(Область);
				ИначеЕсли Строка.Некондиция Тогда
					Область = Макет.ПолучитьОбласть("ОписаниеДефектовСтрока");
					Область.Параметры.ВидДефекта = "Брак";
					Область.Параметры.Количество = "1 шт";
					Область.Параметры.ВхНакладная = Строка.ВхНакладная;
					ТабличныйДокумент.Вывести(Область);
				КонецЕсли;
			КонецЦикла;
			Область = Макет.ПолучитьОбласть("ЗаключениеКомиссии");
			ТабличныйДокумент.Вывести(Область);
			Область = Макет.ПолучитьОбласть("ЧленыКомиссии");
			ТабличныйДокумент.Вывести(Область);
			Область = Макет.ПолучитьОбласть("РешениеРуководителя");
			ТабличныйДокумент.Вывести(Область);
			
			// Зададим параметры макета
			ТабличныйДокумент.ПолеСверху = 0;
			ТабличныйДокумент.ПолеСлева  = 0;
			ТабличныйДокумент.ПолеСнизу  = 0;
			ТабличныйДокумент.ПолеСправа = 0;
			ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПриемка.ДокПриемка);

			
		КонецЦикла;
		
	КонецЕсли;
	
	
	Возврат ТабличныйДокумент;

	
КонецФункции

Функция ПолучитьФактическийАдресОсновногоСклада()
	
	ОсновнойСклад = Справочники.СтруктурныеЕдиницы.ОсновнойСклад;
	Запрос = Новый Запрос;
	Запрос.Текст =
			"ВЫБРАТЬ
			|	СтруктурныеЕдиницыКонтактнаяИнформация.Представление КАК ФактическийАдрес
			|ИЗ
			|	Справочник.СтруктурныеЕдиницы.КонтактнаяИнформация КАК СтруктурныеЕдиницыКонтактнаяИнформация
			|ГДЕ
			|	СтруктурныеЕдиницыКонтактнаяИнформация.Ссылка = &Склад
			|	И СтруктурныеЕдиницыКонтактнаяИнформация.Тип = &Тип
			|	И СтруктурныеЕдиницыКонтактнаяИнформация.Вид = &Вид";
	
	Запрос.УстановитьПараметр("Склад", ОсновнойСклад);
	Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.Адрес);
	Запрос.УстановитьПараметр("Вид", Справочники.ВидыКонтактнойИнформации.ФактАдресСтруктурнойЕдиницы);
	
	ФактАдрес = "";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Если Выборка.Следующий() Тогда
			ФактАдрес =  Выборка.ФактическийАдрес;
		КонецЕсли; 
	КонецЕсли; 
	
	Возврат ФактАдрес;
	
КонецФункции

Процедура ЗаполнитьМассивЗаказовИзЗаборов(МассивЗаказов, МассивЗаборов) Экспорт

	//ЭР Несторук С.И. 13.09.2017 22:27:22 {
		 	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ES_ЗаборГруза.Ссылка КАК Ссылка,
		|	ES_ЗаборГруза.ВидЗабора КАК ВидЗабора,
		|	ЕСТЬNULL(ES_ЗаборГруза.ДокументОснование, ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)) КАК Заказ
		|ПОМЕСТИТЬ ВТ_Заборы
		|ИЗ
		|	Документ.ES_ЗаборГруза КАК ES_ЗаборГруза
		|ГДЕ
		|	ES_ЗаборГруза.Ссылка В(&МассивЗаборов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЕСТЬNULL(ES_ЗаборГрузаЗаказы.Заказ, ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)) КАК Заказ
		|ПОМЕСТИТЬ ВТ_ЗаказыПоездка
		|ИЗ
		|	ВТ_Заборы КАК ВТ_Заборы
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ES_ЗаборГруза.Заказы КАК ES_ЗаборГрузаЗаказы
		|		ПО ВТ_Заборы.Ссылка = ES_ЗаборГрузаЗаказы.Ссылка
		|ГДЕ
		|	ВТ_Заборы.ВидЗабора = ЗНАЧЕНИЕ(Перечисление.ES_ВидыЗабора.Выезд)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВТ_Заборы.Заказ КАК Заказ
		|ПОМЕСТИТЬ ВТ_ЗаказыДД
		|ИЗ
		|	ВТ_Заборы КАК ВТ_Заборы
		|ГДЕ
		|	ВТ_Заборы.ВидЗабора = ЗНАЧЕНИЕ(Перечисление.ES_ВидыЗабора.ПодЗаказ)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВТ_ЗаказыПоездка.Заказ КАК Заказ
		|ИЗ
		|	ВТ_ЗаказыПоездка КАК ВТ_ЗаказыПоездка
		|ГДЕ
		|	НЕ ВТ_ЗаказыПоездка.Заказ = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_ЗаказыДД.Заказ
		|ИЗ
		|	ВТ_ЗаказыДД КАК ВТ_ЗаказыДД
		|ГДЕ
		|	НЕ ВТ_ЗаказыДД.Заказ = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)";
	
	Запрос.УстановитьПараметр("МассивЗаборов", МассивЗаборов);
	
	РезультатЗапроса = Запрос.Выполнить();
	ТЗ = РезультатЗапроса.Выгрузить();
	//ОбщегоНазначения.ЗаполнитьМассивУникальнымиЗначениями(МассивЗаказов,ТЗ.ВыгрузитьКолонку("Заказ")); - эта процедура устарела
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивЗаказов, ТЗ.ВыгрузитьКолонку("Заказ"),Истина);	
	 //}ЭР Несторук С.И.


КонецПроцедуры // ЗаполнитьМассивЗаказовИзЗаборов()

// <Описание процедуры>
Процедура ЗаполнитьДокументЗаказами(ДокПриемка, МассивЗаказов, Знач мДокументОснование = Неопределено) Экспорт

	//ЭР Несторук С.И. 13.09.2017 22:53:58 {
	
	Данные = ES_ОбщегоНазначения.ПолучитьДанныеПоЗаказам(МассивЗаказов);
	ВыборкаЗаказ = Данные.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ДокПриемка.Заказы.Очистить();
	ДокПриемка.Грузы.Очистить();
	ЯчейкаКВыдаче = ES_ОбщегоНазначения.ПолучитьСтартовуюНастройку(Перечисления.ES_ВидыСтартовыхНастроек.ЯчейкаКВыдаче);
	ЯчейкаОсновная = ES_ОбщегоНазначения.ПолучитьСтартовуюНастройку(Перечисления.ES_ВидыСтартовыхНастроек.ЯчейкаОсновная);
	ЯчейкаПроблема = ES_ОбщегоНазначения.ПолучитьСтартовуюНастройку(Перечисления.ES_ВидыСтартовыхНастроек.ЯчейкаПроблема);

	ИспользоватьЯчейки = ПолучитьФункциональнуюОпцию("УчетПоЯчейкам");
	
	Если ИспользоватьЯчейки Тогда
		Если НЕ ЗначениеЗаполнено(ЯчейкаКВыдаче) Тогда
			ЯчейкаКВыдаче = Справочники.Ячейки.ПустаяСсылка();
			Сообщить(НСтр("ru='Ячейка не заполнена в стартовых настройках'"));
		КонецЕсли;
	КонецЕсли;
	
	Пока ВыборкаЗаказ.Следующий() Цикл
		
		НовСтр = ДокПриемка.Заказы.Добавить();
		НовСтр.Заказ 							= ВыборкаЗаказ.ДокументДоставки;
		НовСтр.НомерНакладной   				= ВыборкаЗаказ.НомерНакладной;
		НовСтр.ВхНакладная						= ВыборкаЗаказ.ВхНакладная;
		НовСтр.Заказчик							= ВыборкаЗаказ.Заказчик;
		НовСтр.ДатаВремяДобавленияЗаказа		= ТекущаяДатаСеанса();
		НовСтр.АдресДоставки					= ВыборкаЗаказ.ПолучательАдрес;
		НовСтр.СтатусЗаказа						= ВыборкаЗаказ.СтатусДокумента;
		НовСтр.ВидДоставки						= ВыборкаЗаказ.ВидДоставки;
		НовСтр.ДатаДоставки 					= ВыборкаЗаказ.ДатаДоставки;
		НовСтр.ОбщийВес							= ВыборкаЗаказ.ОбщийВес;
		НовСтр.ОбщийОбъемныйВес					= ВыборкаЗаказ.ОбщийОбъемныйВес;
		НовСтр.ОбщийОбъем						= ВыборкаЗаказ.ОбщийОбъем;
		НовСтр.Длина							= ВыборкаЗаказ.Длина;
		НовСтр.Высота							= ВыборкаЗаказ.Высота;
		НовСтр.Ширина							= ВыборкаЗаказ.Ширина;
		НовСтр.Мест								= ВыборкаЗаказ.КоличествоМест;
		НовСтр.Реестр							= ВыборкаЗаказ.Реестр;
		НовСтр.Комментарий						= ВыборкаЗаказ.Комментарий;
		НовСтр.ПланДоставки						= ВыборкаЗаказ.ПланДоставки;
		НовСтр.Курьер                           = ВыборкаЗаказ.Курьер;
		Если ДокПриемка.Склад.Предопределенный Тогда
			Если КонецДня(ВыборкаЗаказ.ДатаДоставки) = КонецДня(ТекущаяДата()+ 24*3600) Тогда
				НовСтр.Ячейка						= ЯчейкаКВыдаче;
			Иначе
				НовСтр.Ячейка						= ЯчейкаОсновная;
			КонецЕсли;
			Если ВыборкаЗаказ.Проблема Тогда
				НовСтр.Ячейка						= ЯчейкаПроблема;
			КонецЕсли;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ДокПриемка.ДокументОснование) Тогда
			НовСтр.Проверен = Истина;
		КонецЕсли;
		
		НовСтр.Недостача						= ?(НовСтр.Проверен, Ложь,Истина);
		
		Если ЗначениеЗаполнено(мДокументОснование) Тогда
			НовСтр.ДокументОснование = мДокументОснование;
		КонецЕсли;
		
		ВыборкаНоменклатура = ВыборкаЗаказ.Выбрать();
		
		Пока ВыборкаНоменклатура.Следующий() Цикл
			Если НЕ ЗначениеЗаполнено(ВыборкаНоменклатура.ЗапасНоменклатура) Тогда 
				Продолжить;
			КонецЕсли;
			НоваяСтрокаГрузы = ДокПриемка.Грузы.Добавить();
			НоваяСтрокаГрузы.НомерСтрокиВЗаказе = ВыборкаНоменклатура.ЗапасНомерСтроки;
			НоваяСтрокаГрузы.Номенклатура		= ВыборкаНоменклатура.ЗапасНоменклатура;
			НоваяСтрокаГрузы.ТипНоменклатурыЗапас = ВыборкаНоменклатура.ЗапасТипНоменклатурыЗапас;
			НоваяСтрокаГрузы.Характеристика			= ВыборкаНоменклатура.ЗапасХарактеристика;
			НоваяСтрокаГрузы.Партия					= ВыборкаНоменклатура.ЗапасПартия;
			Если ТипЗнч(мДокументОснование) = Тип("ДокументСсылка.ES_ОтчетОДоставке") Тогда
				НоваяСтрокаГрузы.Количество				=  ВыборкаНоменклатура.ЗапасКоличествоОстаток;
			Иначе
				НоваяСтрокаГрузы.Количество				=  ВыборкаНоменклатура.ЗапасКоличество;
			КонецЕсли;
			
			НоваяСтрокаГрузы.ЕдиницаИзмерения				=  ВыборкаНоменклатура.ЗапасЕдиницаИзмерения;
			НоваяСтрокаГрузы.Цена				=  ВыборкаНоменклатура.ЗапасЦена;
			
			НоваяСтрокаГрузы.ПроцентСкидкиНаценки				=  ВыборкаНоменклатура.ЗапасПроцентСкидкиНаценки;
			НоваяСтрокаГрузы.НППлан				=  ВыборкаНоменклатура.ЗапасНППлан;
			НоваяСтрокаГрузы.Содержание				=  ВыборкаНоменклатура.ЗапасСодержание;
			НоваяСтрокаГрузы.Вес				=  ВыборкаНоменклатура.ЗапасВес;
			НоваяСтрокаГрузы.Объем				=  ВыборкаНоменклатура.ЗапасОбъем;
			НоваяСтрокаГрузы.ОбъемныйВес				=  ВыборкаНоменклатура.ЗапасОбъемныйВес;
			НоваяСтрокаГрузы.ОбьявленнаяСтоимость				=  ВыборкаНоменклатура.ЗапасОбьявленнаяСтоимость;
			НоваяСтрокаГрузы.Опасность				=  ВыборкаНоменклатура.ЗапасОпасность;
			НоваяСтрокаГрузы.Артикул				=  ВыборкаНоменклатура.ЗапасАртикул;
			НоваяСтрокаГрузы.Штрихкод				=  ВыборкаНоменклатура.ЗапасШтрихкод;
			
			НоваяСтрокаГрузы.Заказ = ВыборкаНоменклатура.ДокументДоставки;
			
		КонецЦикла;
				
	КонецЦикла;
	
	//}ЭР Несторук С.И.

КонецПроцедуры // ЗаполнитьДокументЗаказами()
