
&НаКлиенте
Процедура ЗаказыЗаказНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Уникальность = "ФормаВыбораЗаказаВДокументПоставка";
	Оповещение = Новый ОписаниеОповещения("ЗаполнитьТЧДаннымиЗаказа",ЭтаФорма);
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВызваноИзES_Поставка", Истина);
 
	ОткрытьФорму("Документ.ЗаказПокупателя.ФормаВыбора", ПараметрыФормы , ЭтаФорма, Уникальность, , , Оповещение);
		
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТЧДаннымиЗаказа(Заказ, Параметры) Экспорт
	
	// Запрет добавления одного заказа дважды
	НайденныеСтроки = Объект.Заказы.НайтиСтроки(Новый Структура("Заказ", Заказ));
	Если НайденныеСтроки.Количество() >= 1 Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "" + Заказ + " уже есть в табличной части";
		Сообщение.Сообщить();
		
		Возврат;
	Иначе
		Если ТипЗнч(Заказ) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
			ИнфоПоЗаказу = ПолучитьИнфоПоЗаказу(Заказ);
			Если ИнфоПоЗаказу.Свойство("Сообщение") Тогда
				Сообщить(ИнфоПоЗаказу.Сообщение);
				Возврат;
			КонецЕсли;
							
			НайденныеСтроки = Объект.Заказы.НайтиСтроки(Новый Структура("Заказчик", ИнфоПоЗаказу.Заказчик));
			Если НайденныеСтроки.Количество() = 0 И Объект.Заказы.Количество() > 1  Тогда
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "В документе " + Заказ + " другой заказчик";
				Сообщение.Сообщить();
				Возврат;
			Иначе
				
				Элементы.Заказы.ТекущиеДанные.Заказ 		= Заказ;
				Элементы.Заказы.ТекущиеДанные.Накладная 	= ИнфоПоЗаказу.НомерНакладной;
				Элементы.Заказы.ТекущиеДанные.Заказчик 		= ИнфоПоЗаказу.Заказчик;
				Элементы.Заказы.ТекущиеДанные.ВхНакладная	= ИнфоПоЗаказу.ВхНакладная;
				
			КонецЕсли;
		КонецЕсли; 
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьИнфоПоЗаказу(Заказ)
	
	ИнфоПоЗаказу = Новый Структура ("Заказчик, НомерНакладной, ВхНакладная", Неопределено, Неопределено, Неопределено);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказПокупателя.Ссылка,
		|	ЗаказПокупателя.ES_НомерНакладной,
		|	ЗаказПокупателя.Контрагент,
		|	ЗаказПокупателя.ES_ВхНакладная
		|ПОМЕСТИТЬ ВТ_Заказ
		|ИЗ
		|	Документ.ЗаказПокупателя КАК ЗаказПокупателя
		|ГДЕ
		|	ЗаказПокупателя.Ссылка = &Заказ
		|	И ЗаказПокупателя.ПометкаУдаления = ЛОЖЬ
		|	И ЗаказПокупателя.Проведен = ИСТИНА
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Заказ.Ссылка,
		|	ВТ_Заказ.ES_НомерНакладной,
		|	ВТ_Заказ.Контрагент,
		|	ВТ_Заказ.ES_ВхНакладная,
		|	ES_СтатусыЗаказовСрезПоследних.СтатусЗаказа,
		|	ЕСТЬNULL(ES_СведенияОЗаказахСрезПоследних.Поставка, ЗНАЧЕНИЕ(Документ.ES_Поставка.ПустаяСсылка)) КАК Поставка
		|ИЗ
		|	ВТ_Заказ КАК ВТ_Заказ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ES_СтатусыЗаказов.СрезПоследних(
		|				,
		|				Заказ В
		|					(ВЫБРАТЬ
		|						ВТ_Заказ.Ссылка
		|					ИЗ
		|						ВТ_Заказ КАК ВТ_Заказ)) КАК ES_СтатусыЗаказовСрезПоследних
		|		ПО ВТ_Заказ.Ссылка = ES_СтатусыЗаказовСрезПоследних.Заказ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ES_СведенияОЗаказах.СрезПоследних КАК ES_СведенияОЗаказахСрезПоследних
		|		ПО ВТ_Заказ.Ссылка = ES_СведенияОЗаказахСрезПоследних.Заказ";
	
	Запрос.УстановитьПараметр("Заказ", Заказ);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если ЗначениеЗаполнено(Выборка.Поставка) Тогда 
			мСообщение = ("Невозможно добавить Документ " + Выборка.Ссылка + ". Присутствует в  " + Выборка.Поставка);
			ИнфоПоЗаказу.Вставить("Сообщение", мСообщение);	
			Возврат ИнфоПоЗаказу;
		КонецЕсли;
		
		Если Выборка.СтатусЗаказа = Перечисления.ES_СтатусыЗаказов.Подготовлен ИЛИ
			Выборка.СтатусЗаказа = Перечисления.ES_СтатусыЗаказов.Назначен 
			Тогда
			ИнфоПоЗаказу = Новый Структура ("Заказчик, НомерНакладной, ВхНакладная", Выборка.Контрагент, Выборка.ES_НомерНакладной, Выборка.ES_ВхНакладная);
		Иначе
			мСообщение = ("Невозможно добавить Документ " + Выборка.Ссылка + " в статусе " + Выборка.СтатусЗаказа);
			ИнфоПоЗаказу.Вставить("Сообщение", мСообщение);	
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ИнфоПоЗаказу;	
	
КонецФункции

&НаКлиенте
Процедура ЗаказыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Копирование Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыПередУдалением(Элемент, Отказ)
	
	//Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если НЕ Поле.Имя = "ЗаказыЗаказ" Тогда
		ПоказатьЗначение(,Элемент.ТекущиеДанные.Заказ);
	КонецЕсли;
	
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ответственный) Тогда
		
		Объект.Ответственный = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(Пользователи.ТекущийПользователь(), "ОсновнойОтветственный");
		
	КонецЕсли;

	Если Объект.ES_ЗагруженССайта Тогда
		Элементы.Декорация1.Видимость = Истина;
		Элементы.Декорация1.Картинка = БиблиотекаКартинок.ES_КартинкаOZON;
	КонецЕсли;
	
		
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	  УдалитьПустыеСтрокиВТЧЗаказы();
	
КонецПроцедуры

&НаКлиенте
Процедура  УдалитьПустыеСтрокиВТЧЗаказы()
	
	й = Объект.Заказы.Количество() - 1;
	Пока й >=0 Цикл
		Если НЕ ЗначениеЗаполнено(Объект.Заказы[й].Заказ) Тогда
			Объект.Заказы.Удалить(й);
		КонецЕсли;
		й = й-1;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//ЭР Несторук С.И. 10.04.2019 9:32:27 {
	ES_БиллингКлиент.ПроверитьДоступностьСервисаDelans(Отказ);
	//}ЭР Несторук С.И.
КонецПроцедуры



