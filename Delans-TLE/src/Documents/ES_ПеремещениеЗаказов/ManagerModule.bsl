////////////////////////////////////////////////////////////////////////////////
// Печать

#Область Печать

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	//ЕФСОЛ Савченко К.Р. 16.09.2017 +
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ES_ПеремещениеНаложенныхПлатежей") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПФ_MXL_ES_ПеремещениеНаложенныхПлатежей", "ПеремещениеНаложенныхПлатежей", СформироватьПечатнуюФормуПеремещениеНаложенныхПлатежей(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ES_ПеремещениеЗаказов") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПФ_MXL_ES_ПеремещениеЗаказов", "ПеремещениеЗаказов", СформироватьПечатнуюФормуПеремещениеЗаказов(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	//ЕФСОЛ Савченко К.Р. 16.09.2017 -
КонецПроцедуры

// Заполняет список команд печати Заказа покупателя
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	//ЕФСОЛ Савченко К.Р. 16.09.2017 +
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПФ_MXL_ES_ПеремещениеНаложенныхПлатежей";
	КомандаПечати.Представление = НСтр("ru = 'Перемещение наложенных платежей'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка,ФормаВыбора";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.МестоРазмещения = "ГруппаВажныеКоманды";
	КомандаПечати.Порядок = 10;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПФ_MXL_ES_ПеремещениеЗаказов";
	КомандаПечати.Представление = НСтр("ru = 'Перемещение заказов'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка,ФормаВыбора";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.МестоРазмещения = "ГруппаВажныеКоманды";
	КомандаПечати.Порядок = 5;
	//ЕФСОЛ Савченко К.Р. 16.09.2017 -
КонецПроцедуры

Функция СформироватьПечатнуюФормуПеремещениеНаложенныхПлатежей(МассивОбъектов, ОбъектыПечати) 
	//ЕФСОЛ Савченко К.Р. 16.09.2017 +
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДок.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПФ_MXL_ES_ПеремещениеНаложенныхПлатежей";
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ES_ПеремещениеЗаказовПлатежи.НомерСтроки КАК НомерСтроки,
	|	ES_ПеремещениеЗаказовПлатежи.Заказ КАК Заказ,
	|	ES_ПеремещениеЗаказовПлатежи.НомерНакладной КАК НомерНакладной,
	|	ES_ПеремещениеЗаказовПлатежи.СтатусЗаказа КАК СтатусЗаказа,
	|	ES_ПеремещениеЗаказовПлатежи.НПФактНал КАК НПФактНал,
	|	ES_ПеремещениеЗаказовПлатежи.НПФактБезнал КАК НПФактБезнал,
	|	ES_ПеремещениеЗаказовПлатежи.КОтправке КАК КОтправке,
	|	ES_ДанныеПоЗаказам.НППлан КАК НППлан,
	|	ES_ПеремещениеЗаказовПлатежи.Ссылка КАК Ссылка,
	|	ES_ПеремещениеЗаказов.Партнер КАК Партнер,
	|	ES_ПеремещениеЗаказов.ВидОперации КАК ВидОперации,
	|	ES_ПеремещениеЗаказовПлатежи.Заказ.ES_АдресДоставки КАК ЗаказES_АдресДоставки,
	|	ES_ПеремещениеЗаказовПлатежи.Заказ.ES_НППлан КАК ЗаказES_НППлан,
	|	ES_ПеремещениеЗаказовПлатежи.Заказ.ВидОперации,
	|	ES_ПеремещениеЗаказов.Ответственный КАК Ответственный,
	|	ES_ПеремещениеЗаказов.Номер КАК Номер
	|ИЗ
	|	Документ.ES_ПеремещениеЗаказов.Платежи КАК ES_ПеремещениеЗаказовПлатежи
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ES_ДанныеПоЗаказам КАК ES_ДанныеПоЗаказам
	|		ПО ES_ПеремещениеЗаказовПлатежи.Ссылка = ES_ДанныеПоЗаказам.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ES_ПеремещениеЗаказов КАК ES_ПеремещениеЗаказов
	|		ПО ES_ПеремещениеЗаказовПлатежи.Ссылка = ES_ПеремещениеЗаказов.Ссылка
	|ГДЕ
	|	ES_ПеремещениеЗаказовПлатежи.Ссылка В(&МассивОбъектов)
	|	И ES_ПеремещениеЗаказов.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ES_ВидыОперацийПеремещение.НаложенныеПлатежи)
	|ИТОГИ
	|	МАКСИМУМ(НомерСтроки),
	|	МАКСИМУМ(Заказ),
	|	МАКСИМУМ(НомерНакладной),
	|	МАКСИМУМ(СтатусЗаказа),
	|	СУММА(НПФактНал),
	|	СУММА(НПФактБезнал),
	|	МАКСИМУМ(КОтправке),
	|	СУММА(НППлан),
	|	МАКСИМУМ(Партнер),
	|	МАКСИМУМ(ВидОперации),
	|	МАКСИМУМ(ЗаказES_АдресДоставки),
	|	СУММА(ЗаказES_НППлан),
	|	МАКСИМУМ(Ответственный),
	|	МАКСИМУМ(Номер)
	|ПО
	|	Ссылка";	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	//ВидОперации = Перечисления.ES_ВидыОперацийПеремещение.НаложенныеПлатежи;
	//Запрос.УстановитьПараметр("ВидОперации",ВидОперации);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если  РезультатЗапроса.Пустой() Тогда
		Сообщить("Вид операции не соответствует выбору печатной формы."); 
		Возврат ТабДок;
	КонецЕсли;
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ES_ПеремещениеЗаказов.ПФ_MXL_ES_ПеремещениеНаложенныхПлатежей");
		Если ТипЗнч(Макет)<> Тип("ТабличныйДокумент") Тогда
			Макет = ПолучитьМакет("ПФ_MXL_ES_ПеремещениеНаложенныхПлатежей");
		КонецЕсли;
		
		ПервыйДокумент = Истина;
		
		ВыборкаИтог = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
		Пока ВыборкаИтог.Следующий() Цикл
			
			Если ПервыйДокумент Тогда
				ПервыйДокумент = Ложь;
			Иначе	
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ОбластьШапка = Макет.ПолучитьОбласть("Заголовок");
			ОбластьШапка.Параметры.Номер = ВыборкаИтог.НомерНакладной;
			ОбластьШапка.Параметры.Партнер = ВыборкаИтог.Партнер;
			ТабДок.Вывести(ОбластьШапка);
			
			ОбластьШапка = Макет.ПолучитьОбласть("ШапкаТаблицы");
			ТабДок.Вывести(ОбластьШапка);
			
			// Строки таблицы
			Выборка = ВыборкаИтог.Выбрать();
			Пока Выборка.Следующий() Цикл
				
				ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаТаблицы");
				
				ОбластьСтрока.Параметры.Номер 			= Выборка.НомерСтроки;
				ОбластьСтрока.Параметры.Заказ 			=  "Заказ на доставку " + "
			 |" + Выборка.Номер;				
				ОбластьСтрока.Параметры.Накладная       = Выборка.НомерНакладной;
				ОбластьСтрока.Параметры.АдресДоставки 	= Выборка.ЗаказES_АдресДоставки;
				ОбластьСтрока.Параметры.Статус          = Выборка.СтатусЗаказа;
				ОбластьСтрока.Параметры.НППлан 			= Формат(Выборка.ЗаказES_НППлан,"ЧДЦ=2");
								
				ОбластьСтрока.Параметры.НПФактНал 		= Формат(Выборка.НПФактНал,"ЧДЦ=2");
				ОбластьСтрока.Параметры.НПФактБН		= Формат(Выборка.НПФактБезнал,"ЧДЦ=2");
				ОбластьСтрока.Параметры.Сумма           = Формат(Выборка.КОтправке,"ЧДЦ=2");
				
				ТабДок.Вывести(ОбластьСтрока);
				
			КонецЦикла;
			
			ОбластьИтого = Макет.ПолучитьОбласть("Подвал");
			ОбластьИтого.Параметры.Ответственный = ВыборкаИтог.Ответственный;
			ТабДок.Вывести(ОбластьИтого);
			
		КонецЦикла;
					
		Возврат ТабДок;
		
	КонецЕсли;
	//ЕФСОЛ Савченко К.Р. 16.09.2017 -	
КонецФункции

Функция СформироватьПечатнуюФормуПеремещениеЗаказов (МассивОбъектов, ОбъектыПечати)
	//ЕФСОЛ Савченко К.Р. 16.09.2017 +
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДок.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПФ_MXL_ES_ПеремещениеЗаказов";
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ES_ПеремещениеЗаказов.Партнер КАК Партнер,
	|	ES_ПеремещениеЗаказов.Ссылка КАК Ссылка,
	|	ES_ПеремещениеЗаказовЗаказы.НомерСтроки КАК НомерСтроки,
	|	ES_ПеремещениеЗаказовЗаказы.Заказ КАК Заказ,
	|	ES_ПеремещениеЗаказовЗаказы.НомерНакладной КАК НомерНакладной,
	|	ES_ПеремещениеЗаказовЗаказы.СтатусЗаказа КАК СтатусЗаказа,
	|	ES_ПеремещениеЗаказовЗаказы.АдресДоставки КАК АдресДоставки,
	|	ES_ПеремещениеЗаказовЗаказы.ДатаВремяДобавленияЗаказа КАК ДатаВремяДобавленияЗаказа,
	|	ES_ПеремещениеЗаказовЗаказы.ОбщийВес КАК ОбщийВес,
	|	ES_ПеремещениеЗаказов.ВидОперации КАК ВидОперации,
	|	ES_ПеремещениеЗаказовЗаказы.Заказ.Комментарий,
	|	ES_ПеремещениеЗаказовЗаказы.Заказ.ES_ВхНакладная КАК ЗаказES_ВхНакладная,
	|	ES_ПеремещениеЗаказов.Ответственный КАК Ответственный,
	|	ES_ПеремещениеЗаказов.Номер КАК Номер
	|ИЗ
	|	Документ.ES_ПеремещениеЗаказов.Заказы КАК ES_ПеремещениеЗаказовЗаказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ES_ПеремещениеЗаказов КАК ES_ПеремещениеЗаказов
	|		ПО ES_ПеремещениеЗаказовЗаказы.Ссылка = ES_ПеремещениеЗаказов.Ссылка
	|ГДЕ
	|	ES_ПеремещениеЗаказовЗаказы.Ссылка В(&МассивОбъектов)
	|	И ES_ПеремещениеЗаказов.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ES_ВидыОперацийПеремещение.Заказы)
	|ИТОГИ
	|	МАКСИМУМ(Партнер),
	|	МАКСИМУМ(НомерСтроки),
	|	МАКСИМУМ(Заказ),
	|	МАКСИМУМ(НомерНакладной),
	|	МАКСИМУМ(СтатусЗаказа),
	|	МАКСИМУМ(АдресДоставки),
	|	МАКСИМУМ(ДатаВремяДобавленияЗаказа),
	|	МАКСИМУМ(ОбщийВес),
	|	МАКСИМУМ(ВидОперации),
	|	МАКСИМУМ(ЗаказES_ВхНакладная),
	|	МАКСИМУМ(Ответственный),
	|	МАКСИМУМ(Номер)
	|ПО
	|	Ссылка";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов); 
	
	РезультатЗапроса = Запрос.Выполнить();
	Если  РезультатЗапроса.Пустой() Тогда
		Сообщить("Вид операции не соответствует выбору печатной формы."); 
		Возврат ТабДок;
	КонецЕсли;
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		     
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ES_ПеремещениеЗаказов.ПФ_MXL_ES_ПеремещениеЗаказов");
		Если ТипЗнч(Макет)<> Тип("ТабличныйДокумент") Тогда
			Макет = ПолучитьМакет("ПФ_MXL_ES_ПеремещениеЗаказов");	
		КонецЕсли;
		
		ПервыйДокумент = Истина;
		
		ВыборкаИтог = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
	
		
		Пока ВыборкаИтог.Следующий() Цикл
			
			Если ПервыйДокумент Тогда
				ПервыйДокумент = Ложь;
			Иначе	
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;                                                       
						
			ОбластьШапка = Макет.ПолучитьОбласть("Заголовок");
			ОбластьШапка.Параметры.Номер = ВыборкаИтог.НомерНакладной;
			ОбластьШапка.Параметры.Партнер = ВыборкаИтог.Партнер;
			ТабДок.Вывести(ОбластьШапка);
			
			ОбластьШапка = Макет.ПолучитьОбласть("ШапкаТаблицы");
			ТабДок.Вывести(ОбластьШапка);
						
			// Строки таблицы
			Выборка = ВыборкаИтог.Выбрать();
			Пока Выборка.Следующий() Цикл
				
				ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаТаблицы");
				
				ОбластьСтрока.Параметры.Номер 			= Выборка.НомерСтроки;
				ОбластьСтрока.Параметры.Заказ 			=  "Заказ на доставку " + "
			 |" + Выборка.НомерНакладной;
				//ОбластьСтрока.Параметры.Накладная       = Выборка.НомерНакладной;
				ОбластьСтрока.Параметры.АдресДоставки 	= Выборка.АдресДоставки;
				ОбластьСтрока.Параметры.ВхНакладная     = Выборка.ЗаказES_ВхНакладная;
				ОбластьСтрока.Параметры.Статус 			= Выборка.СтатусЗаказа;
				
				ОбластьСтрока.Параметры.Примечание 		= Выборка.Заказ.Комментарий;
				ОбластьСтрока.Параметры.Вес		        = Формат(Выборка.ОбщийВес, "ЧДЦ=3");
				ОбластьСтрока.Параметры.Дата            = Формат(Выборка.ДатаВремяДобавленияЗаказа, "ДФ=dd.MM.yyyy");
				
				ТабДок.Вывести(ОбластьСтрока);
				
			КонецЦикла;
			
			ОбластьИтого = Макет.ПолучитьОбласть("Подвал");
			ОбластьИтого.Параметры.Ответственный = ВыборкаИтог.Ответственный;
            ТабДок.Вывести(ОбластьИтого);
			
		КонецЦикла;
		Возврат ТабДок;
		
	КонецЕсли;
	//ЕФСОЛ Савченко К.Р. 16.09.2017 -	
КонецФункции
#КонецОбласти
