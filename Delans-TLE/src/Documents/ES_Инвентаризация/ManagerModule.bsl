
// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	//Лохоня Ю.А.
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "ПФ_MXL_ES_АктИнвентаризации");
	Если ПечатнаяФорма <> Неопределено Тогда
		
		ПечатнаяФорма.ТабличныйДокумент = ПечатнаяФормаES_АктИнвентаризации(МассивОбъектов, ОбъектыПечати, "ПФ_MXL_ES_АктИнвентаризации");
		ПечатнаяФорма.ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ES_Инвентаризация_ПФ_MXL_ES_АктИнвентаризации";
		ПечатнаяФорма.ПолныйПутьКМакету = "Документ.ES_Инвентаризация.ПФ_MXL_ES_АктИнвентаризации";
		ПечатнаяФорма.СинонимМакета = НСтр("ru ='Акт инвентаризации'");
		
	КонецЕсли;
	
КонецПроцедуры

// Заполняет список команд печати Заказа покупателя
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	//Лохоня Ю.А.
	// Акт инвентаризации
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПФ_MXL_ES_АктИнвентаризации";
	КомандаПечати.Представление = НСтр("ru = 'Акт инвентаризации'");
	КомандаПечати.СписокФорм = "ФормаДокумента, ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.МестоРазмещения = "ГруппаВажныеКомандыИнвентаризации";
	КомандаПечати.Порядок = 5;
	
КонецПроцедуры

Функция ПечатнаяФормаES_АктИнвентаризации(МассивОбъектов, ОбъектыПечати, ИмяМакета)
	//Лохоня Ю.А.
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.КоличествоСтраниц();
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПФ_MXL_ES_АктИнвентаризации";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ES_Инвентаризация."+ ИмяМакета);
	Если ТипЗнч(Макет)<> Тип("ТабличныйДокумент") Тогда
		Макет = ПолучитьМакет(ИмяМакета);
	КонецЕсли;	
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ES_СтатусыЗаказовСрезПоследних.СтатусЗаказа КАК СтатусЗаказа,
		|	ES_ИнвентаризацияЗаказы.НомерСтроки КАК НомерСтроки,
		|	ES_ИнвентаризацияЗаказы.Заказ КАК Заказ,
		|	ES_ИнвентаризацияЗаказы.НомерНакладной КАК НомерНакладной,
		|	ES_ИнвентаризацияЗаказы.ЯчейкаТекущая КАК ЯчейкаТекущая,
		|	ES_ИнвентаризацияЗаказы.Заказ.ES_ВхНакладная КАК ВхНакладная,
		|	ES_ИнвентаризацияЗаказы.Ссылка КАК Ссылка,
		|	ES_ИнвентаризацияЗаказы.Ссылка.Склад КАК Склад,
		|	ES_ИнвентаризацияЗаказы.Ссылка.Ячейка КАК Ячейка,
		|	ES_ИнвентаризацияЗаказы.Ссылка.Ответственный КАК Ответственный,
		|	ES_ИнвентаризацияЗаказы.Заказ.ES_ОбщийВес КАК ОбщийВес,
		|	ES_ИнвентаризацияЗаказы.Заказ.ES_Объем КАК Объем,
		|	ES_ИнвентаризацияЗаказы.Ссылка.Номер КАК Номер,
		|	ES_ИнвентаризацияЗаказы.Ссылка.Дата КАК Дата,
		|	ES_ИнвентаризацияЗаказы.Проверен КАК Проверен,
		|	ES_ИнвентаризацияЗаказы.ЯчейкаПолучатель КАК ЯчейкаПолучатель,
		|	ES_ИнвентаризацияЗаказы.Излишек КАК Излишек,
		|	ES_ИнвентаризацияЗаказы.ПричинаНедостачи КАК ПричинаНедостачи
		|ПОМЕСТИТЬ ВТ_Инв
		|ИЗ
		|	Документ.ES_Инвентаризация.Заказы КАК ES_ИнвентаризацияЗаказы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ES_СтатусыЗаказов.СрезПоследних КАК ES_СтатусыЗаказовСрезПоследних
		|		ПО ES_ИнвентаризацияЗаказы.Заказ = ES_СтатусыЗаказовСрезПоследних.Заказ
		|ГДЕ
		|	ES_ИнвентаризацияЗаказы.Ссылка В(&МассивОбъектов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ES_ЗаказыНаСкладе.Регистратор.Номер) КАК РегистраторНомер,
		|	МАКСИМУМ(ES_ЗаказыНаСкладе.Регистратор.Дата) КАК РегистраторДата,
		|	ES_ЗаказыНаСкладе.Заказ КАК Заказ
		|ПОМЕСТИТЬ ВТ_ЗаказыНаСклад
		|ИЗ
		|	РегистрНакопления.ES_ЗаказыНаСкладе КАК ES_ЗаказыНаСкладе
		|ГДЕ
		|	ТИПЗНАЧЕНИЯ(ES_ЗаказыНаСкладе.Регистратор) = ТИП(Документ.ES_Приемка)
		|
		|СГРУППИРОВАТЬ ПО
		|	ES_ЗаказыНаСкладе.Заказ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Инв.СтатусЗаказа КАК СтатусЗаказа,
		|	ВТ_Инв.НомерСтроки КАК НомерСтроки,
		|	ВТ_Инв.Заказ КАК Заказ,
		|	ВТ_Инв.НомерНакладной КАК НомерНакладной,
		|	ВТ_Инв.ЯчейкаТекущая КАК ЯчейкаТекущая,
		|	ВТ_Инв.ВхНакладная КАК ВхНакладная,
		|	ВТ_Инв.Ссылка КАК Ссылка,
		|	ВТ_Инв.Склад КАК Склад,
		|	ВТ_Инв.Ячейка КАК Ячейка,
		|	ВТ_Инв.Ответственный КАК Ответственный,
		|	ВТ_Инв.ОбщийВес КАК ОбщийВес,
		|	ВТ_Инв.Объем КАК Объем,
		|	ВТ_Инв.Номер КАК Номер,
		|	ВТ_Инв.Дата КАК Дата,
		|	ВТ_Инв.Проверен КАК Проверен,
		|	ВТ_Инв.ЯчейкаПолучатель КАК ЯчейкаПолучатель,
		|	ВТ_Инв.Излишек КАК Излишек,
		|	ВТ_Инв.ПричинаНедостачи КАК ПричинаНедостачи,
		|	ВТ_ЗаказыНаСклад.РегистраторНомер КАК НомерПриемки,
		|	ВТ_ЗаказыНаСклад.РегистраторДата КАК ДатаПриемки
		|ИЗ
		|	ВТ_Инв КАК ВТ_Инв
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗаказыНаСклад КАК ВТ_ЗаказыНаСклад
		|		ПО ВТ_Инв.Заказ = ВТ_ЗаказыНаСклад.Заказ";	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	РезультатЗапроса = Запрос.Выполнить();
	Рез = Запрос.Выполнить().Выгрузить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ТабДок = Новый ТабличныйДокумент;
		
	// Шапка
	//СведенияОбОрганизации = УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(ВыборкаСсылка.Организация, ВыборкаСсылка.Дата, ,);
	НомерДокумента = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Рез[0].Ссылка.Номер, Истина, Истина);
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапка.Параметры.ТекстЗаголовка = "Акт инвентаризации №"
	+ НомерДокумента
	+ " от "
	+ Формат(Рез[0].Ссылка.Дата, "ДЛФ=DD");
	Если ЗначениеЗаполнено(Рез[0].Ссылка.Склад) и ЗначениеЗаполнено(Рез[0].Ссылка.Ячейка) Тогда
		ОбластьШапка.Параметры.СкладЯчейка = "" + Рез[0].Ссылка.Склад + ", " + Рез[0].Ссылка.Ячейка + " ";
	ИначеЕсли ЗначениеЗаполнено(Рез[0].Ссылка.Склад) и НЕ ЗначениеЗаполнено(Рез[0].Ссылка.Ячейка) Тогда
		ОбластьШапка.Параметры.СкладЯчейка = "" + Рез[0].Ссылка.Склад + " ";
	ИначеЕсли НЕ ЗначениеЗаполнено(Рез[0].Ссылка.Склад) и ЗначениеЗаполнено(Рез[0].Ссылка.Ячейка) Тогда
		ОбластьШапка.Параметры.СкладЯчейка = "" + Рез[0].Ссылка.Ячейка + " "
	Иначе 
		ОбластьШапка.Параметры.СкладЯчейка = "";
	КонецЕсли;
	ОбластьШапка.Параметры.Ответственный = Рез[0].Ссылка.Ответственный;
	ОбластьШапка.Параметры.Расхождения = " ";
	//ОбластьШапка.Параметры.ПредставлениеПоставщика = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,");
	ТабДок.Вывести(ОбластьШапка);
	
	Комментарий = Рез[0].Ссылка.Комментарий;
	//ВыборкаСсылка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	НомерСтр = 0; 
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл			
		ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицы");
		//ОбластьСтрокаТаблицы.Параметры.НомерСтроки	= ВыборкаДетальныеЗаписи.НомерСтроки;
		ОбластьСтрокаТаблицы.Параметры.Накладная 	= "Заказ на доставку " + "
			 |" + ВыборкаДетальныеЗаписи.НомерНакладной;
		ОбластьСтрокаТаблицы.Параметры.Статус 		= ВыборкаДетальныеЗаписи.СтатусЗаказа;
		Если ВыборкаДетальныеЗаписи.Проверен = Истина Тогда
			ОбластьСтрокаТаблицы.Параметры.НедостачаИзлишек	= " ";
		Иначе 
			ОбластьСтрокаТаблицы.Параметры.НедостачаИзлишек	= "Недостача";
		КонецЕсли;
		//Если  ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Приемка.ДокументОснование) И НЕ ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ЗаказПр.ДокументОснование) Тогда
		//	ОбластьСтрокаТаблицы.Параметры.НедостачаИзлишек	= "Излишек";
		//КонецЕсли;	
		Если  ВыборкаДетальныеЗаписи.Излишек = Истина Тогда
			ОбластьСтрокаТаблицы.Параметры.НедостачаИзлишек	= "Излишек";
		КонецЕсли;	
		ОбластьСтрокаТаблицы.Параметры.ТекЯчейка = ВыборкаДетальныеЗаписи.ЯчейкаТекущая;
		ОбластьСтрокаТаблицы.Параметры.ЯчейкаПолучатель = ВыборкаДетальныеЗаписи.ЯчейкаПолучатель;
		ОбластьСтрокаТаблицы.Параметры.ВхНакладная	= ВыборкаДетальныеЗаписи.ВхНакладная;
		ОбластьСтрокаТаблицы.Параметры.Вес	 		= ВыборкаДетальныеЗаписи.ОбщийВес;
		ОбластьСтрокаТаблицы.Параметры.Габариты		= ВыборкаДетальныеЗаписи.Объем;

		ОбластьСтрокаТаблицы.Параметры.ДатаПриемки	= Формат(ВыборкаДетальныеЗаписи.ДатаПриемки, "ДЛФ=Д");
		ОбластьСтрокаТаблицы.Параметры.НомерПриемки	= ВыборкаДетальныеЗаписи.НомерПриемки;
		ОбластьСтрокаТаблицы.Параметры.Комментарий	= ВыборкаДетальныеЗаписи.ПричинаНедостачи;
		
		Если ОбластьСтрокаТаблицы.Параметры.НедостачаИзлишек	= " " Тогда
			НомерСтр = НомерСтр;
		Иначе 	НомерСтр = НомерСтр + 1;
		КонецЕсли;
		ОбластьСтрокаТаблицы.Параметры.НомерСтроки	= НомерСтр;
		
		//Если ОбластьСтрокаТаблицы.Параметры.НедостачаИзлишек	= " " Тогда
		//	ОбластьСтрокаТаблицы.Очистить();
		//КонецЕсли;			
		//
		//ТабДок.Вывести(ОбластьСтрокаТаблицы);
		Если Не ОбластьСтрокаТаблицы.Параметры.НедостачаИзлишек	= " " Тогда
					ТабДок.Вывести(ОбластьСтрокаТаблицы);
		КонецЕсли;
		
	КонецЦикла;	
	
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ТабДок.Вывести(ОбластьПодвал);	
	
	ТабличныйДокумент.Вывести(ТабДок);
	
	Возврат ТабличныйДокумент;	
	
КонецФункции
