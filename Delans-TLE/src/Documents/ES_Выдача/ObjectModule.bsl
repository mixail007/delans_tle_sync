
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Движения.ES_ЗаказыНаСкладе.Записывать = Истина;
	Движения.ES_ЗаказыУКурьера.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ES_ВыдачаЗаказы.Заказ,
		|	ES_ВыдачаЗаказы.ДатаВремяДобавленияЗаказа
		|ПОМЕСТИТЬ ВТ_Заказы
		|ИЗ
		|	Документ.ES_Выдача.Заказы КАК ES_ВыдачаЗаказы
		|ГДЕ
		|	ES_ВыдачаЗаказы.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Заказы.Заказ,
		|	ВТ_Заказы.ДатаВремяДобавленияЗаказа,
		|	isnull(ES_ЗаказыНаСкладеОстатки.КоличествоОстаток,0) КАК ОстатокНаСкладе,
		|	isnull(ES_ЗаказыУКурьераОстатки.КоличествоОстаток,0) КАК ОстатокУКурьера
		|ИЗ
		|	ВТ_Заказы КАК ВТ_Заказы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ES_ЗаказыНаСкладе.Остатки(
		|				&МоментВремени,
		|				Заказ В
		|						(ВЫБРАТЬ
		|							ВТ_Заказы.Заказ
		|						ИЗ
		|							ВТ_Заказы КАК ВТ_Заказы)
		|					И Склад = &Склад) КАК ES_ЗаказыНаСкладеОстатки
		|		ПО ВТ_Заказы.Заказ = ES_ЗаказыНаСкладеОстатки.Заказ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ES_ЗаказыУКурьера.Остатки(
		|				&МоментВремени,
		|				Заказ В
		|					(ВЫБРАТЬ
		|						ВТ_Заказы.Заказ
		|					ИЗ
		|						ВТ_Заказы КАК ВТ_Заказы)) КАК ES_ЗаказыУКурьераОстатки
		|		ПО ВТ_Заказы.Заказ = ES_ЗаказыУКурьераОстатки.Заказ";
	
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		//Движение (расход) в РН ES_ЗаказыНаСкладе
		Если Выборка.ОстатокНаСкладе > 0 Тогда
			Движение = Движения.ES_ЗаказыНаСкладе.ДобавитьРасход();
			Движение.Заказ = Выборка.Заказ;
			Движение.Период = Выборка.ДатаВремяДобавленияЗаказа;
			Движение.Склад = Склад;
			Движение.Количество = 1;	
		Иначе
			ВызватьИсключение НСтр("ru = 'Заказ " + Выборка.Заказ +" отсутствует на складе " + Склад +"'");	
			Отказ = Истина;
		КонецЕсли;
		
		//Движение (приход) в РН ES_ЗаказыУКурьера
		Если Выборка.ОстатокУКурьера = 0 Тогда
			Движение = Движения.ES_ЗаказыУКурьера.ДобавитьПриход();
			Движение.Заказ = Выборка.Заказ;
			Движение.Период = Выборка.ДатаВремяДобавленияЗаказа;
			Движение.Курьер = Курьер;
			Движение.Количество = 1;
		Иначе 
			ВызватьИсключение НСтр("ru = 'Заказ " + Выборка.Заказ +" уже выдан курьеру " + Выборка.Курьер +"'");	
			Отказ = Истина;
		КонецЕсли;
				
	КонецЦикла;
	
	ДобавитьЗаписьВРССтатусыЗаказов(Отказ);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ДокументОснование = ДанныеЗаполнения;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ES_ПланДоставки") Тогда
		
		Если ДанныеЗаполнения.Подтвержден = Ложь Тогда
			ВызватьИсключение НСтр("ru = 'Выдачу можно создать только на основании утвержденного плана'");
			Возврат;			
		КонецЕсли;
		
		ЕстьОтчет = ПолучитьОтчетПоПлану(ДанныеЗаполнения);
		Если ЕстьОтчет = Истина Тогда
			ВызватьИсключение НСтр("ru = 'На основании плана уже создан отчет. Выдачу произвести невозможно'");
			Возврат;			
		КонецЕсли;
				
		Курьер = ДанныеЗаполнения.Курьер;
		Склад = ДанныеЗаполнения.Склад;
		Для каждого Стр Из ДанныеЗаполнения.Заказы Цикл
			Если ТипЗнч(Стр.ДокументДоставки) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
				Если Стр.ДокументДоставки.ES_ВидДоставки = Перечисления.ES_ВидыДоставки.СкладДвери Тогда
				НоваяСтрокаЗаказы = Заказы.Добавить();
				НоваяСтрокаЗаказы.Заказ = Стр.ДокументДоставки;
				НоваяСтрокаЗаказы.Заказчик = Стр.Заказчик;
				НоваяСтрокаЗаказы.ВхНакладная = Стр.ДокументДоставки.ES_ВхНакладная;
				НоваяСтрокаЗаказы.НомерНакладной	=	Стр.НомерНакладной;
				НоваяСтрокаЗаказы.ДатаВремяДобавленияЗаказа = ТекущаяДата();
				
				СтрокиСТоварами = ДанныеЗаполнения.Грузы.НайтиСтроки(Новый Структура("Заказ",Стр.ДокументДоставки));
				Если СтрокиСТоварами.Количество () > 0 Тогда
					Для каждого Стр ИЗ СтрокиСТоварами Цикл
						НоваяСтрокаГрузы = Грузы.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрокаГрузы,Стр);
						НоваяСтрокаГрузы.Заказ = Стр.Заказ;
					КонецЦикла;
				КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		//Для каждого Стр Из ДанныеЗаполнения.Грузы Цикл
		//	Если ТипЗнч(Стр.Заказ) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		//		Если Стр.Заказ.ES_ВидДоставки = Перечисления.ES_ВидыДоставки.СкладДвери Тогда
		//			НоваяСтрокаГрузы = Грузы.Добавить();
		//			ЗаполнитьЗначенияСвойств(НоваяСтрокаГрузы,Стр);
		//		КонецЕсли;
		//	КонецЕсли;
		//КонецЦикла;
		
	КонецЕсли;

КонецПроцедуры

Функция ПолучитьОтчетПоПлану(ПланДоставки)

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ES_СвязьПлановИОтчетовСрезПоследних.ОтчетОДоставке
	|ИЗ
	|	РегистрСведений.ES_СвязьПлановИОтчетов.СрезПоследних(, ПланДоставки = &ПланДоставки) КАК ES_СвязьПлановИОтчетовСрезПоследних";
	
	Запрос.УстановитьПараметр("ПланДоставки", ПланДоставки);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли; 
	
КонецФункции // ПолучитьОтчетПоПлану()

Процедура ДобавитьЗаписьВРССтатусыЗаказов(Отказ)
	
	ТекстЗапроса = "";
	МассивЗаказов = Новый Массив;
	Запрос = Новый Запрос;
	Движения.ES_СтатусыЗаказов.Записывать = Истина;
	Для каждого Стр Из Заказы Цикл
	
		ТекстЗапроса = ТекстЗапроса+ Символы.ПС + 
		"ВЫБРАТЬ
		|	ES_СтатусыЗаказовСрезПоследних.Заказ,
		|	ES_СтатусыЗаказовСрезПоследних.СтатусЗаказа,
		|	&Дата"+Стр.НомерСтроки+" КАК ДатаПроведения
		|ИЗ
		|	РегистрСведений.ES_СтатусыЗаказов.СрезПоследних(&Дата"+Стр.НомерСтроки+", Заказ = &Заказ"+Стр.НомерСтроки+") КАК ES_СтатусыЗаказовСрезПоследних;
		|///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////";
		Запрос.УстановитьПараметр("Дата"+Стр.НомерСтроки,Стр.ДатаВремяДобавленияЗаказа);
		Запрос.УстановитьПараметр("Заказ"+Стр.НомерСтроки,Стр.Заказ);
	КонецЦикла;
	Запрос.Текст = ТекстЗапроса;
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	
	Для й = 0 По МассивРезультатов.Количество()-1 Цикл
		
		Выборка = МассивРезультатов[й].Выбрать();
		Выборка.Следующий();
		
		Если Выборка.СтатусЗаказа = Перечисления.ES_СтатусыЗаказов.НазначенПринят  Тогда
			СтатусЗаказаДляПроведения = Выборка.СтатусЗаказа;
		Иначе
			Отказ = Истина;
			Сообщить("" + Выборка.Заказ + ", статус: " + Выборка.СтатусЗаказа + ". Приемку провести нельзя");
			Продолжить;
		КонецЕсли;
		
		Движение = Движения.ES_СтатусыЗаказов.Добавить();
		Движение.Период						= Выборка.ДатаПроведения;
		Движение.Заказ 						= Выборка.Заказ;
		Движение.СтатусЗаказа 				= СтатусЗаказаДляПроведения;
		Движение.Ответственный 				= Ответственный;
		
		
	КонецЦикла;
		
КонецПроцедуры


Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ПометкаУдаления ИЛИ РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		
		// Нельзя пометить на удаление и отменить проведение документа, если он проходит по другим документам
		МассивСсылок = Новый Массив;
		МассивСсылок.Добавить(Ссылка);
		
		УстановитьПривилегированныйРежим(Истина);
		ТабНайденныхСсылок = НайтиПоСсылкам(МассивСсылок);
		УстановитьПривилегированныйРежим(Ложь);
		
		Для каждого Строка Из ТабНайденныхСсылок Цикл
			Если Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(Строка.Данные)) Тогда
				//ЭР Несторук С.И. 13.10.2017 14:44:41 {
				//Смотрим ссылаются ли на документ проведенные документы, а не помеченные на удаление
				//Если НЕ Строка.Данные.ПометкаУдаления и НЕ Ссылка = Строка.Данные Тогда
				Если Строка.Данные.Проведен и НЕ Ссылка = Строка.Данные Тогда
					//}ЭР Несторук С.И.
					Сообщить("На документ ссылается " + Строка.Данные);
					Отказ = Истина;
					Возврат;
				КонецЕсли; 
			КонецЕсли; 
		КонецЦикла; 
		
	КонецЕсли; 

КонецПроцедуры

