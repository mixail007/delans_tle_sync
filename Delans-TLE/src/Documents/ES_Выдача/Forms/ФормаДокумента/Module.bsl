
&НаКлиенте
Процедура ГрузыВРазрезеЗаказовПриИзменении(Элемент)
	
		ОтборВТЧГрузы(Элементы.Заказы.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборВТЧГрузы(ТекСтрока)
	
	Если ГрузыВРазрезеЗаказов Тогда
		Если ТекСтрока <> Неопределено Тогда
			Элементы.Грузы.ОтборСтрок = Новый ФиксированнаяСтруктура("Заказ", ТекСтрока.Заказ);
		КонецЕсли;
	Иначе
		Элементы.Грузы.ОтборСтрок 			= Неопределено;
	КонецЕсли; 


КонецПроцедуры

&НаКлиенте
Процедура ЗаказыПриАктивизацииСтроки(Элемент)
	ТекСтрока = Элементы.Заказы.ТекущиеДанные;
	ОтборВТЧГрузы(ТекСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	УдалитьПустыеСтрокиВТЧЗаказы();
	
КонецПроцедуры

&НаКлиенте
Процедура  УдалитьПустыеСтрокиВТЧЗаказы()
	
	й = Объект.Заказы.Количество() - 1;
	Пока й >=0 Цикл
		Если НЕ ЗначениеЗаполнено(Объект.Заказы[й].Заказ) Тогда
			Объект.Заказы.Удалить(й);
		КонецЕсли;
		й = й-1;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.ДокументОснование.Видимость	=  ЗначениеЗаполнено(Объект.ДокументОснование);
	
	Если НЕ ЗначениеЗаполнено(Объект.Ответственный) Тогда
		
		Объект.Ответственный = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(Пользователи.ТекущийПользователь(), "ОсновнойОтветственный");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыПередУдалением(Элемент, Отказ)
	Заказ = Элементы.Заказы.ТекущиеДанные.Заказ;
	УдалитьСтрокиПоЗаказуИзДокумента(Заказ);
	
КонецПроцедуры

&НаСервере
Процедура УдалитьСтрокиПоЗаказуИзДокумента(Заказ)
	
	//ЭР Несторук С.И. 22.12.2016 17:18:53 {
	НайденныеСтроки = Объект.Заказы.НайтиСтроки(Новый Структура("Заказ", Заказ));
	Если НайденныеСтроки.Количество() >0 Тогда
		Для каждого Стр Из НайденныеСтроки Цикл
			Объект.Заказы.Удалить(Стр);
		КонецЦикла;
	КонецЕсли;
	
	НайденныеСтроки = Объект.Грузы.НайтиСтроки(Новый Структура("Заказ", Заказ));
	Если НайденныеСтроки.Количество() >0 Тогда
		Для каждого Стр Из НайденныеСтроки Цикл
			Объект.Грузы.Удалить(Стр);
		КонецЦикла;
	КонецЕсли;
	//ЭР Несторук С.И. 22.12.2016 17:18:53 }
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ПоказатьЗначение(,Элемент.ТекущиеДанные.Заказ);
	
КонецПроцедуры

&НаКлиенте
Процедура НайтиПоШтрихкоду(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыЗаказНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Уникальность = "ФормаВыбораЗаказаВДокументВыдачаа";
	Оповещение = Новый ОписаниеОповещения("ЗаполнитьТЧДаннымиЗаказа",ЭтаФорма);
	//ПараметрыФормы = Новый Структура("ВызваноИзES_Приемка", Истина);	
	ОткрытьФорму("Документ.ЗаказПокупателя.ФормаВыбора", , ЭтаФорма, Уникальность, , , Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТЧДаннымиЗаказа(Заказ, Параметры) Экспорт
	
	
	// Запрет добавления одного заказа дважды
	НайденныеСтроки = Объект.Заказы.НайтиСтроки(Новый Структура("Заказ", Заказ));
	Если НайденныеСтроки.Количество() >= 1 Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "" + Заказ + " уже есть в табличной части";
		Сообщение.Сообщить();
		
		Возврат;
	Иначе
		Элементы.Заказы.ТекущиеДанные.Заказ = Заказ;
		ЗаполнитьТЧНаСервере(Заказ);
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТЧНаСервере(Заказ)
	
	//ЭР Несторук С.И. 22.12.2016 17:15:04 {
	
	НайденнаяСтрока = Объект.Заказы.НайтиСтроки(Новый Структура("Заказ", Заказ));
	Если НайденнаяСтрока.Количество() > 0 Тогда
		НоваяСтрока = НайденнаяСтрока[0];
	Иначе
		Возврат;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ES_ДанныеПоЗаказамСрезПоследних.Заказ,
	|	ES_ДанныеПоЗаказамСрезПоследних.Заказчик,
	|	ES_ДанныеПоЗаказамСрезПоследних.ВхНакладная,
	|	ES_ДанныеПоЗаказамСрезПоследних.НомерНакладной
	|ПОМЕСТИТЬ ВТ_Заказ
	|ИЗ
	|	РегистрСведений.ES_ДанныеПоЗаказам.СрезПоследних(, Заказ = &Заказ) КАК ES_ДанныеПоЗаказамСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ES_НоменклатураВЗаказахСрезПоследних.ДокументДоставки,
	|	ES_НоменклатураВЗаказахСрезПоследних.Номенклатура,
	|	ES_НоменклатураВЗаказахСрезПоследних.Характеристика,
	|	ES_НоменклатураВЗаказахСрезПоследних.Партия,
	|	ES_НоменклатураВЗаказахСрезПоследних.ТипНоменклатурыЗапас,
	|	ES_НоменклатураВЗаказахСрезПоследних.Количество,
	|	ES_НоменклатураВЗаказахСрезПоследних.НППлан,
	|	ES_НоменклатураВЗаказахСрезПоследних.Содержание,
	|	ES_НоменклатураВЗаказахСрезПоследних.Цена,
	|	ES_НоменклатураВЗаказахСрезПоследних.ПроцентСкидкиНаценки,
	|	ES_НоменклатураВЗаказахСрезПоследних.Вес,
	|	ES_НоменклатураВЗаказахСрезПоследних.Объем,
	|	ES_НоменклатураВЗаказахСрезПоследних.ОбъемныйВес,
	|	ES_НоменклатураВЗаказахСрезПоследних.ОбьявленнаяСтоимость,
	|	ES_НоменклатураВЗаказахСрезПоследних.Опасность,
	|	ES_НоменклатураВЗаказахСрезПоследних.НомерСтроки
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	РегистрСведений.ES_НоменклатураВЗаказах.СрезПоследних(
	|			,
	|			ДокументДоставки В
	|				(ВЫБРАТЬ
	|					ВТ_Заказ.Заказ
	|				ИЗ
	|					ВТ_Заказ КАК ВТ_Заказ)) КАК ES_НоменклатураВЗаказахСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Заказ.Заказ КАК Заказ,
	|	ES_СтатусыЗаказовСрезПоследних.СтатусЗаказа КАК СтатусЗаказа,
	|	ВТ_Заказ.Заказчик КАК Заказчик,
	|	ВТ_Заказ.ВхНакладная КАК ВхНакладная,
	|	ВТ_Заказ.НомерНакладной КАК НомерНакладной,
	|	ВТ_Товары.ДокументДоставки КАК ДокументДоставки,
	|	ВТ_Товары.Номенклатура КАК Номенклатура,
	|	ВТ_Товары.Характеристика КАК Характеристика,
	|	ВТ_Товары.Партия КАК Партия,
	|	ВТ_Товары.ТипНоменклатурыЗапас КАК ТипНоменклатурыЗапас,
	|	ВТ_Товары.Количество КАК Количество,
	|	ВТ_Товары.НППлан КАК НППлан,
	|	ВТ_Товары.Цена КАК Цена,
	|	ВТ_Товары.ПроцентСкидкиНаценки КАК ПроцентСкидкиНаценки,
	|	ВТ_Товары.Вес КАК Вес,
	|	ВТ_Товары.Объем КАК Объем,
	|	ВТ_Товары.ОбъемныйВес КАК ОбъемныйВес,
	|	ВТ_Товары.ОбьявленнаяСтоимость КАК ОбьявленнаяСтоимость,
	|	ВТ_Товары.Опасность КАК Опасность,
	|	ВТ_Товары.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ВТ_Заказ КАК ВТ_Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ES_СтатусыЗаказов.СрезПоследних(
	|				,
	|				Заказ В
	|					(ВЫБРАТЬ
	|						ВТ_Заказ.Заказ
	|					ИЗ
	|						ВТ_Заказ КАК ВТ_Заказ)) КАК ES_СтатусыЗаказовСрезПоследних
	|		ПО ВТ_Заказ.Заказ = ES_СтатусыЗаказовСрезПоследних.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Товары КАК ВТ_Товары
	|		ПО ВТ_Заказ.Заказ = ВТ_Товары.ДокументДоставки
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|ИТОГИ
	|	МАКСИМУМ(СтатусЗаказа),
	|	МАКСИМУМ(Заказчик),
	|	МАКСИМУМ(ВхНакладная),
	|	МАКСИМУМ(НомерНакладной)
	|ПО
	|	Заказ";
	
	Запрос.УстановитьПараметр("Заказ", Заказ); 	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаЗаказ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		ВыборкаЗаказ.Следующий();
		Если ВыборкаЗаказ.СтатусЗаказа = Перечисления.ES_СтатусыЗаказов.НазначенПринят Тогда
			
			ЗаполнитьЗначенияСвойств(НоваяСтрока,ВыборкаЗаказ);
			НоваяСтрока.ДатаВремяДобавленияЗаказа = ТекущаяДата();
			Выборка = ВыборкаЗаказ.Выбрать();
			Пока Выборка.Следующий() Цикл
				
				Если ЗначениеЗаполнено(Выборка.Номенклатура) Тогда
					СтрокаГрузы = Объект.Грузы.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаГрузы,Выборка);
				КонецЕсли;

			КонецЦикла;
			
			
		Иначе
		Сообщить("Невозможно добавить документ + "+ ВыборкаЗаказ.Заказ + " в статусе " + ВыборкаЗаказ.СтатусЗаказа);	
		УдалитьСтрокиПоЗаказуИзДокумента(Заказ);
		Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	//ЭР Несторук С.И. 22.12.2016 17:15:04 }

КонецПроцедуры
