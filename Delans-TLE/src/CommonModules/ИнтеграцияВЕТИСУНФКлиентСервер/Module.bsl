
Процедура ВыполнитьОперацииПриИзмененииРеквизитовФормы(Форма, ТекущаяСтрока, КэшированныеЗначения, ПараметрыЗаполнения) Экспорт
	
	Перем ПараметрыПересчетаКоличестваВЕТИС, ТекстОшибки;
	НужноОкруглять = Ложь;
	
	// ОбязательныеДействия
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ТекущаяСтрока, "Номенклатура") Тогда
		СтруктураРеквизитов = ИнтеграцияВЕТИСУНФВызовСервера.ПолучитьСтруктуруСлужебныхРеквизитовНоменклатуры(ТекущаяСтрока.Номенклатура);
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтруктураРеквизитов);
	КонецЕсли;
	// Конец ОбязательныеДействия
	
	Если ТипЗнч(ПараметрыЗаполнения) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыЗаполнения.Свойство("ЗаполнитьПродукциюВЕТИС") И ПараметрыЗаполнения.ЗаполнитьПродукциюВЕТИС Тогда
		
		СтруктураСтроки = СформироватьСтруктуруПоСтроке(ТекущаяСтрока, "ЗаполнитьПродукциюВЕТИС");
		ИнтеграцияВЕТИСУНФВызовСервера.ЗаполнитьПродукциюВЕТИС(СтруктураСтроки, ПараметрыЗаполнения);
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтруктураСтроки);
		
	КонецЕсли;
	
	Если ПараметрыЗаполнения.Свойство("ПересчитатьКоличествоЕдиницПоВЕТИС", ПараметрыПересчетаКоличестваВЕТИС)
		И ((ТипЗнч(ПараметрыПересчетаКоличестваВЕТИС) = Тип("Булево") И ПараметрыПересчетаКоличестваВЕТИС)
		ИЛИ ТипЗнч(ПараметрыПересчетаКоличестваВЕТИС) = Тип("Структура")) Тогда
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ТекущаяСтрока, "ЕдиницаИзмеренияВЕТИС") Тогда
			ЕдиницаИзмеренияВЕТИС = ТекущаяСтрока.ЕдиницаИзмеренияВЕТИС;
		Иначе
			ЕдиницаИзмеренияВЕТИС = ПараметрыЗаполнения.ЕдиницаИзмеренияВЕТИС;
		КонецЕсли;
		
		// В ТЧ документов ВетИС реквизит с количеством ВетИС может называться по разному.
		Попытка
			Количество = ИнтеграцияВЕТИСУНФВызовСервера.ПересчитатьКоличествоЕдиниц(
												ТекущаяСтрока.КоличествоВЕТИС,
												ТекущаяСтрока.Номенклатура,
												ЕдиницаИзмеренияВЕТИС,
												НужноОкруглять,
												КэшированныеЗначения,
												ТекстОшибки
			);
		Исключение
			Количество = ИнтеграцияВЕТИСУНФВызовСервера.ПересчитатьКоличествоЕдиниц(
												ТекущаяСтрока.КоличествоИзменениеВЕТИС,
												ТекущаяСтрока.Номенклатура,
												ЕдиницаИзмеренияВЕТИС,
												НужноОкруглять,
												КэшированныеЗначения,
												ТекстОшибки
			);
		КонецПопытки;
		
		Если Количество <> Неопределено Тогда
			Попытка
				ТекущаяСтрока.Количество = Количество;
			Исключение
				ТекущаяСтрока.КоличествоИзменение = Количество;
			КонецПопытки;
		ИначеЕсли ТекстОшибки <> Неопределено Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
		КонецЕсли; 
	
	КонецЕсли;
	
	Если ПараметрыЗаполнения.Свойство("ПересчитатьКоличествоЕдиницВЕТИС") И ПараметрыЗаполнения.ПересчитатьКоличествоЕдиницВЕТИС Тогда
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ТекущаяСтрока, "ЕдиницаИзмеренияВЕТИС") Тогда
			ЕдиницаИзмеренияВЕТИС = ТекущаяСтрока.ЕдиницаИзмеренияВЕТИС;
		Иначе
			ЕдиницаИзмеренияВЕТИС = ПараметрыЗаполнения.ЕдиницаИзмеренияВЕТИС;
		КонецЕсли; 
		
		КоличествоВЕТИС = ИнтеграцияВЕТИСУНФВызовСервера.ПересчитатьКоличествоЕдиницВЕТИС(
											ТекущаяСтрока.Количество,
											ТекущаяСтрока.Номенклатура,
											ЕдиницаИзмеренияВЕТИС,
											НужноОкруглять,
											КэшированныеЗначения,
											ТекстОшибки);
		
		Если КоличествоВЕТИС <> Неопределено Тогда
			ТекущаяСтрока.КоличествоВЕТИС = КоличествоВЕТИС;
		ИначеЕсли ТекстОшибки <> Неопределено Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
		КонецЕсли;
	
	КонецЕсли;
	
	Если ПараметрыЗаполнения.Свойство("ПроверитьСериюРассчитатьСтатус")
		И ((ТипЗнч(ПараметрыЗаполнения.ПроверитьСериюРассчитатьСтатус) = Тип("Булево") И ПараметрыЗаполнения.ПроверитьСериюРассчитатьСтатус)
		ИЛИ ТипЗнч(ПараметрыЗаполнения.ПроверитьСериюРассчитатьСтатус) = Тип("Структура")) Тогда
		
		СтруктураСтроки = СформироватьСтруктуруПоСтроке(ТекущаяСтрока, "ПроверитьСериюРассчитатьСтатус");
		ИнтеграцияВЕТИСУНФВызовСервера.ПроверитьСериюРассчитатьСтатус(ПараметрыЗаполнения, СтруктураСтроки);
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтруктураСтроки);
	
	КонецЕсли; 
	
	Если ПараметрыЗаполнения.Свойство("ПересчитатьКоличествоЕдиницВЕТИСПоЕдиницеИзмерения") И ПараметрыЗаполнения.ПересчитатьКоличествоЕдиницВЕТИСПоЕдиницеИзмерения Тогда
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ТекущаяСтрока, "ЕдиницаИзмеренияВЕТИС") Тогда
			ЕдиницаИзмеренияВЕТИС = ТекущаяСтрока.ЕдиницаИзмеренияВЕТИС;
		Иначе
			ЕдиницаИзмеренияВЕТИС = ПараметрыЗаполнения.ЕдиницаИзмеренияВЕТИС;
		КонецЕсли;
		
		КоличествоВЕТИС = ИнтеграцияВЕТИСУНФВызовСервера.ПересчитатьКоличествоЕдиницВЕТИС(
											ТекущаяСтрока.КоличествоВЕТИС,
											ТекущаяСтрока.Номенклатура,
											ЕдиницаИзмеренияВЕТИС,
											НужноОкруглять,
											КэшированныеЗначения,
											ТекстОшибки);
		
		Если КоличествоВЕТИС <> Неопределено Тогда
			ТекущаяСтрока.КоличествоВЕТИС = КоличествоВЕТИС;
		КонецЕсли;
	
	КонецЕсли;
	
	Если ПараметрыЗаполнения.Свойство("ИзменениеНоменклатуры") И ПараметрыЗаполнения.ИзменениеНоменклатуры Тогда
		
		Если ТекущаяСтрока.Свойство("Характеристика") Тогда
			ТекущаяСтрока.Характеристика = Неопределено;
		КонецЕсли;
		
		УстановитьВидимостьКомандыГенерацииСерии(Форма);
		
	КонецЕсли;
	
	Если Форма <> Неопределено Тогда
		Форма.Модифицированность = Истина;
	КонецЕсли;
	
	Если ПараметрыЗаполнения.Свойство("ОбработатьУпаковки") И ПараметрыЗаполнения.ОбработатьУпаковки Тогда
		//Упаковки не используются
	КонецЕсли; 
	
	Если ПараметрыЗаполнения.Свойство("ПересчитатьКоличествоЕдиниц") И ПараметрыЗаполнения.ПересчитатьКоличествоЕдиниц Тогда
	
		//Поскольку упаковки не используются, пересчет отсутствует
	
	КонецЕсли; 
	
	Если ПараметрыЗаполнения.Свойство("ПересчитатьКоличествоУпаковок") И ПараметрыЗаполнения.ПересчитатьКоличествоУпаковок Тогда
	
		//Поскольку упаковки не используются, пересчет отсутствует
	
	КонецЕсли; 
	
	Если ПараметрыЗаполнения.Свойство("ПересчитатьСумму") И ПараметрыЗаполнения.ПересчитатьСумму Тогда
	
		
	
	КонецЕсли; 
	
КонецПроцедуры

Функция СформироватьСтруктуруПоСтроке(СтрокаТаблицы, Действие) Экспорт
	
	Если Действие = "ПроверитьСериюРассчитатьСтатус" Тогда
		
		СтруктураСтроки = Новый Структура("ХарактеристикиИспользуются,
										|Характеристика,
										|ТипНоменклатуры,
										|СтатусУказанияСерий,
										|СопоставленоКоличество,
										|Сопоставлено,
										|СопоставлениеХарактеристика,
										|СопоставлениеНоменклатура,
										|Серия,
										|НомерСтроки,
										|Номенклатура,
										|КоличествоВЕТИС,
										|Количество,
										|ИдентификаторПартии,
										|ЗаписьСкладскогоЖурнала,
										|ЕдиницаИзмерения,
										|Артикул");
		
	ИначеЕсли Действие = "ЗаполнитьПродукциюВЕТИС" Тогда
		
		СтруктураСтроки = Новый Структура("Продукция,
										|Номенклатура,
										|Характеристика,
										|Серия,
										|НоменклатураДляВыбора,
										|СопоставлениеТекст");
		
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(СтруктураСтроки, СтрокаТаблицы);
	
	Возврат СтруктураСтроки;
	
КонецФункции

Процедура УстановитьВидимостьКомандыГенерацииСерии(Форма) Экспорт
	
	Если СтрНайти(Форма.ИмяФормы, "Документ.ВходящаяТранспортнаяОперацияВЕТИС.Форма.ФормаДокумента") <> 0
		И Форма.Элементы.Найти("СгенерироватьСерию") <> Неопределено
		И Форма.Объект.Товары.Количество() > 0 Тогда
		
		Форма.Элементы.СгенерироватьСерию.Видимость = Форма.Объект.Товары[0].СтатусУказанияСерий = 1;
		
	КонецЕсли;
	
КонецПроцедуры