//Функция открывает форму электронного архива с предварительной проверкой авторизации
//
Процедура EFSOL_ADL_ОткрытьЭА() Экспорт

	ОткрытьФорму("Обработка.EfsolADL1CClient.Форма.ФормаЭлектронногоАрхива");
	
КонецПроцедуры

//Функция открывает форму атрибутирования с предварительной проверкой авторизации
//
Процедура EFSOL_ADL_ОткрытьАтрибутирование() Экспорт

	ОткрытьФорму("Обработка.EfsolADL1CClient.Форма.ФормаАтрибутирования");
	
КонецПроцедуры

// функция получает с сервера список баз данных и их свойства
//
&НаКлиенте
Функция ЗаполнитьТаблицуБазДанных(УникальныйИдентификаторФормы, СписокВыбораБазДанных = Неопределено, СписокВыбораАккаунтов = Неопределено) Экспорт
	
	//Если СписокВыбораБазДанных = Неопределено Тогда
	//	СписокВыбораБазДанных = Новый СписокЗначений;
	//КонецЕсли;
	//Если СписокВыбораАккаунтов = Неопределено Тогда
	//	СписокВыбораАккаунтов = Новый СписокЗначений;
	//КонецЕсли;
	//МассивСтруктурБД = Новый Массив;
	//ТекущаяБазаИД = "";
	//СтруктураРезультата = Новый Структура("МассивСтруктурБД, ТекущаяБазаИД", МассивСтруктурБД, ТекущаяБазаИД);
	//
	//ErrorDescription = "";
	//МассивИДБазДанных = EfsolCoreКлиентСервер.AccountDatabases_GetIDs(EfsolИДАккаунта, ErrorDescription);
	//Если МассивИДБазДанных <> Неопределено Тогда
	//	МассивИДДоступовАккаунта = EfsolCoreКлиентСервер.AcDbAccesses_FindIDsByAccessAccountID(EfsolИДАккаунта, ErrorDescription); 
	//	Если МассивИДДоступовАккаунта <> Неопределено Тогда
	//		Для Каждого ИДДоступа Из МассивИДДоступовАккаунта Цикл
	//			СвойстваДоступа = EfsolCoreКлиентСервер.AcDbAccesses_GetProperties(ИДДоступа, ErrorDescription);
	//			Если СвойстваДоступа <> Неопределено И СвойстваДоступа.AccountUserID = EfsolИДПользователя Тогда
	//				МассивИДБазДанных.Добавить(СвойстваДоступа.AccountDatabaseID);
	//			ИначеЕсли СвойстваДоступа = Неопределено Тогда
	//				СообщениеПользователю = Новый СообщениеПользователю;
	//				СообщениеПользователю.Текст = "Ошибка при получении данных о доступе к учетной системе: " + ErrorDescription;
	//				СообщениеПользователю.ИдентификаторНазначения = УникальныйИдентификаторФормы;
	//				СообщениеПользователю.Сообщить();
	//				Возврат СтруктураРезультата;
	//			КонецЕсли;
	//		КонецЦикла;
	//	Иначе
	//		СообщениеПользователю = Новый СообщениеПользователю;
	//		СообщениеПользователю.Текст = "Ошибка при получении списка доступов аккаунта: " + ErrorDescription;
	//		СообщениеПользователю.ИдентификаторНазначения = УникальныйИдентификаторФормы;
	//		СообщениеПользователю.Сообщить();
	//		Возврат СтруктураРезультата;
	//	КонецЕсли;
	//Иначе
	//	СообщениеПользователю = Новый СообщениеПользователю;
	//	СообщениеПользователю.Текст = "Ошибка при получении списка учетных систем аккаунта: " + ErrorDescription;
	//	СообщениеПользователю.ИдентификаторНазначения = УникальныйИдентификаторФормы;
	//	СообщениеПользователю.Сообщить();
	//	Возврат СтруктураРезультата;
	//КонецЕсли;
	//
	//СтрокаСоединенияИнформационнойБазыИмяБазы = СтрокаСоединенияИнформационнойБазы();
	//СтрокаСоединенияИнформационнойБазыИмяБазы = СтрЗаменить(СтрокаСоединенияИнформационнойБазыИмяБазы, "File=", "");
	//СтрокаСоединенияИнформационнойБазыИмяБазы = СтрЗаменить(СтрокаСоединенияИнформационнойБазыИмяБазы, """", "");
	//СтрокаСоединенияИнформационнойБазыИмяБазы = СтрЗаменить(СтрокаСоединенияИнформационнойБазыИмяБазы, ";", "");
	//Пока Найти(СтрокаСоединенияИнформационнойБазыИмяБазы, "\") > 0 Цикл
	//	ПозицияРазделителя = Найти(СтрокаСоединенияИнформационнойБазыИмяБазы, "\");
	//	СтрокаСоединенияИнформационнойБазыИмяБазы = Сред(СтрокаСоединенияИнформационнойБазыИмяБазы, ПозицияРазделителя + 1);
	//КонецЦикла;
	//
	//СписокВыбораБазДанных.Очистить();
	//Для Каждого БазаДанныхИД Из МассивИДБазДанных Цикл
	//	СвойстваБД = EfsolCoreКлиентСервер.AccountDatabases_GetProperties(БазаДанныхИД, ErrorDescription);
	//	Если СвойстваБД <> Неопределено Тогда
	//		//СтрокаБД.AccountID = СвойстваБД.AccountID;
	//		//СтрокаБД.LastActivityDate = СвойстваБД.LastActivityDate;
	//		//СтрокаБД.CreationDate = СвойстваБД.CreationDate;
	//		//СтрокаБД.Caption = СвойстваБД.Caption;
	//		//СтрокаБД.ConfigurationName = СвойстваБД.ConfigurationName;
	//		//СтрокаБД.ConfigurationVersion = СвойстваБД.ConfigurationVersion;
	//		//СтрокаБД.ConfigurationServer = СвойстваБД.ConfigurationServer;
	//		//СтрокаБД.ConfigurationFilePath = СвойстваБД.ConfigurationFilePath;
	//		//СтрокаБД.ApplicationName = СвойстваБД.ApplicationName;
	//		Если СвойстваБД.ConfigurationName = "" Тогда
	//			ИмяБазы = СвойстваБД.FilePath;
	//			Пока Найти(ИмяБазы, "\") > 0 Цикл
	//				ПозицияРазделителя = Найти(ИмяБазы, "\");
	//				ИмяБазы = Сред(ИмяБазы, ПозицияРазделителя + 1);
	//			КонецЦикла;
	//		Иначе
	//			ИмяБазы = СвойстваБД.ConfigurationName;
	//		КонецЕсли;
	//		Если ИмяБазы = СтрокаСоединенияИнформационнойБазыИмяБазы Тогда
	//			СтруктураРезультата.ТекущаяБазаИД = БазаДанныхИД;
	//			//Возврат СтруктураРезультата;
	//		КонецЕсли;
	//		НаименованиеАккаунта = "";
	//		
	//		ЭлементСпискаАккаунтов = СписокВыбораАккаунтов.НайтиПоЗначению(СвойстваБД.AccountID);
	//		Если ЭлементСпискаАккаунтов = Неопределено Тогда
	//			AccountCaption = EfsolCoreКлиентСервер.Accounts_GetAccountCaption(СвойстваБД.AccountID, ErrorDescription);
	//			Если AccountCaption <> Неопределено Тогда
	//				НаименованиеАккаунта = AccountCaption;
	//				СписокВыбораАккаунтов.Добавить(СвойстваБД.AccountID, НаименованиеАккаунта);
	//			Иначе
	//				СообщениеПользователю = Новый СообщениеПользователю;
	//				СообщениеПользователю.Текст = "Ошибка при получении данных компании: " + ErrorDescription;
	//				СообщениеПользователю.ИдентификаторНазначения = УникальныйИдентификаторФормы;
	//				СообщениеПользователю.Сообщить();
	//				Возврат СтруктураРезультата;
	//			КонецЕсли;
	//		Иначе
	//			НаименованиеАккаунта = ЭлементСпискаАккаунтов.Представление;
	//		КонецЕсли;
	//		СтруктураРезультата.МассивСтруктурБД.Добавить(Новый Структура("БазаДанныхИД, НаименованиеБД, АккаунтИД, НаименованиеАккаунта", БазаДанныхИД, СвойстваБД.Caption, СвойстваБД.AccountID, НаименованиеАккаунта));
	//		СписокВыбораБазДанных.Добавить(БазаДанныхИД, СвойстваБД.Caption); 
	//	Иначе
	//		СообщениеПользователю = Новый СообщениеПользователю;
	//		СообщениеПользователю.Текст = "Ошибка при получении данных учетной системы: " + ErrorDescription;
	//		СообщениеПользователю.ИдентификаторНазначения = УникальныйИдентификаторФормы;
	//		СообщениеПользователю.Сообщить();
	//		Возврат СтруктураРезультата;
	//	КонецЕсли;
	//КонецЦикла;
	//
	//Возврат СтруктураРезультата;
		
КонецФункции