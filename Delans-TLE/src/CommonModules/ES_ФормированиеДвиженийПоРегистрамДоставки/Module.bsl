
//////////////////////////////////////////////////////////////////////////////
// ES_СведенияОЗаказах 

// Функция создает пустую таблицу, по которой после заполнения будут создаваться записи в РС ES_СведенияОЗаказах
Функция СоздатьТаблицуСведенийОЗаказах() Экспорт
	
	ТабСведенияОЗаказе = Новый ТаблицаЗначений;
	ТабСведенияОЗаказе.Колонки.Добавить("Движения", 		Новый ОписаниеТипов("РегистрСведенийНаборЗаписей.ES_СведенияОЗаказах"));
	ТабСведенияОЗаказе.Колонки.Добавить("Период", 			Новый ОписаниеТипов("Дата"));
	ТабСведенияОЗаказе.Колонки.Добавить("Регистратор", 		Неопределено);
	ТабСведенияОЗаказе.Колонки.Добавить("Заказ", 			Новый ОписаниеТипов("ДокументСсылка.ЗаказПокупателя"));
	ТабСведенияОЗаказе.Колонки.Добавить("ПланДоставки", 	Новый ОписаниеТипов("ДокументСсылка.ES_ПланДоставки"));
	ТабСведенияОЗаказе.Колонки.Добавить("ОтчетОДоставке", 	Новый ОписаниеТипов("ДокументСсылка.ES_ОтчетОДоставке"));
	ТабСведенияОЗаказе.Колонки.Добавить("Выдача", 			Новый ОписаниеТипов("ДокументСсылка.ES_Самовывоз"));
	ТабСведенияОЗаказе.Колонки.Добавить("Возврат", 			Новый ОписаниеТипов("ДокументСсылка.ES_Возвраты"));
	//ЕФСОЛ Несторук 11-11-16 +
	ТабСведенияОЗаказе.Колонки.Добавить("Поставка", 		Новый ОписаниеТипов("ДокументСсылка.ES_Поставка"));
	//ЕФСОЛ Несторук 11-11-16 -
	//ЭР Несторук С.И. 06.02.2017 10:48:31 {
	ТабСведенияОЗаказе.Колонки.Добавить("Приемка", 				Новый ОписаниеТипов("ДокументСсылка.ES_Приемка"));
	ТабСведенияОЗаказе.Колонки.Добавить("ПеремещениеЗаказов", 	Новый ОписаниеТипов("ДокументСсылка.ES_ПеремещениеЗаказов"));
	//ЭР Несторук С.И.}
	
	Возврат ТабСведенияОЗаказе;      
	
КонецФункции

// Процедура делает движение в РС ES_СведенияОЗаказах
// Параметры:
//  * СтруктураДанных - данные, которые нужно записать в РС.
//    - Движения 			- обязательное для заполнения поле
//    - Регистратор 		- обязательное для заполнения поле
//    - Заказ 				- обязательное для заполнения поле
//    - Период 				- если дата не указана, заполняется ТекущейДатой()
//    - ПланДоставки 		- заполняется при проведении док "План доставки"
//    - ОтчетОДоставке 		- заполняется при проведении док "Отчет о доставке"
//    - ДатаВремяВыполнения - заполняется при проведении док-ов "Отчет о доставке" и "Выдача"
//
// Если для ресурса не найдены данные в СтруктуреДанных, в ресурс записывается предыдущее значение этого ресурса.
Процедура СделатьЗаписьВРССведенияОЗаказах(ТабСведенияОЗаказе, ДатаДокумента) Экспорт

	Если ТабСведенияОЗаказе.Количество() = 0 Тогда
		Возврат;
	КонецЕсли; 
	
	// Получаем последние записи по заказам
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ES_СведенияОЗаказахСрезПоследних.Заказ,
		|	ES_СведенияОЗаказахСрезПоследних.ПланДоставки,
		|	ES_СведенияОЗаказахСрезПоследних.ОтчетОДоставке,
		|	ES_СведенияОЗаказахСрезПоследних.Выдача,
		|	ES_СведенияОЗаказахСрезПоследних.Возврат,
		|	ES_СведенияОЗаказахСрезПоследних.Приемка,
		|	ES_СведенияОЗаказахСрезПоследних.ПеремещениеЗаказов,
		|	ES_СведенияОЗаказахСрезПоследних.Поставка
		|ИЗ
		|	РегистрСведений.ES_СведенияОЗаказах.СрезПоследних(&Период, Заказ В (&МассивЗаказов)) КАК ES_СведенияОЗаказахСрезПоследних";
	
	Запрос.УстановитьПараметр("МассивЗаказов", ТабСведенияОЗаказе.ВыгрузитьКолонку("Заказ"));
	Запрос.УстановитьПараметр("Период", ДатаДокумента);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ТабДанныеИзРС = РезультатЗапроса.Выгрузить();
	КонецЕсли; 
		
	Для каждого Строка Из ТабСведенияОЗаказе Цикл
	
		Движения = Строка.Движения;
		Движения.Записывать = Истина;
		
		Движение = Движения.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, Строка);
	
		// Период
		Если НЕ ЗначениеЗаполнено(Движение.Период) Тогда
			Движение.Период = ТекущаяДата();
		КонецЕсли; 
		
		// Дозаполняем запись данными из последней записи в РС
		Если НЕ ТабДанныеИзРС = Неопределено Тогда
			НайденнаяСтрока = ТабДанныеИзРС.Найти(Строка.Заказ, "Заказ");
		КонецЕсли; 
		
		Если НЕ НайденнаяСтрока = Неопределено Тогда
			
			// План доставки
			Если НЕ ЗначениеЗаполнено(Движение.ПланДоставки) Тогда
				Движение.ПланДоставки = НайденнаяСтрока.ПланДоставки;
			КонецЕсли; 
			
			// Отчет о доставке
			Если НЕ ЗначениеЗаполнено(Движение.ОтчетОДоставке)
			   И НайденнаяСтрока.ПланДоставки = Движение.ПланДоставки Тогда
				Движение.ОтчетОДоставке = НайденнаяСтрока.ОтчетОДоставке;
			КонецЕсли; 
			
			// Выдача
			Если НЕ ЗначениеЗаполнено(Движение.Выдача) Тогда
				Движение.Выдача = НайденнаяСтрока.Выдача;
			КонецЕсли; 
			
			// Возврат
			Если НЕ ЗначениеЗаполнено(Движение.Возврат) Тогда
				Движение.Возврат = НайденнаяСтрока.Возврат;
			КонецЕсли;
			
			//ЕФСОЛ Несторук 11-11-16 +
			// Поставка
			Если НЕ ЗначениеЗаполнено(Движение.Поставка) Тогда
				Движение.Поставка = НайденнаяСтрока.Поставка;
			КонецЕсли; 
			//ЕФСОЛ Несторук 11-11-16 -
			
			//ЭР Несторук С.И. 06.02.2017 10:51:00 {
			//Приемка
			Если НЕ ЗначениеЗаполнено(Движение.Приемка) Тогда
				Движение.Приемка = НайденнаяСтрока.Приемка;
			КонецЕсли;
			
			//Перемещение заказов
			Если НЕ ЗначениеЗаполнено(Движение.ПеремещениеЗаказов) Тогда
				Движение.ПеремещениеЗаказов = НайденнаяСтрока.ПеремещениеЗаказов;
			КонецЕсли;

			//ЭР Несторук С.И. 06.02.2017 10:51:00 }
		КонецЕсли; 
		
	КонецЦикла; 
		
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////
// ES_СведенияОЗаборах

// Функция создает пустую таблицу, по которой после заполнения будут создаваться записи в РС ES_СведенияОЗаборах
Функция СоздатьТаблицуСведенийОЗаборах() Экспорт
	
	ТабСведенияОЗаборе = Новый ТаблицаЗначений;
	ТабСведенияОЗаборе.Колонки.Добавить("Движения", 		Новый ОписаниеТипов("РегистрСведенийНаборЗаписей.ES_СведенияОЗаборах"));
	ТабСведенияОЗаборе.Колонки.Добавить("Период", 			Новый ОписаниеТипов("Дата"));
	ТабСведенияОЗаборе.Колонки.Добавить("Регистратор", 		Новый ОписаниеТипов("ДокументСсылка.ES_ПланДоставки"));
	ТабСведенияОЗаборе.Колонки.Добавить("ОснованиеЗабора", 	Неопределено);
	ТабСведенияОЗаборе.Колонки.Добавить("Забор", 			Новый ОписаниеТипов("ДокументСсылка.ES_ЗаборГруза"));
	ТабСведенияОЗаборе.Колонки.Добавить("ПланДоставки", 	Новый ОписаниеТипов("ДокументСсылка.ES_ПланДоставки"));
	ТабСведенияОЗаборе.Колонки.Добавить("ОтчетОДоставке", 	Новый ОписаниеТипов("ДокументСсылка.ES_ОтчетОДоставке"));
	
	Возврат ТабСведенияОЗаборе;
	
КонецФункции

// Процедура делает движение в РС ES_СведенияОЗаборах
// Параметры:
//  * СтруктураДанных - данные, которые нужно записать в РС.
//    - Движения 			- обязательное для заполнения поле
//    - Регистратор 		- обязательное для заполнения поле
//    - ОснованиеЗабора 	- обязательное для заполнения поле; или Заказ на доставку, или Забор груза (если тип операции "Выезд")
//    - Забор 				- обязательное для заполнения поле
//    - Период 				- если дата не указана, заполняется ТекущейДатой()
//    - ПланДоставки 		- заполняется при проведении док "План доставки"
//    - ОтчетОДоставке 		- заполняется при проведении док "Отчет о доставке"
//
// Если для ресурса не найдены данные в СтруктуреДанных, в ресурс записывается предыдущее значение этого ресурса.
Процедура СделатьЗаписьВРССведенияОЗаборах(ТабСведенияОЗаборе, ДатаДокумента) Экспорт
	
	Если ТабСведенияОЗаборе.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	// Получаем последние записи по заказу
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ES_СведенияОЗаборахСрезПоследних.ОснованиеЗабора,
		|	ES_СведенияОЗаборахСрезПоследних.Забор,
		|	ES_СведенияОЗаборахСрезПоследних.ПланДоставки,
		|	ES_СведенияОЗаборахСрезПоследних.ОтчетОДоставке
		|ИЗ
		|	РегистрСведений.ES_СведенияОЗаборах.СрезПоследних(&Период, Забор В (&МассивЗаборов)) КАК ES_СведенияОЗаборахСрезПоследних";
	
	Запрос.УстановитьПараметр("МассивЗаборов", ТабСведенияОЗаборе.ВыгрузитьКолонку("Забор"));
	Запрос.УстановитьПараметр("Период", ДатаДокумента);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ТабДанныеИзРС = РезультатЗапроса.Выгрузить();
	КонецЕсли; 
		
	Для каждого Строка Из ТабСведенияОЗаборе Цикл
			
		Движения = Строка.Движения;
		Движения.Записывать = Истина;
		
		Движение = Движения.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, Строка);
		
		// Период
		Если НЕ ЗначениеЗаполнено(Движение.Период) Тогда
			Движение.Период = ТекущаяДата();
		КонецЕсли; 
		
		// Дозаполняем запись данными из последней записи в РС
		Если НЕ ТабДанныеИзРС = Неопределено Тогда
			НайденнаяСтрока = ТабДанныеИзРС.Найти(Строка.Забор, "Забор");
		КонецЕсли; 
		
		Если НЕ НайденнаяСтрока = Неопределено Тогда
			
			// План доставки
			Если НЕ ЗначениеЗаполнено(Движение.ПланДоставки) Тогда
				Движение.ПланДоставки = НайденнаяСтрока.ПланДоставки;
			КонецЕсли; 
			
			// Отчет о доставке
			Если НЕ ЗначениеЗаполнено(Движение.ОтчетОДоставке)
			   И НайденнаяСтрока.ПланДоставки = Движение.ПланДоставки Тогда
				Движение.ОтчетОДоставке = НайденнаяСтрока.ОтчетОДоставке;
			КонецЕсли; 
			
		КонецЕсли;
		
	КонецЦикла; 
		
КонецПроцедуры


//////////////////////////////////////////////////////////////////////////////
// ES_ИзменяемыеРеквизитыЗаказа 

// Функция создает пустую таблицу, по которой после заполнения будут создаваться записи в РС ES_ИзменяемыеРеквизитыЗаказа
Функция СоздатьТабДляИзменяемыхРеквизитов() Экспорт
	
	ТабИзменяемыеРеквизиты = Новый ТаблицаЗначений;
	ТабИзменяемыеРеквизиты.Колонки.Добавить("Движения", 		Новый ОписаниеТипов("РегистрСведенийНаборЗаписей.ES_ИзменяемыеРеквизитыЗаказов"));
	ТабИзменяемыеРеквизиты.Колонки.Добавить("Период", 			Новый ОписаниеТипов("Дата"));
	ТабИзменяемыеРеквизиты.Колонки.Добавить("Регистратор", 		Неопределено);
	ТабИзменяемыеРеквизиты.Колонки.Добавить("Заказ", 			Новый ОписаниеТипов("ДокументСсылка.ЗаказПокупателя"));
	ТабИзменяемыеРеквизиты.Колонки.Добавить("РеквизитЗаказа", 	Новый ОписаниеТипов("ПеречислениеСсылка.ES_ИзменяемыеРеквизитыЗаказа"));
	ТабИзменяемыеРеквизиты.Колонки.Добавить("Значение", 		Неопределено);

	Возврат ТабИзменяемыеРеквизиты;
	
КонецФункции
 
// Процедура делает движение в РС ES_ИзменяемыеРеквизитыЗаказа
Процедура СделатьЗаписьВРегистрСведенийИзменяемыеРеквизитыЗаказа(ТаблицаДвижений, Заказ) Экспорт
	
	Если ТаблицаДвижений.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ES_ИзменяемыеРеквизитыЗаказовСрезПоследних.Заказ,
		|	ES_ИзменяемыеРеквизитыЗаказовСрезПоследних.РеквизитЗаказа,
		|	ES_ИзменяемыеРеквизитыЗаказовСрезПоследних.Значение
		|ИЗ
		|	РегистрСведений.ES_ИзменяемыеРеквизитыЗаказов.СрезПоследних(
		|			,
		|			Заказ = &Заказ
		|				И РеквизитЗаказа В (&РеквизитЗаказа)) КАК ES_ИзменяемыеРеквизитыЗаказовСрезПоследних";
	
	Запрос.УстановитьПараметр("Заказ", Заказ);
	Запрос.УстановитьПараметр("РеквизитЗаказа", ТаблицаДвижений.ВыгрузитьКолонку("РеквизитЗаказа"));
	
	РезультатЗапроса = Запрос.Выполнить();
	ТабДанныеИзРС = Новый ТаблицаЗначений;
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ТабДанныеИзРС = РезультатЗапроса.Выгрузить();
	КонецЕсли;
	
	ЕстьЗаписиВРегистре = ТабДанныеИзРС.Количество() > 0;
	
	Для каждого СтрокаДвижения Из ТаблицаДвижений Цикл
		Если ЕстьЗаписиВРегистре Тогда
			
			// Если текущее значение реквизита заказа (в РС) равно значению в таблице движения, запись в РС не делаем
			СтрокаРегистра = ТабДанныеИзРС.Найти(СтрокаДвижения.РеквизитЗаказа, "РеквизитЗаказа");
			Если НЕ СтрокаРегистра = Неопределено Тогда
				Если ЗначениеЗаполнено(СтрокаДвижения.Значение)
				   И СтрокаРегистра.Значение = СтрокаДвижения.Значение Тогда
					Продолжить;
				КонецЕсли; 
			КонецЕсли; 
			
		КонецЕсли;
			
		Движения = СтрокаДвижения.Движения;
		Движения.Записывать = Истина;
		
		Движение = Движения.Добавить();
		Движение.Период 		= СтрокаДвижения.Период;
		Движение.Регистратор 	= СтрокаДвижения.Регистратор;
		Движение.Заказ 			= СтрокаДвижения.Заказ;
		Движение.РеквизитЗаказа = СтрокаДвижения.РеквизитЗаказа;
		Движение.Значение 		= СтрокаДвижения.Значение;
		
	КонецЦикла; 

		
КонецПроцедуры


//////////////////////////////////////////////////////////////////////////////
// ES_ИзменяемыеРеквизитыЗаборов 

// Функция создает пустую таблицу, по которой после заполнения будут создаваться записи в РС ES_ИзменяемыеРеквизитыЗаборов
Функция СоздатьТабДляИзменяемыхРеквизитовЗаборов() Экспорт
	
	ТабИзменяемыеРеквизиты = Новый ТаблицаЗначений;
	ТабИзменяемыеРеквизиты.Колонки.Добавить("Движения", 		Новый ОписаниеТипов("РегистрСведенийНаборЗаписей.ES_ИзменяемыеРеквизитыЗаборов"));
	ТабИзменяемыеРеквизиты.Колонки.Добавить("Период", 			Новый ОписаниеТипов("Дата"));
	ТабИзменяемыеРеквизиты.Колонки.Добавить("Регистратор", 		Неопределено);
	ТабИзменяемыеРеквизиты.Колонки.Добавить("Забор", 			Новый ОписаниеТипов("ДокументСсылка.ES_ЗаборГруза"));
	ТабИзменяемыеРеквизиты.Колонки.Добавить("РеквизитЗабора", 	Новый ОписаниеТипов("ПеречислениеСсылка.ES_ИзменяемыеРеквизитыЗабора"));
	ТабИзменяемыеРеквизиты.Колонки.Добавить("Значение", 		Неопределено);

	Возврат ТабИзменяемыеРеквизиты;
	
КонецФункции
 
// Процедура делает движение в РС ES_ИзменяемыеРеквизитыЗаборов
Процедура СделатьЗаписьВРегистрСведенийИзменяемыеРеквизитыЗабора(ТаблицаДвижений, Забор) Экспорт
	
	Если ТаблицаДвижений.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ES_ИзменяемыеРеквизитыЗаборовСрезПоследних.Забор,
		|	ES_ИзменяемыеРеквизитыЗаборовСрезПоследних.РеквизитЗабора,
		|	ES_ИзменяемыеРеквизитыЗаборовСрезПоследних.Значение
		|ИЗ
		|	РегистрСведений.ES_ИзменяемыеРеквизитыЗаборов.СрезПоследних(
		|			,
		|			Забор = &Забор
		|				И РеквизитЗабора В (&РеквизитЗабора)) КАК ES_ИзменяемыеРеквизитыЗаборовСрезПоследних";
	
	Запрос.УстановитьПараметр("Забор", Забор);
	Запрос.УстановитьПараметр("РеквизитЗабора", ТаблицаДвижений.ВыгрузитьКолонку("РеквизитЗабора"));
	
	РезультатЗапроса = Запрос.Выполнить();
	ТабДанныеИзРС = Новый ТаблицаЗначений;
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ТабДанныеИзРС = РезультатЗапроса.Выгрузить();
	КонецЕсли;
	
	ЕстьЗаписиВРегистре = ТабДанныеИзРС.Количество() > 0;
	
	Для каждого СтрокаДвижения Из ТаблицаДвижений Цикл
		
		Если ЕстьЗаписиВРегистре Тогда
			
			// Если текущее значение реквизита забора (в РС) равно значению в таблице движения, запись в РС не делаем
			СтрокаРегистра = ТабДанныеИзРС.Найти(СтрокаДвижения.РеквизитЗабора, "РеквизитЗабора");
			Если НЕ СтрокаРегистра = Неопределено Тогда
				Если ЗначениеЗаполнено(СтрокаДвижения.Значение)
				   И СтрокаРегистра.Значение = СтрокаДвижения.Значение Тогда
					Продолжить;
				КонецЕсли; 
			КонецЕсли; 
			
		КонецЕсли;
			
		Движения = СтрокаДвижения.Движения;
		Движения.Записывать = Истина;
		
		Движение = Движения.Добавить();
		Движение.Период 		= СтрокаДвижения.Период;
		Движение.Регистратор 	= СтрокаДвижения.Регистратор;
		Движение.Забор 			= СтрокаДвижения.Забор;
		Движение.РеквизитЗабора = СтрокаДвижения.РеквизитЗабора;
		Движение.Значение 		= СтрокаДвижения.Значение;
		
	КонецЦикла; 
		
КонецПроцедуры



