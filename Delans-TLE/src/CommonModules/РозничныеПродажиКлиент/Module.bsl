
Процедура ДобавитьОплату(пФорма, пВидОплатыСтр, пЭтоФормаОплатыРМК = Ложь) Экспорт
	
	Объект = пФорма.Объект;
	
	ДопПараметры = Новый Структура("ВидОплатыСтр", пВидОплатыСтр);
	Оповещение = Новый ОписаниеОповещения("ДобавитьОплатуЗавершение", пФорма, ДопПараметры);
	СтруктураПараметров = Новый Структура();
	
	Если пЭтоФормаОплатыРМК Тогда
		СтруктураПараметров.Вставить("КОплате", пФорма.СуммаДокумента
											- пФорма.ПолученоНаличными
											- пФорма.ВременнаяТаблицаКарт.Итог("Сумма"));
		СтруктураПараметров.Вставить("Сумма", СтруктураПараметров.КОплате);
	Иначе
		СтруктураПараметров.Вставить("КОплате", Объект.СуммаДокумента
											- Объект.ПолученоНаличными
											- Объект.БезналичнаяОплата.Итог("Сумма"));
	КонецЕсли;
	СтруктураПараметров.Вставить("КассаККМ", Объект.КассаККМ);
	СтруктураПараметров.Вставить("Документ", Объект);
	
	Если пВидОплатыСтр = "Сертификат" Тогда
		ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаОплатыСертификатом", СтруктураПараметров, пФорма,,,, Оповещение);
		
	ИначеЕсли пВидОплатыСтр = "Карта" Тогда
		ОткрытьФорму("Справочник.ЭквайринговыеТерминалы.Форма.ФормаОплатыКартой", СтруктураПараметров, пФорма,,,, Оповещение);
		
	ИначеЕсли пВидОплатыСтр = "Бонусы" Тогда
		Если Не ЗначениеЗаполнено(Объект.ДисконтнаяКарта) Тогда
			ДополнительныеПараметры = Новый Структура;
			ДополнительныеПараметры.Вставить("Оповещение", Оповещение);
			ДополнительныеПараметры.Вставить("СтруктураПараметров", СтруктураПараметров);
			ОповещениеКарты = Новый ОписаниеОповещения("СчитатьДисконтнуюКартуИДобавитьОплатуЗавершение", пФорма, ДополнительныеПараметры);
			ОткрытьФорму("Справочник.ДисконтныеКарты.Форма.СчитываниеДисконтнойКарты",, пФорма,,,, ОповещениеКарты, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		Иначе
			ОткрытьФорму("Справочник.ДисконтныеКарты.Форма.ФормаОплатыБонусами", СтруктураПараметров, пФорма,,,, Оповещение);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры


Процедура НапечататьТоварныйЧек(пФорма, СсылкаНаЧек = Неопределено, ИмяЭлементаСписок = "Список") Экспорт
	
	МассивЧековККМ = Новый Массив;
	МассивЧековККМНаВозврат = Новый Массив;
	ЕстьОтчетыОРозничныхПродажах = Ложь;
	
	Если СсылкаНаЧек = Неопределено Тогда
		Для Каждого СтрокаСписка Из пФорма.Элементы[ИмяЭлементаСписок].ВыделенныеСтроки Цикл
			Если СтрокаСписка <> Неопределено Тогда
				Если ТипЗнч(СтрокаСписка) = Тип("ДокументСсылка.ЧекККМ") Тогда
					МассивЧековККМ.Добавить(СтрокаСписка);
				ИначеЕсли ТипЗнч(СтрокаСписка) = Тип("ДокументСсылка.ЧекККМВозврат") Тогда
					МассивЧековККМНаВозврат.Добавить(СтрокаСписка);
				Иначе
					ЕстьОтчетыОРозничныхПродажах = Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	Иначе
		МассивЧековККМ.Добавить(СсылкаНаЧек);
	КонецЕсли;
	
	Если ЕстьОтчетыОРозничныхПродажах Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Для отчетов о розничных продажах товарный чек не формируется.";
		Сообщение.Поле = ИмяЭлементаСписок;
		Сообщение.Сообщить();
	КонецЕсли;
	
	Если МассивЧековККМ.Количество() > 0 Тогда
		
		ПараметрыОткрытия = Новый Структура("ИмяМенеджераПечати,ИменаМакетов,ПараметрКоманды,ПараметрыПечати");
		ПараметрыОткрытия.ИмяМенеджераПечати = "Документ.ЧекККМ";
		ПараметрыОткрытия.ИменаМакетов		 = "ТоварныйЧек";
		ПараметрыОткрытия.ПараметрКоманды	 = МассивЧековККМ;
		ПараметрыОткрытия.ПараметрыПечати	 = Неопределено;
		
		ОткрытьФорму("ОбщаяФорма.ПечатьДокументов", ПараметрыОткрытия, пФорма, пФорма.КлючУникальности);
		
	КонецЕсли;
	
	Если МассивЧековККМНаВозврат.Количество() > 0 Тогда
		
		ПараметрыОткрытия = Новый Структура("ИмяМенеджераПечати,ИменаМакетов,ПараметрКоманды,ПараметрыПечати");
		ПараметрыОткрытия.ИмяМенеджераПечати = "Документ.ЧекККМВозврат";
		ПараметрыОткрытия.ИменаМакетов		 = "ТоварныйЧек";
		ПараметрыОткрытия.ПараметрКоманды	 = МассивЧековККМНаВозврат;
		ПараметрыОткрытия.ПараметрыПечати	 = Неопределено;
		
		ОткрытьФорму("ОбщаяФорма.ПечатьДокументов", ПараметрыОткрытия, пФорма, пФорма.КлючУникальности);
		
	КонецЕсли;
	
КонецПроцедуры


// Процедура - обработчик выбора дисконтной карты, начало.
//
Функция ВыбранаДисконтнаяКарта(пФорма, ДисконтнаяКарта) Экспорт
	
	БылИзмененКонтрагент = Ложь;
	ПоказатьСоощениеСчитанаДисконтнаяКарта = Истина;
	Если пФорма.ЕстьИменныеВидыДисконтныхКарт Тогда
		ВладелецДисконтнойКарты = УправлениеНебольшойФирмойВызовСервера.ЗначениеРеквизитаОбъекта(ДисконтнаяКарта, "ВладелецКарты");
		Если пФорма.Объект.Контрагент.Пустая() И Не ВладелецДисконтнойКарты.Пустая() Тогда
			
			ПоказатьСоощениеСчитанаДисконтнаяКарта = Ложь;
			пФорма.Объект.Контрагент = ВладелецДисконтнойКарты;
			БылИзмененКонтрагент = Истина;
			
			ПоказатьОповещениеПользователя(
				НСтр("ru = 'Заполнен контрагент и считана дисконтная карта'"),
				ПолучитьНавигационнуюСсылку(ДисконтнаяКарта),
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В документе заполнен контрагент и считана дисконтная карта %1'"), ДисконтнаяКарта),
				БиблиотекаКартинок.Информация32);
				
		ИначеЕсли пФорма.ЕстьИменныеВидыДисконтныхКарт И пФорма.Объект.Контрагент <> ВладелецДисконтнойКарты И Не ВладелецДисконтнойКарты.Пустая() Тогда
			
			ПоказатьСоощениеСчитанаДисконтнаяКарта = Ложь;
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				НСтр("ru = 'Дисконтная карта не считана. Владелец дисконтной карты не совпадает с контрагентом в документе.'"),
				,
				"Контрагент",
				"Объект");
			
			Возврат БылИзмененКонтрагент;
		КонецЕсли;
	КонецЕсли;
	
	Если ПоказатьСоощениеСчитанаДисконтнаяКарта Тогда
		ПоказатьОповещениеПользователя(
			НСтр("ru = 'Считана дисконтная карта'"),
			ПолучитьНавигационнуюСсылку(ДисконтнаяКарта),
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Считана дисконтная карта %1'"), ДисконтнаяКарта),
			БиблиотекаКартинок.Информация32);
	КонецЕсли;
	
	Возврат БылИзмененКонтрагент;
	
КонецФункции


Процедура РедактироватьОплату(пФорма, пЭтоРМК_МК = Ложь) Экспорт
	
	Оповещение = Новый ОписаниеОповещения("РедактироватьОплатуЗавершение", пФорма);
	СтруктураПараметров = Новый Структура();
	Если пЭтоРМК_МК Тогда
		СтруктураПараметров.Вставить("КОплате", пФорма.СуммаДокумента
											- пФорма.ПолученоНаличными
											- пФорма.ВременнаяТаблицаКарт.Итог("Сумма")
											+ пФорма.Элементы.ВременнаяТаблицаКарт.ТекущиеДанные.Сумма
											+ пФорма.Элементы.ВременнаяТаблицаКарт.ТекущиеДанные.СуммаБонусов);
	Иначе
		СтруктураПараметров.Вставить("КОплате", пФорма.Объект.СуммаДокумента
											- пФорма.Объект.ПолученоНаличными
											- пФорма.Объект.БезналичнаяОплата.Итог("Сумма")
											+ пФорма.Элементы.БезналичнаяОплата.ТекущиеДанные.Сумма
											+ пФорма.Элементы.БезналичнаяОплата.ТекущиеДанные.СуммаБонусов);
	КонецЕсли;
	СтруктураПараметров.Вставить("КассаККМ", пФорма.Объект.КассаККМ);
	СтруктураПараметров.Вставить("ЭквайринговыйТерминал");
	СтруктураПараметров.Вставить("ВидПлатежнойКарты");
	СтруктураПараметров.Вставить("НомерПлатежнойКарты");
	СтруктураПараметров.Вставить("СсылочныйНомер");
	СтруктураПараметров.Вставить("НомерЧекаЭТ");
	СтруктураПараметров.Вставить("ПодарочныйСертификат");
	СтруктураПараметров.Вставить("НомерСертификата");
	СтруктураПараметров.Вставить("БонуснаяКарта");
	СтруктураПараметров.Вставить("Сумма");
	СтруктураПараметров.Вставить("СуммаБонусов");
	СтруктураПараметров.Вставить("Документ", пФорма.Объект);
	СтруктураПараметров.Вставить("РедактироватьОплату", Истина);
	
	Если пЭтоРМК_МК Тогда
		ЭлементыБезналичнаяОплата = пФорма.Элементы.ВременнаяТаблицаКарт;
	Иначе
		ЭлементыБезналичнаяОплата = пФорма.Элементы.БезналичнаяОплата;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(СтруктураПараметров, ЭлементыБезналичнаяОплата.ТекущиеДанные);
	
	Если ЭлементыБезналичнаяОплата.ТекущиеДанные.ВидОплаты = ПредопределенноеЗначение("Перечисление.ВидыБезналичныхОплат.ПодарочныйСертификат") Тогда
		ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаОплатыСертификатом", СтруктураПараметров, пФорма,,,, Оповещение);
	ИначеЕсли ЭлементыБезналичнаяОплата.ТекущиеДанные.ВидОплаты = ПредопределенноеЗначение("Перечисление.ВидыБезналичныхОплат.БанковскаяКарта") Тогда
		ОткрытьФорму("Справочник.ЭквайринговыеТерминалы.Форма.ФормаОплатыКартой", СтруктураПараметров, пФорма,,,, Оповещение);
	ИначеЕсли ЭлементыБезналичнаяОплата.ТекущиеДанные.ВидОплаты = ПредопределенноеЗначение("Перечисление.ВидыБезналичныхОплат.Бонусы") Тогда
		ОткрытьФорму("Справочник.ДисконтныеКарты.Форма.ФормаОплатыБонусами", СтруктураПараметров, пФорма,,,, Оповещение);
	ИначеЕсли ЭлементыБезналичнаяОплата.ТекущиеДанные.ВидОплаты = ПредопределенноеЗначение("Перечисление.ВидыБезналичныхОплат.Кредит") Тогда
		ОткрытьФорму("Справочник.ЭквайринговыеТерминалы.Форма.ФормаОплатыКредитом", СтруктураПараметров, пФорма,,,, Оповещение);
	КонецЕсли;
	
КонецПроцедуры


Процедура ПроверитьВозможностьУдаленияОплаты(Элемент, Отказ) Экспорт
	
	НужноПересчитатьДокумент = Ложь;
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.НомерЧекаЭТ) Тогда
		
		Отказ = Истина;
			
		СтрокаСообщения = НСтр("ru = 'Данные об оплате отправлены в банк.'") + Символы.ПС;
		СтрокаСообщения = СтрокаСообщения + НСтр("ru = 'Необходимо отменить операцию.'"); 
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			СтрокаСообщения);
			
	КонецЕсли;
	
КонецПроцедуры


// Процедура рассчитывает сумму в строке табличной части.
//
Функция РассчитатьСуммуВСтрокеТабличнойЧасти(пФорма, СтрокаТабличнойЧасти = Неопределено, ПараметрыРасчета = Неопределено) Экспорт
	
	Если СтрокаТабличнойЧасти = Неопределено Тогда
		СтрокаТабличнойЧасти = пФорма.Элементы.Запасы.ТекущиеДанные;
	КонецЕсли;
	
	Если ПараметрыРасчета=Неопределено Тогда
		ПараметрыРасчета = Новый Структура("СброситьФлагСкидкиРассчитаны",Истина);
	КонецЕсли;	
	ПараметрыРасчета.Вставить("СуммаВключаетНДС", пФорма.Объект.СуммаВключаетНДС);
	УправлениеНебольшойФирмойКлиент.РассчитатьСуммыВСтрокеТЧ(СтрокаТабличнойЧасти, ПараметрыРасчета);
	
КонецФункции // РассчитатьСуммуВСтрокеТабличнойЧасти()
