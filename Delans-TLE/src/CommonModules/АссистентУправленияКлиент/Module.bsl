
#Область ПрограммныйИнтерфейс

// См. процедуру ОбщегоНазначенияКлиентПереопределяемый.ПослеНачалаРаботыСистемы.
//
Процедура ПослеНачалаРаботыСистемы(ПараметрыРаботыКлиента) Экспорт
	
	Подключить();
	
КонецПроцедуры

// См. подключение в ПослеНачалаРаботыСистемы.
// 
Процедура ОбработчикПослеОтправкиСообщения(Сообщение, Обсуждение, ДополнительныеПараметры) Экспорт
	
	Если НЕ АссистентУправленияПовтИсп.Подключен() Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ АссистентУправленияКлиентСервер.СообщениеАдресованоАссистенту(Сообщение) Тогда
		Возврат;
	КонецЕсли;
	
	Результат = Новый Структура("Действие,СообщениеИдентификатор,ОбсуждениеИдентификатор,ДанныеСообщения");
	АссистентУправленияВызовСервера.ОтветитьНаСообщение(Обсуждение.Идентификатор, Сообщение.Идентификатор, Результат);
	
	Если Результат.Действие = Неопределено ИЛИ Результат.СообщениеИдентификатор = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОбработатьПроизвольноеДействиеСообщенияАссистента(Результат.СообщениеИдентификатор, Результат.Действие, Результат.ДанныеСообщения);
	
КонецПроцедуры

// См. подключение в ПослеНачалаРаботыСистемы.
// 
Процедура ОбработчикДействияСообщенияАссистента(Сообщение, Действие, ДополнительныеПараметры) Экспорт
	
	Если НЕ АссистентУправленияПовтИсп.Подключен() Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ АссистентУправленияКлиентСервер.ЭтоСообщениеАссистента(Сообщение) Тогда
		Возврат;
	КонецЕсли;
	
	ОбработатьДействиеСообщенияАссистента(Сообщение, Действие);
	
КонецПроцедуры

Процедура Подключить() Экспорт
	
	Если НЕ СистемаВзаимодействия.ИнформационнаяБазаЗарегистрирована() Тогда
		Возврат;
	КонецЕсли;
	
	СистемаВзаимодействия.ПодключитьОбработчикДействияСообщения(Новый ОписаниеОповещения("ОбработчикДействияСообщенияАссистента", АссистентУправленияКлиент));
	СистемаВзаимодействия.ПодключитьОбработчикПослеОтправкиСообщения(Новый ОписаниеОповещения("ОбработчикПослеОтправкиСообщения", АссистентУправленияКлиент));
	
КонецПроцедуры

Процедура ОбработатьДействиеСообщенияАссистента(Сообщение, Действие) Экспорт
	
	Если Действие = АссистентУправленияКлиентСервер.КодДействияСообщенияОтмена() Тогда
		ОбработатьДействиеОтменаСообщенияАссистента(Сообщение.Обсуждение, Сообщение.Идентификатор);
		Возврат;
	КонецЕсли;
	
	ОбработатьПроизвольноеДействиеСообщенияАссистента(Сообщение, Действие);
	
КонецПроцедуры

Процедура ОбработкаОповещения(Форма, ИмяСобытия, Параметр, Источник) Экспорт
	
	Если ИмяСобытия <> "АссистентУправления_ОбработчикДействияСообщенияАссистента" Тогда
		Возврат;
	КонецЕсли;
	
	Если Форма.Объект.Ссылка <> Источник Тогда
		Возврат;
	КонецЕсли;
	
	Действие = Неопределено;
	Параметр.Свойство("Действие", Действие);
	Параметр.Удалить("Действие");
	Параметр.Вставить("ОписаниеОповещения", Новый ОписаниеОповещения("ПослеОбработкиДействияСообщенияАссистента", АссистентУправленияКлиент, Новый Структура("Сообщение,ОбсуждениеИдентификатор", Параметр.Сообщение, Параметр.Обсуждение)));
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыполнитьДействиеСообщенияАссистента", Форма, Параметр);
	
	Если НЕ Форма.Модифицированность Тогда
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, Действие);
		Возврат;
	КонецЕсли;
	
	ПоказатьВопрос(
		Новый ОписаниеОповещения("ПередВыполнениемДействияСообщенияАссистента", АссистентУправленияКлиент, Новый Структура("Действие,ОписаниеОповещения,Форма", Действие, ОписаниеОповещения, Форма)),
		НСтр("ru='Данные были изменены. Сохранить изменения?'"),
		РежимДиалогаВопрос.ДаНетОтмена);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПередВыполнениемДействияСообщенияАссистента(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ Результат = КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ДополнительныеПараметры.Форма.Записать() Тогда
		Возврат;
	КонецЕсли;
	
	ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОписаниеОповещения, ДополнительныеПараметры.Действие);
	
КонецПроцедуры

Процедура ОбработатьДействиеОтменаСообщенияАссистента(ОбсуждениеИдентификатор, СообщениеИдентификатор)
	
	АссистентУправленияВызовСервера.ОбработатьДействиеОтменаСообщенияАссистента(ОбсуждениеИдентификатор, СообщениеИдентификатор);
	
КонецПроцедуры

// Передает управление в форму-источник возникновения события.
// 
Процедура ОбработатьПроизвольноеДействиеСообщенияАссистента(Сообщение, Действие, ДанныеСообщения = Неопределено)
	
	Если ДанныеСообщения = Неопределено Тогда
		ДанныеСообщения = АссистентУправленияВызовСервера.ДанныеСообщенияСВ(Сообщение.Обсуждение, Сообщение.Данные);
	КонецЕсли;
	
	Если ДанныеСообщения.Предмет = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Параметры = Новый Структура;
	Параметры.Вставить("Сообщение", ?(ТипЗнч(Сообщение) = Тип("СообщениеСистемыВзаимодействия"), Сообщение.Идентификатор, Сообщение));
	Параметры.Вставить("Обсуждение", ДанныеСообщения.ОбсуждениеИдентификатор);
	Параметры.Вставить("Действие", Действие);
	Параметры.Вставить("ДанныеСообщения", ДанныеСообщения.Данные);
	
	Оповестить("АссистентУправления_ОбработчикДействияСообщенияАссистента", Параметры, ДанныеСообщения.Предмет);
	
КонецПроцедуры

Процедура ПослеОбработкиДействияСообщенияАссистента(Результат, ДополнительныеПараметры) Экспорт
	
	Сообщение = Неопределено;
	Если НЕ ДополнительныеПараметры.Свойство("Сообщение", Сообщение) Тогда
		Возврат;
	КонецЕсли;
	
	АссистентУправленияВызовСервера.ПослеОбработкиДействияСообщенияАссистента(ДополнительныеПараметры.ОбсуждениеИдентификатор, ДополнительныеПараметры.Сообщение);
	
КонецПроцедуры

#КонецОбласти