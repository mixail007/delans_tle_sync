
#Область ОбработчикиСлужебныхСобытий

Процедура ОбработкаНажатияГиперссылки(знач Идентификатор, знач РежимРаботы, СтандартнаяОбработка, Форма) Экспорт
	
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура;
	
	Если Идентификатор = "ВыборОператораТелефонииИНастройкаИнтеграции" Тогда
		
		ОткрытьФорму("Обработка.НастройкаПрограммы.Форма.НастройкаТелефонии");
		
	ИначеЕсли Идентификатор = "ВыборОбъектовДляОбязательногоЗаполненияИсточника" Тогда
		
		ОткрытьФорму("Справочник.ИсточникиПривлеченияПокупателей.Форма.ФормаВыбораОбязательногоЗаполнения");
		
	ИначеЕсли Идентификатор = "НастроитьУчетныеЗаписи" Тогда
		
		ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку("e1cib/command/РегистрСведений.УчетныеЗаписиПользователя.Команда.НастроитьУчетныеЗаписи");
		
	ИначеЕсли Идентификатор = "НастройкаПодписиПисем" Тогда
		
		ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку("e1cib/command/Обработка.НастройкаПрограммы.Команда.НастройкаПодписиПисем");
		
	ИначеЕсли Идентификатор = "ШаблоныСообщений" Тогда
		
		ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку("e1cib/list/Справочник.ШаблоныСообщений");
		
	ИначеЕсли Идентификатор = "РабочийКаталогПечати" Тогда
		
		РаботаСФайламиКлиент.ОткрытьФормуНастройкиРабочегоКаталога();
		
	ИначеЕсли Идентификатор = "НастройкаСканирования" Тогда
		
		РаботаСФайламиКлиент.ОткрытьФормуНастройкиСканирования();
		
	ИначеЕсли Идентификатор = "НастройкаРабочегоКаталогаФайлов" Тогда
		
		РаботаСФайламиКлиент.ОткрытьФормуНастройкиРабочегоКаталога();
		
	ИначеЕсли Идентификатор = "УстановкаРасширенияРаботыСФайлами" Тогда
		
		НачатьУстановкуРасширенияРаботыСФайлами(Неопределено);
		
	ИначеЕсли Идентификатор = "НастройкаЭлектроннойПодписиИШифрования" Тогда
		
		ЭлектроннаяПодписьКлиент.ОткрытьНастройкиЭлектроннойПодписиИШифрования();
		
	ИначеЕсли Идентификатор = "УстановитьРасширениеРаботыСКриптографией" Тогда
		
		НачатьУстановкуРасширенияРаботыСКриптографией(Неопределено);
		
	ИначеЕсли Идентификатор = "СведенияОПользователе" Тогда
		
		ПоказатьЗначение(Неопределено, ПользователиКлиентСервер.АвторизованныйПользователь());
		
	ИначеЕсли Идентификатор = "НастройкаДоступаКПрокси" Тогда
		
		ПараметрыФормы.Вставить("НастройкаПроксиНаКлиенте", Истина);
		ОткрытьФорму("ОбщаяФорма.ПараметрыПроксиСервера", ПараметрыФормы);
		
	ИначеЕсли Идентификатор = "НастройкаСинхронизацииДанных" Тогда
		
		ИмяОткрываемойФормы = "ОбщаяФорма.СинхронизацияДанных";
		
		ОткрытьФорму(ИмяОткрываемойФормы);
		
	ИначеЕсли Идентификатор = "ПодробнееОТорговыхПредложениях" Тогда
		
		ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку("https://its.1c.ru/bmk/unf16/BN_TradeOffers");
		
	ИначеЕсли Идентификатор = "ПубликацияТорговыхПредложений" Тогда
		
			ОчиститьСообщения();
	ОткрытьФорму("Обработка.ТорговыеПредложения.Форма.ПомощникПубликации",, Форма);
	
		
	ИначеЕсли Идентификатор = "ПоискТорговыхПредложений" Тогда
		
			ОчиститьСообщения();
	ОткрытьФорму("Обработка.ТорговыеПредложения.Форма.ПоискПоОтборам",, Форма);
	
		
	ИначеЕсли Идентификатор = "НастройкиЭлектроннойПодписиИШифрования" Тогда
		
		ОткрытьФорму("ОбщаяФорма.НастройкиЭлектроннойПодписиИШифрования");
		
	ИначеЕсли Идентификатор = "ПодключениеКСервису1С_ЭДО" Тогда
		
		МодульОбработки = ОбщегоНазначенияКлиент.ОбщийМодуль("ОбменСКонтрагентамиКлиент");
		МодульОбработки.ПомощникПодключенияКСервису1СЭДО();
		
	ИначеЕсли Идентификатор = "ПомощникПодключенияКСервису1СТакском" Тогда
		
		МодульОбработки = ОбщегоНазначенияКлиент.ОбщийМодуль("ОбменСКонтрагентамиКлиент");
		МодульОбработки.ПомощникПодключенияКСервису1СТакском();
		
	ИначеЕсли Идентификатор = "СервисныеКомандыБизнесСеть" Тогда
		
		ОткрытьФорму("Обработка.БизнесСеть.Форма.НастройкаПодключения");
		
	ИначеЕсли Идентификатор = "НастройкиЯндексКассы" Тогда
		
		ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку("e1cib/list/Справочник.НастройкиЯндексКассы");
		
	ИначеЕсли Идентификатор = "СостояниеИнтеграцииЯндексКасса" Тогда
		
		ОткрытьФорму("РегистрСведений.СтатусОбменовСЯндексКассой.Форма.ФормаПросмотраСостоянияОбменов");
		
	ИначеЕсли Идентификатор = "ШаблоныСообщенийЯндексКасса" Тогда
		
		ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку("e1cib/list/Справочник.ШаблоныСообщений");
		
	ИначеЕсли Идентификатор = "НастройкиВерсионированияОбъектов" Тогда
		
		Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ВерсионированиеОбъектов") Тогда
		МодульВерсионированиеОбъектовКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ВерсионированиеОбъектовКлиент");
		МодульВерсионированиеОбъектовКлиент.ПоказатьНастройку();
	КонецЕсли;
		
	ИначеЕсли Идентификатор = "ДополнительныеРеквизиты" Тогда
		
		ПараметрыФормы.Вставить("ПоказатьДополнительныеРеквизиты");
		ОткрытьФорму("Справочник.НаборыДополнительныхРеквизитовИСведений.ФормаСписка", ПараметрыФормы, , "ДополнительныеРеквизиты");
		
	ИначеЕсли Идентификатор = "ДополнительныеСведения" Тогда
		
		ПараметрыФормы.Вставить("ПоказатьДополнительныеСведения");
		ОткрытьФорму("Справочник.НаборыДополнительныхРеквизитовИСведений.ФормаСписка", ПараметрыФормы, , "ДополнительныеСведения");
		
	ИначеЕсли Идентификатор = "НастройкиРегистрацииСобытийДоступаКПерсональнымДанным" Тогда
		
		ОткрытьФорму("ОбщаяФорма.НастройкиРегистрацииСобытийДоступаКПерсональнымДанным");
		
	ИначеЕсли Идентификатор = "НастройкаСкрытияПерсональныхДанных" Тогда
		
		ОткрытьФорму("Обработка.НастройкаПрограммы.Форма.НастройкаЗащитыПерсональныхДанных");
		
	ИначеЕсли Идентификатор = "ВойтиИлиВыйтиИПП" Тогда
		
		ИнтернетПоддержкаПользователейКлиентПереопределяемый.ИнтернетПоддержкаИСервисы_БИПВойтиИлиВыйти(Форма);
		
	ИначеЕсли Идентификатор = "МониторПортала1СИТС" Тогда
		
		МониторПортала1СИТСКлиент.ОткрытьМонитор();
		
	ИначеЕсли Идентификатор = "ОбновлениеПрограммы" Тогда
		
		ПолучениеОбновленийПрограммыКлиент.ОбновитьПрограмму();
		
	ИначеЕсли Идентификатор = "ОткрытьОписаниеИзмененийСистемы" Тогда
		
		ОткрытьФорму("ОбщаяФорма.ОписаниеИзмененийПрограммы");
		
	ИначеЕсли Идентификатор = "РезультатыОбновленияИДополнительнаяОбработкаДанных" Тогда
		
		ПараметрыФормы.Вставить("ОткрытиеИзПанелиАдминистрирования", Истина);
		ОткрытьФорму("Обработка.РезультатыОбновленияПрограммы.Форма.ИндикацияХодаОтложенногоОбновленияИБ", ПараметрыФормы);
		
	ИначеЕсли Идентификатор = "УстановкаОбновленийИсправлений" Тогда
		
		ОбновлениеКонфигурацииКлиент.ПоказатьПоискИУстановкуОбновлений();
		
	ИначеЕсли Идентификатор = "УстановленныеИсправленияОткрыть" Тогда
		
		ОткрытьФорму("ОбщаяФорма.УстановленныеИсправления");
		
	ИначеЕсли Идентификатор = "КаталогДистрибутиваПлатформы" Тогда
		
		#Если Не ВебКлиент Тогда
		ЗапуститьПриложение(Форма.КаталогДистрибутиваПлатформы);
		#КонецЕсли
		
	ИначеЕсли Идентификатор = "ПроверитьДоступКСервисуПроверкиКонтрагентов" Тогда
		
		ПроверкаКонтрагентовКлиент.ПроверитьДоступКСервису();
		
	ИначеЕсли Идентификатор = "НастройкаДоступаКСервисуСклонения" Тогда
		
		ОткрытьФорму("ОбщаяФорма.НастройкаДоступаКСервисуMorpher");
		
	ИначеЕсли Идентификатор = "ОбновлениеКлассификаторов" Тогда
		
		РаботаСКлассификаторамиКлиент.ОбновитьКлассификаторы();
		
	ИначеЕсли Идентификатор = "НастройкаВходаПользователей" Тогда
		
		ОткрытьФорму("ОбщаяФорма.НастройкиВходаПользователей");
		
	ИначеЕсли Идентификатор = "ВремяТекущегоСеанса" Тогда
		
		ТекстПредупреждения = СтрШаблон(
			НСтр("ru = 'Время сеанса: %1
				|На сервере: %2
				|На клиенте: %3
				|
				|Время сеанса - это время сервера,
				|приведенное к часовому поясу клиента.'"),
			Формат(ОбщегоНазначенияКлиент.ДатаСеанса(), "ДЛФ=T"),
			Формат(УправлениеНебольшойФирмойВызовСервера.ДатаСервера(), "ДЛФ=T"),
			Формат(ТекущаяДата(), "ДЛФ=T"));
			
		ПоказатьПредупреждение(,ТекстПредупреждения);
		
	ИначеЕсли Идентификатор = "ПараметрыПроксиСервера" Тогда
		
		ОткрытьФорму("ОбщаяФорма.ПараметрыПроксиСервера");
		
	ИначеЕсли Идентификатор = "НастройкиИспользованияПрофилейБезопасности" Тогда
		
		РаботаВБезопасномРежимеКлиент.ОткрытьДиалогНастройкиИспользованияПрофилейБезопасности();
		
	ИначеЕсли Идентификатор = "ПодменюПечать" Тогда
		
		ОткрытьФорму("ОбщаяФорма.НастройкаКомандПечати");
		
	ИначеЕсли Идентификатор = "РасширенияПрограммы" Тогда
		
		ОткрытьФорму("ОбщаяФорма.Расширения");
		
	ИначеЕсли Идентификатор = "ОбновитьПараметрыСистемы" Тогда
		
		ОбновитьИнтерфейс();
		
	ИначеЕсли Идентификатор = "АвтоматическиЗагружатьЭлектроннуюПочтуРасписание" Тогда
		
		ОбменСGoogleКлиент.ОткрытьДиалогНастройкиРасписания(ПредопределенноеЗначение("Перечисление.ОбластиДоступаGoogle.Почта"));
		
	ИначеЕсли Идентификатор = "НастройкаОтправкиSMS" Тогда
		
		ОткрытьФорму("ОбщаяФорма.НастройкаОтправкиSMS");
		
	ИначеЕсли Идентификатор = "ВыгрузитьДанныеДляПереходаВСервис" Тогда
		
		ОткрытьФорму("ОбщаяФорма.ВыгрузкаДанных");
		
	ИначеЕсли Идентификатор = "ЗагрузитьДанныеИзСервиса" Тогда
		
		ОткрытьФорму("ОбщаяФорма.ЗагрузкаДанныхИзСервиса");
		
	ИначеЕсли Идентификатор = "ВыгрузитьДанныеВЛокальнуюВерсию" Тогда
		
		ОткрытьФорму("ОбщаяФорма.ВыгрузкаДанных");
		
	ИначеЕсли Идентификатор = "НастройкиКриптографии" Тогда
		
		ОткрытьФорму("ОбщаяФорма.НастройкиЭлектроннойПодписиИШифрования");
		
	ИначеЕсли Идентификатор = "УправлениеПолнотекстовымПоискомИИзвлечениемТекстов" Тогда
		
		ПолнотекстовыйПоискКлиент.ПоказатьНастройку();
		
	Иначе
		
		СтандартнаяОбработка = Истина;
		
	КонецЕсли;

КонецПроцедуры

Процедура ПриУстановкеЗначенияНастройки(Идентификатор, НовоеЗначение) Экспорт
Если Идентификатор = "ИспользоватьВерсионированиеОбъектов" Тогда
		
		Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ВерсионированиеОбъектов") Тогда
		МодульВерсионированиеОбъектовКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ВерсионированиеОбъектовКлиент");
		МодульВерсионированиеОбъектовКлиент.ПриИзмененииФлажкаХранитьИсторию(НовоеЗначение);
	КонецЕсли;
		
	
КонецЕсли;

КонецПроцедуры

Процедура ОбработкаОповещения(Форма, ИмяСобытия, Параметр, Источник) Экспорт

Значение = Форма["ИспользоватьВерсионированиеОбъектов"];
Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ВерсионированиеОбъектов") Тогда
		МодульВерсионированиеОбъектовКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ВерсионированиеОбъектовКлиент");
		МодульВерсионированиеОбъектовКлиент.ОбработкаОповещенияИзмененияФлажкаХранитьИсторию(ИмяСобытия, Значение);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти
