
#Область ПрограммныйИнтерфейс

// Возвращает запрос на получение учетных остатков.
//
// Параметры:
//  ДатаОстатков - Дата - дата получения остатков,
//  Организация - ОпределяемыйТип.ОрганизацияКонтрагентЕГАИС - ссылка на собственную организацию,
//  ТорговыйОбъект - ОпределяемыйТип.ТорговыйОбъектЕГАИС - торговый объект для получения остатков,
//  КорректироватьОстаткиНемаркируемойПродукции - Булево - признак корректировки остатков немаркируемой продукции.
//
// Возвращаемое значение:
//   Запрос - запрос учетных остатков.
//
Функция ЗапросУчетныхОстатков(ДатаОстатков, Организация, ТорговыйОбъект, КорректироватьОстаткиНемаркируемойПродукции) Экспорт
	
	
	Возврат Неопределено;
	
КонецФункции

// Заполняет в табличной части коэффициент пересчета в декалитры для базовой единицы измерения номенклатуры.
//
// Параметры:
//  ТабличнаяЧасть - ТабличнаяЧасть - табличная часть, в которой нужно обновить коэффициент.
//
Процедура ЗаполнитьКоэффициентПересчетаВДАЛ(ТабличнаяЧасть) Экспорт
	
	
	Возврат;
	
КонецПроцедуры

// В процедуре нужно заполнить пустые значения из таблицы соответствий.
//
// Параметры:
//  ТаблицаСопоставления - ТаблицаЗначений - таблица для заполнения с колонками:
//      * Номенклатура          - ОпределяемыйТип.Номенклатура - ссылка на номенклатуру,
//      * Характеристика        - ОпределяемыйТип.ХарактеристикаНоменклатуры - ссылка на характеристику,
//      * Упаковка              - ОпределяемыйТип.Упаковка - ссылка на упаковку,
//      * АлкогольнаяПродукция  - СправочникСсылка.КлассификаторАлкогольнойПродукцииЕГАИС - ссылка на алкогольную продукцию,
//      * ИдентификаторУпаковки - Строка - наименование упаковки поставщика.
//
Процедура ЗаполнитьНесопоставленнуюПродукцию(ТаблицаСопоставления) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаСопоставления", ТаблицаСопоставления);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТаблицаСопоставления.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ВЫРАЗИТЬ(ТаблицаСопоставления.АлкогольнаяПродукция КАК Справочник.КлассификаторАлкогольнойПродукцииЕГАИС) КАК АлкогольнаяПродукция,
	|	ТаблицаСопоставления.Характеристика КАК Характеристика,
	|	ТаблицаСопоставления.Упаковка КАК Упаковка,
	|	ТаблицаСопоставления.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	|	ТаблицаСопоставления.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ВТСопоставления
	|ИЗ
	|	&ТаблицаСопоставления КАК ТаблицаСопоставления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ВТСопоставления.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|		ИНАЧЕ ВТСопоставления.Номенклатура
	|	КОНЕЦ КАК Номенклатура,
	|	ВТСопоставления.Характеристика КАК Характеристика,
	|	ВТСопоставления.Упаковка КАК Упаковка,
	|	ВТСопоставления.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ВТСопоставления.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	|	ВТСопоставления.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ВТСопоставления КАК ВТСопоставления
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО ВТСопоставления.АлкогольнаяПродукция = СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция
	|			И ВТСопоставления.ИдентификаторУпаковки = СоответствиеНоменклатурыЕГАИС.ИдентификаторУпаковки
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТаблицаСопоставления = Запрос.Выполнить().Выгрузить();
	
КонецПроцедуры

// В процедуре необходимо определить значения переменных ЭтоСклад и ЭтоТорговыйЗал в зависимости от типа торгового объекта.
//
// Параметры:
//  ТорговыйОбъект - ОпределяемыйТип.ТорговыйОбъектЕГАИС - ссылка на собственный торговый объект,
//  ЭтоСклад - Булево - признак того, что торговый объект является складским помещением. Выходной параметр,
//  ЭтоТорговыйЗал - Булево - признак того, что торговый объект является торговым залом. Выходной параметр.
//
Процедура ПриОпределенииТипаТорговогоОбъекта(ТорговыйОбъект, ЭтоСклад, ЭтоТорговыйЗал) Экспорт
	
	
	Возврат;
	
КонецПроцедуры

// Проверяет наличие документа инвентаризации по складу.
//
// Параметры:
//  Организация - ОпределяемыйТип.ОрганизацияКонтрагентЕГАИС - ссылка на собственную организацию,
//  ТорговыйОбъект - ОпределяемыйТип.ТорговыйОбъектЕГАИС - ссылка на собственный торговый объект,
//  ТекстОшибкиСклад - Строка, ФорматированнаяСтрока - текст ошибки проверки инвентаризации на складе. Выходной параметр,
//  ТекстОшибкиТорговыйЗал - Строка, ФорматированнаяСтрока - текст ошибки проверки инвентаризации в торговом зале. Выходной параметр,
//  ОтчетПоРасхождениямСклад - Булево - если Истина, будет доступна ссылка на формирование отчета по излишкам/недостачам. Выходной параметр,
//  ОтчетПоРасхождениямТорговыйЗал - Булево - если Истина, будет доступна ссылка на формирование отчета по излишкам/недостачам. Выходной параметр.
//
Процедура ПроверитьНаличиеИнвентаризации(Организация, ТорговыйОбъект, ТекстОшибкиСклад, ТекстОшибкиТорговыйЗал, ОтчетПоРасхождениямСклад, ОтчетПоРасхождениямТорговыйЗал) Экспорт
	
	
	Возврат;
	
КонецПроцедуры

// Вызывается после заполнения таблицы значений неподтвержденными документами.
//
// Параметры:
//  НеподтвержденныеДокументы - ТаблицаЗначений - таблица с найденными неподтвержденными документами,
//  ОрганизацияЕГАИС - СправочникСсылка.КлассификаторОрганизацийЕГАИС - собственная организация по классификатору.
//
Процедура ПриПроверкеНеподтвержденныхДокументов(НеподтвержденныеДокументы, ОрганизацияЕГАИС) Экспорт
	
	
	Возврат;
	
КонецПроцедуры

// Вызывается после заполнения таблицы значений документами, требующих оформления.
//
// Параметры:
//  НеоформленныеДокументы - ТаблицаЗначений - таблица с найденными документами,
//  ОрганизацияЕГАИС - СправочникСсылка.КлассификаторОрганизацийЕГАИС - собственная организация по классификатору.
//
Процедура ПриПроверкеНеоформленныхДокументов(НеоформленныеДокументы, ОрганизацияЕГАИС) Экспорт
	
	
	Возврат;
	
КонецПроцедуры

#КонецОбласти
