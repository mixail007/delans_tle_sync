////////////////////////////////////////////////////////////////////////////////
// Подсистема "Работа с номенклатурой".
// ОбщийМодуль.РаботаСНоменклатуройКлиент.
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Поиск номенклатуры в сервисе 1С:Номенклатура по штрихкоду.
//  В случае успеха открывается карточка номенклатуры, из которой можно загрузить номенклатуру
//  в информационную базу.
//
// Параметры:
//  ШтрихКод			 - Строка	 - строка штрихкода.
//  Форма				 - УправляемаяФорма - форма владелец.
//  ОповещениеОЗакрытии	 - ОписаниеОповещения - оповещение о закрытии окна. 
//                         При закрытии формы карточки номенклатуры возвращается структура с ключом: 
//                         СозданнаяНоменклатура - массив ссылок на созданную номенклатуру.
//
Процедура НайтиНоменклатуруПоШтрихкодуВСервисе(ШтрихКод, Форма = Неопределено, ОповещениеОЗакрытии = Неопределено) Экспорт
	
	Если Не ДоступенФункционалПодсистемы() Тогда
		Возврат;
	КонецЕсли;
	
	ИспользоватьПоискПоШтрихкоду = Истина;
	РаботаСНоменклатуройКлиентПереопределяемый.ИспользоватьПоискПоШтрихкодуВСервисе(ИспользоватьПоискПоШтрихкоду);
		
	Если НЕ ИспользоватьПоискПоШтрихкоду Тогда
		Возврат;
	КонецЕсли;
	
	ИдентификаторыНоменклатуры = РаботаСНоменклатуройСлужебныйВызовСервера.ПолучитьДанныеПоНоменклатуреПоШтрихкоду(ШтрихКод);
	
	Если ИдентификаторыНоменклатуры = Неопределено 
		ИЛИ ИдентификаторыНоменклатуры.Количество() = 0 Тогда
		
		ПоказатьОповещениеПользователя(
			НСтр("ru = 'Номенклатура не найдена'"),,
			СтрШаблон(НСтр("ru = 'По штрихкоду %1 номенклатура не найдена.'"), ШтрихКод),,
			СтатусОповещенияПользователя.Информация);
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	
	ПараметрыФормы.Вставить("ИдентификаторыНоменклатуры", ИдентификаторыНоменклатуры);
	ПараметрыФормы.Вставить("СтрокаШтрихкода", ШтрихКод);
	
	ОткрытьФорму("Обработка.РаботаСНоменклатурой.Форма.КарточкаНоменклатуры", ПараметрыФормы, Форма, , , , ОповещениеОЗакрытии);
	
КонецПроцедуры

// Очистка данных объекта сервиса 1С:Номенклатура на форме.
//
// Параметры:
//  Форма - УправляемаяФорма - форма владелец.
//
Процедура НажатиеОчиститьКатегорию(Форма) Экспорт
	
	Форма.ОбъектСервисаИзменен = Истина;
	
	Форма.ТекущийЭлемент = Форма.Элементы.ПредставлениеКатегорииСервиса;
	
	РаботаСНоменклатуройСлужебныйКлиентСервер.СброситьДанныеОбъектаСервиса(
		Форма,
		Форма.Элементы.ПредставлениеКатегорииСервиса,
		РаботаСНоменклатуройСлужебныйКлиентСервер.ПредставлениеПустойКатегории());
	
КонецПроцедуры

// Очистка данных объекта сервиса 1С:Номенклатура на форме.
//
// Параметры:
//  Форма - УправляемаяФорма - форма владелец.
//
Процедура НажатиеОчиститьНоменклатуру(Форма) Экспорт
	
	Форма.ОбъектСервисаИзменен = Истина;
	
	Форма.ТекущийЭлемент = Форма.Элементы.ПредставлениеНоменклатурыСервиса;
	
	РаботаСНоменклатуройСлужебныйКлиентСервер.СброситьДанныеОбъектаСервиса(
		Форма,
		Форма.Элементы.ПредставлениеНоменклатурыСервиса,
		РаботаСНоменклатуройСлужебныйКлиентСервер.ПредставлениеПустойНоменклатуры());
		
КонецПроцедуры

// Открытие окна выбора объекта сервиса.
//
// Параметры:
//  Форма				 - УправляемаяФорма	 - форма владелец.
//  Элемент				 - ПолеФормы		 - элемент с представлением объекта сервиса.
//  СтандартнаяОбработка - Булево			 - флаг стандартной обработки.
//  ЗаполнятьПриВыборе	 - Булево 			 - Истина, если при выборе объекта сервиса будет заполняться объект базы.
//
Процедура ВыбратьОбъектСервиса(Форма, Элемент, СтандартнаяОбработка, ЗаполнятьПриВыборе = Ложь) Экспорт 
	
	СтандартнаяОбработка = Ложь;
	
	Объект = Форма.Объект;
	
	ПараметрыОбработчика = Новый Структура;
	ПараметрыОбработчика.Вставить("Форма", Форма);
	ПараметрыОбработчика.Вставить("ИмяЭлемента", Элемент.Имя);
	
	ПараметрыФормы = Новый Структура;
	
	Если Форма.РаботаСНоменклатурой_ТипОбъекта = "ВидНоменклатуры" Тогда // Категория
		
		ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина,
			"ОбщийМодуль.РаботаСНоменклатуройКлиент.ПодобратьКатегорииИзСервиса");
		
		ПараметрыФормы.Вставить("РежимВыбораКатегории", Истина);
		ПараметрыФормы.Вставить("ИдентификаторВыбраннойКатегории", Форма.ИдентификаторОбъектаСервиса);
		ПараметрыФормы.Вставить("ЗаполнятьПриВыборе", ЗаполнятьПриВыборе);
		
		ИмяФормы = "Обработка.РаботаСНоменклатурой.Форма.ЗагрузкаКатегорий";
		
		ОповещениеПриЗакрытии = Новый ОписаниеОповещения("ОбработкаОповещенияЗакрытиеФормыВыбораКатегории",
			ЭтотОбъект, ПараметрыОбработчика);
				
	ИначеЕсли Форма.РаботаСНоменклатурой_ТипОбъекта = "Номенклатура" Тогда // Номенклатура
		
		ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина,
			"ОбщийМодуль.РаботаСНоменклатуройКлиент.ПодобратьНоменклатуруИзСервиса");
		
		Если Не ЗначениеЗаполнено(Форма.ИдентификаторОбъектаСервиса) 
			И Не ЗначениеЗаполнено(Форма.СтрокаПоискаОбъектаСервиса) Тогда
			
			Форма.СтрокаПоискаОбъектаСервиса = СформироватьСтрокуПоискаПоПолямФормы(Форма);
		КонецЕсли;	
		
		ПараметрыФормы.Вставить("РежимВыбораНоменклатуры", Истина);
		ПараметрыФормы.Вставить("ИдентификаторНоменклатуры", Форма.ИдентификаторОбъектаСервиса);
		ПараметрыФормы.Вставить("СтрокаПоиска", 
			?(ЗначениеЗаполнено(Форма.ИдентификаторОбъектаСервиса), 
				Форма.ПредставлениеОбъектаСервиса, 
				Форма.СтрокаПоискаОбъектаСервиса));
		ИмяФормы = "Обработка.РаботаСНоменклатурой.Форма.ЗагрузкаНоменклатуры";
		
		ПараметрыОбработчика.Вставить("Ссылка",          Объект.Ссылка);
		
		ОповещениеПриЗакрытии = Новый ОписаниеОповещения("ОбработкаОповещенияЗакрытиеФормыВыбораНоменклатуры",
			Форма, ПараметрыОбработчика);
						
	Иначе
		Возврат;
	КонецЕсли;
		
	ОткрытьФорму(ИмяФормы, ПараметрыФормы, Форма, Форма.УникальныйИдентификатор,,, ОповещениеПриЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

// Обработка нажатия кнопки выбора режима обновления объекта базы.
//
// Параметры:
//  Форма							 - УправляемаяФорма	 - форма владелец.
//  ДанныеИнтерактивногоЗаполнения	 - Строка - см. РаботаСНоменклатурой.ПодготовитьДанныеДляИнтерактивногоЗаполнения.
//
Процедура НажатиеРежимОбновления(Форма, ДанныеИнтерактивногоЗаполнения = Неопределено) Экспорт 
	
	Объект = Форма.Объект;
	
	ПараметрыОбработки = Новый Структура();
	ПараметрыОбработки.Вставить("Объект", Объект);
	ПараметрыОбработки.Вставить("Форма",  Форма);
	ПараметрыОбработки.Вставить("ДанныеИнтерактивногоЗаполнения", ДанныеИнтерактивногоЗаполнения);
		
	ОповещениеНажатиеРежимаОбновления = Новый ОписаниеОповещения("ОбработкаОповещенияВыбораРежимаОбновления", ЭтотОбъект, ПараметрыОбработки);
	
	СписокРежимов = Новый СписокЗначений;
	СписокРежимов.Добавить("РучноеОбновление", НСтр("ru = 'Ручное обновление'"),, БиблиотекаКартинок.РучноеОбновлениеРаботаСНоменклатурой);
	СписокРежимов.Добавить("АвтоматическоеОбновление", НСтр("ru = 'Автоматическое обновление'"),, БиблиотекаКартинок.АвтоматическоеОбновлениеРаботаСНоменклатурой);
	
	Если Форма.РаботаСНоменклатурой_РежимПредставленияОбъектаСервиса = "Гиперссылка" Тогда
		
		Если Форма.ОбновляетсяАвтоматически Тогда
			ВыполнитьОбработкуОповещения(ОповещениеНажатиеРежимаОбновления, СписокРежимов[1]);	
		Иначе
			ВыполнитьОбработкуОповещения(ОповещениеНажатиеРежимаОбновления, СписокРежимов[0]);	
		КонецЕсли;
		
	Иначе		
		Форма.ПоказатьВыборИзМеню(ОповещениеНажатиеРежимаОбновления, СписокРежимов, Форма.Элементы.РежимОбновления);
	КонецЕсли;
	
КонецПроцедуры

// Обработка нажатия встраиваемых гиперссылок.
//
// Параметры:
//  Форма				 - УправляемаяФорма - форма объекта.
//  Элемент				 - Элемент - элемент формы.
//  СтандартнаяОбработка - Булево - флаг стандартной обработки.
//
Процедура НажатиеГиперссылки(Форма, Элемент, СтандартнаяОбработка) Экспорт
	
	Если Элемент.Имя = "РежимОбновления" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		РежимыОбновления = Новый СписокЗначений;
		
		РежимыОбновления.Добавить("вручную", НСтр("ru = 'Обновлять вручную'"), НЕ Форма.ОбновляетсяАвтоматически);
		РежимыОбновления.Добавить("автоматически", НСтр("ru = 'Обновлять автоматически'"), Форма.ОбновляетсяАвтоматически);
		
		Форма.ПоказатьВыборИзМеню(Новый ОписаниеОповещения("ВыборРежимаОбновления", 
			ЭтотОбъект, Новый Структура("Форма", Форма)), РежимыОбновления);
		
	ИначеЕсли Элемент.Имя = "РаботаСНоменклатурой_ОчиститьОбъектСервиса" Тогда	
		Если Форма.РаботаСНоменклатурой_ТипОбъекта = "Номенклатура" Тогда
			НажатиеОчиститьНоменклатуру(Форма);
		ИначеЕсли Форма.РаботаСНоменклатурой_ТипОбъекта = "ВидНоменклатуры" Тогда
			НажатиеОчиститьКатегорию(Форма);
		КонецЕсли;
	Иначе
		Если Не ЗначениеЗаполнено(Форма.ИдентификаторОбъектаСервиса) Тогда
			ВыбратьОбъектСервиса(Форма, Элемент, СтандартнаяОбработка, Истина);
		Иначе
			ОткрытКарточкуОбъектаСервиса(Форма, Элемент, СтандартнаяОбработка);	
		КонецЕсли;	
	КонецЕсли;
		
КонецПроцедуры

// Открытие формы представления объекта сервиса.
//
// Параметры:
//  Форма - УправляемаяФорма - форма владелец.
//  Элемент - ПолеФормы - элемент с представлением объекта сервиса.
//  СтандартнаяОбработка - Булево - флаг стандартной обработки.
//
Процедура ОткрытКарточкуОбъектаСервиса(Форма, Элемент, СтандартнаяОбработка) Экспорт 
	
	СтандартнаяОбработка = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Форма.ИдентификаторОбъектаСервиса) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	
	Если Форма.РаботаСНоменклатурой_ТипОбъекта = "ВидНоменклатуры" Тогда // Категория
		
		ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина,
				"ОбщийМодуль.РаботаСНоменклатуройКлиент.ОткрытКарточкуОбъектаСервиса.КатегорииСервиса");
		
		ПараметрыФормы.Вставить("ИдентификаторКатегории", Форма.ИдентификаторОбъектаСервиса);
		ИмяФормы = "Обработка.РаботаСНоменклатурой.Форма.КарточкаКатегории";
		
	ИначеЕсли Форма.РаботаСНоменклатурой_ТипОбъекта = "Номенклатура" Тогда // Номенклатура
		
		ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина,
				"ОбщийМодуль.РаботаСНоменклатуройКлиент.ОткрытКарточкуОбъектаСервиса.НоменклатураСервиса");
		
		ПараметрыФормы.Вставить("ИдентификаторыНоменклатуры", Форма.ИдентификаторОбъектаСервиса);
		ИмяФормы = "Обработка.РаботаСНоменклатурой.Форма.КарточкаНоменклатуры";
		
	Иначе
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму(ИмяФормы, ПараметрыФормы, Форма, Форма.УникальныйИдентификатор);
	
КонецПроцедуры

// Открытие формы подбора номенклатуры из сервиса.
//
Процедура ПодобратьНоменклатуруИзСервиса() Экспорт
	
	ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина,
		"ОбщийМодуль.РаботаСНоменклатуройКлиент.ПодобратьНоменклатуруИзСервиса");
	
	ОткрытьФорму("Обработка.РаботаСНоменклатурой.Форма.ЗагрузкаНоменклатуры");
	
КонецПроцедуры

// Открытие формы подбора категорий из сервиса.
//
// Параметры:
//  Владелец - УправляемаяФорма - владелец формы.
//
Процедура ПодобратьКатегорииИзСервиса(Владелец = Неопределено) Экспорт
	
	ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина,
		"ОбщийМодуль.РаботаСНоменклатуройКлиент.ПодобратьКатегорииИзСервиса");
	
	ОткрытьФорму("Обработка.РаботаСНоменклатурой.Форма.ЗагрузкаКатегорий", , Владелец);
	
КонецПроцедуры

// Обработка события ПриИзменении элемента формы, для формирования строки поиска номенклатуры в сервисе.
// Поиск осуществляется для формирования контекстной подсказки в момент заполнения объекта.
//
// Параметры:
//  Форма	 - УправляемаяФорма - форма события.
//  Элемент	 - ПолеФормы - изменяемый элемент формы.
//
Процедура ПриИзмененииСобратьСтрокуПоиска(Форма, Элемент) Экспорт 
	
	СобратьСтрокуПоискаИОбъектаСервиса(Форма, Элемент);
	
КонецПроцедуры

// Обработка события ИзменениеТекстаРедактирования элемента формы, для формирования строки поиска номенклатуры в сервисе.
// Поиск осуществляется для формирования контекстной подсказки в момент заполнения объекта.
//
// Параметры:
//  Форма	 - УправляемаяФорма - форма события.
//  Текст	 - Строка - редактируемый текст.
//  Элемент	 - ПолеФормы - изменяемый элемент формы.
//  СтандартнаяОбработка - Булево - флаг стандартной обработки.
//
Процедура ИзменениеТекстаСобратьСтрокуПоиска(Форма, Текст, Элемент, СтандартнаяОбработка) Экспорт 
	
	СтандартнаяОбработка = Ложь;
	
	Если СтрДлина(Текст) < 3 
		И ЗначениеЗаполнено(Текст) Тогда
		
		Возврат;
	КонецЕсли;
	
	СобратьСтрокуПоискаИОбъектаСервиса(Форма, Элемент);
	
КонецПроцедуры

// Функция определяет доступность подсистемы.
// 
// Возвращаемое значение:
//  Булево - признак доступности подсистемы.
//
Функция ДоступенФункционалПодсистемы() Экспорт
	
	Возврат РаботаСНоменклатуройСлужебныйВызовСервера.ДоступенФункционалПодсистемы();
	
КонецФункции

// Обработка загрузки категорий в форме списка вида номенклатуры.
//
// Параметры:
//  Форма    	 - УправляемаяФорма - форма списка видов номенклатуры.
//  ИмяСобытия	 - Строка - имя обрабатываемого события.
//  Параметр	 - Массив - массив ссылок созданных объектов.
//
Процедура ПослеЗагрузкиКатегорий(Форма, ИмяСобытия, Параметр) Экспорт
	
	Если ИмяСобытия = "РаботаСНоменклатурой_ЗагрузкаКатегорийЗавершена" Тогда
		РаботаСНоменклатуройКлиентПереопределяемый.ПослеЗагрузкиКатегорий(Параметр, Форма);
	КонецЕсли;
	
КонецПроцедуры

#Область ИнтерактивноеЗаполнение

// Процедура вызывается после выбора 1С:Номенклатуры из формы номенклатуры, собирает данные с формы номенклатуры информационной базы
// и передает в форму заполнения номенклатуры.
//
// Параметры:
//  ДанныеОбъекта					 - Структура - идентификатор и наименование объекта сервиса..
//  ДополнительныеПараметры			 - Структура - ссылка на заполняемую номенклатуру и его форму.
//  ДанныеИнтерактивногоЗаполнения	 - Строка - см. РаботаСНоменклатурой.ПодготовитьДанныеДляИнтерактивногоЗаполнения.
//
Процедура ОбработкаОповещенияЗакрытиеФормыВыбораНоменклатуры(ДанныеОбъекта, ДополнительныеПараметры, ДанныеИнтерактивногоЗаполнения) Экспорт
	
	Если ДанныеОбъекта = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьРеквизитыОбъектаСервиса(ДанныеОбъекта, ДополнительныеПараметры);
	
	Форма = ДополнительныеПараметры.Форма;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ИдентификаторНоменклатуры",      Форма.ИдентификаторОбъектаСервиса);
	ПараметрыФормы.Вставить("НоменклатураНаименование",       Форма.ПредставлениеОбъектаСервиса);
	ПараметрыФормы.Вставить("НоменклатураБазы",               ДополнительныеПараметры.Ссылка);
	ПараметрыФормы.Вставить("ДанныеИнтерактивногоЗаполнения", ДанныеИнтерактивногоЗаполнения);
	ПараметрыФормы.Вставить("ПервичноеЗаполнение",            Истина);
	
	ОткрытьФормуЗаполненияНоменклатуры(Форма, ПараметрыФормы);
			
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработчикиСобытийФорм

Процедура ВыборРежимаОбновления(РежимОбновления, ДополнительныеПараметры) Экспорт
	
	Форма = ДополнительныеПараметры.Форма;
	
	Если РежимОбновления = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Форма.ОбъектСервисаИзменен = Истина;
	
	Если РежимОбновления.Значение = "вручную" Тогда
		Форма.ОбновляетсяАвтоматически = Ложь;
	ИначеЕсли РежимОбновления.Значение = "автоматически" Тогда
		Форма.ОбновляетсяАвтоматически = Истина;
	КонецЕсли;
	
	Форма.Элементы.РежимОбновления.Заголовок = 
		РаботаСНоменклатуройСлужебныйКлиентСервер.ЗаголовокГиперссылкиРежимаОбновления(Форма.ОбновляетсяАвтоматически);
	
КонецПроцедуры

Процедура ОткрытьФормуЗаполненияНоменклатуры(Владелец, ПараметрыФормы)
		
	ОповещениеПриЗакрытии = Новый ОписаниеОповещения("ОбработкаОповещенияЗакрытиеФормыЗаполнения", Владелец, Владелец);
	
	ОткрытьФорму("Обработка.РаботаСНоменклатурой.Форма.ЗаполнениеНоменклатуры", ПараметрыФормы, Владелец, , , , ОповещениеПриЗакрытии);

КонецПроцедуры
	
Процедура ОткрытьФормуЗаполненияВидаНоменклатуры(Владелец, ПараметрыФормы)
		
	ОповещениеПриЗакрытии = Новый ОписаниеОповещения("ОбработкаОповещенияЗакрытиеФормыЗаполнения", ЭтотОбъект, Владелец);
	
	ОткрытьФорму("Обработка.РаботаСНоменклатурой.Форма.ЗаполнениеВидаНоменклатуры", ПараметрыФормы, Владелец, , , , ОповещениеПриЗакрытии);

КонецПроцедуры

Процедура ОбработкаРасшифровкиПредставленияКатегории(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры) Экспорт
	
	Если Элемент.ТекущаяОбласть.Имя = "Шапка_ВидыНоменклатуры" Тогда
		Если ТипЗнч(Расшифровка) = Тип("Массив")
			И ЗначениеЗаполнено(Расшифровка) Тогда
			
			СтандартнаяОбработка = Ложь;
			
			РаботаСНоменклатуройКлиентПереопределяемый.ОткрытьФормуСпискаВидаНоменклатуры(Расшифровка, ЭтотОбъект);
			
		ИначеЕсли Не ЗначениеЗаполнено(Расшифровка) Тогда
			СтандартнаяОбработка = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиОповещенияФормПрикладныхОбъектов

Процедура ОбработкаОповещенияЗакрытиеФормыВыбораКатегории(ДанныеОбъекта, ДополнительныеПараметры) Экспорт 
	
	Если ДанныеОбъекта = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	ЗаполнитьРеквизитыОбъектаСервиса(ДанныеОбъекта, ДополнительныеПараметры);
	
КонецПроцедуры

Процедура ЗаполнитьРеквизитыОбъектаСервиса(ДанныеОбъекта, ДополнительныеПараметры)
	
	Форма         = ДополнительныеПараметры.Форма;
	Наименование  = ДанныеОбъекта.Наименование;
	Идентификатор = ДанныеОбъекта.Идентификатор;
	
	Если Форма.ИдентификаторОбъектаСервиса <> Идентификатор Тогда
		Форма.ОбъектСервисаИзменен = Истина;
	КонецЕсли;
	
	Форма.ПредставлениеОбъектаСервиса = Новый ФорматированнаяСтрока(Наименование,,,,"Ссылка");
	Форма.ИдентификаторОбъектаСервиса = Идентификатор;
	Форма.Модифицированность = Истина;
	
	Если Форма.РаботаСНоменклатурой_РежимПредставленияОбъектаСервиса = "ПолеВвода" Тогда
		Форма.Элементы.РежимОбновления.Доступность = ЗначениеЗаполнено(Форма.ИдентификаторОбъектаСервиса);	
	Иначе
		РаботаСНоменклатуройСлужебныйКлиентСервер.НастроитьВидимостьГиперссылок(Форма);
	КонецЕсли;
	
	Если ДанныеОбъекта.Свойство("ЗаполнятьПриВыборе")
		И ДанныеОбъекта.ЗаполнятьПриВыборе Тогда
		
		Если Форма.РаботаСНоменклатурой_ТипОбъекта = "ВидНоменклатуры" Тогда
			Оповещение = Новый ОписаниеОповещения("ПриОтветеНаВопросАвтоматическогоОбновления", 
			ЭтотОбъект, Новый Структура("ОбъектОбновления, Форма, Идентификатор", Форма.Объект.Ссылка, Форма, Форма.ИдентификаторОбъектаСервиса));
			
			ВыполнитьОбработкуОповещения(Оповещение, КодВозвратаДиалога.Да);
		КонецЕсли;
	КонецЕсли;
			
КонецПроцедуры

Процедура ОбработкаОповещенияВыбораРежимаОбновления(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	////////////////////////////////////////////////////////////////////////////////
	
	Форма =  ДополнительныеПараметры.Форма;
	Объект = ДополнительныеПараметры.Объект;
	
	Если РезультатВыбора.Значение = "РучноеОбновление" Тогда
		
		Если Форма.РаботаСНоменклатурой_ТипОбъекта = "ВидНоменклатуры" Тогда // Категория
			
			Если Форма.Модифицированность Тогда
				
				ПараметрыОбработки = Новый Структура();
				
				ПараметрыОбработки.Вставить("Объект", Объект);
				ПараметрыОбработки.Вставить("Форма",  Форма);
				
				ТекстВопроса = НСтр("ru = 'Объект изменен и будет записан. Продолжить?'");
				
				Оповещение = Новый ОписаниеОповещения("ОбработкаВопросЗаписиОбъекта", ЭтотОбъект, ПараметрыОбработки);
				
				ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);

			Иначе
				
				Форма.РазблокироватьДанныеФормыДляРедактирования();
				
				ПараметрыФормы = Новый Структура;
				
				ПараметрыФормы.Вставить("НаименованиеКатегории", Форма.ПредставлениеОбъектаСервиса);
				ПараметрыФормы.Вставить("ИдентификаторКатегории", Форма.ИдентификаторОбъектаСервиса);
				ПараметрыФормы.Вставить("ВидНоменклатуры", Объект.Ссылка);
				
				ОткрытьФормуЗаполненияВидаНоменклатуры(Форма, ПараметрыФормы);
				
			КонецЕсли;
			
		ИначеЕсли Форма.РаботаСНоменклатурой_ТипОбъекта = "Номенклатура" Тогда // Номенклатура
			
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("ИдентификаторНоменклатуры", Форма.ИдентификаторОбъектаСервиса);
			ПараметрыФормы.Вставить("НоменклатураНаименование",  Форма.ПредставлениеОбъектаСервиса);
			ПараметрыФормы.Вставить("НоменклатураБазы",          Объект.Ссылка);
			ПараметрыФормы.Вставить("ДанныеИнтерактивногоЗаполнения", ДополнительныеПараметры.ДанныеИнтерактивногоЗаполнения);
			
			ОткрытьФормуЗаполненияНоменклатуры(Форма, ПараметрыФормы);

		КонецЕсли;
				
	ИначеЕсли РезультатВыбора.Значение = "АвтоматическоеОбновление" Тогда
		
		Если Форма.РаботаСНоменклатурой_ТипОбъекта = "ВидНоменклатуры" Тогда
			ПоказатьВопросПриВключенииАвтообновленияВидаНоменклатуры(Форма.Объект.Ссылка, Форма.ИдентификаторОбъектаСервиса, Форма);
		ИначеЕсли Форма.РаботаСНоменклатурой_ТипОбъекта = "Номенклатура" Тогда	
			ПоказатьВопросПриВключенииАвтообновленияНоменклатуры(Форма.Объект.Ссылка, Форма.ИдентификаторОбъектаСервиса, Форма);
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры

Процедура ОбработкаВопросЗаписиОбъекта(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	////////////////////////////////////////////////////////////////////////////////
	
	Форма = ДополнительныеПараметры.Форма;
	
	Форма.Записать();
	
	Если Форма.Модифицированность Тогда
		Возврат;
	КонецЕсли;
	
	Форма.РазблокироватьДанныеФормыДляРедактирования();
	
	ПараметрыФормы = Новый Структура;
	
	ПараметрыФормы.Вставить("НаименованиеКатегории", Форма.ПредставлениеОбъектаСервиса);
	ПараметрыФормы.Вставить("ИдентификаторКатегории", Форма.ИдентификаторОбъектаСервиса);
	ПараметрыФормы.Вставить("ВидНоменклатуры", Форма.Объект.Ссылка);
	
	ОткрытьФормуЗаполненияВидаНоменклатуры(Форма, ПараметрыФормы);
	
КонецПроцедуры

Процедура ОбработкаОповещенияЗакрытиеФормыЗаполнения(ПараметрыЗакрытияФормы, Форма) Экспорт
	
	Форма.Прочитать();
	
	Если ПараметрыЗакрытияФормы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	////////////////////////////////////////////////////////////////////////////////
	
	Форма.ОбновляетсяАвтоматически = ПараметрыЗакрытияФормы.АвтоматическийРежимОбновления;
	
	Если Форма.РаботаСНоменклатурой_РежимПредставленияОбъектаСервиса = "ПолеВвода" Тогда
		Если ПараметрыЗакрытияФормы.АвтоматическийРежимОбновления Тогда
			Форма.Элементы.РежимОбновления.Картинка = БиблиотекаКартинок.АвтоматическоеОбновлениеРаботаСНоменклатурой;
		Иначе
			Форма.Элементы.РежимОбновления.Картинка = БиблиотекаКартинок.РучноеОбновлениеРаботаСНоменклатурой;	
		КонецЕсли;	
	Иначе
		РаботаСНоменклатуройСлужебныйКлиентСервер.НастроитьВидимостьГиперссылок(Форма);	
	КонецЕсли;
		
КонецПроцедуры

Процедура ИзменениеТекстаРедактированияОбъектаСервисаЗавершение(Знач Результат, ДополнительныеПараметры) Экспорт
	
	Форма = ДополнительныеПараметры.Форма;
	Если Форма.РаботаСНоменклатурой_ИдентификаторЗаданияДлительнойОперации <> ДополнительныеПараметры.ИдентификаторЗадания Тогда 
		Возврат;
	КонецЕсли;
	
	Форма.РаботаСНоменклатурой_ИдентификаторЗаданияДлительнойОперации = Неопределено;
	
	ИмяЭлемента = ДополнительныеПараметры.ИмяЭлемента;
	Форма.Элементы.РаботаСНоменклатуройДекорацияДлительнойОперации.Картинка = БиблиотекаКартинок.Пустая;
	
	Если Результат = Неопределено Тогда // отменено пользователем.
		Возврат;
	ИначеЕсли ЭтоАдресВременногоХранилища(Результат.АдресРезультата) Тогда 
		КоличествоНайденныхКарточек = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		Если КоличествоНайденныхКарточек = Неопределено Тогда 
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если КоличествоНайденныхКарточек > 0 Тогда
		Если Форма.РаботаСНоменклатурой_РежимПредставленияОбъектаСервиса = "ПолеВвода" Тогда
			Форма.Элементы[ИмяЭлемента].ПодсказкаВвода 
				= ТекстКоличествоНайденныхЭлементов(ИмяЭлемента, КоличествоНайденныхКарточек, Форма.РаботаСНоменклатурой_РежимПредставленияОбъектаСервиса);
		Иначе
			Форма.ПредставлениеОбъектаСервиса 
				= ТекстКоличествоНайденныхЭлементов(ИмяЭлемента, КоличествоНайденныхКарточек, Форма.РаботаСНоменклатурой_РежимПредставленияОбъектаСервиса);
		КонецЕсли;		
	Иначе					
		Если Форма.РаботаСНоменклатурой_РежимПредставленияОбъектаСервиса = "Гиперссылка" Тогда
			Форма.ПредставлениеОбъектаСервиса = СтроковыеФункцииКлиентСервер.
				ФорматированнаяСтрока(НСтр("ru = '<b>Похожих карточек не найдено.  </b><a href = ""Ссылка"">Выбрать</a>'"));
		Иначе
			РаботаСНоменклатуройСлужебныйКлиентСервер.СброситьДанныеОбъектаСервиса(Форма,
				Форма.Элементы[ИмяЭлемента],
				РаботаСНоменклатуройСлужебныйКлиентСервер.ПредставлениеПустойНоменклатуры());	
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область КонтекстныйПоискНоменклатуры

Функция ТекстКоличествоНайденныхЭлементов(ИмяЭлемента, КоличествоНайденныхКарточек, Назначение)
	
	Если Назначение = "ПолеВвода" Тогда
		Если КоличествоНайденныхКарточек >= 500 Тогда 
			Возврат НСтр("ru = 'Обнаружено подходящих карточек: 500+'");
		Иначе
			Возврат СтрШаблон(НСтр("ru = 'Обнаружено подходящих карточек: %1'"), КоличествоНайденныхКарточек);
		КонецЕсли;
	Иначе
		Если КоличествоНайденныхКарточек >= 50 Тогда 
			Возврат СтроковыеФункцииКлиентСервер.
				ФорматированнаяСтрока(НСтр("ru = '<b>Найдено более 50 карточек. </b><a href = ""Ссылка"">Выбрать</a>'"));
		Иначе
			Возврат СтроковыеФункцииКлиентСервер.
				ФорматированнаяСтрока(СтрШаблон(НСтр("ru = '<b>Найдено %1 похожих карточек.  </b><a href = ""Ссылка"">Выбрать</a>'"), 
				КоличествоНайденныхКарточек));
		КонецЕсли;
	КонецЕсли;
		
КонецФункции

Функция СформироватьСтрокуПоискаПоПолямФормы(Форма)
	
	СтрокаПоиска = "";
	СписокПолей = Форма.РаботаСНоменклатурой_СписокПолейДляПодбораНоменклатуры.ВыгрузитьЗначения();
	////////////////////////////////////////////////////////////////////////////////
	
	СписокПодстрок = Новый Массив;
	
	Для каждого ЭлементКоллекции Из СписокПолей Цикл
		СписокПодстрок.Добавить(Форма.Элементы[ЭлементКоллекции].ТекстРедактирования);
	КонецЦикла;
	
	СтрокаПоиска = СтрСоединить(СписокПодстрок, " ");
	
	Возврат СокрЛП(СтрокаПоиска);
	
КонецФункции

// Формирование строки поиска номенклатуры.
//
// Параметры:
//  Форма	 - УправляемаяФорма - форма события.
//  Элемент	 - ПолеФормы - изменяемый элемент формы.
//
Процедура СобратьСтрокуПоискаИОбъектаСервиса(Форма, Элемент)
	
	Если Не Форма.РаботаСНоменклатурой_СервисДоступен Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПустаяСтрока(Форма.ИдентификаторОбъектаСервиса) Тогда 
		Возврат;
	КонецЕсли;
	
	Если Форма.РаботаСНоменклатурой_РежимПредставленияОбъектаСервиса = "Гиперссылка" Тогда
		Форма.ПредставлениеОбъектаСервиса = СтроковыеФункцииКлиентСервер.
			ФорматированнаяСтрока(НСтр("ru = '<b>Идет поиск... </b><a href = ""Ссылка"">Выбрать</a>'"));
	КонецЕсли;
	
	Форма.СтрокаПоискаОбъектаСервиса = СформироватьСтрокуПоискаПоПолямФормы(Форма);
	
	Если Не ЗначениеЗаполнено(Форма.СтрокаПоискаОбъектаСервиса) Тогда
		РаботаСНоменклатуройСлужебныйКлиентСервер.СброситьДанныеОбъектаСервиса(Форма,
			Форма.Элементы.ПредставлениеНоменклатурыСервиса,
			РаботаСНоменклатуройСлужебныйКлиентСервер.ПредставлениеПустойНоменклатуры());	
		Возврат;
	КонецЕсли;
	
	СписокПолей = Форма.РаботаСНоменклатурой_СписокПолейДляПодбораНоменклатуры.ВыгрузитьЗначения();
	СписокПолей.Добавить("ПредставлениеНоменклатурыСервиса");
	
	Если Не СписокПолей.Найти(Элемент.Имя) = Неопределено Тогда 
		ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.ПолучитьКоличествоКарточекНоменклатурыПоСтрокеПоискаВФоне(
			Форма.СтрокаПоискаОбъектаСервиса, Форма.УникальныйИдентификатор, Форма.РаботаСНоменклатурой_ИдентификаторЗаданияДлительнойОперации);
	Иначе
		Возврат;
	КонецЕсли;
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	Если Не ДлительнаяОперация = Неопределено
		И ДлительнаяОперация.Статус = "Выполняется" Тогда
		Форма.Элементы.РаботаСНоменклатуройДекорацияДлительнойОперации.Картинка = БиблиотекаКартинок.СинхронизацияДанныхДлительнаяОперация;
	КонецЕсли;
	
	Форма.РаботаСНоменклатурой_ИдентификаторЗаданияДлительнойОперации = ДлительнаяОперация.ИдентификаторЗадания;
	
	ПараметрыЗавершения = Новый Структура();
	ПараметрыЗавершения.Вставить("ИмяЭлемента",          "ПредставлениеНоменклатурыСервиса");
	ПараметрыЗавершения.Вставить("Форма",                Форма);
	ПараметрыЗавершения.Вставить("ИдентификаторЗадания", Форма.РаботаСНоменклатурой_ИдентификаторЗаданияДлительнойОперации);
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения(
		"ИзменениеТекстаРедактированияОбъектаСервисаЗавершение", 
		ЭтотОбъект, ПараметрыЗавершения);   
	
	ПараметрыЗавершенияДлительнойОперации = Новый Структура();
	ПараметрыЗавершенияДлительнойОперации.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	ПараметрыЗавершенияДлительнойОперации.Вставить("ВыводитьОшибки", Ложь);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершенияДлительнойОперации);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСКатегориями

Процедура ПолучитьКатегорииНаПутиКЭлементу(ОповещениеОЗавершении, Идентификатор, Форма, ИдентификаторЗадания = Неопределено, ДекорацияДлительногоОжидания = Неопределено) Экспорт 
	
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.ПолучитьКатегорииНаПутиКЭлементуВФоне(Идентификатор, Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ДекорацияДлительногоОжидания = Неопределено;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	Если Не ДекорацияДлительногоОжидания = Неопределено
		И Не ДлительнаяОперация = Неопределено
		И ДлительнаяОперация.Статус = "Выполняется" Тогда
		ДекорацияДлительногоОжидания.Картинка = БиблиотекаКартинок.СинхронизацияДанныхДлительнаяОперация;
	КонецЕсли;
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);

	
КонецПроцедуры
	
Процедура ПолучитьКатегорииНаПутиКЭлементуСКорневымиКатегориями(ОповещениеОЗавершении, Идентификатор, Форма, ИдентификаторЗадания = Неопределено, ДекорацияДлительногоОжидания = Неопределено) Экспорт 
	
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.ПолучитьКатегорииНаПутиКЭлементуСКорневымиКатегориямиВФоне(Идентификатор, Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ДекорацияДлительногоОжидания = Неопределено;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	Если Не ДекорацияДлительногоОжидания = Неопределено
		И Не ДлительнаяОперация = Неопределено
		И ДлительнаяОперация.Статус = "Выполняется" Тогда
		ДекорацияДлительногоОжидания.Картинка = БиблиотекаКартинок.СинхронизацияДанныхДлительнаяОперация;
	КонецЕсли;
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);

	
КонецПроцедуры

Процедура НайтиКатегорииПоСтрокеПоиска(ОповещениеОЗавершении, ТекстПоиска, Форма, ИдентификаторЗадания = Неопределено, ДекорацияДлительногоОжидания = Неопределено) Экспорт 
	
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.НайтиКатегорииПоСтрокеПоискаВФоне(ТекстПоиска, Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ДекорацияДлительногоОжидания = Неопределено;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	Если Не ДекорацияДлительногоОжидания = Неопределено
		И Не ДлительнаяОперация = Неопределено
		И ДлительнаяОперация.Статус = "Выполняется" Тогда
		ДекорацияДлительногоОжидания.Картинка = БиблиотекаКартинок.СинхронизацияДанныхДлительнаяОперация;
	КонецЕсли;
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);
		
КонецПроцедуры
	
Процедура ПолучитьКорневыеКатегории(ОповещениеОЗавершении, Форма, ИдентификаторЗадания = Неопределено, ДекорацияДлительногоОжидания = Неопределено) Экспорт 
	
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.ПолучитьКорневыеКатегорииВФоне(Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	Если Не ДекорацияДлительногоОжидания = Неопределено
		И Не ДлительнаяОперация = Неопределено
		И ДлительнаяОперация.Статус = "Выполняется" Тогда
		ДекорацияДлительногоОжидания.Картинка = БиблиотекаКартинок.СинхронизацияДанныхДлительнаяОперация;
	КонецЕсли;
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);
КонецПроцедуры

Процедура ПолучитьСокращенноеОписаниеДочернихКатегорий(ОповещениеОЗавершении, Идентификатор, Форма, ИдентификаторЗадания = Неопределено, ДекорацияДлительногоОжидания = Неопределено) Экспорт 
	
	НаборПолей = 2;
	
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.ПолучитьДочерниеКатегорииВФоне(Идентификатор, НаборПолей, Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	Если Не ДекорацияДлительногоОжидания = Неопределено
		И Не ДлительнаяОперация = Неопределено
		И ДлительнаяОперация.Статус = "Выполняется" Тогда
		ДекорацияДлительногоОжидания.Картинка = БиблиотекаКартинок.СинхронизацияДанныхДлительнаяОперация;
	КонецЕсли;
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);
		
КонецПроцедуры

Процедура ПолучитьПолноеОписаниеДочернихКатегорий(ОповещениеОЗавершении, Идентификатор, Форма, ИдентификаторЗадания = Неопределено, ДекорацияДлительногоОжидания = Неопределено) Экспорт 
	
	НаборПолей = 3;
	
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.ПолучитьДочерниеКатегорииВФоне(Идентификатор, НаборПолей, Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ДекорацияДлительногоОжидания = Неопределено;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	Если Не ДекорацияДлительногоОжидания = Неопределено
		И Не ДлительнаяОперация = Неопределено
		И ДлительнаяОперация.Статус = "Выполняется" Тогда
		ДекорацияДлительногоОжидания.Картинка = БиблиотекаКартинок.СинхронизацияДанныхДлительнаяОперация;
	КонецЕсли;
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);
		
КонецПроцедуры

Процедура ПолучитьПредставлениеКатегорииПоИдентификатору(ОповещениеОЗавершении, Идентификатор, Форма, ИдентификаторЗадания = Неопределено, ДекорацияДлительногоОжидания = Неопределено) Экспорт
	
	НаборПолей = 1;

	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.ПолучитьКатегориюПоИдентификаторуВФоне(Идентификатор, НаборПолей, Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ДекорацияДлительногоОжидания = Неопределено;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	Если Не ДекорацияДлительногоОжидания = Неопределено
		И Не ДлительнаяОперация = Неопределено
		И ДлительнаяОперация.Статус = "Выполняется" Тогда
		ДекорацияДлительногоОжидания.Картинка = БиблиотекаКартинок.СинхронизацияДанныхДлительнаяОперация;
	КонецЕсли;
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);
		
КонецПроцедуры

Процедура ПолучитьОписаниеКатегорииПоИдентификатору(ОповещениеОЗавершении, Идентификатор, Форма, ИдентификаторЗадания = Неопределено, ДекорацияДлительногоОжидания = Неопределено) Экспорт
	
	НаборПолей = 2;

	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.ПолучитьКатегориюПоИдентификаторуВФоне(Идентификатор, НаборПолей, Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ДекорацияДлительногоОжидания = Неопределено;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	Если Не ДекорацияДлительногоОжидания = Неопределено
		И Не ДлительнаяОперация = Неопределено
		И ДлительнаяОперация.Статус = "Выполняется" Тогда
		ДекорацияДлительногоОжидания.Картинка = БиблиотекаКартинок.СинхронизацияДанныхДлительнаяОперация;
	КонецЕсли;
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);
		
КонецПроцедуры

Процедура ПолучитьПолноеОписаниеКатегорииПоИдентификатору(ОповещениеОЗавершении, Идентификатор, Форма, ИдентификаторЗадания = Неопределено, ДекорацияДлительногоОжидания = Неопределено) Экспорт
	
	НаборПолей = 3;

	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.ПолучитьКатегориюПоИдентификаторуВФоне(Идентификатор, НаборПолей, Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ДекорацияДлительногоОжидания = Неопределено;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	Если Не ДекорацияДлительногоОжидания = Неопределено
		И Не ДлительнаяОперация = Неопределено
		И ДлительнаяОперация.Статус = "Выполняется" Тогда
		ДекорацияДлительногоОжидания.Картинка = БиблиотекаКартинок.СинхронизацияДанныхДлительнаяОперация;
	КонецЕсли;
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);
		
КонецПроцедуры

Процедура ПолучитьДополнительныеРеквизитыКатегорий(ОповещениеОЗавершении, Идентификатор, Форма, ИдентификаторЗадания = Неопределено, ДекорацияДлительногоОжидания = Неопределено) Экспорт
	
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.ПолучитьДополнительныеРеквизитыКатегорийВФоне(Идентификатор, Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ДекорацияДлительногоОжидания = Неопределено;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	Если Не ДекорацияДлительногоОжидания = Неопределено
		И Не ДлительнаяОперация = Неопределено
		И ДлительнаяОперация.Статус = "Выполняется" Тогда
		ДекорацияДлительногоОжидания.Картинка = БиблиотекаКартинок.СинхронизацияДанныхДлительнаяОперация;
	КонецЕсли;
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);
		
КонецПроцедуры

Процедура ПолучитьФильтрыКатегории(ОповещениеОЗавершении, Идентификатор, Форма, ИдентификаторЗадания = Неопределено, ДекорацияДлительногоОжидания = Неопределено) Экспорт
	
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.ПолучитьФильтрыКатегорииВФоне(Идентификатор, Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ДекорацияДлительногоОжидания = Неопределено;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	Если Не ДекорацияДлительногоОжидания = Неопределено
		И Не ДлительнаяОперация = Неопределено
		И ДлительнаяОперация.Статус = "Выполняется" Тогда
		ДекорацияДлительногоОжидания.Картинка = БиблиотекаКартинок.СинхронизацияДанныхДлительнаяОперация;
	КонецЕсли;
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);
		
КонецПроцедуры

Процедура ПолучитьЗначенияДополнительногоРеквизитаКатегории(ОповещениеОЗавершении, ПараметрыПоиска, Форма, ИдентификаторЗадания = Неопределено, ДекорацияДлительногоОжидания = Неопределено) Экспорт 
	
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.ПолучитьЗначенияДополнительногоРеквизитаКатегорииВФоне(ПараметрыПоиска, Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ДекорацияДлительногоОжидания = Неопределено;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	Если Не ДекорацияДлительногоОжидания = Неопределено
		И Не ДлительнаяОперация = Неопределено
		И ДлительнаяОперация.Статус = "Выполняется" Тогда
		ДекорацияДлительногоОжидания.Картинка = БиблиотекаКартинок.СинхронизацияДанныхДлительнаяОперация;
	КонецЕсли;
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);
		
КонецПроцедуры
	
Процедура ПолучитьПроизводителейКатегории(ОповещениеОЗавершении, ПараметрыПоиска, Форма, ИдентификаторЗадания = Неопределено, ДекорацияДлительногоОжидания = Неопределено) Экспорт 
	
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.ПолучитьПроизводителейКатегорииВФоне(ПараметрыПоиска, Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ДекорацияДлительногоОжидания = Неопределено;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	Если Не ДекорацияДлительногоОжидания = Неопределено
		И Не ДлительнаяОперация = Неопределено
		И ДлительнаяОперация.Статус = "Выполняется" Тогда
		ДекорацияДлительногоОжидания.Картинка = БиблиотекаКартинок.СинхронизацияДанныхДлительнаяОперация;
	КонецЕсли;
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);
		
КонецПроцедуры

Процедура СформироватьПредставлениеКарточкиКатегории(ОповещениеОЗавершении, Идентификатор, Форма, ИдентификаторЗадания = Неопределено, ДекорацияДлительногоОжидания = Неопределено) Экспорт 
	
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.СформироватьПредставлениеКарточкиКатегорииВФоне(Идентификатор, Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ДекорацияДлительногоОжидания = Неопределено;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	Если Не ДекорацияДлительногоОжидания = Неопределено
		И Не ДлительнаяОперация = Неопределено
		И ДлительнаяОперация.Статус = "Выполняется" Тогда
		ДекорацияДлительногоОжидания.Картинка = БиблиотекаКартинок.ДлительнаяОперация48;
	КонецЕсли;
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);
		
КонецПроцедуры

Процедура ЗагрузитьКатегории(ОповещениеОЗавершении, КатегорииКЗагрузке, Форма, ИдентификаторЗадания = Неопределено, ДекорацияДлительногоОжидания = Неопределено) Экспорт 
	
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.ЗагрузитьКатегорииВФоне(КатегорииКЗагрузке, Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ДекорацияДлительногоОжидания = Неопределено;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	Если Не ДекорацияДлительногоОжидания = Неопределено
		И Не ДлительнаяОперация = Неопределено
		И ДлительнаяОперация.Статус = "Выполняется" Тогда
		ДекорацияДлительногоОжидания.Картинка = БиблиотекаКартинок.ДлительнаяОперация48;
	КонецЕсли;
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);
		
КонецПроцедуры

Процедура ПолучитьДанныеКатегорийСервиса(ОповещениеОЗавершении, ИдентификаторыКатегорий, Форма, ИдентификаторЗадания = Неопределено, ДекорацияДлительногоОжидания = Неопределено) Экспорт
	
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.ПолучитьДанныеКатегорийСервиса(ИдентификаторыКатегорий, Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ДекорацияДлительногоОжидания = Неопределено;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	Если Не ДекорацияДлительногоОжидания = Неопределено
		И Не ДлительнаяОперация = Неопределено
		И ДлительнаяОперация.Статус = "Выполняется" Тогда
		ДекорацияДлительногоОжидания.Картинка = БиблиотекаКартинок.СинхронизацияДанныхДлительнаяОперация;
	КонецЕсли;
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);
		
КонецПроцедуры

// Получить значения дополнительного реквизита, в соответствии с представлением значений базы.
//
// Параметры:
//  ОповещениеОЗавершении		 - ОписаниеОповещения - оповещение для обработки результата.
//  ПараметрыЗапроса - Структура - параметры метода.
//   Ключи:
//    * ИдентификаторКатегории                - Строка - идентификатор категории.
//    * ИдентификаторДополнительногоРеквизита - Строка - идентификатор реквизита.
//    * ИдентификаторКатегории                - Массив (Строка) - строковое представление значений базы.
//  Форма						 - УправляемаяФорма - форма.
//  ИдентификаторЗадания		 - УникальныйИдентификатор - идентификатор задания.
//  ДекорацияДлительногоОжидания - ДекорацияФормы - декорация формы.
//
Процедура ПолучитьЗначенияСоответствующиеЗаданным(ОповещениеОЗавершении, ПараметрыЗапроса, 
		Форма, ИдентификаторЗадания = Неопределено, ДекорацияДлительногоОжидания = Неопределено) Экспорт
	
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.ПолучитьЗначенияСоответствующиеЗаданнымВФоне(ПараметрыЗапроса, Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ДекорацияДлительногоОжидания = Неопределено;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	Если Не ДекорацияДлительногоОжидания = Неопределено
		И Не ДлительнаяОперация = Неопределено
		И ДлительнаяОперация.Статус = "Выполняется" Тогда
		ДекорацияДлительногоОжидания.Картинка = БиблиотекаКартинок.СинхронизацияДанныхДлительнаяОперация;
	КонецЕсли;
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
	ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
	ДлительнаяОперацияЗавершение,
	ПараметрыОжидания);
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСНоменклатурой

#Область СозданиеНоменклатуры

Процедура СоздатьНоменклатуруСУсловиями(ОповещениеОЗавершении, ПараметрыПроцедуры, Форма, ИдентификаторЗадания = Неопределено, ДекорацияДлительногоОжидания = Неопределено) Экспорт
	
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.СоздатьНоменклатуруСУсловиямиВФоне(ПараметрыПроцедуры, Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ДекорацияДлительногоОжидания = Неопределено;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	Если Не ДекорацияДлительногоОжидания = Неопределено
		И Не ДлительнаяОперация = Неопределено
		И ДлительнаяОперация.Статус = "Выполняется" Тогда
		ДекорацияДлительногоОжидания.Картинка = БиблиотекаКартинок.СинхронизацияДанныхДлительнаяОперация;
	КонецЕсли;
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ИдентификаторыНоменклатуры", ПараметрыПроцедуры.ИдентификаторыНоменклатуры);
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении",      ОповещениеОЗавершении);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("СоздатьНоменклатуруЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);
			
	
КонецПроцедуры

Процедура СоздатьНоменклатуру(ОповещениеОЗавершении, ИдентификаторыНоменклатуры, Форма, ИдентификаторЗадания = Неопределено, ДекорацияДлительногоОжидания = Неопределено) Экспорт
	
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.СоздатьНоменклатуруВФоне(ИдентификаторыНоменклатуры, Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ДекорацияДлительногоОжидания = Неопределено;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	Если Не ДекорацияДлительногоОжидания = Неопределено
		И Не ДлительнаяОперация = Неопределено
		И ДлительнаяОперация.Статус = "Выполняется" Тогда
		ДекорацияДлительногоОжидания.Картинка = БиблиотекаКартинок.СинхронизацияДанныхДлительнаяОперация;
	КонецЕсли;
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ИдентификаторыНоменклатуры", ИдентификаторыНоменклатуры);
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении",      ОповещениеОЗавершении);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("СоздатьНоменклатуруЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);
			
	
КонецПроцедуры

Процедура СоздатьНоменклатуруЗавершение(Знач Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда // отменено пользователем.
		Возврат;
	ИначеЕсли ЭтоАдресВременногоХранилища(Результат.АдресРезультата) Тогда 
		РезультатВыполнения = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(РезультатВыполнения)
		И РезультатВыполнения.Свойство("ЕстьОшибки")
		И РезультатВыполнения.ЕстьОшибки Тогда 
			
		КартинкаОповещения = БиблиотекаКартинок.Ошибка32;
		ТекстОповещения = НСтр("ru = 'Создать не удалось'");
		ПоказатьОповещениеПользователя(НСтр("ru = 'Создание номенклатуры'"),,
			ТекстОповещения, КартинкаОповещения,
			СтатусОповещенияПользователя.Информация);
			
		СоздатьНоменклатуруОбработкаОшибки(РезультатВыполнения.ОписаниеОшибки);
			
	ИначеЕсли  ЗначениеЗаполнено(РезультатВыполнения)
		И РезультатВыполнения.Свойство("СозданиеИнтерактивно") Тогда 
		
		ПараметрыЗавершения = Новый Структура;
		ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ДополнительныеПараметры.ОповещениеОЗавершении);
		
		СоздатьНоменклатуруИнтерактивноЗавершение = Новый ОписаниеОповещения("СоздатьНоменклатуруИнтерактивноЗавершение",
			ЭтотОбъект, ПараметрыЗавершения);
		
		РаботаСНоменклатуройКлиентПереопределяемый.СоздатьНоменклатуруИнтерактивно(
			СоздатьНоменклатуруИнтерактивноЗавершение,
			РезультатВыполнения.АдресДанныхЗаполнения);
		
	Иначе
		
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеОЗавершении, Результат);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СоздатьНоменклатуруИнтерактивноЗавершение(Знач НоменклатураСсылка, ДополнительныеПараметры) Экспорт
	
	ДополнительныеПараметры.Свойство("НоменклатураСсылка", НоменклатураСсылка);
	
	Если НЕ ЗначениеЗаполнено(НоменклатураСсылка) Тогда 
		Возврат;
	КонецЕсли;
	
	Результат = Новый Структура();
	Результат.Вставить("ДолжноБытьСоздано", 1);
	Результат.Вставить("НовыеЭлементы", ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(НоменклатураСсылка));
	Результат.Вставить("НоменклатураДляАнализа", Неопределено); 
	Результат.Вставить("Создано", ?(ЗначениеЗаполнено(НоменклатураСсылка), 1, 0));

	ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеОЗавершении,
		Новый Структура("АдресРезультата", ПоместитьВоВременноеХранилище(Результат)));
	
КонецПроцедуры

Процедура СоздатьНоменклатуруОбработкаОшибки(ОписаниеОшибки) 
	
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("Ошибка", ОписаниеОшибки);
	
	ОткрытьФорму("Обработка.РаботаСНоменклатурой.Форма.ОшибкаПокупкиНоменклатуры", ПараметрыОткрытияФормы);
	
КонецПроцедуры

Процедура ОбработкаРезультатаСозданияНоменклатуры(Результат, РезультатСоздания, ПризнакОшибки, ПроставитьПризнакЗагрузки, Форма) Экспорт
	
	Если ЭтоАдресВременногоХранилища(Результат.АдресРезультата) Тогда 
		РезультатСоздания = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		Если РезультатСоздания = Неопределено Тогда 
			ПризнакОшибки = Истина;
		КонецЕсли;
	Иначе
		ПризнакОшибки = Истина;
	КонецЕсли;
	
	Если ПризнакОшибки Тогда 
		
		НажатиеОповещенияПользователя = "";
		КартинкаОповещения = БиблиотекаКартинок.Ошибка32;
		ТекстОповещения = НСтр("ru = 'Создать не удалось'");
		
	ИначеЕсли РезультатСоздания.Создано <> РезультатСоздания.ДолжноБытьСоздано Тогда 
		
		НажатиеОповещенияПользователя = Новый ОписаниеОповещения("НажатиеОповещенияПользователя",
			Форма, РезультатСоздания.НовыеЭлементы);
		КартинкаОповещения = БиблиотекаКартинок.Предупреждение32;
		
		ТекстОповещения = СтрШаблон(НСтр("ru = 'Создано элементов %1 из %2'"),
			РезультатСоздания.Создано, РезультатСоздания.ДолжноБытьСоздано);
		
		ПроставитьПризнакЗагрузки = Истина;
		
	Иначе
		
		НажатиеОповещенияПользователя = Новый ОписаниеОповещения("НажатиеОповещенияПользователя",
			Форма, РезультатСоздания.НовыеЭлементы);
			
		КартинкаОповещения = БиблиотекаКартинок.Успешно32;
			
		ТекстОповещения = СтрШаблон(НСтр("ru = 'Создано элементов %1'"), РезультатСоздания.Создано);
		
		ПроставитьПризнакЗагрузки = Истина;
		
	КонецЕсли;
	
	ПоказатьОповещениеПользователя(НСтр("ru = 'Создание номенклатуры'"),
		НажатиеОповещенияПользователя, ТекстОповещения, КартинкаОповещения,
		СтатусОповещенияПользователя.Информация, Форма.УникальныйИдентификатор);
		
КонецПроцедуры

Процедура КупитьКарточкиНоменклатуры(ОповещениеОЗавершении, ИдентификаторыНоменклатуры, Форма, ИдентификаторЗадания = Неопределено, ДекорацияДлительногоОжидания = Неопределено) Экспорт 
	
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.КупитьКарточкиНоменклатурыВФоне(ИдентификаторыНоменклатуры, Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ДекорацияДлительногоОжидания = Неопределено;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	Если Не ДекорацияДлительногоОжидания = Неопределено
		И Не ДлительнаяОперация = Неопределено
		И ДлительнаяОперация.Статус = "Выполняется" Тогда
		ДекорацияДлительногоОжидания.Картинка = БиблиотекаКартинок.СинхронизацияДанныхДлительнаяОперация;
	КонецЕсли;
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);
		
КонецПроцедуры

#КонецОбласти

#Область ПолучениеДанныхПоНоменклатуре

Процедура ПолучитьПереченьНоменклатуры(ОповещениеОЗавершении, ПараметрыПоиска, Форма, ИдентификаторЗадания = Неопределено, ДекорацияДлительногоОжидания = Неопределено) Экспорт 
	
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.ПолучитьПереченьНоменклатурыВФоне(ПараметрыПоиска, Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ДекорацияДлительногоОжидания = Неопределено;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	Если Не ДекорацияДлительногоОжидания = Неопределено
		И Не ДлительнаяОперация = Неопределено
		И ДлительнаяОперация.Статус = "Выполняется" Тогда
		ДекорацияДлительногоОжидания.Картинка = БиблиотекаКартинок.СинхронизацияДанныхДлительнаяОперация;
	КонецЕсли;
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);
		
	КонецПроцедуры
	
Процедура СформироватьПредставленияКарточекНоменклатуры(ОповещениеОЗавершении, ИдентификаторыНоменклатуры, Форма, ИдентификаторЗадания = Неопределено, ДекорацияДлительногоОжидания = Неопределено) Экспорт 
	
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.СформироватьПредставленияКарточекНоменклатурыВФоне(ИдентификаторыНоменклатуры, Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ДекорацияДлительногоОжидания = Неопределено;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	Если ДекорацияДлительногоОжидания <> Неопределено
		И ДлительнаяОперация <> Неопределено
		И ДлительнаяОперация.Статус = "Выполняется" Тогда
		
		ДекорацияДлительногоОжидания.Картинка = БиблиотекаКартинок.ДлительнаяОперация48;
	КонецЕсли;
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);
		
КонецПроцедуры
	
Процедура ПолучитьДанныеНоменклатурыСервиса(ОповещениеОЗавершении, ИдентификаторыНоменклатуры, Форма, ИдентификаторЗадания = Неопределено, ДекорацияДлительногоОжидания = Неопределено) Экспорт
	
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.ПолучитьДанныеНоменклатурыСервиса(ИдентификаторыНоменклатуры, Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ДекорацияДлительногоОжидания = Неопределено;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	Если Не ДекорацияДлительногоОжидания = Неопределено
		И Не ДлительнаяОперация = Неопределено
		И ДлительнаяОперация.Статус = "Выполняется" Тогда
		ДекорацияДлительногоОжидания.Картинка = БиблиотекаКартинок.СинхронизацияДанныхДлительнаяОперация;
	КонецЕсли;
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);
		
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область РаботаСРекламнымиЗаписями

Процедура ЗакэшироватьИзображенияБаннеров(ОповещениеОЗавершении, ИдентификаторыИсточников, Форма, ИдентификаторЗадания = Неопределено) Экспорт 
	
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.ЗакэшироватьИзображенияБаннеровФоне(ИдентификаторыИсточников, Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);

	
КонецПроцедуры

#КонецОбласти

#Область СостояниеСервиса

Процедура ПроверитьСостояниеСервисаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда // отменено пользователем.
		Состояние =  РаботаСНоменклатуройСлужебныйКлиентСервер.ОписаниеСостоянияСервиса();
	Иначе
		Состояние = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Состояние) Тогда
		Состояние = РаботаСНоменклатуройСлужебныйКлиентСервер.ОписаниеСостоянияСервиса();
	КонецЕсли;
	
	ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеОЗавершении, Состояние);
	
КонецПроцедуры

Процедура ПроверитьСостояниеСервиса(ОповещениеОЗавершении, Форма, ИдентификаторЗадания = Неопределено) Экспорт
	
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.ПроверитьСостояниеСервисаВФоне(
		Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ПроверитьСостояниеСервисаЗавершение = Новый ОписаниеОповещения("ПроверитьСостояниеСервисаЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ПроверитьСостояниеСервисаЗавершение);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);
		
КонецПроцедуры

Процедура ПодключитьТестовыйПериодЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = ПредопределенноеЗначение("Перечисление.СостоянияПодключенияСервисов.Подключен") Тогда
		Результат = Истина;
	ИначеЕсли Результат = ПредопределенноеЗначение("Перечисление.СостоянияПодключенияСервисов.Подключение") Тогда 
		Результат = Неопределено;
	Иначе
		Результат = Ложь;
	КонецЕсли;
		
	Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура")
		И ДополнительныеПараметры.Свойство("ОбработчикЗавершения") 
		И ДополнительныеПараметры.ОбработчикЗавершения <> Неопределено Тогда
		
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОбработчикЗавершения, Результат);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПодключитьТестовыйПериод(
		Владелец,
		ДополнительныеПараметрыОбработчика,
		ОбработчикПриЗакрытииФормы = Неопределено) Экспорт
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Владелец",                    Владелец);
	ДополнительныеПараметры.Вставить("ОбработчикПриЗакрытииФормы",  ОбработчикПриЗакрытииФормы);
	ДополнительныеПараметры.Вставить("ОбработчикЗавершения",        ДополнительныеПараметрыОбработчика.ОбработчикЗавершения);
	
	ОповещениеПриЗавершенииПодключения = Новый ОписаниеОповещения(
		"ПодключитьТестовыйПериодЗавершение",
		ЭтотОбъект,
		ДополнительныеПараметры);
	
	ПодключениеСервисовСопровожденияКлиент.ПодключитьТестовыйПериод(
		РаботаСНоменклатуройСлужебныйКлиентСервер.ИдентификаторСервиса(),
		Владелец,
		ОповещениеПриЗавершенииПодключения);
	
КонецПроцедуры

#КонецОбласти

#Область ВспомогательныеМетоды

Процедура ДлительнаяОперацияЗавершение(Результат, ДополнительныеПараметры) Экспорт 
	
	Отказ = Ложь;
	ТекстСообщения = "";
	ВыводитьОшибки = Истина;
	
	Если ДополнительныеПараметры.Свойство("ВыводитьОшибки") Тогда 
		ВыводитьОшибки = ДополнительныеПараметры.ВыводитьОшибки;
	КонецЕсли;
	
	Если Результат = Неопределено Тогда // Отменено пользователем.
		Отказ = Истина;
		ТекстСообщения = НСтр("ru = 'Фоновое задание отменено пользователем'");
		Возврат;
	КонецЕсли;
	
	Если Не Отказ И Результат.Статус = "Выполнено" Тогда
		
		Если ЗначениеЗаполнено(Результат.АдресРезультата)
			И ЭтоАдресВременногоХранилища(Результат.АдресРезультата) Тогда
			
			ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеОЗавершении, Результат);
			
		КонецЕсли;
		ИдентификаторЗадания = Неопределено;
		
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		Отказ = Истина;
		ТекстСообщения = Результат.КраткоеПредставлениеОшибки;
	КонецЕсли;
	
	Если Отказ Тогда
		Если Не ПустаяСтрока(ТекстСообщения) И ВыводитьОшибки Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 %2'"),
					ОбщегоНазначенияКлиент.ДатаСеанса(), ТекстСообщения));
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ДиалогПереключенияНаАвтообновление

Процедура ПоказатьВопросПриВключенииАвтообновленияНоменклатуры(Номенклатура, ИдентификаторНоменклатуры, Форма) Экспорт
	
	Оповещение = Новый ОписаниеОповещения("ПриОтветеНаВопросАвтоматическогоОбновления", 
		ЭтотОбъект, Новый Структура("ОбъектОбновления, Форма, Идентификатор", Номенклатура, Форма, ИдентификаторНоменклатуры));
	
	ТекстВопроса = 
		НСтр("ru = 'При включении автоматического режима обновления, произойдет заполнение текущей номенклатуры на основании данных сервиса. Объект будет записан. Продолжить?'");
	
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
КонецПроцедуры

Процедура ПоказатьВопросПриВключенииАвтообновленияВидаНоменклатуры(ВидНоменклатуры, ИдентификаторКатегории, Форма) Экспорт
	
	Оповещение = Новый ОписаниеОповещения("ПриОтветеНаВопросАвтоматическогоОбновления", 
		ЭтотОбъект, Новый Структура("ОбъектОбновления, Форма, Идентификатор", ВидНоменклатуры, Форма, ИдентификаторКатегории));
	
	ТекстВопроса = 
		НСтр("ru = 'При включении автоматического режима обновления, произойдет заполнение текущего вида номенклатуры на основании данных сервиса. Объект будет записан. Продолжить?'");
	
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

Процедура ПриОтветеНаВопросАвтоматическогоОбновления(Ответ, ДополнительныеПараметры) Экспорт 
	
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	СлужебныеФормы = Новый Массив;
	
	СлужебныеФормы.Добавить("Обработка.РаботаСНоменклатурой.Форма.ЗаполнениеНоменклатуры");
	СлужебныеФормы.Добавить("Обработка.РаботаСНоменклатурой.Форма.ЗаполнениеВидаНоменклатуры");
	
	Форма = ДополнительныеПараметры.Форма;
	
	Если СлужебныеФормы.Найти(Форма.ИмяФормы) = Неопределено Тогда
		ФормаОбъекта = Форма;
	Иначе
		ФормаОбъекта = Форма.ВладелецФормы;
	КонецЕсли;
	
	Если ФормаОбъекта.Модифицированность Тогда
		ФормаОбъекта.РаботаСНоменклатурой_ИгнорироватьПроверкуЗаполнения = Истина;
		Если НЕ ФормаОбъекта.Записать() Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ФормаОбъекта.РазблокироватьДанныеФормыДляРедактирования();
	
	ОбъектОбновления = Неопределено;
	
	Если ДополнительныеПараметры.Свойство("ОбъектОбновления")
		И ЗначениеЗаполнено(ДополнительныеПараметры.ОбъектОбновления) Тогда
		
		ОбъектОбновления = ДополнительныеПараметры.ОбъектОбновления;
	Иначе
		ОбъектОбновления = ФормаОбъекта.Объект.Ссылка;	
	КонецЕсли;
	
	РаботаСНоменклатуройСлужебныйВызовСервера.
		ОбновитьОбъектИнформационнойБазы(ОбъектОбновления, ДополнительныеПараметры.Идентификатор);

	Если СлужебныеФормы.Найти(Форма.ИмяФормы) = Неопределено Тогда
		Если Форма.РаботаСНоменклатурой_РежимПредставленияОбъектаСервиса = "ПолеВвода" Тогда
			Форма.Элементы.РежимОбновления.Картинка 
				= БиблиотекаКартинок.АвтоматическоеОбновлениеРаботаСНоменклатурой;
		Иначе
			РаботаСНоменклатуройСлужебныйКлиентСервер.НастроитьВидимостьГиперссылок(Форма);
		КонецЕсли;		
		Форма.Прочитать();	
	Иначе 
		Форма.Закрыть(Новый Структура("АвтоматическийРежимОбновления", Истина));	
	КонецЕсли; 
	
КонецПроцедуры
	
#КонецОбласти

#Область ОбновлениеДанных

Процедура ПолучитьОбновленияВидовНоменклатуры(ОповещениеОЗавершении, ОбновляемыеОбъекты, Форма = Неопределено, ИдентификаторЗадания = Неопределено, ДекорацияДлительногоОжидания = Неопределено) Экспорт 
	
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.ПолучитьОбновленияВидовНоменклатурыВФоне(ОбновляемыеОбъекты, Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ДекорацияДлительногоОжидания = Неопределено;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	Если Не ДекорацияДлительногоОжидания = Неопределено
		И Не ДлительнаяОперация = Неопределено
		И ДлительнаяОперация.Статус = "Выполняется" Тогда
		ДекорацияДлительногоОжидания.Картинка = БиблиотекаКартинок.СинхронизацияДанныхДлительнаяОперация;
	КонецЕсли;
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);

	
КонецПроцедуры
	
Процедура ПолучитьОбновленияНоменклатуры(ОповещениеОЗавершении, ОбновляемыеОбъекты, Форма = Неопределено, ИдентификаторЗадания = Неопределено, ДекорацияДлительногоОжидания = Неопределено) Экспорт 
	
	ДлительнаяОперация = РаботаСНоменклатуройСлужебныйВызовСервера.ПолучитьОбновленияНоменклатурыВФоне(ОбновляемыеОбъекты, Форма.УникальныйИдентификатор, ИдентификаторЗадания);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = ДекорацияДлительногоОжидания = Неопределено;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	ОповещениеОЗавершении.ДополнительныеПараметры.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	Если Не ДекорацияДлительногоОжидания = Неопределено
		И Не ДлительнаяОперация = Неопределено
		И ДлительнаяОперация.Статус = "Выполняется" Тогда
		ДекорацияДлительногоОжидания.Картинка = БиблиотекаКартинок.СинхронизацияДанныхДлительнаяОперация;
	КонецЕсли;
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения("ДлительнаяОперацияЗавершение",
		ЭтотОбъект, ПараметрыЗавершения);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);

	
КонецПроцедуры
	
#КонецОбласти

#КонецОбласти
