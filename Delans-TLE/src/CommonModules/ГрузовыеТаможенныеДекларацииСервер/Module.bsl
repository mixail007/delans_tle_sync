////////////////////////////////////////////////////////////////////////////////
// Подсистема "Базовая функциональность".
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Страны ЕАЭС поддерживающие структурированный ввод.
// 
// Возвращаемое значение:
//  Соответствие - Список стран.
//
Функция ТаблицаСтранТаможенногоСоюза(ТолькоСЗаполненнойСсылкой = Истина, ВключаяРоссию = Истина) Экспорт
	
	// По состоянию на 01.01.2017г.:
	//
	// АРМЕНИЯ, код ISO 051
	// БЕЛАРУСЬ, код ISO 112
	// КАЗАХСТАН, код ISO 398
	// КИРГИЗИЯ, код ISO 417
	// РОССИЯ, код ISO 643
	
	СтраныТаможенногоСоюза = Новый ТаблицаЗначений;
	СтраныТаможенногоСоюза.Колонки.Добавить("Код", Новый ОписаниеТипов(Метаданные.Справочники.СтраныМира.СтандартныеРеквизиты.Код.Тип));
	СтраныТаможенногоСоюза.Колонки.Добавить("Наименование", Новый ОписаниеТипов(Метаданные.Справочники.СтраныМира.СтандартныеРеквизиты.Наименование.Тип));
	
	НоваяСтрока = СтраныТаможенногоСоюза.Добавить();
	НоваяСтрока.Наименование = "АРМЕНИЯ";
	НоваяСтрока.Код = "051";
	
	НоваяСтрока = СтраныТаможенногоСоюза.Добавить();
	НоваяСтрока.Наименование = "БЕЛАРУСЬ";
	НоваяСтрока.Код = "112";
	
	НоваяСтрока = СтраныТаможенногоСоюза.Добавить();
	НоваяСтрока.Наименование = "КАЗАХСТАН";
	НоваяСтрока.Код = "398";
	
	НоваяСтрока = СтраныТаможенногоСоюза.Добавить();
	НоваяСтрока.Наименование = "КИРГИЗИЯ";
	НоваяСтрока.Код = "417";
	
	Если ВключаяРоссию Тогда
		
		НоваяСтрока = СтраныТаможенногоСоюза.Добавить();
		НоваяСтрока.Наименование = "РОССИЯ";
		НоваяСтрока.Код = "643";
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СтраныТаможенногоСоюза", СтраныТаможенногоСоюза);
	Запрос.Текст = 
	"Выбрать 
	|	СтраныТаможенногоСоюза.Код КАК Код
	|	,СтраныТаможенногоСоюза.Наименование КАК Наименование
	|Поместить КодыСтранТаможенногоСоюза
	|Из &СтраныТаможенногоСоюза КАК СтраныТаможенногоСоюза
	|Индексировать по Код
	|
	|;Выбрать 
	|	КодыСтранТаможенногоСоюза.Код КАК Код
	|	,КодыСтранТаможенногоСоюза.Наименование КАК Наименование
	|	,ЕстьNULL(СтраныМира.Ссылка, Неопределено) КАК Ссылка
	|Из КодыСтранТаможенногоСоюза КАК КодыСтранТаможенногоСоюза
	|	Левое Соединение Справочник.СтраныМира КАК СтраныМира
	|		по КодыСтранТаможенногоСоюза.Код = СтраныМира.Код";
	
	Если ТолькоСЗаполненнойСсылкой Тогда
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Левое Соединение", "Соединение");
		
	КонецЕсли;
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ВыделитьДатуИзНомераГТД(КодГТД) Экспорт
	
	ПолученнаяДата = Дата(1, 1, 1);
	
	ПозицияПервогоРазделителя	= СтрНайти(КодГТД, "/");
	ДатаГТД						= Прав(КодГТД, СтрДлина(КодГТД) - ПозицияПервогоРазделителя);
	ПозицияВторогоРазделителя	= СтрНайти(ДатаГТД, "/");
	ДатаГТД						= Лев(ДатаГТД, ПозицияВторогоРазделителя - 1);
	
	Если СтрДлина(ДатаГТД) = 6 Тогда
		
		ДеньДаты	= Лев(ДатаГТД, 2);
		МесяцДаты	= Сред(ДатаГТД, 3, 2);
		ГодДаты		= Сред(ДатаГТД, 5, 2);
		
		Попытка
			
			ГодДаты			= ?(Число(ГодДаты) >= 30, "19" + ГодДаты, "20" + ГодДаты);
			ПолученнаяДата	= Дата(ГодДаты, МесяцДаты, ДеньДаты);
			
		Исключение
		КонецПопытки;
		
	КонецЕсли;
	
	Возврат ПолученнаяДата;
	
КонецФункции

Процедура ПодготовитьТаблицуЗапасовИзТаблицыФормы(ПараметрыПодбора, ТаблицаФормы) Экспорт
	
	ТаблицаЗапасы = Новый ТаблицаЗначений;
	
	ТаблицаЗапасы.Колонки.Добавить("ИдентификаторСтроки",	Новый ОписаниеТипов("Число"));
	ТаблицаЗапасы.Колонки.Добавить("Номенклатура", 			Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаЗапасы.Колонки.Добавить("Характеристика",		Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	ТаблицаЗапасы.Колонки.Добавить("Партия",				Новый ОписаниеТипов("СправочникСсылка.ПартииНоменклатуры"));
	
	Для каждого СтрокаТаблицыФормы Из ТаблицаФормы Цикл
		
		Если ПараметрыПодбора.Свойство("ПроверятьПометку")
			И НЕ СтрокаТаблицыФормы.Пометка Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		Если СтрокаТаблицыФормы.СтранаПроисхождения = Справочники.СтраныМира.Россия Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		Если ПараметрыПодбора.Свойство("КлючСвязи")
			И СтрокаТаблицыФормы.КлючСвязи <> ПараметрыПодбора.КлючСвязи Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		НоваяСтрока = ТаблицаЗапасы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицыФормы);
		
		НоваяСтрока.ИдентификаторСтроки = СтрокаТаблицыФормы.ПолучитьИдентификатор();
		
	КонецЦикла;
	
	ПараметрыПодбора.ТаблицаЗапасы = ТаблицаЗапасы;
	
КонецПроцедуры

Процедура ПодобратьНомераГТДПоПредыдущимПоступлениям(ПараметрыПодбора) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВременнаяТаблицаЗапасы",	ПараметрыПодбора.ТаблицаЗапасы);
	Запрос.УстановитьПараметр("Организация", 			УправлениеНебольшойФирмойСервер.ПолучитьОрганизацию(ПараметрыПодбора.Организация));
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаЗапасы.ИдентификаторСтроки КАК ИдентификаторСтроки
	|	,ТаблицаЗапасы.Номенклатура КАК Номенклатура
	|	,ТаблицаЗапасы.Характеристика КАК Характеристика
	|	,ТаблицаЗапасы.Партия КАК Партия
	|ПОМЕСТИТЬ ТаблицаЗапасы
	|ИЗ
	|	&ВременнаяТаблицаЗапасы КАК ТаблицаЗапасы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗапасыВРазрезеГТДОбороты.Регистратор.Контрагент КАК Контрагент
	|	,ТаблицаЗапасы.ИдентификаторСтроки
	|	,ТаблицаЗапасы.Номенклатура
	|	,ТаблицаЗапасы.Характеристика
	|	,ТаблицаЗапасы.Партия
	|	,ЗапасыВРазрезеГТДОбороты.СтранаПроисхождения
	|	,ЗапасыВРазрезеГТДОбороты.НомерГТД
	|	,ЗапасыВРазрезеГТДОбороты.НомерГТД.Код КАК КодГТД
	|	,ДАТАВРЕМЯ(1, 1, 1) КАК ДатаГТД
	|ИЗ
	|	ТаблицаЗапасы КАК ТаблицаЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗапасыВРазрезеГТД.Обороты(, , Запись, Организация = &Организация) КАК ЗапасыВРазрезеГТДОбороты
	|		ПО ТаблицаЗапасы.Номенклатура = ЗапасыВРазрезеГТДОбороты.Номенклатура
	|			И ТаблицаЗапасы.Характеристика = ЗапасыВРазрезеГТДОбороты.Характеристика
	|			И ТаблицаЗапасы.Партия = ЗапасыВРазрезеГТДОбороты.Партия
	|			И &УсловиеКонтрагента";
	
	Если ПараметрыПодбора.Свойство("Контрагент") Тогда 
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеКонтрагента", "(ЗапасыВРазрезеГТДОбороты.Регистратор.Контрагент = &Контрагент)");
		Запрос.УстановитьПараметр("Контрагент", ПараметрыПодбора.Контрагент);
		
	Иначе
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеКонтрагента", "Истина");
		
	КонецЕсли;
	
	ОборотыЗапасовВРазрезеГТД = Запрос.Выполнить().Выгрузить();
	Для каждого СтрокаТаблицы Из ОборотыЗапасовВРазрезеГТД Цикл
		
		СтрокаТаблицы.ДатаГТД = ВыделитьДатуИзНомераГТД(СтрокаТаблицы.КодГТД);
		
	КонецЦикла;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаЗапасы.Контрагент КАК Контрагент
	|	,ТаблицаЗапасы.ИдентификаторСтроки
	|	,ТаблицаЗапасы.Номенклатура
	|	,ТаблицаЗапасы.Характеристика
	|	,ТаблицаЗапасы.Партия
	|	,ТаблицаЗапасы.СтранаПроисхождения
	|	,ТаблицаЗапасы.НомерГТД
	|	,ТаблицаЗапасы.ДатаГТД КАК ДатаГТД
	|Поместить ТаблицаЗапасыСЗаполненнымиДатами
	|ИЗ
	|	&ОборотыЗапасовВРазрезеГТД КАК ТаблицаЗапасы;
	|
	|//:::::::::::::::::::::::::::::::::::::::::::::::::::::::
	|//::::::: Выделим ГТД с максимально свежей датой ::::::::
	|//:::::::::::::::::::::::::::::::::::::::::::::::::::::::
	|Выбрать 
	|	ТаблицаЗапасыСЗаполненнымиДатами.Контрагент
	|	,ТаблицаЗапасыСЗаполненнымиДатами.ИдентификаторСтроки
	|	,ТаблицаЗапасыСЗаполненнымиДатами.Номенклатура
	|	,ТаблицаЗапасыСЗаполненнымиДатами.Характеристика
	|	,ТаблицаЗапасыСЗаполненнымиДатами.Партия
	|	,ТаблицаЗапасыСЗаполненнымиДатами.СтранаПроисхождения
	|	,Максимум(ТаблицаЗапасыСЗаполненнымиДатами.НомерГТД)
	|	,Максимум(ТаблицаЗапасыСЗаполненнымиДатами.ДатаГТД)
	|Из ТаблицаЗапасыСЗаполненнымиДатами КАК ТаблицаЗапасыСЗаполненнымиДатами
	|
	|Сгруппировать по
	|	ТаблицаЗапасыСЗаполненнымиДатами.Контрагент
	|	,ТаблицаЗапасыСЗаполненнымиДатами.ИдентификаторСтроки
	|	,ТаблицаЗапасыСЗаполненнымиДатами.Номенклатура
	|	,ТаблицаЗапасыСЗаполненнымиДатами.Характеристика
	|	,ТаблицаЗапасыСЗаполненнымиДатами.Партия
	|	,ТаблицаЗапасыСЗаполненнымиДатами.СтранаПроисхождения";
	
	Запрос.УстановитьПараметр("ОборотыЗапасовВРазрезеГТД", ОборотыЗапасовВРазрезеГТД);
	ПараметрыПодбора.ТаблицаЗапасы = Запрос.Выполнить().Выгрузить();
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура СформироватьОстаткиНомеровГТД(ПараметрыПодбора) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ТаблицаЗапасы.Партия КАК Партия
	|ПОМЕСТИТЬ ТаблицаЗапасы
	|ИЗ
	|	&ТаблицаЗапасы КАК ТаблицаЗапасы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗапасыВРазрезеГТДОстатки.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ЗапасыВРазрезеГТДОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|	ТаблицаЗапасы.Номенклатура КАК Номенклатура,
	|	ТаблицаЗапасы.Характеристика КАК Характеристика,
	|	ТаблицаЗапасы.Партия КАК Партия,
	|	ЗапасыВРазрезеГТДОстатки.НомерГТД КАК НомерГТД,
	|	ЗапасыВРазрезеГТДОстатки.НомерГТД.Код КАК КодГТД,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаГТД
	|ПОМЕСТИТЬ ОстаткиБезУчетаТекущегоДокумента
	|ИЗ
	|	ТаблицаЗапасы КАК ТаблицаЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗапасыВРазрезеГТД.Остатки(, Организация = &Организация) КАК ЗапасыВРазрезеГТДОстатки
	|		ПО ТаблицаЗапасы.Номенклатура = ЗапасыВРазрезеГТДОстатки.Номенклатура
	|			И ТаблицаЗапасы.Характеристика = ЗапасыВРазрезеГТДОстатки.Характеристика
	|			И ТаблицаЗапасы.Партия = ЗапасыВРазрезеГТДОстатки.Партия
	|ГДЕ
	|	ЗапасыВРазрезеГТДОстатки.КоличествоОстаток > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТекущийДокумент.СтранаПроисхождения,
	|	ВЫБОР
	|		КОГДА ТекущийДокумент.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ТОГДА ЕСТЬNULL(ТекущийДокумент.Количество, 0)
	|		ИНАЧЕ -ЕСТЬNULL(ТекущийДокумент.Количество, 0)
	|	КОНЕЦ,
	|	ТекущийДокумент.Номенклатура,
	|	ТекущийДокумент.Характеристика,
	|	ТекущийДокумент.Партия,
	|	ТекущийДокумент.НомерГТД,
	|	ТекущийДокумент.НомерГТД.Код,
	|	ДАТАВРЕМЯ(1, 1, 1)
	|ИЗ
	|	РегистрНакопления.ЗапасыВРазрезеГТД КАК ТекущийДокумент
	|ГДЕ
	|	ТекущийДокумент.Регистратор = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиЗапасовПоРегиструГТД.СтранаПроисхождения,
	|	СУММА(ОстаткиЗапасовПоРегиструГТД.КоличествоОстаток) КАК КоличествоОстаток,
	|	ОстаткиЗапасовПоРегиструГТД.Номенклатура,
	|	ОстаткиЗапасовПоРегиструГТД.Характеристика,
	|	ОстаткиЗапасовПоРегиструГТД.Партия,
	|	ОстаткиЗапасовПоРегиструГТД.НомерГТД,
	|	ОстаткиЗапасовПоРегиструГТД.НомерГТД.Код КАК КодГТД,
	|	ОстаткиЗапасовПоРегиструГТД.ДатаГТД КАК ДатаГТД
	|ИЗ
	|	ОстаткиБезУчетаТекущегоДокумента КАК ОстаткиЗапасовПоРегиструГТД
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиЗапасовПоРегиструГТД.СтранаПроисхождения,
	|	ОстаткиЗапасовПоРегиструГТД.Номенклатура,
	|	ОстаткиЗапасовПоРегиструГТД.Характеристика,
	|	ОстаткиЗапасовПоРегиструГТД.Партия,
	|	ОстаткиЗапасовПоРегиструГТД.НомерГТД,
	|	ОстаткиЗапасовПоРегиструГТД.НомерГТД.Код,
	|	ОстаткиЗапасовПоРегиструГТД.ДатаГТД");
	
	Запрос.УстановитьПараметр("Период", ПараметрыПодбора.Дата);
	Запрос.УстановитьПараметр("Ссылка", ПараметрыПодбора.Ссылка);
	Запрос.УстановитьПараметр("ТаблицаЗапасы", ПараметрыПодбора.ТаблицаЗапасы);
	Запрос.УстановитьПараметр("Организация", УправлениеНебольшойФирмойСервер.ПолучитьОрганизацию(ПараметрыПодбора.Организация));
	ОстаткиПоГТД = Запрос.Выполнить().Выгрузить();
	
	Для каждого СтрокаТаблицы Из ОстаткиПоГТД Цикл
		
		СтрокаТаблицы.ДатаГТД = ВыделитьДатуИзНомераГТД(СтрокаТаблицы.КодГТД);
		
	КонецЦикла; 
	
	ОстаткиПоГТД.Сортировать("Номенклатура, Характеристика, Партия, ДатаГТД");
	
	ПараметрыПодбора.ОстаткиПоГТД = ОстаткиПоГТД;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура ПеренестиНомераГТДВТаблицуФормы(ТаблицаФормы, ПараметрыПодбора) Экспорт
	
	Для каждого СтрокаЗапасов Из ПараметрыПодбора.ТаблицаЗапасы Цикл
		
		СтрокаТаблицыФормы = ТаблицаФормы.НайтиПоИдентификатору(СтрокаЗапасов.ИдентификаторСтроки);
		
		СтрокаТаблицыФормы.СтранаПроисхождения = СтрокаЗапасов.СтранаПроисхождения;
		СтрокаТаблицыФормы.НомерГТД = СтрокаЗапасов.НомерГТД;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПеренестиОстаткиНомеровГТДВТаблицуФормы(ТаблицаФормы, ПараметрыПодбора) Экспорт
	
	Если ТаблицаФормы.Количество() < 1 Тогда
		
		ПараметрыПодбора.ИндексТекущейСтроки = -1;
		Возврат;
		
	КонецЕсли;
	
	ТаблицаЗапасы = ТаблицаФормы.Выгрузить();
	ТаблицаЗапасы.Очистить();
	
	КоличественныеПоля = Новый Массив;
	КоличественныеПоля.Добавить("Резерв");
	
	СтруктураОтбора = Новый Структура("Номенклатура, Характеристика, Партия");
	
	КлючСвязиАвтоматическихСкидок	= Неопределено;
	НовыйИндексТекущейСтроки		= -1;
	Для каждого СтрокаТЧ Из ТаблицаФормы Цикл
		
		Если ПараметрыПодбора.Свойство("ПроверятьПометку")
			И НЕ СтрокаТЧ.Пометка Тогда
			
			ЗаполнитьЗначенияСвойств(ТаблицаЗапасы.Добавить(), СтрокаТЧ);
			Продолжить;
			
		КонецЕсли;
		
		Если ПараметрыПодбора.Свойство("КлючСвязи")
			И НЕ СтрокаТЧ.КлючСвязи = ПараметрыПодбора.КлючСвязи Тогда
			
			ЗаполнитьЗначенияСвойств(ТаблицаЗапасы.Добавить(), СтрокаТЧ);
			Продолжить;
			
		КонецЕсли;
		
		Если ПараметрыПодбора.Свойство("ЕстьКлючСвязиАвтоматическихСкидок") Тогда
			
			КлючСвязиАвтоматическихСкидок = СтрокаТЧ.КлючСвязи;
			
		КонецЕсли;
		
		ЭтоТекущаяСтрока = (ТаблицаФормы.Индекс(СтрокаТЧ) = ПараметрыПодбора.ИндексТекущейСтроки);
		
		СтруктураИтогов = Новый Структура;
		Для каждого ИмяПоля Из ПараметрыПодбора.ИменаПолей Цикл
			
			СтруктураИтогов.Вставить(ИмяПоля, СтрокаТЧ[ИмяПоля]);
			
		КонецЦикла;
		
		СтруктураОтбора.Номенклатура	= СтрокаТЧ.Номенклатура;
		СтруктураОтбора.Характеристика	= СтрокаТЧ.Характеристика;
		СтруктураОтбора.Партия			= СтрокаТЧ.Партия;
		
		МассивСтрокГТД		= ПараметрыПодбора.ОстаткиПоГТД.НайтиСтроки(СтруктураОтбора);
		КоличествоОстаток	= СтрокаТЧ.Количество;
		
		КоэффициентПользовательскойЕдиницыИзмерения = 1;
		Если СтрокаТЧ.Свойство("ЕдиницаИзмерения")
			И ТипЗнч(СтрокаТЧ.ЕдиницаИзмерения) = Тип("СправочникСсылка.ЕдиницыИзмерения") Тогда
			
			КоэффициентПользовательскойЕдиницыИзмерения = СтрокаТЧ.ЕдиницаИзмерения.Коэффициент;
			
		КонецЕсли;
		
		Для каждого СтрокаМассива Из МассивСтрокГТД Цикл
			
			НоваяСтрока = ТаблицаЗапасы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЧ);
			
			Если ПараметрыПодбора.Свойство("ЕстьКлючСвязиАвтоматическихСкидок") Тогда
				
				НоваяСтрока.КлючСвязи = КлючСвязиАвтоматическихСкидок;
				Если КлючСвязиАвтоматическихСкидок <> Неопределено Тогда
					
					КлючСвязиАвтоматическихСкидок = Неопределено;
					
				КонецЕсли;
				
			КонецЕсли;
			
			НоваяСтрока.НомерГТД			= СтрокаМассива.НомерГТД;
			НоваяСтрока.СтранаПроисхождения	= СтрокаМассива.СтранаПроисхождения;
			
			Если (КоличествоОстаток * КоэффициентПользовательскойЕдиницыИзмерения) <= СтрокаМассива.КоличествоОстаток Тогда
				
				НоваяСтрока.Количество			= КоличествоОстаток;
				СтрокаМассива.КоличествоОстаток	= СтрокаМассива.КоличествоОстаток - (КоличествоОстаток * КоэффициентПользовательскойЕдиницыИзмерения);
				КоличествоОстаток				= 0;
				
				Если СтрокаМассива.КоличествоОстаток = 0 Тогда
					
					ПараметрыПодбора.ОстаткиПоГТД.Удалить(СтрокаМассива);
					
				КонецЕсли;
				
				Для каждого ИмяПоля Из ПараметрыПодбора.ИменаПолей Цикл
					
					НоваяСтрока[ИмяПоля] = СтруктураИтогов[ИмяПоля]
					
				КонецЦикла;
				
				Прервать;
				
			Иначе
				
				КоличествоСУчетомКоэффициента = ОКР(СтрокаМассива.КоличествоОстаток / КоэффициентПользовательскойЕдиницыИзмерения, 3);
				
				НоваяСтрока.Количество	= КоличествоСУчетомКоэффициента;
				
				Если ПараметрыПодбора.ИменаПолей.Количество() > 0 Тогда
					
					МножительПоКоэффициенту = (КоличествоСУчетомКоэффициента/СтрокаТЧ.Количество);
					Для каждого ИмяПоля Из ПараметрыПодбора.ИменаПолей Цикл
						
						Если КоличественныеПоля.Найти(ИмяПоля) = Неопределено Тогда
							
							НоваяСтрока[ИмяПоля] = Окр(НоваяСтрока[ИмяПоля] * МножительПоКоэффициенту, 3);
							
						Иначе
							
							НоваяСтрока[ИмяПоля] = МИН(НоваяСтрока.Количество, НоваяСтрока[ИмяПоля]);
							
						КонецЕсли;
						
						СтруктураИтогов[ИмяПоля] = СтруктураИтогов[ИмяПоля] - НоваяСтрока[ИмяПоля];
						
					КонецЦикла;
					
				КонецЕсли;
				
				КоличествоОстаток		= КоличествоОстаток - КоличествоСУчетомКоэффициента;
				ПараметрыПодбора.ОстаткиПоГТД.Удалить(СтрокаМассива);
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если КоличествоОстаток > 0 Тогда
		
			НоваяСтрока				= ТаблицаЗапасы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЧ);
			
			НоваяСтрока.Количество			= КоличествоОстаток;
			НоваяСтрока.НомерГТД			= Справочники.НомераГТД.ПустаяСсылка();
			НоваяСтрока.СтранаПроисхождения = СтрокаТЧ.СтранаПроисхождения;
			
			Для каждого ИмяПоля Из ПараметрыПодбора.ИменаПолей Цикл
				
				НоваяСтрока[ИмяПоля] = СтруктураИтогов[ИмяПоля];
				
			КонецЦикла;
			
		КонецЕсли;
		
		Если ЭтоТекущаяСтрока Тогда
			
			НовыйИндексТекущейСтроки = ТаблицаЗапасы.Индекс(НоваяСтрока);
			ЭтоТекущаяСтрока = Ложь;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ТаблицаФормы.Загрузить(ТаблицаЗапасы);
	
	Если НовыйИндексТекущейСтроки <> -1 Тогда
		
		ПараметрыПодбора.ИндексТекущейСтроки = НовыйИндексТекущейСтроки;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОчиститьНомераГТДИСтраныПроисхождения(ТаблицаФормы, КлючСвязи = -1, ПроверятьПометку = Истина) Экспорт
	
	Для каждого СтрокаТаблицы Из ТаблицаФормы Цикл
		
		Если ПроверятьПометку
			И НЕ СтрокаТаблицы.Пометка Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		Если КлючСвязи >= 0
			И СтрокаТаблицы.КлючСвязи <> КлючСвязи Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		Если СтрокаТаблицы.Свойство("СтранаПроисхождения") Тогда
			
			СтрокаТаблицы.СтранаПроисхождения = Неопределено;
			
		КонецЕсли;
		
		Если СтрокаТаблицы.Свойство("НомерГТД") Тогда
			
			СтрокаТаблицы.НомерГТД = Неопределено;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСписокДействий(Действия, ЭтоДокументРасхода = Истина, ИмяТЧ = "") Экспорт
	
	Если ПолучитьФункциональнуюОпцию("УчетГТД") Тогда
		
		Если ЭтоДокументРасхода Тогда
			
			Действия.Добавить(Перечисления.ДействияГрупповогоИзмененияСтрок.ЗаполнитьПоФактическимОстаткамНомераГТД);
			
		КонецЕсли;
		
		Действия.Добавить(Перечисления.ДействияГрупповогоИзмененияСтрок.ПодобратьНомераГТД);
		Действия.Добавить(Перечисления.ДействияГрупповогоИзмененияСтрок.ОчиститьНомераГТДИСтраныПроисхождения);
		
	КонецЕсли;
	
КонецПроцедуры

Функция НеобходимоОтразитьСчетФактуройЗапасыВРазрезеГТД(СчетФактураСсылка) Экспорт
	
	НеобходимоОтразить = Константы.ФункциональнаяОпцияУчетГТД.Получить() И (НачалоДня(Константы.ДатаОбновленияНаРелиз_1_6_6.Получить()) < СчетФактураСсылка.Дата);
	Если ТипЗнч(СчетФактураСсылка) = Тип("ДокументСсылка.СчетФактураПолученный") Тогда
		
		Запрос = Новый Запрос("Выбрать Первые 1 ЗапасыГТД.Регистратор Из РегистрНакопления.ЗапасыВРазрезеГТД КАК ЗапасыГТД Где ЗапасыГТД.Регистратор = &Ссылка");
		Запрос.УстановитьПараметр("Ссылка", СчетФактураСсылка.ДокументОснование);
		РезультатЗапроса = Запрос.Выполнить();
		
		НеобходимоОтразить = НеобходимоОтразить И РезультатЗапроса.Пустой();
		
	ИначеЕсли ТипЗнч(СчетФактураСсылка) = Тип("ДокументСсылка.СчетФактура") Тогда
		
		Запрос = Новый Запрос("Выбрать Первые 1 ЗапасыГТД.Регистратор Из РегистрНакопления.ЗапасыВРазрезеГТД КАК ЗапасыГТД Где ЗапасыГТД.Регистратор В(&МассивСсылок)");
		Запрос.УстановитьПараметр("МассивСсылок", СчетФактураСсылка.ДокументыОснования.Выгрузить(,"ДокументОснование"));
		РезультатЗапроса = Запрос.Выполнить();
		
		НеобходимоОтразить = НеобходимоОтразить И РезультатЗапроса.Пустой();
		
	КонецЕсли;
	
	Возврат НеобходимоОтразить;
	
КонецФункции

Функция МожноВключитьКонтролироватьОстаткиПоНомерамГТД() Экспорт
	
	Запрос			= Новый Запрос;
	Запрос.Текст	= "Выбрать Первые 1 СпрНомераГТД.НомерГТД Из РегистрНакопления.ЗапасыВРазрезеГТД.Остатки КАК СпрНомераГТД Где СпрНомераГТД.КоличествоОстаток < 0";
	Выборка			= Запрос.Выполнить().Выбрать();
	
	Возврат НЕ Выборка.Следующий();
	
КонецФункции

Процедура ПриСозданииНаСервере(ЭтаФорма, ИменаТЧ, КэшЗначений) Экспорт
	
	Если ТипЗнч(КэшЗначений) <> Тип("Структура") Тогда
		
		КэшЗначений = Новый Структура;
		
	КонецЕсли;
	
	КэшЗначений.Вставить("УчетГТД", ПолучитьФункциональнуюОпцию("УчетГТД"));
	КэшЗначений.Вставить("Россия", Справочники.СтраныМира.Россия);
	
	Для каждого СтруктураПараметров Из ИменаТЧ Цикл
		
		ИмяПоляПроверки = СтруктураПараметров.ИмяПоляПроверки;
		ИмяПоляОформления = СтруктураПараметров.ИмяПоляОформления;
		
		//(1)
		ДоступенНомерГТД = ЭтаФорма.УсловноеОформление.Элементы.Добавить();
		ДоступенНомерГТД.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Ложь);
		
		ГруппаОтбора = ДоступенНомерГТД.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
		ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
		
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбора, ИмяПоляПроверки, ВидСравненияКомпоновкиДанных.Заполнено);
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбора, ИмяПоляПроверки, ВидСравненияКомпоновкиДанных.НеРавно, Справочники.СтраныМира.Россия);
		
		Если СтруктураПараметров.Свойство("ДополнительноеПолеПроверки") Тогда
			
			ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбора, СтруктураПараметров.ДополнительноеПолеПроверки, ВидСравненияКомпоновкиДанных.Равно, Ложь);
			
		КонецЕсли;
		
		КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ДоступенНомерГТД.Поля, ИмяПоляОформления);
		
		//(2)
		НедоступенНомерГТД = ЭтаФорма.УсловноеОформление.Элементы.Добавить();
		НедоступенНомерГТД.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
		
		ГруппаОтбора = НедоступенНомерГТД.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
		ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
		
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбора, ИмяПоляПроверки, ВидСравненияКомпоновкиДанных.НеЗаполнено);
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбора, ИмяПоляПроверки, ВидСравненияКомпоновкиДанных.Равно, Справочники.СтраныМира.Россия);
		
		Если СтруктураПараметров.Свойство("ДополнительноеПолеПроверки") Тогда
			
			ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбора, СтруктураПараметров.ДополнительноеПолеПроверки, ВидСравненияКомпоновкиДанных.Равно, Истина);
			
		КонецЕсли;
		
		КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(НедоступенНомерГТД.Поля, ИмяПоляОформления);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПриОбработкеПроверкиЗаполнения(Отказ, ОбъектПроверки, ИменаТабличныхЧастей = Неопределено) Экспорт
	Перем Ошибки;
	
	Если НЕ ПолучитьФункциональнуюОпцию("УчетГТД") Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Если ИменаТабличныхЧастей = Неопределено Тогда
		
		ИменаТабличныхЧастей = Новый Массив;
		ИменаТабличныхЧастей.Добавить("Запасы");
		
	КонецЕсли;
	
	СтраныЕАЭС = ТаблицаСтранТаможенногоСоюза().ВыгрузитьКолонку("Ссылка");
	
	Для каждого ИмяТЧ Из ИменаТабличныхЧастей Цикл
		
		Для каждого СтрокаТаблицыДокумента Из ОбъектПроверки[ИмяТЧ] Цикл
			
			СтранаПроисхожденияТребуетНомерГТД = (ЗначениеЗаполнено(СтрокаТаблицыДокумента.СтранаПроисхождения) И СтрокаТаблицыДокумента.СтранаПроисхождения <> Справочники.СтраныМира.Россия);
			
			Если ЗначениеЗаполнено(СтрокаТаблицыДокумента.НомерГТД)
				И НЕ СтранаПроисхожденияТребуетНомерГТД
				Тогда
				
				ТекстОшибки = СтрШаблон(НСтр("ru = 'В строке [%1] табличной части %2 не верно указана страна происхождения'"), СокрЛП(СтрокаТаблицыДокумента.НомерСтроки), ИмяТЧ);
				ПолеОшибки = "Объект." + ИмяТЧ + "[%1].СтранаПроисхождения";
				
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, ПолеОшибки, ТекстОшибки, "", ОбъектПроверки[ИмяТЧ].Индекс(СтрокаТаблицыДокумента));
				
			КонецЕсли;
			
			Если Константы.ТребоватьЗаполнениеГТДИмпортногоТовара.Получить() = Истина
				И НЕ ЗначениеЗаполнено(СтрокаТаблицыДокумента.НомерГТД)
				И СтранаПроисхожденияТребуетНомерГТД
				Тогда
				
				ТекстОшибки = СтрШаблон(НСтр("ru = 'В строке [%1] табличной части %2 не указан номер ГТД'"), СокрЛП(СтрокаТаблицыДокумента.НомерСтроки), ИмяТЧ);
				ПолеОшибки = "Объект." + ИмяТЧ + "[%1].НомерГТД";
				
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, ПолеОшибки, ТекстОшибки, "", ОбъектПроверки[ИмяТЧ].Индекс(СтрокаТаблицыДокумента));
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Если НЕ Ошибки = Неопределено Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти