
#Область СобытияФормВЕТИСКлиентПереопределяемый

Процедура ВыполнитьОперацииПриИзмененииРеквизитовФормы(Форма, ТекущаяСтрока, КэшированныеЗначения, ПараметрыЗаполнения) Экспорт
	
	Перем ПараметрыПересчетаКоличестваВЕТИС, ТекстОшибки;
	НужноОкруглять = Ложь;
	
	// ОбязательныеДействия
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ТекущаяСтрока, "Номенклатура") Тогда
		СтруктураРеквизитов = ИнтеграцияВЕТИСУНФВызовСервера.ПолучитьСтруктуруСлужебныхРеквизитовНоменклатуры(ТекущаяСтрока.Номенклатура);
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтруктураРеквизитов);
	КонецЕсли;
	// Конец ОбязательныеДействия
	
	Если ТипЗнч(ПараметрыЗаполнения) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыЗаполнения.Свойство("ЗаполнитьПродукциюВЕТИС") И ПараметрыЗаполнения.ЗаполнитьПродукциюВЕТИС Тогда
		
		СтруктураСтроки = ИнтеграцияВЕТИСУНФКлиентСервер.СформироватьСтруктуруПоСтроке(ТекущаяСтрока, "ЗаполнитьПродукциюВЕТИС");
		ИнтеграцияВЕТИСУНФВызовСервера.ЗаполнитьПродукциюВЕТИС(СтруктураСтроки, ПараметрыЗаполнения);
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтруктураСтроки);
		
	КонецЕсли;
	
	Если ПараметрыЗаполнения.Свойство("ПересчитатьКоличествоЕдиницПоВЕТИС", ПараметрыПересчетаКоличестваВЕТИС)
		И ((ТипЗнч(ПараметрыПересчетаКоличестваВЕТИС) = Тип("Булево") И ПараметрыПересчетаКоличестваВЕТИС)
		ИЛИ ТипЗнч(ПараметрыПересчетаКоличестваВЕТИС) = Тип("Структура")) Тогда
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ТекущаяСтрока, "ЕдиницаИзмеренияВЕТИС") Тогда
			ЕдиницаИзмеренияВЕТИС = ТекущаяСтрока.ЕдиницаИзмеренияВЕТИС;
		Иначе
			ЕдиницаИзмеренияВЕТИС = ПараметрыЗаполнения.ЕдиницаИзмеренияВЕТИС;
		КонецЕсли;
		
		// В ТЧ документов ВетИС реквизит с количеством ВетИС может называться по разному.
		Попытка
			Количество = ИнтеграцияВЕТИСУНФВызовСервера.ПересчитатьКоличествоЕдиниц(
												ТекущаяСтрока.КоличествоВЕТИС,
												ТекущаяСтрока.Номенклатура,
												ЕдиницаИзмеренияВЕТИС,
												НужноОкруглять,
												КэшированныеЗначения,
												ТекстОшибки
			);
		Исключение
			Количество = ИнтеграцияВЕТИСУНФВызовСервера.ПересчитатьКоличествоЕдиниц(
												ТекущаяСтрока.КоличествоИзменениеВЕТИС,
												ТекущаяСтрока.Номенклатура,
												ЕдиницаИзмеренияВЕТИС,
												НужноОкруглять,
												КэшированныеЗначения,
												ТекстОшибки
			);
		КонецПопытки;
		
		Если Количество <> Неопределено Тогда
			Попытка
				ТекущаяСтрока.Количество = Количество;
			Исключение
				ТекущаяСтрока.КоличествоИзменение = Количество;
			КонецПопытки;
		ИначеЕсли ТекстОшибки <> Неопределено Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки);
		КонецЕсли; 
	
	КонецЕсли;
	
	Если ПараметрыЗаполнения.Свойство("ПересчитатьКоличествоЕдиницВЕТИС") И ПараметрыЗаполнения.ПересчитатьКоличествоЕдиницВЕТИС Тогда
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ТекущаяСтрока, "ЕдиницаИзмеренияВЕТИС") Тогда
			ЕдиницаИзмеренияВЕТИС = ТекущаяСтрока.ЕдиницаИзмеренияВЕТИС;
		Иначе
			ЕдиницаИзмеренияВЕТИС = ПараметрыЗаполнения.ЕдиницаИзмеренияВЕТИС;
		КонецЕсли; 
		
		КоличествоВЕТИС = ИнтеграцияВЕТИСУНФВызовСервера.ПересчитатьКоличествоЕдиницВЕТИС(
											ТекущаяСтрока.Количество,
											ТекущаяСтрока.Номенклатура,
											ЕдиницаИзмеренияВЕТИС,
											НужноОкруглять,
											КэшированныеЗначения,
											ТекстОшибки);
		
		Если КоличествоВЕТИС <> Неопределено Тогда
			ТекущаяСтрока.КоличествоВЕТИС = КоличествоВЕТИС;
		ИначеЕсли ТекстОшибки <> Неопределено Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки);
		КонецЕсли;
	
	КонецЕсли;
	
	Если ПараметрыЗаполнения.Свойство("ПроверитьСериюРассчитатьСтатус")
		И ((ТипЗнч(ПараметрыЗаполнения.ПроверитьСериюРассчитатьСтатус) = Тип("Булево") И ПараметрыЗаполнения.ПроверитьСериюРассчитатьСтатус)
		ИЛИ ТипЗнч(ПараметрыЗаполнения.ПроверитьСериюРассчитатьСтатус) = Тип("Структура")) Тогда
		
		СтруктураСтроки = ИнтеграцияВЕТИСУНФКлиентСервер.СформироватьСтруктуруПоСтроке(ТекущаяСтрока, "ПроверитьСериюРассчитатьСтатус");
		ИнтеграцияВЕТИСУНФВызовСервера.ПроверитьСериюРассчитатьСтатус(ПараметрыЗаполнения, СтруктураСтроки);
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтруктураСтроки);
	
	КонецЕсли; 
	
	Если ПараметрыЗаполнения.Свойство("ПересчитатьКоличествоЕдиницВЕТИСПоЕдиницеИзмерения") И ПараметрыЗаполнения.ПересчитатьКоличествоЕдиницВЕТИСПоЕдиницеИзмерения Тогда
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ТекущаяСтрока, "ЕдиницаИзмеренияВЕТИС") Тогда
			ЕдиницаИзмеренияВЕТИС = ТекущаяСтрока.ЕдиницаИзмеренияВЕТИС;
		Иначе
			ЕдиницаИзмеренияВЕТИС = ПараметрыЗаполнения.ЕдиницаИзмеренияВЕТИС;
		КонецЕсли;
		
		КоличествоВЕТИС = ИнтеграцияВЕТИСУНФВызовСервера.ПересчитатьКоличествоЕдиницВЕТИС(
											ТекущаяСтрока.КоличествоВЕТИС,
											ТекущаяСтрока.Номенклатура,
											ЕдиницаИзмеренияВЕТИС,
											НужноОкруглять,
											КэшированныеЗначения,
											ТекстОшибки);
		
		Если КоличествоВЕТИС <> Неопределено Тогда
			ТекущаяСтрока.КоличествоВЕТИС = КоличествоВЕТИС;
		КонецЕсли;
	
	КонецЕсли;
	
	Если ПараметрыЗаполнения.Свойство("ИзменениеНоменклатуры") И ПараметрыЗаполнения.ИзменениеНоменклатуры Тогда
		
		Если ТекущаяСтрока.Свойство("Характеристика") Тогда
			ТекущаяСтрока.Характеристика = Неопределено;
		КонецЕсли;
		
		ИнтеграцияВЕТИСУНФКлиентСервер.УстановитьВидимостьКомандыГенерацииСерии(Форма);
		
	КонецЕсли;
	
	Если Форма <> Неопределено Тогда
		Форма.Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 

#Область УНФ

// Обработчик команды "Разбить строку".
//
//	Параметры:
//		ТЧ - ДанныеФормыКоллекция
//		ЭлементФормы - ТаблицаФормы
//		ОповещениеПослеРазбиения - ОписаниеОповещения
//		ПараметрыРазбиенияСтроки - см. ОбщегоНазначенияУТКлиент.ПараметрыРазбиенияСтроки.
//
Процедура РазбитьСтрокуТЧ(ТЧ, ЭлементФормы, ОповещениеПослеРазбиения = Неопределено, ПараметрыРазбиенияСтроки = Неопределено) Экспорт
	
	ТекущаяСтрока	= ЭлементФормы.ТекущиеДанные;
	ЧислоВведено = Истина;
	
	Если ТекущаяСтрока = Неопределено Тогда
		ТекстСообщения = НСтр("ru = 'Для выполнения команды требуется выбрать строку табличной части.'");
		ПоказатьПредупреждение(,ТекстСообщения);
		Если ОповещениеПослеРазбиения <> Неопределено Тогда
			ВыполнитьОбработкуОповещения(ОповещениеПослеРазбиения, Неопределено);
		КонецЕсли; 
		Возврат;
	ИначеЕсли ТекущаяСтрока[ПараметрыРазбиенияСтроки.ИмяПоляКоличество] = 0
		И Не ПараметрыРазбиенияСтроки.РазрешитьНулевоеКоличество Тогда
		ТекстСообщения = НСтр("ru = 'Невозможно разбить строку с нулевым количеством.'");
		ПоказатьПредупреждение(,ТекстСообщения);
		Если ОповещениеПослеРазбиения <> Неопределено Тогда
			ВыполнитьОбработкуОповещения(ОповещениеПослеРазбиения, Неопределено);
		КонецЕсли; 
		Возврат;
	КонецЕсли;
	
	Отказ = Ложь;
	
	Если Отказ Тогда
		Если ОповещениеПослеРазбиения <> Неопределено Тогда
			ВыполнитьОбработкуОповещения(ОповещениеПослеРазбиения, Неопределено);
		КонецЕсли; 
		Возврат;
	КонецЕсли;
	
	Если ТекущаяСтрока[ПараметрыРазбиенияСтроки.ИмяПоляКоличество] <> 0 Тогда
		
		Количество = ?(ТекущаяСтрока[ПараметрыРазбиенияСтроки.ИмяПоляКоличество] = 0, 0, Неопределено);
		
		Если Количество = Неопределено Тогда
			РазбитьСтрокуТЧВводЧисла(ТЧ, ЭлементФормы, ОповещениеПослеРазбиения, ПараметрыРазбиенияСтроки);
			Возврат;
			
		КонецЕсли;
	Иначе
		Количество = 0;
		
	КонецЕсли;
	
	РазбитьСтрокуТЧДобавлениеСтроки(ТЧ, ЭлементФормы, Количество, ОповещениеПослеРазбиения, ПараметрыРазбиенияСтроки);
	
КонецПроцедуры

Процедура РазбитьСтрокуТЧВводЧисла(ТЧ, ЭлементФормы, ОповещениеПослеРазбиения, ПараметрыОбработки)
	
	ТекущаяСтрока	= ЭлементФормы.ТекущиеДанные;
	
	Если ПараметрыОбработки.Количество = Неопределено Тогда
		Количество = ТекущаяСтрока[ПараметрыОбработки.ИмяПоляКоличество];
	Иначе
		Количество = ПараметрыОбработки.Количество;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ТЧ",                       ТЧ);
	ДополнительныеПараметры.Вставить("ЭлементФормы",             ЭлементФормы);
	ДополнительныеПараметры.Вставить("ОповещениеПослеРазбиения", ОповещениеПослеРазбиения);
	ДополнительныеПараметры.Вставить("ПараметрыОбработки",       ПараметрыОбработки);
	
	Оповещение = Новый ОписаниеОповещения(
		"РазбитьСтрокуТЧПослеВводаЧисла", 
		ЭтотОбъект,
		ДополнительныеПараметры);
	ПоказатьВводЧисла(Оповещение, Количество, ПараметрыОбработки.Заголовок, 15, 3);

КонецПроцедуры

Процедура РазбитьСтрокуТЧДобавлениеСтроки(ТЧ, ЭлементФормы, Количество, ОповещениеПослеРазбиения, ПараметрыОбработки)
	
	ТекущаяСтрока	= ЭлементФормы.ТекущиеДанные;
	
	ИндексТекущейСтроки 	 = ТЧ.Индекс(ТекущаяСтрока);
	НоваяСтрока 			 = ТЧ.Вставить(ИндексТекущейСтроки + 1);
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока);
	
	НоваяСтрока[ПараметрыОбработки.ИмяПоляКоличество]   = Количество;
	ТекущаяСтрока[ПараметрыОбработки.ИмяПоляКоличество] = ТекущаяСтрока[ПараметрыОбработки.ИмяПоляКоличество]
		- НоваяСтрока[ПараметрыОбработки.ИмяПоляКоличество];
	
	Если ОповещениеПослеРазбиения <> Неопределено Тогда
		ВыполнитьОбработкуОповещения(ОповещениеПослеРазбиения, НоваяСтрока);
	КонецЕсли; 
	
	ЭлементФормы.ТекущаяСтрока  = НоваяСтрока.ПолучитьИдентификатор();
	
КонецПроцедуры

// Служебная процедура.
//
Процедура РазбитьСтрокуТЧПослеВводаЧисла(Количество, ДополнительныеПараметры) Экспорт
	
	ТЧ                       = ДополнительныеПараметры.ТЧ;
	ЭлементФормы             = ДополнительныеПараметры.ЭлементФормы;
	ОповещениеПослеРазбиения = ДополнительныеПараметры.ОповещениеПослеРазбиения;
	ПараметрыОбработки       = ДополнительныеПараметры.ПараметрыОбработки;
	
	ТекущаяСтрока            = ЭлементФормы.ТекущиеДанные;
	
	ЧислоВведено = Количество <> Неопределено;
	
	Если Не ЧислоВведено Тогда
		Если ОповещениеПослеРазбиения <> Неопределено Тогда
			ВыполнитьОбработкуОповещения(ОповещениеПослеРазбиения, Неопределено);
		КонецЕсли;
		Возврат;
	ИначеЕсли Количество = 0
		И Не ПараметрыОбработки.РазрешитьНулевоеКоличество Тогда
		ТекстСообщения = НСтр("ru = 'Количество в новой строке не может быть равно нулю.'");
		Оповещение = Новый ОписаниеОповещения("РазбитьСтрокуТЧПослеПредупреждения", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьПредупреждение(Оповещение,ТекстСообщения);
		Возврат;
	ИначеЕсли ТекущаяСтрока[ПараметрыОбработки.ИмяПоляКоличество] >= 0
		И Количество < 0 Тогда
		ТекстСообщения = НСтр("ru = 'Количество в новой строке не может быть отрицательным.'");
		Оповещение = Новый ОписаниеОповещения("РазбитьСтрокуТЧПослеПредупреждения", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьПредупреждение(Оповещение,ТекстСообщения);
		Возврат;
	ИначеЕсли ТекущаяСтрока[ПараметрыОбработки.ИмяПоляКоличество] <= 0
		И Количество > 0 Тогда
		ТекстСообщения = НСтр("ru = 'Количество в новой строке не может быть положительным.'");
		Оповещение = Новый ОписаниеОповещения("РазбитьСтрокуТЧПослеПредупреждения", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьПредупреждение(Оповещение,ТекстСообщения);
		Возврат;
	ИначеЕсли ТекущаяСтрока[ПараметрыОбработки.ИмяПоляКоличество] >= 0
		И Количество >  ТекущаяСтрока[ПараметрыОбработки.ИмяПоляКоличество] Тогда
		ТекстСообщения = НСтр("ru = 'Количество в новой строке не может быть больше количества в текущей.'");
		Оповещение = Новый ОписаниеОповещения("РазбитьСтрокуТЧПослеПредупреждения", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьПредупреждение(Оповещение,ТекстСообщения);
		Возврат;
	ИначеЕсли ТекущаяСтрока[ПараметрыОбработки.ИмяПоляКоличество] <= 0
		И Количество <  ТекущаяСтрока[ПараметрыОбработки.ИмяПоляКоличество] Тогда
		ТекстСообщения = НСтр("ru = 'Количество в новой строке не может быть меньше количества в текущей.'");
		Оповещение = Новый ОписаниеОповещения("РазбитьСтрокуТЧПослеПредупреждения", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьПредупреждение(Оповещение,ТекстСообщения);
		Возврат;
	ИначеЕсли Количество =  ТекущаяСтрока[ПараметрыОбработки.ИмяПоляКоличество]
		И Не ПараметрыОбработки.РазрешитьНулевоеКоличество Тогда
		ТекстСообщения = НСтр("ru = 'Количество в новой строке должно отличаться от количества в текущей.'");
		Оповещение = Новый ОписаниеОповещения("РазбитьСтрокуТЧПослеПредупреждения", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьПредупреждение(Оповещение,ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	РазбитьСтрокуТЧДобавлениеСтроки(ТЧ, ЭлементФормы, Количество, ОповещениеПослеРазбиения, ПараметрыОбработки);
	
КонецПроцедуры

// Служебная процедура.
//
Процедура РазбитьСтрокуТЧПослеПредупреждения(ДополнительныеПараметры) Экспорт
	
	ТЧ                       = ДополнительныеПараметры.ТЧ;
	ЭлементФормы             = ДополнительныеПараметры.ЭлементФормы;
	ОповещениеПослеРазбиения = ДополнительныеПараметры.ОповещениеПослеРазбиения;
	ПараметрыОбработки       = ДополнительныеПараметры.ПараметрыОбработки;
	
	РазбитьСтрокуТЧВводЧисла(ТЧ, ЭлементФормы, ОповещениеПослеРазбиения, ПараметрыОбработки);
	
КонецПроцедуры

Процедура ЗаполнитьВыбранныеТовары(Форма, ИмяТабличнойЧасти, АдресЗапасовВХранилище) Экспорт
	
	ОтобранныеЗапасы = Новый Массив;
	ИнтеграцияВЕТИСУНФВызовСервера.ПолучитьЗапасыИзХранилища(ОтобранныеЗапасы, АдресЗапасовВХранилище, ИмяТабличнойЧасти);
	
	Для каждого СтрокаЗапасов Из ОтобранныеЗапасы Цикл
		НоваяСтрока = Форма.Объект[ИмяТабличнойЧасти].Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗапасов);
	КонецЦикла; 
	
КонецПроцедуры

Функция СгенерироватьШаблонНаименованияПартии(Объект) Экспорт
	
	Если Не Объект.АвтоматическиГенерироватьПартии Тогда
		Возврат "";
	КонецЕсли;
	
	ЧастиНаименования = Новый Массив;
	
	Если Объект.ИспользоватьСрокГодностиПартии Тогда
		ЧастиНаименования.Добавить(НСтр("ru = 'до 31.12.2019'"));
	КонецЕсли;
	
	Если Объект.ИспользоватьДатуПроизводстваПартии Тогда
		ЧастиНаименования.Добавить(НСтр("ru = 'от 01.02.2018'"));
	КонецЕсли;
	
	Если Объект.ИспользоватьЗаписьСкладскогоЖурналаВЕТИСПартии Тогда
		ЧастиНаименования.Добавить(НСтр("ru = '10208756'"));
	КонецЕсли;
	
	Если Объект.ИспользоватьПроизводителяВЕТИСПартии Тогда
		ЧастиНаименования.Добавить(ИнтеграцияВЕТИСУНФВызовСервера.НаименованиеОрганизацииПоУмолчанию());
	КонецЕсли;
	
	Если Объект.ИспользоватьИдентификаторПартииВЕТИСПартии Тогда
		ЧастиНаименования.Добавить(НСтр("ru = '2505181'"));
	КонецЕсли;
	
	Если ЧастиНаименования.Количество() = 0 Тогда
		ЧастиНаименования.Добавить(НСтр("ru = '""Сгенерирована автоматически""'"));
	КонецЕсли;
	
	Возврат СтрШаблон("%1: %2", "Пример наименования", СтрСоединить(ЧастиНаименования, " "));
	
КонецФункции

#КонецОбласти

