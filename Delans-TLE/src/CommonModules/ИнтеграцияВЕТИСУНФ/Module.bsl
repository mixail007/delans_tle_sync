#Область ОбработкаЗаполнения

Процедура ЗаполнитьТабличнуюЧастьДокумента(ТабличнаяЧасть, РезультатЗапроса, ДанныеЗаполнения, СоответствиеКолонокКоличествоВЕТИС, БезСопоставления = Истина) Экспорт
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Количество() = 0 Тогда
		
		ВызватьИсключение СтрШаблон(
			НСтр("ru='В %1 отсутствует продукция для заполнения.'"),
			ДанныеЗаполнения);
		
	КонецЕсли;
	
	Пока Выборка.Следующий() Цикл
		
		Если ЗначениеЗаполнено(Выборка.Продукция) ИЛИ БезСопоставления Тогда
			
			НоваяСтрока = ТабличнаяЧасть.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			ЕстьИдентификаторСтроки = ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(НоваяСтрока, "ИдентификаторСтроки");
			Если ЕстьИдентификаторСтроки Тогда
				НоваяСтрока.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);
			КонецЕсли;
			
		Иначе
			
			Если ИнтеграцияИСКлиентСервер.ЕстьРеквизитОбъекта(Выборка, "Номенклатура") Тогда
				
				ТабличнаяЧасть.Очистить();
				
				ТекстОшибки = НСтр("ru='Не выполнено сопоставление %Номенклатура% классификатору номенклатуры ВЕТИС.'");
				ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Номенклатура%", Выборка.Номенклатура);
				
				ВызватьИсключение ТекстОшибки;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Заполняет реквизит "Серия" в товарной табличной части.
//
// Параметры:
//	ТабличнаяЧасть		- ДанныеФормыКоллекция, ТабличнаяЧасть - Товарная табличная часть объекта.
//	ВыделенныеСтроки	- Массив	- Обрабатываемые строки таблицы.
//	ПараметрыЗаполнения	- Структура	- Состав полей определен в функции 
//										ИнтеграцияВЕТИСПереопределяемый.ПараметрыЗаполненияСерий.
//	СтруктураДействий	- Структура	- Структура с действиями, которые нужно произвести.
//
// Возвращаемое значение:
//	Структура - Структура со свойствами:
//		* ЗаполнениеЗавершено	- Булево, Истина		- Признак успешного выполнения генераций и заполнения серий.
//		* СписокОшибок			- Массив, Неопределено	- Список ошибок.
//
Функция ЗаполнитьСгенерироватьСерии(ТабличнаяЧастьТовары,
									ВыделенныеСтрокиТоваров,
									ПараметрыЗаполнения,
									ТабличнаяЧастьУточнения = Неопределено,
									СтруктураДействий = Неопределено) Экспорт
									
	ПараметрыУказанияСерий = ПараметрыЗаполнения.ПараметрыУказанияСерий;
	Склад = ПараметрыЗаполнения.Склад;
	
	Если СтруктураДействий = Неопределено Тогда
		СтруктураДействий = Новый Структура();
	КонецЕсли;
	
	ПроверитьСериюРассчитатьСтатус = Новый Структура("ПараметрыУказанияСерий, Склад", ПараметрыУказанияСерий, Склад);
	
	СтруктураДействий.Вставить("ПроверитьСериюРассчитатьСтатус", ПроверитьСериюРассчитатьСтатус);
	
	// Инициализация результирующей структуры.
	Результат = Новый Структура("ЗаполнениеЗавершено, СписокОшибок", Ложь, Неопределено);
	
	Запрос = Новый Запрос;
	
	Если ТабличнаяЧастьУточнения = Неопределено Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
		|	"""" КАК ИдентификаторСтроки,
		|	ТаблицаТовары.ИдентификаторПартии КАК ИдентификаторПартии,
		|	ТаблицаТовары.Номенклатура КАК Номенклатура,
		|	ТаблицаТовары.Характеристика КАК Характеристика,
		|	ТаблицаТовары.Серия КАК Серия,
		|	ТаблицаТовары.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
		|	ТаблицаТовары.СтатусУказанияСерий КАК СтатусУказанияСерий,
		|	ЛОЖЬ КАК ЕстьУточнения
		|ПОМЕСТИТЬ ВтТовары
		|ИЗ
		|	&ТаблицаТовары КАК ТаблицаТовары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	0 КАК НомерСтроки,
		|	"""" КАК ИдентификаторСтроки,
		|	"""" КАК ИдентификаторПартии,
		|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура,
		|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
		|	0 КАК СтатусУказанияСерий,
		|	ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка) КАК Серия
		|ПОМЕСТИТЬ ВтУточнения";
		
	Иначе
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
		|	ТаблицаТовары.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	ТаблицаТовары.ИдентификаторПартии КАК ИдентификаторПартии,
		|	ТаблицаТовары.Номенклатура КАК Номенклатура,
		|	ТаблицаТовары.Характеристика КАК Характеристика,
		|	ТаблицаТовары.Серия КАК Серия,
		|	ТаблицаТовары.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
		|	ТаблицаТовары.СтатусУказанияСерий КАК СтатусУказанияСерий,
		|	ТаблицаТовары.ЕстьУточнения КАК ЕстьУточнения
		|ПОМЕСТИТЬ ВтТовары
		|ИЗ
		|	&ТаблицаТовары КАК ТаблицаТовары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыУточнение.НомерСтроки КАК НомерСтроки,
		|	ТоварыУточнение.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	ТоварыУточнение.ИдентификаторПартии КАК ИдентификаторПартии,
		|	ТоварыУточнение.Номенклатура КАК Номенклатура,
		|	ТоварыУточнение.Характеристика КАК Характеристика,
		|	ТоварыУточнение.СтатусУказанияСерий КАК СтатусУказанияСерий,
		|	ТоварыУточнение.Серия КАК Серия
		|ПОМЕСТИТЬ ВтУточнения
		|ИЗ
		|	&ТоварыУточнение КАК ТоварыУточнение";
		
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстЗапроса = 	ТекстЗапроса +
	"ВЫБРАТЬ
	|	ВтТовары.НомерСтроки КАК НомерСтрокиТовары,
	|	ЕСТЬNULL(ВтУточнения.НомерСтроки, 0) КАК НомерСтрокиУточнения,
	|	ВЫБОР
	|		КОГДА ВтТовары.ЕстьУточнения
	|			ТОГДА ЕСТЬNULL(ВтУточнения.ИдентификаторПартии, """""""")
	|		ИНАЧЕ ВтТовары.ИдентификаторПартии
	|	КОНЕЦ КАК ИдентификаторПартии,
	|	ВЫБОР
	|		КОГДА ВтТовары.ЕстьУточнения
	|			ТОГДА ЕСТЬNULL(ВтУточнения.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|		ИНАЧЕ ВтТовары.Номенклатура
	|	КОНЕЦ КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ВтТовары.ЕстьУточнения
	|			ТОГДА ЕСТЬNULL(ВтУточнения.Характеристика, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	|		ИНАЧЕ ВтТовары.Характеристика
	|	КОНЕЦ КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ВтТовары.ЕстьУточнения
	|			ТОГДА ЕСТЬNULL(ВтУточнения.СтатусУказанияСерий, 0)
	|		ИНАЧЕ ВтТовары.СтатусУказанияСерий
	|	КОНЕЦ КАК СтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ВтТовары.ЕстьУточнения
	|			ТОГДА ЕСТЬNULL(ВтУточнения.Серия, ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка))
	|		ИНАЧЕ ВтТовары.Серия
	|	КОНЕЦ КАК Серия,
	|	ВтТовары.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
	|	ЕСТЬNULL(ЗаписиСкладскогоЖурналаВЕТИС.ДатаПроизводстваНачалоПериода, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаПроизводства,
	|	ЕСТЬNULL(ЗаписиСкладскогоЖурналаВЕТИС.СрокГодностиНачалоПериода, ДАТАВРЕМЯ(1, 1, 1)) КАК ГоденДо,
	|	ВтТовары.ЕстьУточнения
	|		И ВтУточнения.ИдентификаторСтроки ЕСТЬ NULL КАК ОшибкаНетУточнения,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаписиСкладскогоЖурналаВЕТИСПроизводители.Производитель) КАК КоличествоПроизводителей,
	|	ВтТовары.ЕстьУточнения КАК ЕстьУточнения,
	|	ЕСТЬNULL(СпрНоменклатура.ИспользоватьХарактеристики, ЛОЖЬ) КАК НастройкаВидаИспользоватьХарактеристики,
	|	ЕСТЬNULL(СпрНоменклатура.ИспользоватьЗаписьСкладскогоЖурналаВЕТИСПартии, ЛОЖЬ) КАК НастройкаВидаИспользоватьЗаписьСкладскогоЖурналаВЕТИССерии,
	|	ЕСТЬNULL(СпрНоменклатура.ИспользоватьДатуПроизводстваПартии, ЛОЖЬ) КАК НастройкаВидаИспользоватьДатуПроизводстваСерии,
	|	ЕСТЬNULL(СпрНоменклатура.ИспользоватьСрокГодностиПартии, ЛОЖЬ) КАК НастройкаВидаИспользоватьСрокГодностиСерии,
	|	ЕСТЬNULL(СпрНоменклатура.ИспользоватьИдентификаторПартииВЕТИСПартии, ЛОЖЬ) КАК НастройкаВидаИспользоватьИдентификаторПартииВЕТИССерии,
	|	ЕСТЬNULL(СпрНоменклатура.ИспользоватьПроизводителяВЕТИСПартии, ЛОЖЬ) КАК НастройкаВидаИспользоватьПроизводителяВЕТИССерии,
	|	ЕСТЬNULL(СпрНоменклатура.АвтоматическиГенерироватьПартии, ЛОЖЬ) КАК НастройкаВидаАвтоматическиГенерироватьСерии,
	|	СпрНоменклатура.Ссылка КАК ВладелецСерий
	|ПОМЕСТИТЬ ВТОбъединеннаяТаблицаТоваров
	|ИЗ
	|	ВтТовары КАК ВтТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтУточнения КАК ВтУточнения
	|		ПО ВтТовары.ИдентификаторСтроки = ВтУточнения.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЗаписиСкладскогоЖурналаВЕТИС.Производители КАК ЗаписиСкладскогоЖурналаВЕТИСПроизводители
	|		ПО ВтТовары.ЗаписьСкладскогоЖурнала = ЗаписиСкладскогоЖурналаВЕТИСПроизводители.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЗаписиСкладскогоЖурналаВЕТИС КАК ЗаписиСкладскогоЖурналаВЕТИС
	|		ПО ВтТовары.ЗаписьСкладскогоЖурнала = ЗаписиСкладскогоЖурналаВЕТИС.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО (ВЫБОР
	|				КОГДА ВтТовары.ЕстьУточнения
	|					ТОГДА ЕСТЬNULL(ВтУточнения.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|				ИНАЧЕ ВтТовары.Номенклатура
	|			КОНЕЦ = СпрНоменклатура.Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ВтТовары.ЕстьУточнения
	|			ТОГДА ЕСТЬNULL(ВтУточнения.Характеристика, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	|		ИНАЧЕ ВтТовары.Характеристика
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВтТовары.ЕстьУточнения
	|			ТОГДА ЕСТЬNULL(ВтУточнения.Серия, ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка))
	|		ИНАЧЕ ВтТовары.Серия
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВтТовары.ЕстьУточнения
	|			ТОГДА ЕСТЬNULL(ВтУточнения.ИдентификаторПартии, """""""")
	|		ИНАЧЕ ВтТовары.ИдентификаторПартии
	|	КОНЕЦ,
	|	ВтТовары.ЕстьУточнения,
	|	ВтТовары.НомерСтроки,
	|	ЕСТЬNULL(ВтУточнения.НомерСтроки, 0),
	|	ВтТовары.ЕстьУточнения
	|		И ВтУточнения.ИдентификаторСтроки ЕСТЬ NULL,
	|	ВтТовары.ЗаписьСкладскогоЖурнала,
	|	ВЫБОР
	|		КОГДА ВтТовары.ЕстьУточнения
	|			ТОГДА ЕСТЬNULL(ВтУточнения.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|		ИНАЧЕ ВтТовары.Номенклатура
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВтТовары.ЕстьУточнения
	|			ТОГДА ЕСТЬNULL(ВтУточнения.СтатусУказанияСерий, 0)
	|		ИНАЧЕ ВтТовары.СтатусУказанияСерий
	|	КОНЕЦ,
	|	ЕСТЬNULL(ЗаписиСкладскогоЖурналаВЕТИС.ДатаПроизводстваНачалоПериода, ДАТАВРЕМЯ(1, 1, 1)),
	|	ЕСТЬNULL(ЗаписиСкладскогоЖурналаВЕТИС.СрокГодностиНачалоПериода, ДАТАВРЕМЯ(1, 1, 1)),
	|	ЕСТЬNULL(СпрНоменклатура.ИспользоватьХарактеристики, ЛОЖЬ),
	|	ЕСТЬNULL(СпрНоменклатура.ИспользоватьЗаписьСкладскогоЖурналаВЕТИСПартии, ЛОЖЬ),
	|	ЕСТЬNULL(СпрНоменклатура.ИспользоватьДатуПроизводстваПартии, ЛОЖЬ),
	|	ЕСТЬNULL(СпрНоменклатура.ИспользоватьСрокГодностиПартии, ЛОЖЬ),
	|	ЕСТЬNULL(СпрНоменклатура.ИспользоватьИдентификаторПартииВЕТИСПартии, ЛОЖЬ),
	|	ЕСТЬNULL(СпрНоменклатура.ИспользоватьПроизводителяВЕТИСПартии, ЛОЖЬ),
	|	ЕСТЬNULL(СпрНоменклатура.АвтоматическиГенерироватьПартии, ЛОЖЬ),
	|	СпрНоменклатура.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары КАК НомерСтрокиТовары,
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения КАК НомерСтрокиУточнения,
	|	""ОшибкаНетУточнения"" КАК ТипОшибки,
	|	ЛОЖЬ КАК ЭтоНомерСтрокиУточнений
	|ПОМЕСТИТЬ ВТСтрокиСОшибками
	|ИЗ
	|	ВТОбъединеннаяТаблицаТоваров КАК ВТОбъединеннаяТаблицаТоваров
	|ГДЕ
	|	ВТОбъединеннаяТаблицаТоваров.ОшибкаНетУточнения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары,
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения,
	|	""ОшибкаНетНоменклатуры"",
	|	ВТОбъединеннаяТаблицаТоваров.ЕстьУточнения
	|ИЗ
	|	ВТОбъединеннаяТаблицаТоваров КАК ВТОбъединеннаяТаблицаТоваров
	|ГДЕ
	|	НЕ ВТОбъединеннаяТаблицаТоваров.ОшибкаНетУточнения
	|	И ВТОбъединеннаяТаблицаТоваров.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары,
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения,
	|	""ОшибкаНеНужноГенерировать"",
	|	ВТОбъединеннаяТаблицаТоваров.ЕстьУточнения
	|ИЗ
	|	ВТОбъединеннаяТаблицаТоваров КАК ВТОбъединеннаяТаблицаТоваров
	|ГДЕ
	|	НЕ ВТОбъединеннаяТаблицаТоваров.ОшибкаНетУточнения
	|	И НЕ ВТОбъединеннаяТаблицаТоваров.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.СтатусУказанияСерий <> 0
	|	И НЕ ВТОбъединеннаяТаблицаТоваров.НастройкаВидаАвтоматическиГенерироватьСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары,
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения,
	|	""ОшибкаНетХарактеристики"",
	|	ВТОбъединеннаяТаблицаТоваров.ЕстьУточнения
	|ИЗ
	|	ВТОбъединеннаяТаблицаТоваров КАК ВТОбъединеннаяТаблицаТоваров
	|ГДЕ
	|	НЕ ВТОбъединеннаяТаблицаТоваров.ОшибкаНетУточнения
	|	И НЕ ВТОбъединеннаяТаблицаТоваров.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.СтатусУказанияСерий <> 0
	|	И ВТОбъединеннаяТаблицаТоваров.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьХарактеристики
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаАвтоматическиГенерироватьСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары,
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения,
	|	""ОшибкаНетЗаписиСкладскогоЖуранала"",
	|	ВТОбъединеннаяТаблицаТоваров.ЕстьУточнения
	|ИЗ
	|	ВТОбъединеннаяТаблицаТоваров КАК ВТОбъединеннаяТаблицаТоваров
	|ГДЕ
	|	НЕ ВТОбъединеннаяТаблицаТоваров.ОшибкаНетУточнения
	|	И НЕ ВТОбъединеннаяТаблицаТоваров.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.СтатусУказанияСерий <> 0
	|	И (ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьЗаписьСкладскогоЖурналаВЕТИССерии
	|			ИЛИ ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьДатуПроизводстваСерии
	|			ИЛИ ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьСрокГодностиСерии)
	|	И ВТОбъединеннаяТаблицаТоваров.ЗаписьСкладскогоЖурнала = ЗНАЧЕНИЕ(Справочник.ЗаписиСкладскогоЖурналаВЕТИС.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаАвтоматическиГенерироватьСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары,
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения,
	|	""ОшибкаНетДатыПроизводства"",
	|	ВТОбъединеннаяТаблицаТоваров.ЕстьУточнения
	|ИЗ
	|	ВТОбъединеннаяТаблицаТоваров КАК ВТОбъединеннаяТаблицаТоваров
	|ГДЕ
	|	НЕ ВТОбъединеннаяТаблицаТоваров.ОшибкаНетУточнения
	|	И НЕ ВТОбъединеннаяТаблицаТоваров.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.СтатусУказанияСерий <> 0
	|	И ВТОбъединеннаяТаблицаТоваров.ЗаписьСкладскогоЖурнала <> ЗНАЧЕНИЕ(Справочник.ЗаписиСкладскогоЖурналаВЕТИС.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьДатуПроизводстваСерии
	|	И ВТОбъединеннаяТаблицаТоваров.ДатаПроизводства = ДАТАВРЕМЯ(1, 1, 1)
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаАвтоматическиГенерироватьСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары,
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения,
	|	""ОшибкаНетГоденДо"",
	|	ВТОбъединеннаяТаблицаТоваров.ЕстьУточнения
	|ИЗ
	|	ВТОбъединеннаяТаблицаТоваров КАК ВТОбъединеннаяТаблицаТоваров
	|ГДЕ
	|	НЕ ВТОбъединеннаяТаблицаТоваров.ОшибкаНетУточнения
	|	И НЕ ВТОбъединеннаяТаблицаТоваров.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.СтатусУказанияСерий <> 0
	|	И ВТОбъединеннаяТаблицаТоваров.ЗаписьСкладскогоЖурнала <> ЗНАЧЕНИЕ(Справочник.ЗаписиСкладскогоЖурналаВЕТИС.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьСрокГодностиСерии
	|	И ВТОбъединеннаяТаблицаТоваров.ГоденДо = ДАТАВРЕМЯ(1, 1, 1)
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаАвтоматическиГенерироватьСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары,
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения,
	|	""ОшибкаНетИндентификатораПартии"",
	|	ВТОбъединеннаяТаблицаТоваров.ЕстьУточнения
	|ИЗ
	|	ВТОбъединеннаяТаблицаТоваров КАК ВТОбъединеннаяТаблицаТоваров
	|ГДЕ
	|	НЕ ВТОбъединеннаяТаблицаТоваров.ОшибкаНетУточнения
	|	И НЕ ВТОбъединеннаяТаблицаТоваров.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.СтатусУказанияСерий <> 0
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьИдентификаторПартииВЕТИССерии
	|	И ВТОбъединеннаяТаблицаТоваров.ИдентификаторПартии = """"
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаАвтоматическиГенерироватьСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары,
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения,
	|	""ОшибкаНетПроизводителя"",
	|	ВТОбъединеннаяТаблицаТоваров.ЕстьУточнения
	|ИЗ
	|	ВТОбъединеннаяТаблицаТоваров КАК ВТОбъединеннаяТаблицаТоваров
	|ГДЕ
	|	НЕ ВТОбъединеннаяТаблицаТоваров.ОшибкаНетУточнения
	|	И НЕ ВТОбъединеннаяТаблицаТоваров.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.СтатусУказанияСерий <> 0
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьПроизводителяВЕТИССерии
	|	И ВТОбъединеннаяТаблицаТоваров.КоличествоПроизводителей = 0
	|	И ВТОбъединеннаяТаблицаТоваров.ЗаписьСкладскогоЖурнала <> ЗНАЧЕНИЕ(Справочник.ЗаписиСкладскогоЖурналаВЕТИС.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаАвтоматическиГенерироватьСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары,
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения,
	|	""ОшибкаМногоПроизводетелей"",
	|	ВТОбъединеннаяТаблицаТоваров.ЕстьУточнения
	|ИЗ
	|	ВТОбъединеннаяТаблицаТоваров КАК ВТОбъединеннаяТаблицаТоваров
	|ГДЕ
	|	НЕ ВТОбъединеннаяТаблицаТоваров.ОшибкаНетУточнения
	|	И НЕ ВТОбъединеннаяТаблицаТоваров.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.СтатусУказанияСерий <> 0
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьПроизводителяВЕТИССерии
	|	И ВТОбъединеннаяТаблицаТоваров.КоличествоПроизводителей > 1
	|	И ВТОбъединеннаяТаблицаТоваров.ЗаписьСкладскогоЖурнала <> ЗНАЧЕНИЕ(Справочник.ЗаписиСкладскогоЖурналаВЕТИС.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаАвтоматическиГенерироватьСерии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары КАК НомерСтрокиТовары,
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения КАК НомерСтрокиУточнения,
	|	ВТОбъединеннаяТаблицаТоваров.ЕстьУточнения КАК ЕстьУточнения,
	|	"""" КАК Номер,
	|	ВЫБОР
	|		КОГДА ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьЗаписьСкладскогоЖурналаВЕТИССерии
	|			ТОГДА ВТОбъединеннаяТаблицаТоваров.ЗаписьСкладскогоЖурнала
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ЗаписиСкладскогоЖурналаВЕТИС.ПустаяСсылка)
	|	КОНЕЦ КАК ЗаписьСкладскогоЖурналаВЕТИС,
	|	ВЫБОР
	|		КОГДА ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьПроизводителяВЕТИССерии
	|			ТОГДА ЗаписиСкладскогоЖурналаВЕТИСПроизводители.Производитель
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПредприятияВЕТИС.ПустаяСсылка)
	|	КОНЕЦ КАК ПроизводительВЕТИС,
	|	ВЫБОР
	|		КОГДА ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьИдентификаторПартииВЕТИССерии
	|			ТОГДА ВТОбъединеннаяТаблицаТоваров.ИдентификаторПартии
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ИдентификаторПартииВЕТИС,
	|	ВЫБОР
	|		КОГДА ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьСрокГодностиСерии
	|			ТОГДА ВТОбъединеннаяТаблицаТоваров.ГоденДо
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК ГоденДо,
	|	ВЫБОР
	|		КОГДА ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьДатуПроизводстваСерии
	|			ТОГДА ВТОбъединеннаяТаблицаТоваров.ДатаПроизводства
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК ДатаПроизводства,
	|	ВТОбъединеннаяТаблицаТоваров.ВладелецСерий КАК ВладелецСерий
	|ПОМЕСТИТЬ ВТРеквизитыСерий
	|ИЗ
	|	ВТОбъединеннаяТаблицаТоваров КАК ВТОбъединеннаяТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЗаписиСкладскогоЖурналаВЕТИС.Производители КАК ЗаписиСкладскогоЖурналаВЕТИСПроизводители
	|		ПО ВТОбъединеннаяТаблицаТоваров.ЗаписьСкладскогоЖурнала = ЗаписиСкладскогоЖурналаВЕТИСПроизводители.Ссылка
	|			И (ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьПроизводителяВЕТИССерии)
	|ГДЕ
	|	НЕ (ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары, ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения) В
	|				(ВЫБРАТЬ
	|					ВТСтрокиСОшибками.НомерСтрокиТовары,
	|					ВТСтрокиСОшибками.НомерСтрокиУточнения
	|				ИЗ
	|					ВТСтрокиСОшибками)
	|	И ВТОбъединеннаяТаблицаТоваров.СтатусУказанияСерий <> 0
	|	И ВТОбъединеннаяТаблицаТоваров.Серия = ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТРеквизитыСерий.НомерСтрокиТовары КАК НомерСтрокиТовары,
	|	ВТРеквизитыСерий.НомерСтрокиУточнения КАК НомерСтрокиУточнения,
	|	ВТРеквизитыСерий.ЕстьУточнения КАК ЕстьУточнения,
	|	ВТРеквизитыСерий.Номер КАК Номер,
	|	ВТРеквизитыСерий.ЗаписьСкладскогоЖурналаВЕТИС КАК ЗаписьСкладскогоЖурналаВЕТИС,
	|	ВТРеквизитыСерий.ПроизводительВЕТИС КАК ПроизводительВЕТИС,
	|	ВТРеквизитыСерий.ИдентификаторПартииВЕТИС КАК ИдентификаторПартииВЕТИС,
	|	ВТРеквизитыСерий.ГоденДо КАК ГоденДо,
	|	ВТРеквизитыСерий.ДатаПроизводства КАК ДатаПроизводства,
	|	ВТРеквизитыСерий.ВладелецСерий КАК Владелец,
	|	ЕСТЬNULL(СерииНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)) КАК Серия
	|ИЗ
	|	ВТРеквизитыСерий КАК ВТРеквизитыСерий
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПартииНоменклатуры КАК СерииНоменклатуры
	|		ПО ВТРеквизитыСерий.Номер = СерииНоменклатуры.Номер
	|			И ВТРеквизитыСерий.ЗаписьСкладскогоЖурналаВЕТИС = СерииНоменклатуры.ЗаписьСкладскогоЖурналаВЕТИС
	|			И ВТРеквизитыСерий.ПроизводительВЕТИС = СерииНоменклатуры.ПроизводительВЕТИС
	|			И ВТРеквизитыСерий.ИдентификаторПартииВЕТИС = СерииНоменклатуры.ИдентификаторПартииВЕТИС
	|			И ВТРеквизитыСерий.ВладелецСерий = СерииНоменклатуры.Владелец
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСтрокиСОшибками.НомерСтрокиТовары КАК НомерСтрокиТовары,
	|	ВТСтрокиСОшибками.НомерСтрокиУточнения КАК НомерСтрокиУточнения,
	|	ВТСтрокиСОшибками.ТипОшибки КАК ТипОшибки,
	|	ВТСтрокиСОшибками.ЭтоНомерСтрокиУточнений КАК ЭтоНомерСтрокиУточнений
	|ИЗ
	|	ВТСтрокиСОшибками КАК ВТСтрокиСОшибками
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиТовары,
	|	НомерСтрокиУточнения";
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ТаблицаТовары", ТабличнаяЧастьТовары.Выгрузить(ВыделенныеСтрокиТоваров));
	
	Если ТабличнаяЧастьУточнения <> Неопределено Тогда 	
		Запрос.УстановитьПараметр("ТоварыУточнение", ТабличнаяЧастьУточнения.Выгрузить());
	КонецЕсли;
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ТаблицаОшибок         = РезультатыЗапроса[РезультатыЗапроса.ВГраница()].Выгрузить();
	ТаблицаУстановкиСерий = РезультатыЗапроса[РезультатыЗапроса.ВГраница()-1].Выгрузить();
	
	Результат.ЗаполнениеЗавершено = ТаблицаОшибок.Количество() = 0;
	
	Для Каждого СтрТабл из ТаблицаОшибок Цикл
		
		Если СтрТабл.ТипОшибки = "ОшибкаНетУточнения" Тогда
			ПолеОшибки = "Объект.Товары.НомерСтроки";
			
			ТекстСообщения = НСтр("ru = 'По строке %НомерСтроки% указано, что должны быть уточнения, но строки уточнения не введены.'");
			
		Иначе
			
			Если СтрТабл.ТипОшибки = "ОшибкаНетНоменклатуры" Тогда
				
				Если СтрТабл.ЭтоНомерСтрокиУточнений Тогда
					ПолеОшибки = "Объект.Товары.НомерСтроки";
					ТекстСообщения = НСтр("ru = 'В одной из строк уточнения по строке %НомерСтроки% не указана номенклатура.'");
				Иначе
					ПолеОшибки = "Объект.Товары.Номенклатура";
					ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% не указана номенклатура.'");
				КонецЕсли;
				
			ИначеЕсли СтрТабл.ТипОшибки = "ОшибкаНеНужноГенерировать" Тогда
				
				Если СтрТабл.ЭтоНомерСтрокиУточнений Тогда
					ПолеОшибки = "Объект.Товары.НомерСтроки";
					ТекстСообщения = НСтр("ru = 'В одной из строк уточнения по строке %НомерСтроки% выбрана номенклатура, по которой не настроена автоматическая генерация серий.'");
				Иначе
					ПолеОшибки = "Объект.Товары.Номенклатура";
					ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% выбрана номенклатура, по которой не настроена автоматическая генерация серий'");
				КонецЕсли;
				
			ИначеЕсли СтрТабл.ТипОшибки = "ОшибкаНетХарактеристики" Тогда
				
				Если СтрТабл.ЭтоНомерСтрокиУточнений Тогда
					ПолеОшибки = "Объект.Товары.НомерСтроки";
					ТекстСообщения = НСтр("ru = 'В одной из строк уточнения по строке %НомерСтроки% не указана характеристика - серии нужно генерировать после указания характериски.'");
				Иначе
					ПолеОшибки = "Объект.Товары.Характеристика";
					ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% не указана характеристика - серии нужно генерировать после указания характериски.'");
				КонецЕсли;
				
			ИначеЕсли СтрТабл.ТипОшибки = "ОшибкаНетЗаписиСкладскогоЖуранала" Тогда
				
				ПолеОшибки = "Объект.Товары.ЗаписьСкладскогоЖурнала";
				ТекстСообщения = НСтр("ru = 'Для строки %НомерСтроки% не загружена запись складского журнала ВЕТИС. Выполните обмен с ВЕТИС.'");

			ИначеЕсли СтрТабл.ТипОшибки = "ОшибкаНетДатыПроизводства" Тогда
				
				ПолеОшибки = "Объект.Товары.ЗаписьСкладскогоЖурнала";
				ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% не указана запись складского журнала ВЕТИС, в которой не заполнена дата начала производства. Создайте серию вручную.'");
				
			ИначеЕсли СтрТабл.ТипОшибки = "ОшибкаНетГоденДо" Тогда
				
				ПолеОшибки = "Объект.Товары.ЗаписьСкладскогоЖурнала";
				ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% указана запись складского журнала ВЕТИС, в которой не заполнена дата начала периода срока годности. Создайте серию вручную.'");
				
			ИначеЕсли СтрТабл.ТипОшибки = "ОшибкаНетПроизводителя" Тогда
				
				ПолеОшибки = "Объект.Товары.ЗаписьСкладскогоЖурнала";
				ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% указана запись складского журнала ВЕТИС, в которой не заполнен производитель. Создайте серию вручную.'");
				
			ИначеЕсли СтрТабл.ТипОшибки = "ОшибкаМногоПроизводетелей" Тогда
				
				ПолеОшибки = "Объект.Товары.ЗаписьСкладскогоЖурнала";
				ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% указана запись складского журнала ВЕТИС, в которой указано более одного производителя. Создайте серию вручную.'");
				
			ИначеЕсли СтрТабл.ТипОшибки = "ОшибкаНетИндентификатораПартии" Тогда
				
				Если СтрТабл.ЭтоНомерСтрокиУточнений Тогда
					ПолеОшибки = "Объект.Товары.НомерСтроки";
					ТекстСообщения = НСтр("ru = 'В одной из строк уточнения по строке %НомерСтроки% не указан индентификатор партии ВЕТИС.'");
				Иначе
					ПолеОшибки = "Объект.Товары.ИдентификаторПартии";
					ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% не указан индентификатор партии ВЕТИС.'");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
			
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", СтрТабл.НомерСтрокиТовары);
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Результат.СписокОшибок, ПолеОшибки, ТекстСообщения, Неопределено, СтрТабл.НомерСтрокиТовары - 1);
	КонецЦикла;
	
	СозданныеСерии = Новый ТаблицаЗначений;
	СозданныеСерии.Колонки.Добавить("Серия", Новый ОписаниеТипов("СправочникСсылка.ПартииНоменклатуры"));
	
	СозданныеСерии.Колонки.Добавить("Владелец", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	СозданныеСерии.Колонки.Добавить("ЗаписьСкладскогоЖурналаВЕТИС", Новый ОписаниеТипов("СправочникСсылка.ЗаписиСкладскогоЖурналаВЕТИС"));
	СозданныеСерии.Колонки.Добавить("ПроизводительВЕТИС", Новый ОписаниеТипов("СправочникСсылка.ПредприятияВЕТИС"));
	СозданныеСерии.Колонки.Добавить("ИдентификаторПартииВЕТИС", Новый ОписаниеТипов("Строка"));
	СозданныеСерии.Колонки.Добавить("ГоденДо", Новый ОписаниеТипов("Дата"));
	СозданныеСерии.Колонки.Добавить("ДатаПроизводства", Новый ОписаниеТипов("Дата"));
	
	ПоляПоиска = "ЗаписьСкладскогоЖурналаВЕТИС,ПроизводительВЕТИС,ИдентификаторПартииВЕТИС,ГоденДо,ДатаПроизводства";
	
	СозданныеСерии.Индексы.Добавить(ПоляПоиска);
	
	СтруктураОтбора = Новый Структура(ПоляПоиска);
	
	Для Каждого СтрТабл из ТаблицаУстановкиСерий Цикл
		
		Если ЗначениеЗаполнено(СтрТабл.Серия) Тогда
			Серия = СтрТабл.Серия;
		Иначе
			ЗаполнитьЗначенияСвойств(СтруктураОтбора, СтрТабл);
			НайденныеСтроки = СозданныеСерии.НайтиСтроки(СтруктураОтбора);
			
			Если НайденныеСтроки.Количество() > 0 Тогда
				Серия = НайденныеСтроки[0].Серия;
			Иначе
				
				Серия = СоздатьСерию(СтрТабл, Результат);
				
				Если Не ЗначениеЗаполнено(Серия) Тогда
					Результат.ЗаполнениеЗавершено = Ложь;
					Продолжить;
				КонецЕсли;
				
				НоваяСтрока = СозданныеСерии.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрТабл);
				НоваяСтрока.Серия = Серия;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если СтрТабл.ЕстьУточнения Тогда
			СтрокаТЧ = ТабличнаяЧастьУточнения[СтрТабл.НомерСтрокиУточнения - 1];
		Иначе
			СтрокаТЧ = ТабличнаяЧастьТовары[СтрТабл.НомерСтрокиТовары - 1];
		КонецЕсли;
		
		СтрокаТЧ.Серия = Серия;
		ВыполнитьОперацииПриИзмененииРеквизитовФормы(, СтрокаТЧ, Неопределено, СтруктураДействий);
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция СоздатьСерию(Реквизиты, Результат)
	
	СерияСсылка = Справочники.ПартииНоменклатуры.ПустаяСсылка();
	
	Попытка
		
		НоваяСерия = Справочники.ПартииНоменклатуры.СоздатьЭлемент();
		ЗаполнитьЗначенияСвойств(НоваяСерия, Реквизиты);
		НоваяСерия.Статус = Перечисления.СтатусыПартий.СобственныеЗапасы;
		НоваяСерия.Наименование = Справочники.ПартииНоменклатуры.ПредставлениеПартии(НоваяСерия);
		НоваяСерия.Записать();
		
		СерияСсылка = НоваяСерия.Ссылка;
		
	Исключение
		ПолеОшибки = "Объект.Товары.Серия";
		ТекстСообщения = НСтр("ru = 'Не удалось сгенерировать партию по причине: %Причина%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Результат.СписокОшибок, ПолеОшибки, ТекстСообщения,
			Неопределено);
		
		
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Справочники.ПартииНоменклатуры,
			НоваяСерия.Ссылка,
			ТекстСообщения);
	КонецПопытки;
		
	Возврат СерияСсылка;
	
КонецФункции

#КонецОбласти

#Область ПроизводственнаяОперацияВЕТИС

Процедура ОбработкаЗаполненияДокументаПроизводственнаяОперацияВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если Не ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.СборкаЗапасов") Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеПрикладногоДокумента = СтруктураЗапросаДанныеДокументаСборкаЗапасов();
	
	Если Не ЗначениеЗаполнено(ДанныеПрикладногоДокумента) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос(ДанныеПрикладногоДокумента.Реквизиты);
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		Если РеквизитыДокумента.ЕстьОшибкиПроведен Тогда
		
			ТекстОшибки = НСтр("ru='Документ %Документ% не проведен. Ввод на основании непроведенного документа запрещен.'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", РеквизитыДокумента.Ссылка);
			
			ВызватьИсключение ТекстОшибки;
			
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		
		Если ИнтеграцияИСКлиентСервер.ЕстьРеквизитОбъекта(РеквизитыДокумента, "Подразделение") Тогда
		
			СоответствиеСубъектов = Справочники.ХозяйствующиеСубъектыВЕТИС.ХозяйствующийСубъектИПредприятиеПоОрганизацииИПодразделению(
													РеквизитыДокумента.Организация,
													РеквизитыДокумента.Подразделение);
		
			ЗаполнитьЗначенияСвойств(ДокументОбъект, СоответствиеСубъектов);
			
		ИначеЕсли ИнтеграцияИСКлиентСервер.ЕстьРеквизитОбъекта(РеквизитыДокумента, "Склад") Тогда
			
			СоответствиеСубъектов = Справочники.ХозяйствующиеСубъектыВЕТИС.ХозяйствующийСубъектИПредприятиеПоПрикладнымРеквизитам(
													РеквизитыДокумента.Организация,
													РеквизитыДокумента.Склад);
			
			ЗаполнитьЗначенияСвойств(ДокументОбъект, СоответствиеСубъектов);
			
			ДокументОбъект.ТорговыйОбъект = РеквизитыДокумента.Склад;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос = Новый Запрос();
	СписокЗапросов = Новый СписокЗначений();
	
	СписокЗапросов.Добавить(ДанныеПрикладногоДокумента.Товары);
	СписокЗапросов.Добавить(ДанныеПрикладногоДокумента.Сырье);
	
	СтруктураЗапроса = Документы.ПроизводственнаяОперацияВЕТИС.СтруктураЗапросаДанныеОформленныхДокументов();
	
	СписокЗапросов.Добавить(СтруктураЗапроса.ОформленныеДокументы);
	СписокЗапросов.Добавить(СтруктураЗапроса.ОформленныеТовары);
	СписокЗапросов.Добавить(СтруктураЗапроса.ОформленноеСырье);
	
	СтруктураЗапроса = СтруктураЗапросаДанныеЗаполненияПроизводственнойОперации();
	
	СписокЗапросов.Добавить(СтруктураЗапроса.ТоварыКОформлению);
	СписокЗапросов.Добавить(СтруктураЗапроса.СырьеКОформлению);
	СписокЗапросов.Добавить(СтруктураЗапроса.СопоставленныеПозиции);
	
	СписокЗапросов.Добавить(СтруктураЗапроса.Товары, "Товары");
	СписокЗапросов.Добавить(СтруктураЗапроса.Сырье, "Сырье");
	СписокЗапросов.Добавить(СтруктураЗапроса.ТехнологическийПроцесс, "ТехнологическийПроцесс");
	
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы", Документы.ПроизводственнаяОперацияВЕТИС.КонечныеСтатусы());
	
	Запрос.УстановитьПараметр("ДатаОперацииНачалоПериода", РеквизитыДокумента.ДатаОперацииНачалоПериода);
	Запрос.УстановитьПараметр("ДатаОперацииКонецПериода",  РеквизитыДокумента.ДатаОперацииКонецПериода);
	
	Запрос.УстановитьПараметр("ПустаяСерия", Метаданные.ОпределяемыеТипы.СерияНоменклатурыВЕТИС.Тип.ПривестиЗначение());
	
	РезультатЗапроса = ГосударственныеИнформационныеСистемы.ВыполнитьПакетЗапросов(Запрос, СписокЗапросов);
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.Сырье.Очистить();
	
	ДокументОбъект.УпаковкиВЕТИС.Очистить();
	ДокументОбъект.ШтрихкодыУпаковок.Очистить();
	
	ДокументОбъект.ТехнологическийПроцесс.Очистить();
	
	Если Не РезультатЗапроса["Товары"].Пустой() Тогда
		ЗаполнитьТабличнуюЧастьДокумента(
			ДокументОбъект["Товары"],
			РезультатЗапроса["Товары"],
			ДанныеЗаполнения,
			Новый Структура,
			Истина);
	КонецЕсли;
	
	Если Не РезультатЗапроса["Сырье"].Пустой() Тогда
		ЗаполнитьТабличнуюЧастьДокумента(
			ДокументОбъект["Сырье"],
			РезультатЗапроса["Сырье"],
			ДанныеЗаполнения,
			Новый Структура,
			Истина);
	КонецЕсли;
	
	ДокументОбъект.ТехнологическийПроцесс.Загрузить(РезультатЗапроса["ТехнологическийПроцесс"].Выгрузить());
	
КонецПроцедуры

Функция СтруктураЗапросаДанныеЗаполненияПроизводственнойОперации()
	
	СтруктураЗапроса = Новый Структура();
	
	// Товары к оформлению
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура          КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика        КАК Характеристика,
	|	ТабличнаяЧасть.Серия                 КАК Серия,
	|	ТабличнаяЧасть.ДатаПроизводства      КАК ДатаПроизводства,
	|	СУММА(ТабличнаяЧасть.Количество)     КАК Количество
	|ПОМЕСТИТЬ ТоварыКРаспределению
	|ИЗ (
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура     КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика   КАК Характеристика,
	|	ТабличнаяЧасть.Серия            КАК Серия,
	|	ТабличнаяЧасть.ДатаПроизводства КАК ДатаПроизводства,
	|	ТабличнаяЧасть.Количество       КАК Количество
	|ИЗ
	|	Товары КАК ТабличнаяЧасть
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура     КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика   КАК Характеристика,
	|	ТабличнаяЧасть.Серия            КАК Серия,
	|	ТабличнаяЧасть.ДатаПроизводства КАК ДатаПроизводства,
	|	-ТабличнаяЧасть.Количество      КАК Количество
	|ИЗ
	|	ОформленныеТовары КАК ТабличнаяЧасть
	|
	|) КАК ТабличнаяЧасть
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.ДатаПроизводства,
	|	ТабличнаяЧасть.Серия
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТабличнаяЧасть.Количество) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Серия,
	|	ДатаПроизводства
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура          КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика        КАК Характеристика,
	|	ТабличнаяЧасть.Серия                 КАК Серия,
	|	СУММА(ТабличнаяЧасть.Количество)     КАК Количество
	|ПОМЕСТИТЬ ТоварыБазаРаспределения
	|ИЗ (
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура     КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика   КАК Характеристика,
	|	ТабличнаяЧасть.Серия            КАК Серия,
	|	ТабличнаяЧасть.Количество       КАК Количество
	|ИЗ
	|	Товары КАК ТабличнаяЧасть
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура     КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика   КАК Характеристика,
	|	ТабличнаяЧасть.Серия            КАК Серия,
	|	-ТабличнаяЧасть.Количество      КАК Количество
	|ИЗ
	|	ОформленныеТовары КАК ТабличнаяЧасть
	|
	|) КАК ТабличнаяЧасть
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТабличнаяЧасть.Количество) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Серия
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|
	|	ТоварыКРаспределению.Номенклатура     КАК Номенклатура,
	|	ТоварыКРаспределению.Характеристика   КАК Характеристика,
	|	ТоварыКРаспределению.Серия            КАК Серия,
	|	ТоварыКРаспределению.ДатаПроизводства КАК ДатаПроизводства,
	|
	|	СУММА(ТоварыКРаспределениюДополнение.Количество) - МИНИМУМ(ТоварыКРаспределению.Количество) КАК ЛеваяГраница,
	|	СУММА(ТоварыКРаспределениюДополнение.Количество)                                            КАК ПраваяГраница
	|
	|ПОМЕСТИТЬ ТоварыКРаспределениюПоДатам
	|ИЗ
	|	ТоварыКРаспределению КАК ТоварыКРаспределению
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыКРаспределению КАК ТоварыКРаспределениюДополнение
	|
	|			ПО ТоварыКРаспределению.Номенклатура      = ТоварыКРаспределениюДополнение.Номенклатура
	|			 И ТоварыКРаспределению.Характеристика    = ТоварыКРаспределениюДополнение.Характеристика
	|			 И ТоварыКРаспределению.Серия             = ТоварыКРаспределениюДополнение.Серия
	|			 И ТоварыКРаспределению.ДатаПроизводства <= ТоварыКРаспределениюДополнение.ДатаПроизводства
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКРаспределению.Номенклатура,
	|	ТоварыКРаспределению.Характеристика,
	|	ТоварыКРаспределению.Серия,
	|	ТоварыКРаспределению.ДатаПроизводства
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКРаспределениюПоДатам.Номенклатура     КАК Номенклатура,
	|	ТоварыКРаспределениюПоДатам.Характеристика   КАК Характеристика,
	|	ТоварыКРаспределениюПоДатам.Серия            КАК Серия,
	|	ТоварыКРаспределениюПоДатам.ДатаПроизводства КАК ДатаПроизводства,
	|	(ВЫБОР
	|		КОГДА ТоварыКРаспределению.Количество < ТоварыКРаспределениюПоДатам.ПраваяГраница
	|			ТОГДА ТоварыКРаспределению.Количество
	|			ИНАЧЕ ТоварыКРаспределениюПоДатам.ПраваяГраница
	|		КОНЕЦ - ТоварыКРаспределениюПоДатам.ЛеваяГраница
	|	)                                            КАК Количество
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	ТоварыКРаспределениюПоДатам КАК ТоварыКРаспределениюПоДатам
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыБазаРаспределения КАК ТоварыКРаспределению
	|
	|			ПО ТоварыКРаспределениюПоДатам.Номенклатура   = ТоварыКРаспределению.Номенклатура
	|			 И ТоварыКРаспределениюПоДатам.Характеристика = ТоварыКРаспределению.Характеристика
	|			 И ТоварыКРаспределениюПоДатам.Серия          = ТоварыКРаспределению.Серия
	|			 И ТоварыКРаспределениюПоДатам.ЛеваяГраница   < ТоварыКРаспределению.Количество
	|";
	СтруктураЗапроса.Вставить("ТоварыКОформлению", ТекстЗапроса);
	
	// Сырье к оформлению
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура          КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика        КАК Характеристика,
	|	ТоварыКОформлению.Серия                 КАК Серия,
	|	СУММА(ТоварыКОформлению.Количество)     КАК Количество
	|ПОМЕСТИТЬ СырьеКОформлению
	|ИЗ (
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура   КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия          КАК Серия,
	|	ТабличнаяЧасть.Количество     КАК Количество
	|ИЗ
	|	Сырье КАК ТабличнаяЧасть
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура   КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия          КАК Серия,
	|	-ТабличнаяЧасть.Количество    КАК Количество
	|ИЗ
	|	ОформленноеСырье КАК ТабличнаяЧасть
	|
	|) КАК ТоварыКОформлению
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|";
	СтруктураЗапроса.Вставить("СырьеКОформлению", ТекстЗапроса);
	
	ТекстЗапроса = ТекстЗапросаСоответствиеНоменклатурыВЕТИС("СопоставленныеПозиции", "ТоварыКОформлению, СырьеКОформлению");
	СтруктураЗапроса.Вставить("СопоставленныеПозиции", ТекстЗапроса);
	
	// Товары
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СопоставленыеПозиции.Продукция         КАК Продукция,
	|
	|	ТоварыКОформлению.Номенклатура         КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика       КАК Характеристика,
	|	ТоварыКОформлению.Серия                КАК Серия,
	|
	|	ТоварыКОформлению.Количество    КАК Количество,
	|	ТоварыКОформлению.Количество    КАК КоличествоВЕТИС,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ТочностьЗаполненияПериодаВЕТИС.ДДММГГГГ) КАК ДатаПроизводстваТочностьЗаполнения,
	|	ТоварыКОформлению.ДатаПроизводства                             КАК ДатаПроизводстваНачалоПериода,
	|	ДАТАВРЕМЯ(1,1,1)                                               КАК ДатаПроизводстваКонецПериода,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ТочностьЗаполненияПериодаВЕТИС.ДДММГГГГ) КАК СрокГодностиТочностьЗаполнения,
	|	ISNULL(ТоварыКОформлению.Серия.ГоденДо, ДАТАВРЕМЯ(1,1,1))      КАК СрокГодностиНачалоПериода,
	|	ДАТАВРЕМЯ(1,1,1)                                               КАК СрокГодностиКонецПериода,
	|
	|	ЛОЖЬ КАК СкоропортящаясяПродукция,
	|	ЛОЖЬ КАК НизкокачественнаяПродукция,
	|
	|	ЗНАЧЕНИЕ(Перечисление.РезультатыЛабораторныхИсследованийВЕТИС.ИзготовленаИзСырьяПрошедшегоВСЭ) КАК ЭкспертизаРезультат
	|
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленныеПозиции КАК СопоставленыеПозиции
	|		ПО СопоставленыеПозиции.Номенклатура   = ТоварыКОформлению.Номенклатура
	|		 И СопоставленыеПозиции.Характеристика = ТоварыКОформлению.Характеристика
	|		 И СопоставленыеПозиции.Серия          = ТоварыКОформлению.Серия
	|";
	СтруктураЗапроса.Вставить("Товары", ТекстЗапроса);
	
	// Сырье
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СопоставленыеПозиции.Продукция         КАК Продукция,
	|
	|	СырьеКОформлению.Номенклатура         КАК Номенклатура,
	|	СырьеКОформлению.Характеристика       КАК Характеристика,
	|	СырьеКОформлению.Серия                КАК Серия,
	|
	|	СырьеКОформлению.Количество КАК Количество,
	|	СырьеКОформлению.Количество КАК КоличествоВЕТИС
	|
	|ИЗ
	|	СырьеКОформлению КАК СырьеКОформлению
	|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленныеПозиции КАК СопоставленыеПозиции
	|		ПО СопоставленыеПозиции.Номенклатура   = СырьеКОформлению.Номенклатура
	|		 И СопоставленыеПозиции.Характеристика = СырьеКОформлению.Характеристика
	|		 И СопоставленыеПозиции.Серия          = СырьеКОформлению.Серия
	|";
	СтруктураЗапроса.Вставить("Сырье", ТекстЗапроса);
	
	// Технологический процесс
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&ДатаОперацииНачалоПериода КАК ДатаОперацииНачалоПериода,
	|	&ДатаОперацииКонецПериода  КАК ДатаОперацииКонецПериода,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПроизводственныхОперацийВЕТИС.Производство) КАК ТипОперации
	|";
	СтруктураЗапроса.Вставить("ТехнологическийПроцесс", ТекстЗапроса);
	
	Возврат СтруктураЗапроса;
	
КонецФункции

Функция СтруктураЗапросаДанныеДокументаСборкаЗапасов()
	
	СтруктураЗапроса = Новый Структура();
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Таблица.Ссылка КАК ДокументОснование,
	|	Таблица.Организация КАК Организация,
	|	Таблица.СтруктурнаяЕдиница КАК Склад,
	|	НАЧАЛОПЕРИОДА(Таблица.Дата, ДЕНЬ) КАК ДатаОперацииНачалоПериода,
	|	КОНЕЦПЕРИОДА(Таблица.Дата, ДЕНЬ) КАК ДатаОперацииКонецПериода,
	|	НЕ Таблица.Проведен КАК ЕстьОшибкиПроведен,
	|	"""" КАК ИдентификаторПроизводственнойТранзакции,
	|	ЛОЖЬ КАК ЗавершениеПроизводственнойТранзакции
	|ИЗ
	|	Документ.СборкаЗапасов КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &ДокументОснование";
	СтруктураЗапроса.Вставить("Реквизиты", ТекстЗапроса);
	
	ШаблонЗапроса =
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Партия КАК Серия,
	|	НАЧАЛОПЕРИОДА(ТабличнаяЧасть.Ссылка.Дата, ДЕНЬ) КАК ДатаПроизводства,
	|	ТабличнаяЧасть.Количество КАК Количество
	|ПОМЕСТИТЬ ВременнаяТаблица
	|ИЗ
	|	Документ.СборкаЗапасов.Продукция КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС
	|	И &Отбор1
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Партия,
	|	НАЧАЛОПЕРИОДА(ТабличнаяЧасть.Ссылка.Дата, ДЕНЬ),
	|	ТабличнаяЧасть.Количество
	|ИЗ
	|	Документ.СборкаЗапасов.Запасы КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС
	|	И &Отбор2";
	
	ТекстЗапроса = ШаблонЗапроса;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВременнаяТаблица", "Товары");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Отбор1", "(ТабличнаяЧасть.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСборкаЗапасов.Сборка))");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Отбор2", "(ТабличнаяЧасть.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСборкаЗапасов.Разборка))");
	СтруктураЗапроса.Вставить("Товары", ТекстЗапроса);
	
	ТекстЗапроса = ШаблонЗапроса;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВременнаяТаблица", "Сырье");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Отбор1", "(ТабличнаяЧасть.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСборкаЗапасов.Разборка))");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Отбор2", "(ТабличнаяЧасть.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСборкаЗапасов.Сборка))");
	СтруктураЗапроса.Вставить("Сырье", ТекстЗапроса);
	
	Возврат СтруктураЗапроса;
	
КонецФункции

Процедура ПроверитьЗаполнениеИдентификатораПартии(ДокументОбъект, Отказ, МассивНепроверяемыхРеквизитов) Экспорт
	
	ШаблонСообщения = НСтр("ru='Не заполнено поле ""Идентификатор партии"" в строке %1 списка ""Продукция"".'");
	
	Для Каждого СтрокаТЧ Из ДокументОбъект.Товары Цикл
		Если СтрокаТЧ.Номенклатура.ИспользоватьИдентификаторПартииВЕТИСПартии
			И НЕ ЗначениеЗаполнено(СтрокаТЧ.ИдентификаторПартии) Тогда
			
			ТекстСообщения = СтрШаблон(ШаблонСообщения, СтрокаТЧ.НомерСтроки);
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары",
				СтрокаТЧ.НомерСтроки,
				"ИдентификаторПартии");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,
				ДокументОбъект.Ссылка,
				Поле,
				"Объект",
				Отказ);
			
		КонецЕсли;
	КонецЦикла;
	
	МассивНепроверяемыхРеквизитов.Добавить("Товары.ИдентификаторПартии");
	
КонецПроцедуры

#КонецОбласти

#Область СоответствиеНоменклатуры

Функция ТекстЗапросаСоответствиеНоменклатурыВЕТИС(ИмяВременнойТаблицы = "СопоставленныеПозиции", ИменаТЧТовары = "ТоварыКОформлению")
	
	МассивТЧТовары = СтрРазделить(ИменаТЧТовары, ",", Ложь);
	ТекстЗапроса = "";
	
	Если МассивТЧТовары.Количество() > 1 Тогда
		
		ИмяВременнойТаблицыДляСопоставленияНоменклатуры = "ВтОбъединениеТЧДляСопоставления";
		
		ШаблонЗапросаТовары =
		"ВЫБРАТЬ
		|	ТаблицаТовары.Номенклатура   КАК Номенклатура,
		|	ТаблицаТовары.Характеристика КАК Характеристика,
		|	ТаблицаТовары.Серия          КАК Серия
		|%1
		|ИЗ
		|	%2 КАК ТаблицаТовары
		|";
		ШаблонОбъединениеЗапросов = "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|";
		
		Для НомерТаблицы = 0 По МассивТЧТовары.Количество() - 1 Цикл
			
			ТекущаяТЧТовары = МассивТЧТовары[НомерТаблицы];
			
			Если НомерТаблицы > 0 Тогда
				ТекстЗапроса = ТекстЗапроса + ШаблонОбъединениеЗапросов;
			КонецЕсли;
			
			ТекстЗапроса = ТекстЗапроса
				+ СтрШаблон(
					ШаблонЗапросаТовары,
					?(НомерТаблицы = 0,
						"ПОМЕСТИТЬ " + ИмяВременнойТаблицыДляСопоставленияНоменклатуры,
						""),
					ТекущаяТЧТовары);
			
		КонецЦикла;
		
		ТекстЗапроса = ТекстЗапроса + "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
	Иначе
		ИмяВременнойТаблицыДляСопоставленияНоменклатуры = МассивТЧТовары[0];
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура   КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия          КАК Серия,
	|	МАКСИМУМ(ЕСТЬNULL(СоответствиеНоменклатурыВЕТИС.Продукция, СоответствиеНоменклатурыВЕТИС2.Продукция)) КАК Продукция
	|ПОМЕСТИТЬ %1
	|ИЗ
	|	%2 КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС
	|		ПО СоответствиеНоменклатурыВЕТИС.Номенклатура = ТабличнаяЧасть.Номенклатура
	|			И СоответствиеНоменклатурыВЕТИС.Характеристика = ТабличнаяЧасть.Характеристика
	|			И (СоответствиеНоменклатурыВЕТИС.Серия = ТабличнаяЧасть.Серия)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС2
	|		ПО СоответствиеНоменклатурыВЕТИС2.Номенклатура = ТабличнаяЧасть.Номенклатура
	|			И СоответствиеНоменклатурыВЕТИС2.Характеристика = ТабличнаяЧасть.Характеристика
	|			И (СоответствиеНоменклатурыВЕТИС2.Серия = &ПустаяСерия)
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(СоответствиеНоменклатурыВЕТИС.Продукция,СоответствиеНоменклатурыВЕТИС2.Продукция)) = 1
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Серия
	|";
	
	ТекстЗапроса = СтрШаблон(ТекстЗапроса, ИмяВременнойТаблицы, ИмяВременнойТаблицыДляСопоставленияНоменклатуры);
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

Функция ЕстьПодконтрольнаяПродукцияВЕТИС(Товары) Экспорт

	Если Не ПолучитьФункциональнуюОпцию("ВестиУчетПодконтрольныхТоваровВЕТИС") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&Товары КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаТовары.Номенклатура
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС";
	
	Запрос.УстановитьПараметр("Товары", Товары.Выгрузить());
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;

КонецФункции

Процедура ВыполнитьОперацииПриИзмененииРеквизитовФормы(Форма, ТекущаяСтрока, КэшированныеЗначения, ПараметрыЗаполнения) Экспорт
	
	Перем ПараметрыПересчетаКоличестваВЕТИС, ТекстОшибки;
	НужноОкруглять = Ложь;
	
	// ОбязательныеДействия
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ТекущаяСтрока, "Номенклатура") Тогда
		СтруктураРеквизитов = ИнтеграцияВЕТИСУНФВызовСервера.ПолучитьСтруктуруСлужебныхРеквизитовНоменклатуры(ТекущаяСтрока.Номенклатура);
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтруктураРеквизитов);
	КонецЕсли;
	// Конец ОбязательныеДействия
	
	Если ТипЗнч(ПараметрыЗаполнения) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыЗаполнения.Свойство("ЗаполнитьПродукциюВЕТИС") И ПараметрыЗаполнения.ЗаполнитьПродукциюВЕТИС Тогда
		
		СтруктураСтроки = ИнтеграцияВЕТИСУНФКлиентСервер.СформироватьСтруктуруПоСтроке(ТекущаяСтрока, "ЗаполнитьПродукциюВЕТИС");
		ИнтеграцияВЕТИСУНФВызовСервера.ЗаполнитьПродукциюВЕТИС(СтруктураСтроки, ПараметрыЗаполнения);
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтруктураСтроки);
		
	КонецЕсли;
	
	Если ПараметрыЗаполнения.Свойство("ПересчитатьКоличествоЕдиницПоВЕТИС", ПараметрыПересчетаКоличестваВЕТИС)
		И ((ТипЗнч(ПараметрыПересчетаКоличестваВЕТИС) = Тип("Булево") И ПараметрыПересчетаКоличестваВЕТИС)
		ИЛИ ТипЗнч(ПараметрыПересчетаКоличестваВЕТИС) = Тип("Структура")) Тогда
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ТекущаяСтрока, "ЕдиницаИзмеренияВЕТИС") Тогда
			ЕдиницаИзмеренияВЕТИС = ТекущаяСтрока.ЕдиницаИзмеренияВЕТИС;
		Иначе
			ЕдиницаИзмеренияВЕТИС = ПараметрыЗаполнения.ЕдиницаИзмеренияВЕТИС;
		КонецЕсли;
		
		// В ТЧ документов ВетИС реквизит с количеством ВетИС может называться по разному.
		Попытка
			Количество = ИнтеграцияВЕТИСУНФВызовСервера.ПересчитатьКоличествоЕдиниц(
												ТекущаяСтрока.КоличествоВЕТИС,
												ТекущаяСтрока.Номенклатура,
												ЕдиницаИзмеренияВЕТИС,
												НужноОкруглять,
												КэшированныеЗначения,
												ТекстОшибки
			);
		Исключение
			Количество = ИнтеграцияВЕТИСУНФВызовСервера.ПересчитатьКоличествоЕдиниц(
												ТекущаяСтрока.КоличествоИзменениеВЕТИС,
												ТекущаяСтрока.Номенклатура,
												ЕдиницаИзмеренияВЕТИС,
												НужноОкруглять,
												КэшированныеЗначения,
												ТекстОшибки
			);
		КонецПопытки;
		
		Если Количество <> Неопределено Тогда
			Попытка
				ТекущаяСтрока.Количество = Количество;
			Исключение
				ТекущаяСтрока.КоличествоИзменение = Количество;
			КонецПопытки;
		ИначеЕсли ТекстОшибки <> Неопределено Тогда
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
		КонецЕсли; 
	
	КонецЕсли;
	
	Если ПараметрыЗаполнения.Свойство("ПересчитатьКоличествоЕдиницВЕТИС") И ПараметрыЗаполнения.ПересчитатьКоличествоЕдиницВЕТИС Тогда
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ТекущаяСтрока, "ЕдиницаИзмеренияВЕТИС") Тогда
			ЕдиницаИзмеренияВЕТИС = ТекущаяСтрока.ЕдиницаИзмеренияВЕТИС;
		Иначе
			ЕдиницаИзмеренияВЕТИС = ПараметрыЗаполнения.ЕдиницаИзмеренияВЕТИС;
		КонецЕсли; 
		
		КоличествоВЕТИС = ИнтеграцияВЕТИСУНФВызовСервера.ПересчитатьКоличествоЕдиницВЕТИС(
											ТекущаяСтрока.Количество,
											ТекущаяСтрока.Номенклатура,
											ЕдиницаИзмеренияВЕТИС,
											НужноОкруглять,
											КэшированныеЗначения,
											ТекстОшибки);
		
		Если КоличествоВЕТИС <> Неопределено Тогда
			ТекущаяСтрока.КоличествоВЕТИС = КоличествоВЕТИС;
		ИначеЕсли ТекстОшибки <> Неопределено Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
		КонецЕсли;
	
	КонецЕсли;
	
	Если ПараметрыЗаполнения.Свойство("ПроверитьСериюРассчитатьСтатус")
		И ((ТипЗнч(ПараметрыЗаполнения.ПроверитьСериюРассчитатьСтатус) = Тип("Булево") И ПараметрыЗаполнения.ПроверитьСериюРассчитатьСтатус)
		ИЛИ ТипЗнч(ПараметрыЗаполнения.ПроверитьСериюРассчитатьСтатус) = Тип("Структура")) Тогда
		
		СтруктураСтроки = ИнтеграцияВЕТИСУНФКлиентСервер.СформироватьСтруктуруПоСтроке(ТекущаяСтрока, "ПроверитьСериюРассчитатьСтатус");
		ИнтеграцияВЕТИСУНФВызовСервера.ПроверитьСериюРассчитатьСтатус(ПараметрыЗаполнения, СтруктураСтроки);
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтруктураСтроки);
	
	КонецЕсли; 
	
	Если ПараметрыЗаполнения.Свойство("ПересчитатьКоличествоЕдиницВЕТИСПоЕдиницеИзмерения") И ПараметрыЗаполнения.ПересчитатьКоличествоЕдиницВЕТИСПоЕдиницеИзмерения Тогда
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ТекущаяСтрока, "ЕдиницаИзмеренияВЕТИС") Тогда
			ЕдиницаИзмеренияВЕТИС = ТекущаяСтрока.ЕдиницаИзмеренияВЕТИС;
		Иначе
			ЕдиницаИзмеренияВЕТИС = ПараметрыЗаполнения.ЕдиницаИзмеренияВЕТИС;
		КонецЕсли;
		
		КоличествоВЕТИС = ИнтеграцияВЕТИСУНФВызовСервера.ПересчитатьКоличествоЕдиницВЕТИС(
											ТекущаяСтрока.КоличествоВЕТИС,
											ТекущаяСтрока.Номенклатура,
											ЕдиницаИзмеренияВЕТИС,
											НужноОкруглять,
											КэшированныеЗначения,
											ТекстОшибки);
		
		Если КоличествоВЕТИС <> Неопределено Тогда
			ТекущаяСтрока.КоличествоВЕТИС = КоличествоВЕТИС;
		КонецЕсли;
	
	КонецЕсли;
	
	Если ПараметрыЗаполнения.Свойство("ИзменениеНоменклатуры") И ПараметрыЗаполнения.ИзменениеНоменклатуры Тогда
		
		Если ТекущаяСтрока.Свойство("Характеристика") Тогда
			ТекущаяСтрока.Характеристика = Неопределено;
		КонецЕсли;
		
		ИнтеграцияВЕТИСУНФКлиентСервер.УстановитьВидимостьКомандыГенерацииСерии(Форма);
		
	КонецЕсли;
	
	Если Форма <> Неопределено Тогда
		Форма.Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры