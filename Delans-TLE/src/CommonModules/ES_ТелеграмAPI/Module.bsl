
	
Процедура ОтправитьВТелеграм(СообщитьТекст, МасивСообщений) Экспорт
	
	//ЭР Несторук С.И. 20.06.2019 22:34:07 {
	Если НЕ ES_БиллингСервер.ПроверкаДоступностиУслугиТелеграмм() Тогда
		Сообщить("Не подлючена услуга для работы с Telegram");
		Возврат;
	КонецЕсли;
	//}ЭР Несторук С.И.
		
	//ТокенБота 			= "725043174:AAHedfPOQK3zOIJIblIoaRqoNc1lcT4fVIQ";
	ТокенБота = ЗапросТокенаБота();
	
	//нужно использовать прокси сервер
	ИспользоватьПрокси	= Истина;
	ПроксиСервер		= "socks5://s6.esit.info"; //192.169.197.146";//
	//ЗащищенноеСоединение = Новый ЗащищенноеСоединениеOpenSSL(Новый СертификатКлиентаWindows, Новый СертификатыУдостоверяющихЦентровWindows); 
	
	ИнтернетПрокси = Новый ИнтернетПрокси;
	//ИнтернетПрокси.Установить("https", ПроксиСервер, 31080, "OlegSA", "fff4sfdf");
	ИнтернетПрокси.Установить("https", ПроксиСервер, 31080, "Delans", "Delans_2019");
	
	Если МасивСообщений <> Неопределено Тогда
		Для каждого Элемент из МасивСообщений Цикл
			
			//пока в телеграм не вернется корректный ответ он будет посылать запросы на адресс вебхука
			СимволПереноса = СтрНайти(Элемент, Символы.ПС);
			//НазваниеДок = Сред(Элемент, 1, 3);
			ДокУникИдент = Сред(Элемент, 1, СимволПереноса-1);
			
			ПроизвольныйТекст = СтрЗаменить(Элемент, Сред(Элемент, 1, СимволПереноса), "");
			
			
			//Создаем структуру для кнопки, она должна быть в формате json
			клСтруктура = Новый Структура;
			мСтрок = Новый Массив;
			мКнопок = Новый Массив;
			мКнопок.Добавить(Новый Структура("text, callback_data", "Принять", "1" + ДокУникИдент));
			
			мСтрок.Добавить(мКнопок);    
			
			клСтруктура.Вставить("inline_keyboard",мСтрок);
			
			ЗаписьJSON = Новый ЗаписьJSON;
			ЗаписьJSON.УстановитьСтроку();
			ЗаписатьJSON(ЗаписьJSON,клСтруктура,,);
			
			Клавиатура = ЗаписьJSON.Закрыть();
			
			//Получить ИдЧата для отправки сообщения в нужный чат
			ИДЧата = ЗапросИДЧатаДляБота();
			
			
			//МасивСообщений = ОтправитьВТелеграмНаСервере();
			
			Соединение  =  Новый HTTPСоединение("api.telegram.org",443,,,ИнтернетПрокси,,Новый ЗащищенноеСоединениеOpenSSL());
			ПолучениеЗапрос = "bot"+ТокенБота+"/sendMessage?chat_id="+ИдЧата+"&text="+ПроизвольныйТекст + "&reply_markup=" +Клавиатура;
			Запрос = Новый HTTPЗапрос(ПолучениеЗапрос);
			Ответ = Соединение.Получить(Запрос);
			
			ЧтениеJSON = Новый ЧтениеJSON();
			ЧтениеJSON.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку());
			Результат = ПрочитатьJSON(ЧтениеJSON);
			ЧтениеJSON.Закрыть();
			
		КонецЦикла;
		
		Сообщить(СообщитьТекст);
		//Возврат Ответ;
	КонецЕсли;
	
	
КонецПроцедуры

Функция ЗапросТокенаБота()
	
	ТокенБота = ES_ОбщегоНазначения.ПолучитьСтартовуюНастройку(Перечисления.ES_ВидыСтартовыхНастроек.ТокенБотаДляТелеграм);
	
	Если Не ЗначениеЗаполнено(ТокенБота) Тогда
		
		Сообщить("Заполните в стартовых настройках значение токена бота");
		
	КонецЕсли;
		
	Возврат ТокенБота;
	
КонецФункции

	
Функция ЗапросИДЧатаДляБота()
	
	ИДЧата = ES_ОбщегоНазначения.ПолучитьСтартовуюНастройку(Перечисления.ES_ВидыСтартовыхНастроек.ИДЧатаДляТелеграм);
	Если Не ЗначениеЗаполнено(ИДЧата) Тогда
		Сообщить("Отправте боту команду /start с вашего чата или заполните в стартовых настройках");
	КонецЕсли;
	Возврат ИДЧата;
	
	
КонецФункции

//Запрос в базу для редактирования или создания документов
//
//Запрос - запрос от телеграмм
//Область - область разделения данных
//Пользователь - пользователь ИБ
//Параль - для входа в ИБ
//ШаблонHTTPСервиса -
//ДопПараметры - ИденификаторТелеграм или УникальныйИдентификаторДокумента
Функция ЗапросВРабочуюБазу(Запрос, ШаблонHTTPСервиса, ТелоЗапроса) Экспорт
	
	ЛогинПользователя = ES_ОбщегоНазначения.ПолучитьСтартовуюНастройку(Перечисления.ES_ВидыСтартовыхНастроек.ЛогинПользователяИБ);
	Пароль = ES_ОбщегоНазначения.ПолучитьСтартовуюНастройку(Перечисления.ES_ВидыСтартовыхНастроек.ПарольПользователяИБ);
	ТекОбласть = Строка(ПараметрыСеанса.ОбластьДанныхОсновныеДанные);
	
	// Создаем новое HTTP соединение с указанием сервера
	// Последний параметр отвечает за использование защищенного соединения
	ИмяСервера = "unf.42clouds.com";
	ЗащищенноеСоединение = Новый ЗащищенноеСоединениеOpenSSL(Новый СертификатКлиентаWindows, Новый СертификатыУдостоверяющихЦентровWindows);
	HTTP = Новый HTTPСоединение(ИмяСервера,443,ЛогинПользователя,Пароль,,,ЗащищенноеСоединение);
	// Получим временный файл для передачи в теле POST запроса
	ФайлТелаЗапроса = ПолучитьИмяВременногоФайла();
	// Запишем в файл содержимое тела запроса (текст)
	ТекстФайл = Новый ТекстовыйДокумент;
	ТекстФайл.УстановитьТекст(ТелоЗапроса);
	ТекстФайл.Записать(ФайлТелаЗапроса, "CESU-8");
	// Получим размер данных для передачи в заголовок
	ФайлНаОтправку = Новый Файл(ФайлТелаЗапроса);
	РазмерФайлаНаОтправку = XMLСтрока(ФайлНаОтправку.Размер());
	// Получим временный файл — тело ответа POST запроса
	ФайлРезультат = ПолучитьИмяВременногоФайла();
	// Заголовок создадим в виде соответствия
	ЗаголовокЗапросаHTTP = Новый Соответствие();
	// Передаем в заголовках размер и тип данных на отправку
	ЗаголовокЗапросаHTTP.Вставить("Content-Length", РазмерФайлаНаОтправку);
	ЗаголовокЗапросаHTTP.Вставить("Content-Type", "application/json; charset=utf-8");
	// Отсылаем POST запрос на обработку.
	// СсылкаНаРесурс — ссылка на веб-сервер (страницу), к которой посылается POST запрос
	СсылкаНаРесурс = "unf_base1/"+ТекОбласть+"/hs/Forbot1c/" + ШаблонHTTPСервиса;//1059
	HTTP.ОтправитьДляОбработки(ФайлТелаЗапроса, СсылкаНаРесурс, ФайлРезультат);
	// Получим ответ
	ТекстовыйФайлОтвета = Новый ТекстовыйДокумент;
	ТекстовыйФайлОтвета.Прочитать(ФайлРезультат, КодировкаТекста.UTF8);
	СтрокаОтветаСервера = ТекстовыйФайлОтвета.ПолучитьТекст();
	Возврат СтрокаОтветаСервера; 
	
КонецФункции

Функция ПрочитатьОтветJSON(Запрос) Экспорт
	//Получаем данные сообщений
	ТелоЗапроса = Запрос.ПолучитьТелоКакСтроку(); 
	
	//Читаем полученные данный форматаJSON
	ЧтениеJSON = Новый ЧтениеJSON();
	ЧтениеJSON.УстановитьСтроку(ТелоЗапроса);
	Результат = ПрочитатьJSON(ЧтениеJSON);
	ЧтениеJSON.Закрыть();
	
	
	Возврат Результат;
	
КонецФункции