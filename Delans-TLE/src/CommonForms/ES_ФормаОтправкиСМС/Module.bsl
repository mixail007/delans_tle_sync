
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//EFSOL_Сальник К.А. 2018-12-07 {+
	
	СсылкаНаОтчет = Параметры.Документ;
	
	СтатусыЗаказов = Новый ТаблицаЗначений;
	СтатусыЗаказов.Колонки.Добавить("Заказ",,"Заказ");
	СтатусыЗаказов.Колонки.Добавить("Статус",,"Статус");   
	
	ЗапросШаблоны = Новый Запрос;
	ЗапросШаблоны.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ШаблоныСообщений.ТекстШаблонаSMS, """") КАК ТекстШаблона,
	|	ШаблоныСообщений.Ссылка КАК ИмяШаблона
	|ИЗ
	|	Справочник.ШаблоныСообщений КАК ШаблоныСообщений
	|ГДЕ
	|	НЕ ШаблоныСообщений.ПометкаУдаления
	|	И ШаблоныСообщений.ПредназначенДляSMS";  	
	
	РезультатЗапросаШаблон = ЗапросШаблоны.Выполнить();
	Если НЕ РезультатЗапросаШаблон.Пустой() Тогда
		ВыборкаДетальныеЗаписиШаблон = РезультатЗапросаШаблон.Выбрать();
		Если ВыборкаДетальныеЗаписиШаблон.Следующий() Тогда
			ИмяШаблона 	= ВыборкаДетальныеЗаписиШаблон.ИмяШаблона;
			ШаблонТекста = ВыборкаДетальныеЗаписиШаблон.ТекстШаблона;  			
		КонецЕсли;  		
	КонецЕсли;
	
	ОбновитьДанные(СтатусыЗаказов, ИмяШаблона);
	
	//Для Каждого Элемент Из Список Цикл	
	//	Элемент.Шаблон 	= ИмяШаблона;
	//	Элемент.ТекстСМС = СформироватьТекстСообщения(Элемент.Заказ, ШаблонТекста, СтатусыЗаказов);
	//КонецЦикла;
	
	
	
	//ИмяОтправителя = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НастройкиSMS","ИмяОтправителяSMS");
	Владелец = Справочники.ИдентификаторыОбъектовМетаданных.НайтиПоНаименованию("Провайдер SMS (Константа)");
	
	Если ОбщегоНазначения.РазделениеВключено() Тогда
		ИмяРегистра = "БезопасноеХранилищеДанныхОбластейДанных";
	Иначе
		ИмяРегистра = "БезопасноеХранилищеДанных";
	КонецЕсли;
	ИмяОтправителя = ES_ОбщегоНазначения.ДанныеИзБезопасногоХранилища(Владелец, ИмяРегистра, "ИмяОтправителя").ИмяОтправителя;

	//EFSOL_Сальник К.А.  -}	
КонецПроцедуры


//-----------------СОБЫТИЯ КНОПОК------------------------//
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СнятьСоВсех(Команда)	
	Отметить(Команда.Имя);  
КонецПроцедуры   

&НаКлиенте
Процедура ОтметитьВсе(Команда)
	Отметить(Команда.Имя);   
КонецПроцедуры

&НаКлиенте
Процедура Отметить(ВидОтметки)
	
	ЗначениеОтметки = ?(ВидОтметки = "ОтметитьВсе", Истина, Ложь);
	Для каждого Строка Из Список Цикл
		Строка.Отметить = ЗначениеОтметки;
	КонецЦикла; 
	
КонецПроцедуры


&НаКлиенте
Процедура ДобавитьЗаказ(Команда)
	СтруктураОтбора = Новый Структура("ВидОперации", ПредопределенноеЗначение("Перечисление.ВидыОперацийЗаказПокупателя.ES_ЗаказНаДоставку"));
	
	ОткрытьФорму("Документ.ЗаказПокупателя.ФормаВыбора", СтруктураОтбора, ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ОтправитьСМС(Команда) 	
	
	Документ = СсылкаНаОтчет; 
	                              	
	Если Список.Количество() = 0 Тогда
		Сообщить("Не заполнен список получателей");
		Возврат;
	КонецЕсли;  	
	
	If СтрокаНаписанаРусскимиИлиЛатинскими(ИмяОтправителя) Then		
		Сообщить("Имя отправителя может содержать ЛАТИНСКИЕ буквы в разных регистрах, цифры, пробелы, а так же спецсимволы. Длина имени отправителя не должна превышать 11 символов, с учетом пробелов.");
		Возврат;
	Endif;

	
	Для Каждого Эл Из Список Цикл
		Если Эл.Отметить и Эл.Отправлено = Ложь Тогда
			
			Телефон = УдалитьВсеСимволыКромеЦифр(Эл.Телефон);
			
			If СтрДлина(СокрЛП(Телефон)) < 11 OR СтрДлина(СокрЛП(Телефон)) > 15 Then
				Сообщить("Номер телефона получателя должен быть 11-15 цифр");
				Return;
			EndIF;
			If СтрДлина(СокрЛП(Телефон)) < 1 OR СтрДлина(СокрЛП(Телефон)) > 1000 Then
				Сообщить("Текс сообщения должен быть 1-1000 символов");
				Return;
			EndIF;			
			
			 Ответ = ОтправитьСМСЗапрос(Документ, Эл.Заказ, ИмяОтправителя, СокрЛП(Телефон), Эл.ТекстСМС);
			 
			 Эл.КодОтправки = Ответ.Код;
			 Если Эл.КодОтправки = 200 Тогда
				 Информация = Ответ.Ответ;
				 Результат = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Информация, ";");
				Если Результат[0] = "accepted" Тогда
					 Эл.ИнформацияОбОтправке = "Статус SMS: " + Результат[0] + Символы.ПС + "Идентификатор SMS: " + Результат[1];
					 Эл.Отметить = Ложь;
					 Эл.Отправлено = Истина;
					 ЗаписатьВРегистрСтатусыСМС(Результат, Эл.Заказ, Эл.Шаблон, Эл.Телефон, Эл.ТекстСМС);				 
				 ИначеЕсли Результат[0] = "error" и Результат[1] = "invalid mobile phone" Тогда 
					 Эл.ИнформацияОбОтправке = "Неверно задан номер тефона (формат +71234567890)";
				 ИначеЕсли Результат[0] = "error" и Результат[1] = "text is empty" Тогда
					 Эл.ИнформацияОбОтправке = "Отсутствует текст";
				 ИначеЕсли Результат[0] = "error" и Результат[1] = "sender address invalid" Тогда
					 Эл.ИнформацияОбОтправке = "Неверная (незарегистрированная) подпись отправителя";
				 ИначеЕсли Результат[0] = "error" и Результат[1] = "wapurl invalid" Тогда
					 Эл.ИнформацияОбОтправке = "Неправильный формат wap-push ссылки";
				 ИначеЕсли Результат[0] = "error" и Результат[1] = "not enough balance" Тогда
					 Эл.ИнформацияОбОтправке = "Баланс пуст (проверьте баланс)";
				 КонецЕсли;
			 Иначе
				 Эл.ИнформацияОбОтправке = Ответ.Ответ;
			 КонецЕсли;
			 		 
		 КонецЕсли;	
		
	КонецЦикла;   	
	
	Сообщить("Отправка сообщений выполнена!");

КонецПроцедуры

Процедура ЗаписатьВРегистрСтатусыСМС(Результат, Заказ, Шаблон, Телефон, ТекстСМС) 
	
	НоваяЗапись = РегистрыСведений.ES_СтатусыSMSСообщений.СоздатьМенеджерЗаписи(); 
	НоваяЗапись.Период = ТекущаяДата();
	НоваяЗапись.Заказ = Заказ;
	НоваяЗапись.Шаблон = Шаблон;
	НоваяЗапись.IdSMS = Результат[1];
	НоваяЗапись.СтатусSMS = Результат[0];
	НоваяЗапись.ТелефонПолучателя = Телефон;
	НоваяЗапись.ТекстSMS = ТекстСМС;
	НоваяЗапись.Попытки = 0;
	НоваяЗапись.Записать();	
	
КонецПроцедуры


Процедура ОбновитьКодОшибки()
	
	Запрос = Новый Запрос;
	
	Если ТипЗнч(СсылкаНаОтчет) = Тип("ДокументСсылка.ES_ОтчетОДоставке") Тогда
		Запрос.Текст =	
		"ВЫБРАТЬ
		|	ЗаказПокупателя.Ссылка КАК Заказ,
		|	ЗаказПокупателя.Контрагент КАК Контрагент,
		|	ЗаказПокупателя.ES_Получатель КАК Получатель,
		|	ЗаказПокупателя.ES_ПолучательТелефон КАК Телефон,
		|	ES_СМСИнформированиеМегафонСрезПоследних.КодОшибки КАК КодОтправки
		|ИЗ
		|	Документ.ES_ОтчетОДоставке.Заказы КАК ES_ОтчетОДоставкеЗаказы
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ES_ОтчетОДоставке КАК ES_ОтчетОДоставке
		|		ПО ES_ОтчетОДоставкеЗаказы.Ссылка = ES_ОтчетОДоставке.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя КАК ЗаказПокупателя
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ES_СМСИнформированиеМегафон.СрезПоследних КАК ES_СМСИнформированиеМегафонСрезПоследних
		|			ПО ЗаказПокупателя.Ссылка = ES_СМСИнформированиеМегафонСрезПоследних.Заказ
		|		ПО ES_ОтчетОДоставкеЗаказы.ДокументДоставки = ЗаказПокупателя.Ссылка
		|ГДЕ
		|	ES_ОтчетОДоставке.Ссылка = &Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	Контрагент,
		|	Телефон";
	Иначе
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗаказПокупателя.Ссылка КАК Заказ,
		|	ЗаказПокупателя.Контрагент КАК Контрагент,
		|	ЗаказПокупателя.ES_Получатель КАК Получатель,
		|	ЗаказПокупателя.ES_ПолучательТелефон КАК Телефон,
		|	ES_СМСИнформированиеМегафонСрезПоследних.КодОшибки КАК КодОтправки
		|ИЗ
		|	Документ.ES_ПланДоставки.Заказы КАК ES_ПланДоставкиЗаказы
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ES_ПланДоставки КАК ES_ПланДоставки
		|		ПО ES_ПланДоставкиЗаказы.Ссылка = ES_ПланДоставки.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя КАК ЗаказПокупателя
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ES_СМСИнформированиеМегафон.СрезПоследних КАК ES_СМСИнформированиеМегафонСрезПоследних
		|			ПО ЗаказПокупателя.Ссылка = ES_СМСИнформированиеМегафонСрезПоследних.Заказ
		|		ПО ES_ПланДоставкиЗаказы.ДокументДоставки = ЗаказПокупателя.Ссылка
		|ГДЕ
		|	ES_ПланДоставки.Ссылка = &Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	Контрагент,
		|	Телефон"; 		
		
	КонецЕсли;

	
	Запрос.УстановитьПараметр("Ссылка", СсылкаНаОтчет);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Список.Очистить();	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НоваяСтрока = Список.Добавить();
		//ЗаполнитьЗначенияСвойств(НоваяСтрока,ВыборкаДетальныеЗаписи);
		НоваяСтрока.КодОтправки =  ВыборкаДетальныеЗаписи.КодОтправки;
	КонецЦикла;  
	
КонецПроцедуры


Процедура ОбновитьДанные(СтатусыЗаказов, ИмяШаблона)
	
	Запрос = Новый Запрос;
	
	Если ТипЗнч(СсылкаНаОтчет) = Тип("ДокументСсылка.ES_ОтчетОДоставке") Тогда
		Запрос.Текст =	
		"ВЫБРАТЬ
		|	ЗаказПокупателя.Ссылка КАК Заказ,
		|	ЗаказПокупателя.Контрагент КАК Контрагент,
		|	ЗаказПокупателя.ES_Получатель КАК Получатель,
		|	ЗаказПокупателя.ES_ПолучательТелефон КАК Телефон,
		|	ES_СтатусыЗаказовСрезПоследних.СтатусЗаказа КАК СтатусЗаказа
		|ПОМЕСТИТЬ вт
		|ИЗ
		|	Документ.ES_ОтчетОДоставке.Заказы КАК ES_ОтчетОДоставкеЗаказы
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ES_ОтчетОДоставке КАК ES_ОтчетОДоставке
		|		ПО ES_ОтчетОДоставкеЗаказы.Ссылка = ES_ОтчетОДоставке.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя КАК ЗаказПокупателя
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ES_СтатусыЗаказов.СрезПоследних КАК ES_СтатусыЗаказовСрезПоследних
		|			ПО ЗаказПокупателя.Ссылка = ES_СтатусыЗаказовСрезПоследних.Заказ
		|		ПО ES_ОтчетОДоставкеЗаказы.ДокументДоставки = ЗаказПокупателя.Ссылка
		|ГДЕ
		|	ES_ОтчетОДоставке.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	вт.Заказ КАК Заказ,
		|	вт.Контрагент КАК Контрагент,
		|	вт.Получатель КАК Получатель,
		|	вт.Телефон КАК Телефон,
		|	вт.СтатусЗаказа КАК СтатусЗаказа,
		|	ES_СтатусыSMSСообщенийСрезПоследних.IdSMS КАК IdSMS,
		|	ES_СтатусыSMSСообщенийСрезПоследних.СтатусSMS КАК СтатусSMS,
		|	ES_СтатусыSMSСообщенийСрезПоследних.ТекстSMS КАК ТекстSMS
		|ИЗ
		|	вт КАК вт
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ES_СтатусыSMSСообщений.СрезПоследних(
		|				,
		|				Шаблон = &Шаблон
		|					И Заказ В
		|						(ВЫБРАТЬ
		|							вт.Заказ
		|						ИЗ
		|							вт)
		|					И ТелефонПолучателя В
		|						(ВЫБРАТЬ
		|							вт.телефон
		|						ИЗ
		|							вт)) КАК ES_СтатусыSMSСообщенийСрезПоследних
		|		ПО вт.Заказ = ES_СтатусыSMSСообщенийСрезПоследних.Заказ
		|			И вт.Телефон = ES_СтатусыSMSСообщенийСрезПоследних.ТелефонПолучателя";
		Запрос.УстановитьПараметр("Ссылка", СсылкаНаОтчет);
	ИначеЕсли ТипЗнч(СсылкаНаОтчет) = Тип("ДокументСсылка.ES_ПланДоставки") Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗаказПокупателя.Ссылка КАК Заказ,
		|	ЗаказПокупателя.Контрагент КАК Контрагент,
		|	ЗаказПокупателя.ES_Получатель КАК Получатель,
		|	ЗаказПокупателя.ES_ПолучательТелефон КАК Телефон,
		|	ES_СтатусыЗаказовСрезПоследних.СтатусЗаказа КАК СтатусЗаказа
		|ПОМЕСТИТЬ вт
		|ИЗ
		|	Документ.ES_ПланДоставки.Заказы КАК ES_ПланДоставкиЗаказы
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ES_ПланДоставки КАК ES_ПланДоставки
		|		ПО ES_ПланДоставкиЗаказы.Ссылка = ES_ПланДоставки.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя КАК ЗаказПокупателя
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ES_СтатусыЗаказов.СрезПоследних КАК ES_СтатусыЗаказовСрезПоследних
		|			ПО ЗаказПокупателя.Ссылка = ES_СтатусыЗаказовСрезПоследних.Заказ
		|		ПО ES_ПланДоставкиЗаказы.ДокументДоставки = ЗаказПокупателя.Ссылка
		|ГДЕ
		|	ES_ПланДоставки.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	вт.Заказ КАК Заказ,
		|	вт.Контрагент КАК Контрагент,
		|	вт.Получатель КАК Получатель,
		|	вт.Телефон КАК Телефон,
		|	вт.СтатусЗаказа КАК СтатусЗаказа,
		|	ES_СтатусыSMSСообщенийСрезПоследних.IdSMS КАК IdSMS,
		|	ES_СтатусыSMSСообщенийСрезПоследних.СтатусSMS КАК СтатусSMS,
		|	ES_СтатусыSMSСообщенийСрезПоследних.ТекстSMS КАК ТекстSMS
		|ИЗ
		|	вт КАК вт
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ES_СтатусыSMSСообщений.СрезПоследних(
		|				,
		|				Шаблон = &Шаблон
		|					И Заказ В
		|						(ВЫБРАТЬ
		|							вт.Заказ
		|						ИЗ
		|							вт)
		|					И ТелефонПолучателя В
		|						(ВЫБРАТЬ
		|							вт.Телефон
		|						ИЗ
		|							вт)) КАК ES_СтатусыSMSСообщенийСрезПоследних
		|		ПО вт.Заказ = ES_СтатусыSMSСообщенийСрезПоследних.Заказ
		|			И вт.Телефон = ES_СтатусыSMSСообщенийСрезПоследних.ТелефонПолучателя";
		Запрос.УстановитьПараметр("Ссылка", СсылкаНаОтчет);
	Иначе
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ВложенныйЗапрос.Ссылка КАК Заказ,
		|	ВложенныйЗапрос.Ссылка.Контрагент КАК Контрагент,
		|	ВложенныйЗапрос.Ссылка.ES_Получатель КАК Получатель,
		|	ВложенныйЗапрос.Ссылка.ES_ПолучательТелефон КАК Телефон,
		|	ES_СтатусыЗаказовСрезПоследних.СтатусЗаказа КАК СтатусЗаказа
		|ПОМЕСТИТЬ вт
		|ИЗ
		|	(ВЫБРАТЬ
		|		ЗаказПокупателя.Ссылка КАК Ссылка
		|	ИЗ
		|		Документ.ЗаказПокупателя КАК ЗаказПокупателя
		|	ГДЕ
		|		ЗаказПокупателя.Ссылка В(&МассивЗаказов)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ЗаказПокупателя.Ссылка) КАК ВложенныйЗапрос
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ES_СтатусыЗаказов.СрезПоследних КАК ES_СтатусыЗаказовСрезПоследних
		|		ПО ВложенныйЗапрос.Ссылка = ES_СтатусыЗаказовСрезПоследних.Заказ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	вт.Заказ КАК Заказ,
		|	вт.Контрагент КАК Контрагент,
		|	вт.Получатель КАК Получатель,
		|	вт.Телефон КАК Телефон,
		|	вт.СтатусЗаказа КАК СтатусЗаказа,
		|	ES_СтатусыSMSСообщенийСрезПоследних.IdSMS КАК IdSMS,
		|	ES_СтатусыSMSСообщенийСрезПоследних.СтатусSMS КАК СтатусSMS,
		|	ES_СтатусыSMSСообщенийСрезПоследних.ТекстSMS КАК ТекстSMS
		|ИЗ
		|	вт КАК вт
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ES_СтатусыSMSСообщений.СрезПоследних(
		|				,
		|				Шаблон = &Шаблон
		|					И Заказ В
		|						(ВЫБРАТЬ
		|							вт.Заказ
		|						ИЗ
		|							вт)
		|					И ТелефонПолучателя В
		|						(ВЫБРАТЬ
		|							вт.Телефон
		|						ИЗ
		|							вт)) КАК ES_СтатусыSMSСообщенийСрезПоследних
		|		ПО вт.Заказ = ES_СтатусыSMSСообщенийСрезПоследних.Заказ
		|			И вт.Телефон = ES_СтатусыSMSСообщенийСрезПоследних.ТелефонПолучателя"; 
		Запрос.УстановитьПараметр("МассивЗаказов", СсылкаНаОтчет);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Шаблон", ИмяШаблона);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Список.Очистить();	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ТипЗнч(ВыборкаДетальныеЗаписи.Заказ) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда 
			НоваяСтрока = Список.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,ВыборкаДетальныеЗаписи);
			Статусы = СтатусыЗаказов.Добавить();
			Статусы.Заказ = ВыборкаДетальныеЗаписи.Заказ;
			Статусы.Статус = ВыборкаДетальныеЗаписи.СтатусЗаказа;
			НоваяСтрока.Шаблон 	= ИмяШаблона;
			НоваяСтрока.ТекстСМС = СформироватьТекстСообщения(НоваяСтрока.Заказ, ШаблонТекста, ВыборкаДетальныеЗаписи.СтатусЗаказа);
			
			
			Если ES_YandexMaps.УбратьнепечатаемыеСимволыВКарте(ВыборкаДетальныеЗаписи.ТекстSMS) = ES_YandexMaps.УбратьнепечатаемыеСимволыВКарте(НоваяСтрока.ТекстСМС) Тогда 
				НоваяСтрока.Отправлено = Истина;
				НоваяСтрока.КодОтправки = 200;
				НоваяСтрока.ИнформацияОбОтправке = "Статус SMS: " + ВыборкаДетальныеЗаписи.СтатусSMS + Символы.ПС + "Идентификатор SMS: " + ВыборкаДетальныеЗаписи.IdSMS;
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;  
	
	Если Список.Количество() = 0 Тогда
		Сообщить("В документе отсутствуют заказы!");
	КонецЕсли;
		
КонецПроцедуры

Функция УдалитьВсеСимволыКромеЦифр(ВхСтрока)  	
	
	ВыхСтрока="";
	
	Для п=1 По СтрДлина(ВхСтрока) Цикл
		
		Симв=Сред(ВхСтрока,п,1);
		
		Если Симв>="0" И Симв<="9" Тогда
			
			ВыхСтрока=ВыхСтрока+Симв;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ВыхСтрока;  	
	
КонецФункции


Функция ОтправитьСМСЗапрос(Документ, Заказ, ИмяОтправителя, Телефон, ТекстСМС)
	
	Возврат ES_SMSИнформированиеПростор.SendSMSProstor(Документ, Заказ, ИмяОтправителя, Телефон, ТекстСМС); 
	
КонецФункции

&НаКлиенте
Процедура СписокШаблонПриИзменении(Элемент)
	ТекСтрока = Элементы.Список.ТекущиеДанные;
	Если НЕ ТекСтрока = Неопределено Тогда
		СтруктураЗаказа = ПолучитьДанныеПоЗаказу(ТекСтрока.Заказ, ТекСтрока.Шаблон, ТекСтрока.ТекстСМС);
		//ТекСтрока.Получатель 		= СтруктураЗаказа.Контрагент;
		
		//ТекСтрока.Телефон 			= СтруктураЗаказа.Телефон;
		ТекСтрока.ТекстСМС		 	= СтруктураЗаказа.ТекстСообщения;
	КонецЕсли; 
	
	Результат = ПроверитьОтправкуСМС(ТекСтрока.Заказ, ТекСтрока.Телефон, ТекСтрока.Шаблон, ТекСтрока.ТекстСМС);
	Если Результат = Неопределено Тогда 
		ТекСтрока.Отправлено = Ложь;
		ТекСтрока.КодОтправки = Неопределено;
		ТекСтрока.ИнформацияОбОтправке = Неопределено;
	Иначе
		ТекСтрока.Отправлено = Результат.Отправлено;
		ТекСтрока.КодОтправки = Результат.КодОтправки;
	    ТекСтрока.ИнформацияОбОтправке = Результат.ИнформацияОбОтправке;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПроверитьОтправкуСМС(Заказ, Телефон, Шаблон, ТекстСМС)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ES_СтатусыSMSСообщенийСрезПоследних.IdSMS КАК IdSMS,
		|	ES_СтатусыSMSСообщенийСрезПоследних.СтатусSMS КАК СтатусSMS,
		|	ES_СтатусыSMSСообщенийСрезПоследних.ТекстSMS КАК ТекстSMS
		|ИЗ
		|	РегистрСведений.ES_СтатусыSMSСообщений.СрезПоследних(
		|			,
		|			Заказ = &Заказ
		|				И ТелефонПолучателя = &Телефон
		|				И Шаблон = &Шаблон) КАК ES_СтатусыSMSСообщенийСрезПоследних";
	
	Запрос.УстановитьПараметр("Заказ", Заказ);
	Запрос.УстановитьПараметр("Телефон", Телефон);
	Запрос.УстановитьПараметр("Шаблон", Шаблон);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Если РезультатЗапроса.Количество() <> 0 Тогда
		Если ES_YandexMaps.УбратьнепечатаемыеСимволыВКарте(РезультатЗапроса[0].ТекстSMS) = ES_YandexMaps.УбратьнепечатаемыеСимволыВКарте(ТекстСМС) Тогда 
			Структура = Новый Структура;
			Структура.Вставить("Отправлено", Истина);
			Структура.Вставить("КодОтправки", 200);
			Структура.Вставить("ИнформацияОбОтправке","Статус SMS: " + РезультатЗапроса[0].СтатусSMS + Символы.ПС + "Идентификатор SMS: " + РезультатЗапроса[0].IdSMS);
			Возврат Структура;	
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	
КонецФункции 

&НаСервере
Функция ПолучитьДанныеПоЗаказу(ЗаказДоставки, Шаблон, Текст)
	
	СтруктураВозврата = Новый Структура("Контрагент, Телефон, Получатель, ТекстСообщения", Справочники.Контрагенты.ПустаяСсылка(), "", "");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказПокупателя.Ссылка КАК Ссылка,
		|	ЗаказПокупателя.Контрагент КАК Контрагент,
		|	ЗаказПокупателя.ES_Получатель КАК Получатель,
		|	ЗаказПокупателя.ES_ПолучательТелефон КАК Телефон,
		|	ЗаказПокупателя.ES_НомерНакладной КАК КодЗаказа,
		|	ES_СтатусыЗаказовСрезПоследних.СтатусЗаказа КАК СтатусЗаказа
		|ИЗ
		|	РегистрСведений.ES_СтатусыЗаказов.СрезПоследних(, Заказ = &Ссылка) КАК ES_СтатусыЗаказовСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя КАК ЗаказПокупателя
		|		ПО ES_СтатусыЗаказовСрезПоследних.Заказ = ЗаказПокупателя.Ссылка
		|ГДЕ
		|	ЗаказПокупателя.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ЗаказДоставки);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		СтруктураВозврата.Вставить("Контрагент", 		Выборка.Контрагент);
		СтруктураВозврата.Вставить("Телефон", 			Выборка.Телефон);
		СтруктураВозврата.Вставить("Получатель", 		Выборка.Получатель);
		СтруктураВозврата.Вставить("ТекстСообщения", 	СформироватьТекстСообщенияПоСтроке(Выборка.Ссылка, Шаблон, Текст, Выборка.СтатусЗаказа));
		
	КонецЕсли;

	Возврат СтруктураВозврата;
	
КонецФункции

&НаСервере
Функция СформироватьТекстСообщенияПоСтроке(ТекНомерЗаказа, Шаблон, Текст, СтатусЗаказа)   
	
	ЗапросШаблоны = Новый Запрос;
	ЗапросШаблоны.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ШаблоныСообщений.ТекстШаблонаSMS, """") КАК ТекстШаблона    	
	|ИЗ
	|	Справочник.ШаблоныСообщений КАК ШаблоныСообщений
	|ГДЕ
	|	НЕ ШаблоныСообщений.ПометкаУдаления
	|	И ШаблоныСообщений.ПредназначенДляSMS
	|	И ШаблоныСообщений.Ссылка = &Ссылка";  
	
	ЗапросШаблоны.УстановитьПараметр("Ссылка", Шаблон);   
	
	РезультатЗапросаШаблон = ЗапросШаблоны.Выполнить();
	Если НЕ РезультатЗапросаШаблон.Пустой() Тогда
		ВыборкаДетальныеЗаписиШаблон = РезультатЗапросаШаблон.Выбрать();
		Если ВыборкаДетальныеЗаписиШаблон.Следующий() Тогда			
			ТекстСМС = ВыборкаДетальныеЗаписиШаблон.ТекстШаблона;  			
		КонецЕсли;  		
	Иначе   		
		ШаблонСообщения = "";     		
	КонецЕсли; 	
	
	Текст = СформироватьТекстСообщения(ТекНомерЗаказа, ТекстСМС, СтатусЗаказа);    	
	
	ТекстСообщенияТекСтроки = Текст;
	Если Найти(ТекстСообщенияТекСтроки, "[КодЗаказа]") > 0 Тогда
		ТекстСообщенияТекСтроки = СтрЗаменить(ТекстСообщенияТекСтроки, "[КодЗаказа]", "" + ТекНомерЗаказа);
	КонецЕсли; 
	
	Возврат СокрЛП(ТекстСообщенияТекСтроки);
	
КонецФункции


&НаСервере
Функция СформироватьТекстСообщения(ТекНомерЗаказа, ТекущаяСтрШаблона, СтатусЗаказа)     	
		
	ТекстСообщенияТекСтроки = ПолучитьТекстИзШаблона(ТекущаяСтрШаблона, ТекНомерЗаказа, СтатусЗаказа);
	
	Возврат СокрЛП(ТекстСообщенияТекСтроки);
	
КонецФункции

&НаКлиенте
Процедура ИмяШаблонаПриИзменении(Элемент)   	
		
	  ЗаполнитьЗначениеШаблона();
	  
КонецПроцедуры

Процедура ЗаполнитьЗначениеШаблона()
	ЗапросШаблоны = Новый Запрос;
	ЗапросШаблоны.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ШаблоныСообщений.ТекстШаблонаSMS, """") КАК ТекстШаблона    	
	|ИЗ
	|	Справочник.ШаблоныСообщений КАК ШаблоныСообщений
	|ГДЕ
	|	НЕ ШаблоныСообщений.ПометкаУдаления
	|	И ШаблоныСообщений.ПредназначенДляSMS
	|	И ШаблоныСообщений.Ссылка = &Ссылка";  
	
	ЗапросШаблоны.УстановитьПараметр("Ссылка", ИмяШаблона);   
	
	РезультатЗапросаШаблон = ЗапросШаблоны.Выполнить();
	Если НЕ РезультатЗапросаШаблон.Пустой() Тогда
		ВыборкаДетальныеЗаписиШаблон = РезультатЗапросаШаблон.Выбрать();
		Если ВыборкаДетальныеЗаписиШаблон.Следующий() Тогда			
			ШаблонТекста = ВыборкаДетальныеЗаписиШаблон.ТекстШаблона;  			
		КонецЕсли;  		
	Иначе   		
		ШаблонТекста = "";     		
	КонецЕсли; 	
	
	Для Каждого Эл Из Список Цикл	
		Эл.Шаблон = ИмяШаблона;
		Эл.ТекстСМС = СформироватьТекстСообщения(Эл.Заказ, ШаблонТекста, Неопределено);
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьТекстИзШаблона(Строка,ЗаказСсылка, СтатусЗаказа)
	
	ТекстСообщенияТекСтроки = Строка;
	
	Масс = Новый Массив;
	Стрр = Новый Структура;
	
	СтрокаРазложенная = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивСлов(Строка,"[");  	
	мСтрокаЗамены = "";	
	Для Каждого Стр Из СтрокаРазложенная Цикл 
		ЧислоСимв = СтрНайти(Стр,"]");
		Если ЧислоСимв > 0 Тогда
		    ИмяРеквизита = Лев(Стр,ЧислоСимв-1);
			Точка = СтрНайти(ИмяРеквизита,".");
			Представление = Прав(ИмяРеквизита,СтрДлина(ИмяРеквизита) - Точка);
			
			Если Представление = "СтатусЗаказа" Тогда 
				//СтатусЗаказа = СтатусыЗаказов.Найти(ЗаказСсылка, "Заказ").Статус;
				ТекстСообщенияТекСтроки = СтрЗаменить(ТекстСообщенияТекСтроки, "[" + ИмяРеквизита + "]", ?(ЗначениеЗаполнено(СтатусЗаказа), СтатусЗаказа, ""));
			ИначеЕсли Представление = "ES_ДатаДоставки" Тогда 
				ТекстСообщенияТекСтроки = СтрЗаменить(ТекстСообщенияТекСтроки, "[" + ИмяРеквизита + "]", ?(ЗначениеЗаполнено(ЗаказСсылка[Представление]), Формат(ЗаказСсылка[Представление], "ДФ=dd.MM.yyyy"), ""));
			ИначеЕсли Представление = "ES_ВремяДоставкиС" или Представление = "ES_ВремяДоставкиПо" Тогда 
				ТекстСообщенияТекСтроки = СтрЗаменить(ТекстСообщенияТекСтроки, "[" + ИмяРеквизита + "]", ?(ЗначениеЗаполнено(ЗаказСсылка[Представление]), Лев(Формат(ЗаказСсылка[Представление], "ДЛФ=T"), СтрДлина(Формат(ЗаказСсылка[Представление], "ДЛФ=T"))-3), ""));	
			Иначе
				ТекстСообщенияТекСтроки = СтрЗаменить(ТекстСообщенияТекСтроки, "[" + ИмяРеквизита + "]", ?(ЗначениеЗаполнено(ЗаказСсылка[Представление]), ЗаказСсылка[Представление], ""));					
			КонецЕсли;			
			
		КонецЕсли;		
	КонецЦикла;	
	
	//Запрос = Новый Запрос;
	//ЗапросТекст = "ВЫБРАТЬ
	//			|	#СтрокаЗамены#
	//			|	ЗаказПокупателя.Ссылка КАК Ссылка
	//			|ИЗ
	//			|	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	//			|ГДЕ
	//			|	ЗаказПокупателя.Ссылка = &Ссылка";
	//
	//Запрос.Текст = СтрЗаменить(ЗапросТекст, "#СтрокаЗамены#", мСтрокаЗамены);
	//Запрос.УстановитьПараметр("Ссылка", ЗаказСсылка);
	//
	//РезультатЗапросаШаблон = Запрос.Выполнить().Выгрузить(); 	
		
	Возврат ТекстСообщенияТекСтроки;
	
КонецФункции

Функция СтрокаНаписанаРусскимиИлиЛатинскими(Знач СтрокаПараметр)
	
	СтрокаПараметр = СокрЛП(СтрокаПараметр);	
	
	КоличествоСимволов = СтрДлина(СтрокаПараметр);
	
	ПервыйСимвол = КодСимвола(Лев(СтрокаПараметр,1)); 
	Русские = (ПервыйСимвол >= 192) или (ПервыйСимвол = 184) или (ПервыйСимвол = 168);
	
	СписокДопустимыхЗначений = Новый Соответствие;
	//СписокДопустимыхЗначений.Вставить(184,Истина);   // ё 32 - пробел, (48 - 57) - цифры
	//СписокДопустимыхЗначений.Вставить(168,Истина);   // Ё
	СписокДопустимыхЗначений.Вставить(45,Истина);   //  "-"
	
	Для Сч = 1 По КоличествоСимволов Цикл
		
		Код = КодСимвола(Сред(СтрокаПараметр,Сч));   
		
		Если (Код <> 45) и (Код <> 32) и ((Код < 33) или	(Код > 90) и (Код < 97) или (Код > 122) и не ((Код > 48) и (Код < 57))) Тогда     		
			
			Возврат Истина;
		КонецЕсли;
		
	КонецЦикла; 
	
	Возврат Ложь;
	
КонецФункции   

&НаКлиенте
Процедура ИмяОтправителяПриИзменении(Элемент)
	If СтрокаНаписанаРусскимиИлиЛатинскими(ИмяОтправителя) Then		
		Сообщить("Имя отправителя может содержать ЛАТИНСКИЕ буквы в разных регистрах, цифры, пробелы, а так же ""-"". Длина имени отправителя не должна превышать 11 символов, с учетом пробелов.");
	Endif
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОтчет(Команда)
	ПараметрыФормы = Новый Структура("СформироватьПриОткрытии, Отбор");
	
	ПараметрыФормы.СформироватьПриОткрытии = Истина;
	
	Отбор = Новый Структура("ПериодОтчета");
	Отбор.ПериодОтчета = Новый СтандартныйПериод(НачалоДня(ТекущаяДата()), КонецДня(ТекущаяДата()));
	
	ПараметрыФормы.Отбор = Отбор;
	
	ОткрытьФорму("Отчет.ES_ОтправкаSMSProstor.ФормаОбъекта", ПараметрыФормы);
КонецПроцедуры
#КонецОбласти


