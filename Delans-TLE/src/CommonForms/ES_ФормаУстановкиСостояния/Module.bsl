
////////////////////////////////////////////////////////////////////////////////
// СОБЫТИЯ ФОРМЫ

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("МассивЗаказов") Тогда
		ОтметкаПоПравилам = ?(Параметры.Свойство("ОтметкаПоПравилам"), Параметры.ОтметкаПоПравилам, Ложь);
		ЗаполнитьТаблицуЗаказами(Параметры.МассивЗаказов, ОтметкаПоПравилам);
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// СОБЫТИЯ ЭЛЕМЕНТОВ

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СписокЗаказовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокЗаказовПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// СОБЫТИЯ КНОПОК

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОтметитьВсе(Команда)
	
	Для каждого Строка Из СписокЗаказов Цикл
		Строка.Отметка = Истина;
	КонецЦикла; 
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьОтметки(Команда)
	
	Для каждого Строка Из СписокЗаказов Цикл
		Строка.Отметка = Ложь;
	КонецЦикла; 
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСостояние(Команда)
	
	Если НЕ ЗначениеЗаполнено(НовоеСостояние) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Выберите состояние";
		Сообщение.Поле = "НовоеСостояние";
		Сообщение.Сообщить(); 
		Возврат;
	КонецЕсли; 
	
	УстановитьСостояниеНаСервере();
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// Клиент

////////////////////////////////////////////////////////////////////////////////
// Вызов сервера

&НаСервере
Процедура ЗаполнитьТаблицуЗаказами(МассивЗаказов, ОтметкаПоПравилам = Ложь)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДокЗаказПокупателя.Ссылка
		|ПОМЕСТИТЬ ВТ_Заказы
		|ИЗ
		|	Документ.ЗаказПокупателя КАК ДокЗаказПокупателя
		|ГДЕ
		|	ДокЗаказПокупателя.Ссылка В(&МассивЗаказов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Заказы.Ссылка КАК ДокЗаказ,
		|	ЕСТЬNULL(ES_СостоянияЗаказовСрезПоследних.СостояниеЗаказа, НЕОПРЕДЕЛЕНО) КАК СостояниеЗаказа,
		|	ЕСТЬNULL(ES_СтатусыЗаказовСрезПоследних.СтатусЗаказа, НЕОПРЕДЕЛЕНО) КАК СтатусЗаказа,
		|	ЕСТЬNULL(ES_УчетДСпоЗаказамНаДоставкуОбороты.ФактСтоимостьДоставкиОборот, 0) КАК ФактСтоимостьДоставки
		|ИЗ
		|	ВТ_Заказы КАК ВТ_Заказы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ES_СтатусыЗаказов.СрезПоследних(
		|				,
		|				Заказ В
		|					(ВЫБРАТЬ
		|						ВТ_Заказы.Ссылка
		|					ИЗ
		|						ВТ_Заказы КАК ВТ_Заказы)) КАК ES_СтатусыЗаказовСрезПоследних
		|		ПО ВТ_Заказы.Ссылка = ES_СтатусыЗаказовСрезПоследних.Заказ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ES_СостоянияЗаказов.СрезПоследних(
		|				,
		|				Заказ В
		|					(ВЫБРАТЬ
		|						ВТ_Заказы.Ссылка
		|					ИЗ
		|						ВТ_Заказы КАК ВТ_Заказы)) КАК ES_СостоянияЗаказовСрезПоследних
		|		ПО ВТ_Заказы.Ссылка = ES_СостоянияЗаказовСрезПоследних.Заказ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ES_УчетДСпоЗаказамНаДоставку.Обороты(
		|				,
		|				,
		|				,
		|				Заказ В
		|					(ВЫБРАТЬ
		|						ВТ_Заказы.Ссылка
		|					ИЗ
		|						ВТ_Заказы КАК ВТ_Заказы)) КАК ES_УчетДСпоЗаказамНаДоставкуОбороты
		|		ПО ВТ_Заказы.Ссылка = ES_УчетДСпоЗаказамНаДоставкуОбороты.Заказ";
		
		
		Запрос.УстановитьПараметр("МассивЗаказов", МассивЗаказов);	
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
			
			Выборка = РезультатЗапроса.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				НовСтр = СписокЗаказов.Добавить();
				НовСтр.ЗаказНаДоставку 	= Выборка.ДокЗаказ;
				НовСтр.ТекущееСостояние = Выборка.СостояниеЗаказа;
				НовСтр.СтатусЗаказа 	= Выборка.СтатусЗаказа;
				Если ОтметкаПоПравилам Тогда
					НовСтр.Отметка = ?(Выборка.ФактСтоимостьДоставки > 0, Истина, Ложь);
				Иначе
					НовСтр.Отметка = Истина;
				КонецЕсли; 
			КонецЦикла;
			
		КонецЕсли; 
	
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСостояниеНаСервере()
	
	ЗаказыДляУстановкиСостояния = Новый Массив;
	Для каждого Строка Из СписокЗаказов Цикл
		Если Строка.Отметка Тогда
			ЗаказыДляУстановкиСостояния.Добавить(Строка.ЗаказНаДоставку);
		КонецЕсли; 
	КонецЦикла;
	
	Если ЗаказыДляУстановкиСостояния.Количество() = 0 Тогда
		Возврат;
	КонецЕсли; 
	
	Ответственный = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(Пользователи.ТекущийПользователь(), "ОсновнойОтветственный");

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ES_СостоянияЗаказовСрезПоследних.Заказ,
		|	ES_СостоянияЗаказовСрезПоследних.СостояниеЗаказа
		|ИЗ
		|	РегистрСведений.ES_СостоянияЗаказов.СрезПоследних(, Заказ В (&ЗаказыДляУстановкиСостояния)) КАК ES_СостоянияЗаказовСрезПоследних
		|ГДЕ
		|	ES_СостоянияЗаказовСрезПоследних.СостояниеЗаказа <> &СостояниеЗаказа";
	
	Запрос.УстановитьПараметр("ЗаказыДляУстановкиСостояния", ЗаказыДляУстановкиСостояния);
	Запрос.УстановитьПараметр("СостояниеЗаказа", НовоеСостояние);
	
	ПериодДляЗаписи = ТекущаяДата();
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			ДокОбъект = Выборка.Заказ.ПолучитьОбъект();
			ДокОбъект.СостояниеЗаказа = НовоеСостояние;
			
			РежимЗаписи = ?(ДокОбъект.Проведен, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись);
			
			Попытка
				ДокОбъект.Записать(РежимЗаписи);
			Исключение
			    Сообщить("Не удалось установить состояние " + ДокОбъект.Ссылка);
			КонецПопытки;

		КонецЦикла;
		
		Сообщить("Новое состояние установлено");
	КонецЕсли;
	
	
КонецПроцедуры

#КонецОбласти

