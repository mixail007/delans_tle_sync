
////////////////////////////////////////////////////////////////////////////////
// СОБЫТИЯ ФОРМЫ

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Заполнить шаблонами текста
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(ES_ШаблоныSMS_Получатель.ТекстШаблонаSMS, """") КАК ТекстШаблонаПолучатель,
		|	ES_ШаблоныSMS_Получатель.Ссылка КАК ИмяШаблонаПолучателя
		|ПОМЕСТИТЬ ВТ_Получатель
		|ИЗ
		|	Справочник.ES_SMS_ШаблоныSMS КАК ES_ШаблоныSMS_Получатель
		|ГДЕ
		|	НЕ ES_ШаблоныSMS_Получатель.ПометкаУдаления
		|	И НЕ ES_ШаблоныSMS_Получатель.ЭтоГруппа
		|	И ES_ШаблоныSMS_Получатель.ВидШаблонаSMS = &ВидШаблонаSMSПолучатель
		|	И ES_ШаблоныSMS_Получатель.Основной
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ES_ШаблоныSMS_Отправитель.ТекстШаблонаSMS, """") КАК ТекстШаблонаОтправитель,
		|	ES_ШаблоныSMS_Отправитель.Ссылка КАК ИмяШаблонаОтправителя
		|ПОМЕСТИТЬ ВТ_Отправитель
		|ИЗ
		|	Справочник.ES_SMS_ШаблоныSMS КАК ES_ШаблоныSMS_Отправитель
		|ГДЕ
		|	НЕ ES_ШаблоныSMS_Отправитель.ПометкаУдаления
		|	И НЕ ES_ШаблоныSMS_Отправитель.ЭтоГруппа
		|	И ES_ШаблоныSMS_Отправитель.ВидШаблонаSMS = &ВидШаблонаSMSОтправитель
		|	И ES_ШаблоныSMS_Отправитель.Основной
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Отправитель.ТекстШаблонаОтправитель,
		|	ВТ_Отправитель.ИмяШаблонаОтправителя,
		|	ВТ_Получатель.ТекстШаблонаПолучатель,
		|	ВТ_Получатель.ИмяШаблонаПолучателя
		|ИЗ
		|	ВТ_Получатель КАК ВТ_Получатель
		|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_Отправитель КАК ВТ_Отправитель
		|		ПО (ИСТИНА)";

	Запрос.УстановитьПараметр("ВидШаблонаSMSОтправитель", Перечисления.ES_SMS_ВидШаблона.Отправитель);
	Запрос.УстановитьПараметр("ВидШаблонаSMSПолучатель", Перечисления.ES_SMS_ВидШаблона.Получатель);

	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			ИмяШаблонаТекстаПолучателю 	= ВыборкаДетальныеЗаписи.ИмяШаблонаПолучателя;
			ШаблонТекстаПолучателю 		= ВыборкаДетальныеЗаписи.ТекстШаблонаПолучатель;
			ИмяШаблонаТекстаОтправителю = ВыборкаДетальныеЗаписи.ИмяШаблонаОтправителя;
			ШаблонТекстаОтправителю 	= ВыборкаДетальныеЗаписи.ТекстШаблонаОтправитель;
		КонецЕсли;
		
	КонецЕсли; 

	// Заполнить информацию о получателях сообщений
	Если Параметры.МассивДокументов.Количество() > 0 Тогда
		Док = Параметры.МассивДокументов[0];
		
		Если ТипЗнч(Док) = Тип("ДокументСсылка.ES_ПланДоставки") Тогда
			ЗаполнитьФормуПоПланамДоставки(Параметры.МассивДокументов);
		ИначеЕсли ТипЗнч(Док) = Тип("ДокументСсылка.ES_ОтчетОДоставке") Тогда 
			ЗаполнитьФормуПоОтчетамОДоставке(Параметры.МассивДокументов);
		ИначеЕсли ТипЗнч(Док) = Тип("ДокументСсылка.ES_Самовывоз") Тогда 
			ЗаполнитьФормуПоВыдачамЗаказов(Параметры.МассивДокументов);
		КонецЕсли; 
	КонецЕсли;
	
	Элементы.СортировкаПоНомеруЗакза.Пометка = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы  = "Документ.ЗаказПокупателя.Форма.ФормаВыбора" И ТипЗнч(ВыбранноеЗначение) = Тип("ДокументСсылка.ЗаказПокупателя")  Тогда
		
		Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
			КоличествоСтрок = ИнформацияОПолучателе.Количество();
			Если КоличествоСтрок > 0 Тогда
				НомерСтроки = ИнформацияОПолучателе[КоличествоСтрок - 1].НомерСтроки;
			Иначе
				НомерСтроки = 0;
			КонецЕсли; 
			НомерСтроки = НомерСтроки + 1;
			
			НовСтр = ИнформацияОПолучателе.Добавить();
			НовСтр.НомерСтроки 		= НомерСтроки;
			НовСтр.Ссылка 			= ВыбранноеЗначение;
			НовСтр.НомерЗаказа 		= ПолучитьНомерЗаявки(ВыбранноеЗначение);
			НовСтр.Отметка 			= Истина;
		КонецЕсли; 
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// СОБЫТИЯ ЭЛЕМЕНТОВ

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ИнформацияОПолучателеВидШаблонаТекстаПриИзменении(Элемент)
	
	ТекСтрока = Элементы.ИнформацияОПолучателе.ТекущиеДанные;
	Если НЕ ТекСтрока = Неопределено Тогда
		СтруктураЗаказа = ПолучитьДанныеПоЗаказу(ТекСтрока.Ссылка, ТекСтрока.ВидШаблонаТекста);
		ТекСтрока.Получатель 		= СтруктураЗаказа.Контрагент;
		ТекСтрока.Телефон 			= СтруктураЗаказа.Телефон;
		ТекСтрока.ТекстСообщения 	= СтруктураЗаказа.ТекстСообщения;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяШаблонаТекстаПолучателюПриИзменении(Элемент)
	
	ШаблонТекстаПолучателю = ПолучитьТекстШаблонаНаСервере(ИмяШаблонаТекстаПолучателю);
	
	Для каждого Строка Из ИнформацияОПолучателе Цикл
		Если Строка.ВидШаблонаТекста = ПредопределенноеЗначение("Перечисление.ES_SMS_ВидШаблона.Получатель") Тогда
			Строка.ТекстСообщения = СформироватьТекстСообщения(ПредопределенноеЗначение("Перечисление.ES_SMS_ВидШаблона.Получатель"), Строка.НомерЗаказа);
		КонецЕсли; 
	КонецЦикла; 
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяШаблонаТекстаОтправителюПриИзменении(Элемент)
	
	ШаблонТекстаОтправителю = ПолучитьТекстШаблонаНаСервере(ИмяШаблонаТекстаОтправителю);
	
	Для каждого Строка Из ИнформацияОПолучателе Цикл
		Если Строка.ВидШаблонаТекста = ПредопределенноеЗначение("Перечисление.ES_SMS_ВидШаблона.Отправитель") Тогда
			Строка.ТекстСообщения = СформироватьТекстСообщения(ПредопределенноеЗначение("Перечисление.ES_SMS_ВидШаблона.Отправитель"), Строка.НомерЗаказа);
		КонецЕсли; 
	КонецЦикла; 
	
КонецПроцедуры

&НаКлиенте
Процедура ИнформацияОПолучателеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекСтрока = Элементы.ИнформацияОПолучателе.ТекущиеДанные;
	
	Если Не ТекСтрока = Неопределено 
		И Не Поле.Имя = "ИнформацияОПолучателеОтметка"
		И Не Поле.Имя = "ИнформацияОПолучателеВидШаблонаТекста" Тогда
		ПоказатьЗначение(,ТекСтрока.Ссылка);
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// СОБЫТИЯ КНОПОК

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОтправитьSms(Команда)
	
	Если ИнформацияОПолучателе.Количество() = 0 Тогда
		Сообщить("Не заполнен список получателей");
		Возврат;
	КонецЕсли;

	ОтправитьSmsНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаДобавитьЗаказ(Команда)
	
	СтруктураОтбора = Новый Структура("ВидОперации", ПредопределенноеЗначение("Перечисление.ВидыОперацийЗаказПокупателя.ES_ЗаказНаДоставку"));
	
	ОткрытьФорму("Документ.ЗаказПокупателя.ФормаВыбора", СтруктураОтбора, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВсе(Команда)
	
	Отметить(Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьСоВсех(Команда)
	
	Отметить(Команда.Имя);
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// Клиент

&НаКлиенте
Процедура Отметить(ВидОтметки)
	
	ЗначениеОтметки = ?(ВидОтметки = "ОтметитьВсе", Истина, Ложь);
	Для каждого Строка Из ИнформацияОПолучателе Цикл
		Строка.Отметка = ЗначениеОтметки;
	КонецЦикла; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Вызов сервера

&НаСервере
Процедура ОтправитьSmsНаСервере()
	
	// Подготовка таблицы отправки
	ТаблицаСообщений = Новый ТаблицаЗначений;
	ТаблицаСообщений.Колонки.Добавить("ТекстСообщения");
	ТаблицаСообщений.Колонки.Добавить("ТелПолучателя");	
	
	Для каждого Строка Из ИнформацияОПолучателе Цикл
		
		Если Строка.Отметка Тогда
			НовСтр = ТаблицаСообщений.Добавить();
			НовСтр.ТелПолучателя = Строка.Телефон;
			НовСтр.ТекстСообщения = Строка.ТекстСообщения;
		КонецЕсли; 
	КонецЦикла; 
	
	// Отправка	
	ТаблицаОтправленныхСообщений = ES_SMS_ОбщийМодуль.HTTPОтправитьСообщения(ТаблицаСообщений);		
	
	Если ТаблицаОтправленныхСообщений = Неопределено Тогда 
		Сообщить("Сообщения не отправлены");
		Возврат;
	КонецЕсли;
	
	// Сохранение
	Для Каждого СТС из ТаблицаОтправленныхСообщений Цикл 
		НаборЗаписей = РегистрыСведений.ES_SMS_ОтправленныеСМС.СоздатьНаборЗаписей();
		НовЗапись = НаборЗаписей.Добавить();
		НовЗапись.Период = ТекущаяДата();
		НовЗапись.НомерТелефона = СТС.ТелПолучателя;
		НовЗапись.ТекстСМС 		= СТС.ТекстСообщения;
		НовЗапись.КодСМС		= СТС.Идентификатор;
		
		НаборЗаписей.Записать();
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьФормуПоПланамДоставки(МассивДокументов)
		
	// Заполнение ТЧ Информация о получателе
	Запрос = Новый Запрос;
	Запрос.Текст = 
			"ВЫБРАТЬ
			|	ES_ПланДоставкиЗаказы.НомерЗаказа КАК НомерЗаказа,
			//ES_Гаврилюк_Дмитрий_14.11.2014 8:10:56_Begin
			|	ЕСТЬNULL(ЗаказПокупателя.ES_НомерНакладной, """") КАК КодЗаказа,
			|	ЕСТЬNULL(ЗаказПокупателя.Ссылка, Значение(Документ.ЗаказПокупателя.ПустаяСсылка)) КАК Ссылка,
			//}ES_Гаврилюк_Дмитрий_14.11.2014 8:10:56_End
			|	ES_ПланДоставкиЗаказы.Контрагент КАК Получатель,
			|	ES_ПланДоставкиЗаказы.КонтактноеЛицоКонтрагента,
			|	ES_ПланДоставкиЗаказы.ТелефонКонтрагента КАК Телефон,
			|	ES_СтатусыЗаказовСрезПоследних.СтатусЗаказа КАК СтатусДокументаДоставки,
			|	&ВидШаблонаТекста
			|ИЗ
			|	Документ.ES_ПланДоставки.Заказы КАК ES_ПланДоставкиЗаказы
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ES_СтатусыЗаказов.СрезПоследних(, ) КАК ES_СтатусыЗаказовСрезПоследних
			|		ПО (ES_СтатусыЗаказовСрезПоследних.ЗаказДоставки = ES_ПланДоставкиЗаказы.ДокументДоставки)
			//ES_Гаврилюк_Дмитрий_14.11.2014 8:16:08_Begin
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя КАК ЗаказПокупателя
			|		ПО ES_ПланДоставкиЗаказы.ДокументДоставки = ЗаказПокупателя.Ссылка
			//}ES_Гаврилюк_Дмитрий_14.11.2014 8:16:08_End
			|ГДЕ
			|	ES_ПланДоставкиЗаказы.Ссылка В(&МассивДокументов)
			|	И ES_ПланДоставкиЗаказы.ДокументДоставки ССЫЛКА Документ.ЗаказПокупателя
			|	И ES_ПланДоставкиЗаказы.Ссылка.Проведен
			|	И ES_ПланДоставкиЗаказы.ВидДокументаДоставки В(&МассивВидовДоставки)
			|	И ES_СтатусыЗаказовСрезПоследних.СтатусЗаказа = &СтатусДокументаНазначен
			|
			|УПОРЯДОЧИТЬ ПО
			|	НомерЗаказа";
			
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.УстановитьПараметр("СтатусДокументаНазначен", Перечисления.ES_СтатусыЗаказов.Назначен);
	Запрос.УстановитьПараметр("ВидШаблонаТекста", Перечисления.ES_SMS_ВидШаблона.Получатель);
			
	// Виды доставки с конечным пунктом доставки - Получатель
	МассивВидовДоставки = Новый Массив;
	МассивВидовДоставки.Добавить(Перечисления.ES_ВидыДоставки.ДвериСкладДвери);
	МассивВидовДоставки.Добавить(Перечисления.ES_ВидыДоставки.СкладДвери);
	Запрос.УстановитьПараметр("МассивВидовДоставки", МассивВидовДоставки);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		НомерСтроки = 0;
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			НомерСтроки = НомерСтроки + 1;
			
			НовСтр = ИнформацияОПолучателе.Добавить();
			НовСтр.НомерСтроки 		= НомерСтроки;
			НовСтр.НомерЗаказа 		= ВыборкаДетальныеЗаписи.КодЗаказа;
			НовСтр.Ссылка 			= ВыборкаДетальныеЗаписи.Ссылка;
			НовСтр.Отметка 			= Истина;
			НовСтр.Получатель 		= ВыборкаДетальныеЗаписи.Получатель;
			НовСтр.Телефон 			= ВыборкаДетальныеЗаписи.Телефон;
			НовСтр.ВидШаблонаТекста = ВыборкаДетальныеЗаписи.ВидШаблонаТекста;
			НовСтр.ТекстСообщения 	= СформироватьТекстСообщения(ВыборкаДетальныеЗаписи.ВидШаблонаТекста, ВыборкаДетальныеЗаписи.КодЗаказа);
		КонецЦикла;
	КонецЕсли; 
			
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьФормуПоОтчетамОДоставке(МассивДокументов)
		
	// Заполнение ТЧ Информация о получателе
	Запрос = Новый Запрос;
	Запрос.Текст = 
			"ВЫБРАТЬ
			|	ES_ОтчетОДоставкеЗаказы.НомерЗаказа КАК НомерЗаказа,
			|	ЕСТЬNULL(ЗаказПокупателя.ES_НомерЗаявки, """") КАК КодЗаказа,
			|	ЕСТЬNULL(ЗаказПокупателя.Ссылка, Значение(Документ.ЗаказПокупателя.ПустаяССылка)) КАК Ссылка,
			|	ЕСТЬNULL(ЗаказПокупателя.ES_Получатель, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Контрагент,
			|	ЕСТЬNULL(ЗаказПокупателя.ES_ТелефонПолучателя, """") КАК Телефон,
			|	ЕСТЬNULL(ES_СтатусыЗаказовСрезПоследних.СтатусЗаказа, ЗНАЧЕНИЕ(Перечисление.ES_СтатусыЗаказов.ПустаяСсылка)) КАК СтатусДокументаДоставки,
			|	&ВидШаблонаТекстаПолучатель КАК ВидШаблонаТекста
			|ИЗ
			|	Документ.ES_ОтчетОДоставке.Заказы КАК ES_ОтчетОДоставкеЗаказы
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя КАК ЗаказПокупателя
			|		ПО ES_ОтчетОДоставкеЗаказы.ДокументДоставки = ЗаказПокупателя.Ссылка
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ES_СтатусыЗаказов.СрезПоследних(, ) КАК ES_СтатусыЗаказовСрезПоследних
			|		ПО ES_ОтчетОДоставкеЗаказы.ДокументДоставки = ES_СтатусыЗаказовСрезПоследних.ЗаказДоставки
			|ГДЕ
			|	ES_ОтчетОДоставкеЗаказы.Ссылка В(&МассивДокументов)
			|	И ES_ОтчетОДоставкеЗаказы.Ссылка.Проведен
			|	И ES_ОтчетОДоставкеЗаказы.ВидДокументаДоставки В(&МассивВидовДоставкиСамовывоз)
			|	И ES_ОтчетОДоставкеЗаказы.ДокументДоставки ССЫЛКА Документ.ЗаказПокупателя
			|	И ES_ОтчетОДоставкеЗаказы.СтатусЗаказа = &СтатусГотовКВыдаче
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ES_ОтчетОДоставкеЗаказы.НомерЗаказа,
			|	ЕСТЬNULL(ЗаказПокупателя.ES_НомерЗаявки, """") КАК КодЗаказа,
			|	ЕСТЬNULL(ЗаказПокупателя.Ссылка, Значение(Документ.ЗаказПокупателя.ПустаяССылка)),
			|	ES_ОтчетОДоставкеЗаказы.Отправитель,
			|	ЕСТЬNULL(ЗаказПокупателя.ES_Телефон, """"),
			|	ЕСТЬNULL(ES_СтатусыЗаказовСрезПоследних.СтатусЗаказа, ЗНАЧЕНИЕ(Перечисление.ES_СтатусыЗаказов.ПустаяСсылка)),
			|	&ВидШаблонаТекстаОтправитель
			|ИЗ
			|	Документ.ES_ОтчетОДоставке.Заказы КАК ES_ОтчетОДоставкеЗаказы
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ES_СтатусыЗаказов.СрезПоследних(, ) КАК ES_СтатусыЗаказовСрезПоследних
			|		ПО ES_ОтчетОДоставкеЗаказы.ДокументДоставки = ES_СтатусыЗаказовСрезПоследних.ЗаказДоставки
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя КАК ЗаказПокупателя
			|		ПО ES_ОтчетОДоставкеЗаказы.ДокументДоставки = ЗаказПокупателя.Ссылка
			|ГДЕ
			|	ES_ОтчетОДоставкеЗаказы.Ссылка В(&МассивДокументов)
			|	И ES_ОтчетОДоставкеЗаказы.Ссылка.Проведен
			|	И ES_ОтчетОДоставкеЗаказы.ВидДокументаДоставки В(&МассивВидовДоставкиНЕСамовывоз)
			|	И ES_ОтчетОДоставкеЗаказы.ДокументДоставки ССЫЛКА Документ.ЗаказПокупателя
			|	И ES_ОтчетОДоставкеЗаказы.СтатусЗаказа В(&МассивСтатусовДоставлен)
			|
			|УПОРЯДОЧИТЬ ПО
			|	НомерЗаказа";
			
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.УстановитьПараметр("ВидШаблонаТекстаПолучатель", Перечисления.ES_SMS_ВидШаблона.Получатель);
	Запрос.УстановитьПараметр("ВидШаблонаТекстаОтправитель", Перечисления.ES_SMS_ВидШаблона.Отправитель);
	Запрос.УстановитьПараметр("СтатусГотовКВыдаче", Перечисления.ES_СтатусыЗаказов.ГотовКВыдаче);
			
	МассивВидовДоставкиСамовывоз = Новый Массив;
	МассивВидовДоставкиСамовывоз.Добавить(Перечисления.ES_ВидыДоставки.СкладСклад);
	Запрос.УстановитьПараметр("МассивВидовДоставкиСамовывоз", МассивВидовДоставкиСамовывоз);
			
	МассивВидовДоставкиНЕСамовывоз = Новый Массив;
	МассивВидовДоставкиНЕСамовывоз.Добавить(Перечисления.ES_ВидыДоставки.ДвериСкладДвери);
	МассивВидовДоставкиНЕСамовывоз.Добавить(Перечисления.ES_ВидыДоставки.СкладДвери);
	Запрос.УстановитьПараметр("МассивВидовДоставкиНЕСамовывоз", МассивВидовДоставкиНЕСамовывоз);
			
	МассивСтатусовДоставлен = Новый Массив;
	МассивСтатусовДоставлен.Добавить(Перечисления.ES_СтатусыЗаказов.Доставлен);
	МассивСтатусовДоставлен.Добавить(Перечисления.ES_СтатусыЗаказов.ДоставленРассчитать);
	Запрос.УстановитьПараметр("МассивСтатусовДоставлен", МассивСтатусовДоставлен);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		НомерСтроки = 0;
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			НомерСтроки = НомерСтроки + 1;
			
			НовСтр = ИнформацияОПолучателе.Добавить();
			НовСтр.НомерСтроки 		= НомерСтроки;
			НовСтр.НомерЗаказа 		= ВыборкаДетальныеЗаписи.КодЗаказа;
			НовСтр.Ссылка	 		= ВыборкаДетальныеЗаписи.Ссылка;
			НовСтр.Отметка 			= Истина;
			НовСтр.Получатель 		= ВыборкаДетальныеЗаписи.Контрагент;
			НовСтр.Телефон 			= ВыборкаДетальныеЗаписи.Телефон;
			НовСтр.ВидШаблонаТекста = ВыборкаДетальныеЗаписи.ВидШаблонаТекста;
			НовСтр.ТекстСообщения 	= СформироватьТекстСообщения(ВыборкаДетальныеЗаписи.ВидШаблонаТекста, ВыборкаДетальныеЗаписи.КодЗаказа);
		КонецЦикла;
	КонецЕсли; 
			
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьФормуПоВыдачамЗаказов(МассивДокументов)
		
	// Заполнение ТЧ Информация о получателе
	Запрос = Новый Запрос;
	Запрос.Текст = 
			"ВЫБРАТЬ
			|	ЕСТЬNULL(ЗаказПокупателя.Номер, """") КАК НомерЗаказа,
			|	ЕСТЬNULL(ЗаказПокупателя.ES_НомерНакладной, """") КАК КодЗаказа,
			|	ЕСТЬNULL(ЗаказПокупателя.Ссылка, Значение(Документ.ЗаказПокупателя.ПустаяССылка)) как Ссылка,
			|	ES_Самовывоз.Заказчик КАК Отправитель,
			|	ЕСТЬNULL(ЗаказПокупателя.ES_Телефон, """") КАК Телефон,
			|	ЕСТЬNULL(ES_СтатусыЗаказовСрезПоследних.СтатусЗаказа, ЗНАЧЕНИЕ(Перечисление.ES_СтатусыЗаказов.ПустаяСсылка)) КАК СтатусДокументаДоставки,
			|	&ВидШаблонаТекста
			|ИЗ
			|	Документ.ES_Самовывоз КАК ES_Самовывоз
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ES_СтатусыЗаказов.СрезПоследних(, ) КАК ES_СтатусыЗаказовСрезПоследних
			|		ПО ES_Самовывоз.Заказ = ES_СтатусыЗаказовСрезПоследних.Заказ
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя КАК ЗаказПокупателя
			|		ПО ES_Самовывоз.Заказ = ЗаказПокупателя.Ссылка
			|ГДЕ
			|	ES_Самовывоз.Ссылка В(&МассивДокументов)
			|	И ES_Самовывоз.Ссылка.Проведен
			|	 И ES_СтатусыЗаказовСрезПоследних.СтатусЗаказа В(&МассивСтатусовДоставлен)";
			
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.УстановитьПараметр("ВидШаблонаТекста", Перечисления.ES_SMS_ВидШаблона.Отправитель);
			
	МассивСтатусовДоставлен = Новый Массив;
	МассивСтатусовДоставлен.Добавить(Перечисления.ES_СтатусыЗаказов.Доставлен);
	МассивСтатусовДоставлен.Добавить(Перечисления.ES_СтатусыЗаказов.ДоставленРассчитать);
	Запрос.УстановитьПараметр("МассивСтатусовДоставлен", МассивСтатусовДоставлен);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		НомерСтроки = 0;
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			НомерСтроки = НомерСтроки + 1;
			
			НовСтр = ИнформацияОПолучателе.Добавить();
			НовСтр.НомерСтроки 		= НомерСтроки;
			НовСтр.НомерЗаказа 		= ВыборкаДетальныеЗаписи.КодЗаказа;
			НовСтр.Ссылка 			= ВыборкаДетальныеЗаписи.Ссылка;
			НовСтр.Отметка 			= Истина;
			НовСтр.Получатель 		= ВыборкаДетальныеЗаписи.Отправитель;
			НовСтр.Телефон 			= ВыборкаДетальныеЗаписи.Телефон;
			НовСтр.ВидШаблонаТекста = ВыборкаДетальныеЗаписи.ВидШаблонаТекста;
			НовСтр.ТекстСообщения 	= СформироватьТекстСообщения(ВыборкаДетальныеЗаписи.ВидШаблонаТекста, ВыборкаДетальныеЗаписи.КодЗаказа);
		КонецЦикла;
	КонецЕсли; 
			
КонецПроцедуры

&НаСервере
Функция СформироватьТекстСообщения(ВидСообщения, ТекНомерЗаказа)
	
	ТекстСообщенияТекСтроки = "";
	
	Если ВидСообщения = Перечисления.ES_SMS_ВидШаблона.Получатель И ЗначениеЗаполнено(ШаблонТекстаПолучателю) Тогда
		ТекстСообщенияТекСтроки = ШаблонТекстаПолучателю;
	ИначеЕсли ВидСообщения = Перечисления.ES_SMS_ВидШаблона.Отправитель И ЗначениеЗаполнено(ШаблонТекстаОтправителю) Тогда
		ТекстСообщенияТекСтроки = ШаблонТекстаОтправителю;
	КонецЕсли; 
		
	Если ЗначениеЗаполнено(ТекстСообщенияТекСтроки) Тогда
		
		Если Найти(ТекстСообщенияТекСтроки, "<КодЗаказа>") > 0 Тогда
			ТекстСообщенияТекСтроки = СтрЗаменить(ТекстСообщенияТекСтроки, "<КодЗаказа>", "" + ТекНомерЗаказа);
		КонецЕсли; 
		
	КонецЕсли; 
		
	Возврат СокрЛП(ТекстСообщенияТекСтроки);
	
КонецФункции

&НаСервере
Функция ПолучитьТекстШаблонаНаСервере(СсылкаШаблона)

	ВозвращаемыйТекст = "";
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ES_ШаблоныSMS.ТекстШаблонаSMS
		|ИЗ
		|	Справочник.ES_ШаблоныSMS КАК ES_ШаблоныSMS
		|ГДЕ
		|	ES_ШаблоныSMS.Ссылка = &Ссылка";

	Запрос.УстановитьПараметр("Ссылка", СсылкаШаблона);

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		ВозвращаемыйТекст = ВыборкаДетальныеЗаписи.ТекстШаблонаSMS;
	КонецЕсли;

	Возврат ВозвращаемыйТекст;
	
КонецФункции

&НаСервере
Функция ПолучитьНомерЗаявки(ЗаказСсылка)
	
	Возврат ЗаказСсылка.ES_НомерНакладной;
	
КонецФункции
 
&НаСервере
Функция ПолучитьДанныеПоЗаказу(ЗаказДоставки, Шаблон)
	
	СтруктураВозврата = Новый Структура("Контрагент, Телефон, ТекстСообщения", Справочники.Контрагенты.ПустаяСсылка(), "", "");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказПокупателя.Ссылка,
		|	ЗаказПокупателя.ES_НомерНакладной КАК КодЗаказа,
		|	ЗаказПокупателя.Контрагент КАК Отправитель,
		|	ЗаказПокупателя.ES_Получатель КАК Получатель,
		|	ЗаказПокупателя.ES_Телефон КАК ТелефонОтправителя,
		|	ЗаказПокупателя.ES_ТелефонПолучателя КАК ТелефонПолучателя
		|ИЗ
		|	Документ.ЗаказПокупателя КАК ЗаказПокупателя
		|ГДЕ
		|	ЗаказПокупателя.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ЗаказДоставки);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Если Шаблон = Перечисления.ES_SMS_ВидШаблона.Отправитель Тогда
			СтруктураВозврата.Вставить("Контрагент", 		Выборка.Отправитель);
			СтруктураВозврата.Вставить("Телефон", 			Выборка.ТелефонОтправителя);
			СтруктураВозврата.Вставить("ТекстСообщения", 	СформироватьТекстСообщения(Шаблон, Выборка.КодЗаказа));
		иначе
			СтруктураВозврата.Вставить("Контрагент", 		Выборка.Получатель);
			СтруктураВозврата.Вставить("Телефон", 			Выборка.ТелефонПолучателя);
			СтруктураВозврата.Вставить("ТекстСообщения", 	СформироватьТекстСообщения(Шаблон, Выборка.КодЗаказа));
		КонецЕсли; 
	КонецЕсли;

	Возврат СтруктураВозврата;
	
КонецФункции

#КонецОбласти

